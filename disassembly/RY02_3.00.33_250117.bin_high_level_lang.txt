/*
Type: Mapped
Platform: thumb2
Architecture: thumb2

Segments:
r-x  0x00000000-0x0001b8d4 
---  0x0001b8e0-0x0001b8f8 

Sections:
0x0001b8e0-0x0001b8f8  .synthetic_builtins  {External}
*/
00000000  int32_t data_0 = -0x7e423c1b

00000004              84 b8 01 00 84 b8 01 00 4f 23 a6 00 52 59 30 32 5f 33 2e 30                              ........O#..RY02_3.0

00000018  char const data_18[0xc] = "0.33_250117", 0

00000024  data_24:
00000024              00 00 00 00 00 00 00 00 00 00 00 00 52 59 30 32 5f                                       ............RY02_

00000035  char const data_35[0x5] = "V3.0", 0

0000003a                                                                                00 00                                        ..
0000003c  data_3c:
0000003c                                                                                      00 00 00 00                              ....
00000040  00 00 00 00 00 00 00 00 00 00 00 00 00 00                                                        ..............
0000004e  data_4e:
0000004e                                            00 00 0c 00 81 09 93 27 00 00 84 b4 01 00 f9 4c 6b 7e                .......'.......Lk~
00000060  11 c5 eb 11 82 82 f7 4a 0c 0c ef 5b 00 44 82 00                                                  .......J...[.D..

00000070  char data_70 = 0x0

00000071                                                     44 82 00 00 00 00 00 00 40 82 00 00 00 00 00                   D.......@......
00000080  data_80:
00000080  00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00     ...............................

0000009f  int32_t data_9f = 0x0

000000a3           00 00 00 00 00 00 00 00 00 00 00 00 00 41 10 00 00 9e a3 01 12 73 64 6b 23 23 23 23 23     .............A.......sdk#####
000000c0  00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................................
000000e0  00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................................
00000100  00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................................
00000120  00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................................
00000140  00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................................
00000160  00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................................
00000180  00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................................
000001a0  00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................................
000001c0  00 00 00 00 b9 60 48 22 cc 34 30 45 fe f4 88 10 cb b3 2d 39 3c 2d 57 02 2e 45 64 c6 c2 52 2f 93  .....`H".40E......-9<-W..Ed..R/.
000001e0  fd 56 cf 69 00 00 00 00                                                                          .V.i....
000001e8  data_1e8:
000001e8                          00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00          ........................
00000200  00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................................
00000220  00 00 00 00 00 00 00 00 01 d1 85 0e d8 e2 83 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................................
00000240  00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................................
00000260  00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................................
00000280  00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................................
000002a0  00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................................
000002c0  00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................................
000002e0  00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................................
00000300  00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................................
00000320  00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 ff ff ff ff ff ff ff ff ff ff ff ff ff ff ff ff  ................................
00000340  00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................................
00000360  00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................................
00000380  00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................................
000003a0  00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................................
000003c0  00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................................
000003e0  00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................................
00000400  00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................................
00000420  00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................................
00000440  ff ff ff ff ff ff ff ff ff ff ff ff ff ff                                                        ..............

0000044e    int32_t sub_44e(int32_t arg1)

0000044e  {
0000044e      /* unimplemented  {vtbl.8 d20, {d15}, d0} */
00000452      /* jump -> arg1 */
0000044e  }

00000454                                                              5d 46 82 00 c0 46 c0 46 00 f0 11 f8                      ]F...F.F....

00000460    int32_t sub_460(int16_t* arg1, int32_t arg2, int32_t* arg3)

00000460  {
00000464      if (arg2 == 0x78)
0000046a          return sub_128a8(arg1, arg2, arg3);
0000046a      
0000046e      if (arg2 != 0x73)
00000478          return 0;
00000478      
00000474      return sub_13b48(arg1, arg2, arg3);
00000460  }


0000047a    int32_t sub_47a(int32_t arg1)

0000047a  {
0000047c      j_sub_12a38();
00000480      return arg1;
0000047a  }

00000482        04 48 85 46 ff f7 f8 ff 00 f0 a1 fa 1c f4 bb f2 00 00 00 38 20 00 10 b5 b1 4a b1 49 b2 48    .H.F...............8 ....J.I.H
000004a0  1b f4 fa f1 b1 4a b2 49 b2 48 1b f4 f5 f1 b2 49 b2 48 1b f4 57 f2 10 bd 10 b5 b1 4a b1 49 b2 48  .....J.I.H.....I.H..W......J.I.H
000004c0  1b f4 ea f1 b1 4a b2 49 b2 48 1b f4 e5 f1 b2 49 b2 48 1b f4 47 f2 10 bd 70 b5 05 46 e0 f7 8a df  .....J.I.H.....I.H..G...p..F....
000004e0  04 46 af 49 e4 f7 f5 da 00 28 17 d0 e8 00 ad 49 00 19 40 18 40 69 00 28 10 d0 28 46 e4 f7 19 db  .F.I.....(.....I..@.@i.(..(F....
00000500  04 46 29 46 e4 f7 e5 da 00 28 07 d0 a0 88 a8 42 03 d1 a3 48 0b 30 85 42 01 d3 00 20 70 bd e0 69  .F)F.....(.....B...H.0.B... p..i
00000520  01 21 08 43 70 bd                                                                                .!.Cp.

00000526    void sub_526(int32_t arg1)

00000526  {
0000052a      if (!arg1)
0000053c          *(uint32_t*)0x200484 = 0x64;
0000052a      else if (arg1 == 1)
0000053c          *(uint32_t*)0x200484 = 0xc8;
0000052e      else if (arg1 == 2)
0000053c          *(uint32_t*)0x200484 = 0x1f4;
00000532      else if (arg1 == 3)
0000053c          *(uint32_t*)0x200484 = 0x3e8;
00000526  }


0000054e    int32_t sub_54e()

0000054e  {
00000550      int32_t r2 = *(uint32_t*)0x20d618;
00000550      
00000554      if (!r2)
00000558          return;
00000558      
00000556      /* jump -> r2 */
0000054e  }

0000055a                                                                                f0 b5 ff 20 85 b0                            ... ..
00000560  c3 30 0e f4 3f f5 44 04 ff 20 c1 30 0e f4 3a f5 40 00 04 43 ff 20 c7 30 03 94 0e f4 33 f5 04 04  .0..?.D.. .0..:.@..C. .0....3...
00000580  ff 20 c5 30 0e f4 2e f5 04 43 ff 20 cb 30 0e f4 29 f5 07 04 ff 20 c9 30 0e f4 24 f5 07 43 ff 20  . .0.....C. .0..).... .0..$..C. 
000005a0  cf 30 0e f4 1f f5 45 04 ff 20 cd 30 0e f4 1a f5 40 00 05 43 ff 20 d3 30 02 95 0e f4 13 f5 06 04  .0....E.. .0....@..C. .0........
000005c0  ff 20 d1 30 0e f4 0e f5 06 43 ff 20 d7 30 0e f4 09 f5 05 04 ff 20 d5 30 0e f4 04 f5 05 43 00 2c  . .0.....C. .0....... .0.....C.,
000005e0  04 d0 ee f7 ed da 03 00 1d d0 1d e0 00 22 70 49 70 48 e1 f7 81 da                                ............."pIpH....

000005f6  char const data_5f6[0x4] = "pM,h"

000005fa                                                                                ee f7 d5 d9 00 22                            ....."
00000600  11 46 01 20 ee f7 df d9 ee f7 ff d9 6b 49 01 20 09 68 88 47 ee f7 06 da 69 49 96 20 09 68 88 47  .F. ........kI. .h.G....iI. .h.G
00000620  2c 60 05 b0 f0 bd 01 23 61 49 01 22 20 31 61 48 e1 f7 62 da 5e 49 01 97 00 94 03 22 4c 31 5d 48  ,`.....#aI." 1aH..b.^I....."L1]H
00000640  03 9b e1 f7 59 da 5a 49 00 96 01 95 03 22 78 31 58 48 02 9b e1 f7 50 da e3 e7 38 b5 72 b6 ff f7  ....Y.ZI....."x1XH....P...8.r...
00000660  7c ff ff f7 29 ff 00 20 00 f0 de f9 55 a1 1f 20 1b f4 b8 f0 8d 25 ad 05 53 a1 28 46 e1 f7 1d dc  |...).. ....U.. .....%..S.(F....
00000680  04 46 58 a1 28 46 e1 f7 18 dc 03 46 48 49 49 48 02 22 a8 31 80 1e 00 94 e1 f7 2e da e9 f5 f0 f2  .FX.(F.....FHIIH.".1............
000006a0  52 48 00 68 00 28 00 d0 80 47 38 bd 10 b5 e4 f7 f2 d9 00 28 53 d1 4e 48 00 7f c0 07 4f d0 4e 49  RH.h.(...G8........(S.NH....O.NI
000006c0  4c 48 08 60 36 48 0a 30 ff f7 06 ff 4b 49 00 22 08 60 4c 49 4a 48 08 60 4c 49 4b 48 08 60 1d 21  LH.`6H.0....KI.".`LIJH.`LIKH.`.!
000006e0  07 20 89 02 00 03 e0 f7 ef d9 2f 48 01 21 09 06 80 38 41 60 41 03 81 60 3d 48 f7 22 80 30 41 7b  . ......../H.!...8A`A..`=H.".0A{
00000700  11 40 41 73 06 21 c1 73 39 48 26 22 a0 30 01 7e 11 43 01 76 36 49 c0 31 8a 7e 52 08 52 00 8a 76  .@As.!.s9H&".0.~.C.v6I.1.~R.R..v
00000720  33 49 60 31 0a 7d 52 08 52 00 0a 75 81 7e 10 22 11 43 1f 22 42 76 cf 22 11 43 81 76 1a 48 f0 21  3I`1.}R.R..u.~.".C."Bv.".C.v.H.!
00000740  80 30 01 73 3c 21 41 73 c8 21 81 73 ff 21 c1 73 ff f7 a2 fe 2e 48 00 68 00 28 00 d0 80 47 10 bd  .0.s<!As.!.s.!.s.....H.h.(...G..

00000760  char const (* data_760)[0x9] = &data_7d0[0x8] {000007d8} {":10 2022"}

00000764              68 ed 83 00 00 7c 20 00 7c 02 00 00 40 f5 83 00 d8 83 20 00 dc 55 00 00 54 86 20 00      h....| .|...@..... ..U..T. .
00000780  00 00 00 00 84 f8 83 00 00 60 21 00 00 00 00 00 84 f8 83 00 00 60 21 00 00 00 00 00 00 60 21 00  .........`!..........`!......`!.
000007a0  90 27 00 00 00 c5 fe ff                                                                          .'......

000007a8  int32_t data_7a8 = 0x200480
000007ac  int32_t data_7ac = 0x20d618

000007b0                                                  8c 13 80 08 02 03 10 23 00 60 00 40 20 01 20 00                  .......#.`.@ . .
000007c0  1c 01 20 00 43 00 00 00 54 68 75 20 4d 61 72 20                                                  .. .C...Thu Mar 

000007d0  char const data_7d0[0x11] = "17 10:58:10 2022", 0

000007e1     00 00 00 31 2e 34 2e 31 2e 30 00 1c d6 20 00 c0 02 20 00 0b 46 82 00 d0 11 20 00 d4 11 20 00   ...1.4.1.0... ... ..F.... ... .
00000800  bf 33 83 00 d8 11 20 00 ff 44                                                                    .3.... ..D

0000080a    int32_t sub_80a(int32_t arg1, int32_t arg2)

0000080a  {
00000810      bool v;
00000810      
00000810      if (!v)
00000812          /* tailcall */
00000812          return sub_814();
00000812      
0000085a      0xff7eee30(0x20865c, 0x20, 8);  /* "117" */
00000860      int32_t arg_0 = 0x5e;
0000086c      int32_t r3_1 = 0xff7eee30(0x208658, 0x40, 1, 0x83daac);
0000087a      sub_1146c(*(uint32_t*)0x208658, *(uint32_t*)0x20865c, 0x20, r3_1);  /* "117" */
0000087e      sub_97c();
0000087e      
0000088a      while (true)
0000088a      {
0000088a          arg_0 = 0x65;
0000089a          char arg_4;
0000089a          
0000089a          if (0xff7eef82(*(uint32_t*)0x208658, &arg_4, 0xffffffff, 0x83daac))
0000089a          {
0000089e              uint32_t r0_5 = (uint32_t)arg_4;
0000089e              
000008a2              if (r0_5 == 2)
000008a2              {
000008aa                  arg_0 = 0x6a;
000008b4                  int32_t arg_8;
000008b4                  int32_t r0_7;
000008b4                  int32_t r2_1;
000008b4                  int32_t r3_2;
000008b4                  r0_7 = 0xff7eef82(*(uint32_t*)0x20865c, &arg_8, 0, 0x83daac);
000008b4                  
000008ba                  if (r0_7)
000008c0                      sub_5944(arg_8, arg2, r2_1, r3_2);
000008a2              }
000008a2              else
000008a4                  sub_11504(r0_5);
0000089a          }
0000088a      }
0000080a  }


00000814    uint32_t sub_814()

00000814  {
00000818      int32_t* r4 = *(uint32_t*)0x20dc24;
0000081a      int32_t* r2 = *(uint32_t*)0x20dc28;
00000820      int32_t r0_1 = *(uint32_t*)r2 + *(uint32_t*)r4;
00000822      *(uint32_t*)r2 = r0_1;
00000824      void* r4_1 = &r4[1];
00000826      void* r2_1 = &r2[1];
00000826      
0000082a      if (r4_1 >= 0x20dc24)
0000083e          r4_1 = 0x20db48;
0000082a      else if (r2_1 >= 0x20dc24)
00000844          r2_1 = 0x20db48;
00000844      
00000830      *(uint32_t*)0x20dc24 = r4_1;
00000832      *(uint32_t*)0x20dc28 = r2_1;
0000083a      return r0_1 << 1 >> 1;
00000814  }

00000848  int32_t data_848 = 0x20dc24

0000084c    void sub_84c(int32_t arg1, int32_t arg2, int32_t arg3, int32_t arg4) __noreturn

0000084c  {
0000084c      int32_t var_10 = arg3;
0000084c      int32_t var_14 = arg2;
0000084c      int32_t var_18 = arg1;
0000085a      0xff7eee30(0x20865c, 0x20, 8, 0x83daac, 0x5d, var_14, var_10, arg4);  /* "117" */
0000086c      int32_t r3 = 0xff7eee30(0x208658, 0x40, 1, 0x83daac, 0x5e);
0000087a      sub_1146c(*(uint32_t*)0x208658, *(uint32_t*)0x20865c, 0x20, r3);  /* "117" */
0000087e      sub_97c();
0000087e      
00000894      while (true)
00000894      {
0000089a          if (0xff7eef82(*(uint32_t*)0x208658, &var_14, 0xffffffff, 0x83daac, 0x65))
0000089a          {
0000089e              uint32_t r0_3 = (uint32_t)(uint8_t)var_14;
0000089e              
000008a2              if (r0_3 == 2)
000008a2              {
000008b4                  int32_t r0_5;
000008b4                  int32_t r2;
000008b4                  int32_t r3_1;
000008b4                  r0_5 = 0xff7eef82(*(uint32_t*)0x20865c, &var_10, 0, 0x83daac, 0x6a);
000008b4                  
000008ba                  if (r0_5)
000008c0                      sub_5944(var_10, arg4, r2, r3_1);
000008a2              }
000008a2              else
000008a4                  sub_11504(r0_3);
0000089a          }
00000894      }
0000084c  }


000008c6    int32_t sub_8c6()

000008c6  {
000008c6      int32_t r3;
000008c6      int32_t var_c = r3;
000008c6      int32_t r2;
000008c6      int32_t var_10 = r2;
000008de      return 0xff7ef4b8(0x208654, &data_940, 0x8247fd, 0, 0x400, 2);
000008c6  }


000008e0    int32_t sub_8e0(int32_t arg1, int32_t arg2, int32_t arg3, int32_t arg4)

000008e0  {
000008e0      int32_t var_14 = arg4;
000008e0      int32_t var_18_1 = arg3;
000008e6      (uint8_t)var_14 = 2;
000008ee      int32_t var_18 = 0x48;
00000902      int32_t r1_2;
00000902      
00000902      if (!0xff7eef26(*(uint32_t*)0x20865c, arg1, 0, 0x83da94, 0x48, var_14))
00000920          r1_2 = 0x8800000;
00000902      else
00000902      {
00000908          var_18 = 0x4d;
00000908          
00000918          if (0xff7eef26(*(uint32_t*)0x208658, &var_14, 0, 0x83da94, 0x4d))
0000091c              return 1;
0000091c          
00000928          r1_2 = 0x8800024;
00000902      }
00000902      
0000092c      0xff7e1af8(0x23103000, r1_2, 0);
00000932      return 0;
000008e0  }

00000934  int32_t data_934 = 0x83daac
00000938  int32_t data_938 = 0x20865c
0000093c  int32_t data_93c = 0x8247fd

00000940  data_940:
00000940  61 70 70 00                                                                                      app.

00000944  int32_t data_944 = 0x23103000
00000948  int32_t data_948 = 0x8800000

0000094c    uint32_t sub_94c()

0000094c  {
00000956      if (!sub_320e())
00000956      {
0000095c          0xff81b968(0x2087ac, 0xa4);
00000962          *(uint32_t*)0x2087ac = 0xa1b2c3e5;
00000964          sub_322e();
00000956      }
00000956      
0000096e      *(uint8_t*)0x208852 = *(uint8_t*)0x2087b9;
00000972      sub_1788(0, 0x208850);
0000097a      return sub_7846();
0000094c  }


0000097c    int32_t sub_97c()

0000097c  {
0000097e      sub_6b04();
00000988      return sub_6bee(0x82a851);
0000097c  }

0000098a                                10 b5 20 48 00 21 e8 f7 42 df 20 49 1f 48 08 60 21 49 1f 48 08 60            .. H.!..B. I.H.`!I.H.`
000009a0  0e f0 f4 fd 02 24 00 20 19 f4 f3 f2 20 46 e8 f7 f9 de 10 bd                                      .....$. .... F......

000009b4    int32_t sub_9b4()

000009b4  {
000009b6      sub_110c();
000009ba      sub_5b00();
000009be      sub_8c6();
000009c2      sub_12e4();
000009c6      sub_139c();
000009ce      return sub_6eb4();
000009b4  }

000009d0                                                  10 b5 14 48 00 68 12 f0 2f f8 ff f7 b7 ff 02 f0                  ...H.h../.......
000009e0  ef fb 01 20 10 f0 ad fd 10 f0 e1 fc 05 f0 00 fa 05 f0 d9 fa ff f7 c9 ff ff f7 dc ff ee f7 09 dc  ... ............................
00000a00  00 20 10 bd                                                                                      . ..

00000a04  int32_t data_a04 = 0x2087ac
00000a08  int32_t data_a08 = -0x5e4d3c1b
00000a0c  int32_t data_a0c = 0x82a851

00000a10                                                  8f b7 82 00 47 b7 82 00 2c d6 20 00 6b b7                        ....G...,. .k.

00000a1e    uint32_t sub_a1e(int32_t arg1 @ r4, int32_t arg2, int32_t arg3, int32_t arg4)

00000a1e  {
00000a20      bool v;
00000a20      
00000a20      if (v)
00000a20      {
00000a90          do
00000a90          {
00000a8a              if (!0xff81b7f8())
00000a98                  return (uint32_t)(uint8_t)arg1;
00000a98              
00000a8c              arg1 += 1;
00000a90          } while (arg1 < 3);
00000a90          
00000a94          return 3;
00000a20      }
00000a20      
00000a22      int32_t result = arg1;
00000a24      int32_t* sp;
00000a24      
00000a24      if (!v)
00000a24      {
00000a28          int32_t var_8 = arg1;
00000a28          sp = &var_8;
00000a28          
00000a2c          if (arg1 >= 3)
00000a30              return 0;
00000a30          
00000a46          if (0xff81b7f8(*(uint32_t*)(0x24 * arg1 + 0x2083d8), 0x208877, 8))
00000a46          {
00000a4e              0xff81b898(*(uint32_t*)(0x24 * arg1 + 0x2083e4), 
00000a4e                  *(uint32_t*)(0x24 * arg1 + 0x2083dc), 
00000a4e                  *(uint32_t*)(0x24 * arg1 + 0x2083f0));
00000a58              0xff81b898(*(uint32_t*)(0x24 * arg1 + 0x2083e8), 
00000a58                  *(uint32_t*)(0x24 * arg1 + 0x2083e0), 
00000a58                  *(uint32_t*)(0x24 * arg1 + 0x2083f4));
00000a60              0xff81b964(*(uint32_t*)(0x24 * arg1 + 0x2083ec), 
00000a60                  *(uint32_t*)(0x24 * arg1 + 0x2083f8));
00000a6a              0xff81b898(0x208877, *(uint32_t*)(0x24 * arg1 + 0x2083d8), 8);
00000a46          }
00000a46          
00000a6e          result = 1;
00000a24      }
00000a24      
00000a70      *(uint32_t*)sp;
00000a70      return result;
00000a1e  }


00000a72    uint32_t sub_a72()

00000a72  {
00000a90      for (int32_t i = 0; i < 3; i += 1)
00000a90      {
00000a8a          if (!0xff81b7f8(*(uint32_t*)(i * 0x24 + 0x2083d8), 0x208877, 8))
00000a98              return (uint32_t)(uint8_t)i;
00000a90      }
00000a90      
00000a94      return 3;
00000a72  }

00000a9a                                                                                00 00                                        ..

00000a9c  int32_t data_a9c = 0x2083d8
00000aa0  int32_t data_aa0 = 0x208877

00000aa4    int32_t sub_aa4(int32_t arg1, int32_t arg2, int32_t arg3, int32_t arg4)

00000aa4  {
00000aa4      int32_t var_10 = arg4;
00000aaa      0xff7e46e8(arg1, &var_10);
00000ab4      int32_t r1_2 = var_10 & 0xfbffffff;
00000ab8      var_10 = r1_2;
00000abe      return 0xff7e4678(arg1, r1_2);
00000aa4  }

00000ac0  f7 b5 c4 b0 00 20 03 90 02 90 08 02 07 0c c8 b2 00 91 01 90 02 22 fe 49 fe 48 44 9b e1 f7 0c d8  ..... ...............".I.HD.....
00000ae0  00 24 1e e0 46 99 20 02 45 18 44 99 2a 46 46 18 ff 21 01 31 30 46 e3 f7 ab dd 00 28 36 d0 30 46  .$..F. .E.D.*FF..!.10F.....(6.0F
00000b00  ff 26 01 36 02 ab 04 aa 31 46 e3 f7 fc dd 00 28 2a d0 29 46 32 46 04 a8 1a f4 6e f6 00 28 20 d1  .&.6....1F.....(*.)F2F....n..( .
00000b20  64 1c bc 42 de db 01 98 00 28 21 d0 46 99 38 02 44 18 44 9a 01 99 80 18 05 46 22 46 e3 f7 88 dd  d..B.....(!.F.8.D.D......F"F....
00000b40  00 28 13 d0 28 46 02 ab 04 aa 01 99 e3 f7 db dd 00 28 09 d0 21 46 04 a8 01 9a 1a f4 4d f6 00 28  .(..(F...........(..!F......M..(
00000b60  06 d0 0a 20 47 b0 f0 bd 09 20 fb e7 08 20 f9 e7 03 98 f7 e7 38 b5 04 46 02 20 0e f4 33 f2 69 46  ... G.... ... ......8..F. ..3.iF
00000b80  08 80 0a 46 20 20 09 88 00 2c 01 d0 01 43 00 e0 81 43 11 80 89 b2 0c 46 02 20 0e f4 75 f2 a0 06  ...F  ...,...C...C.....F. ..u...
00000ba0  cb 49 c3 0f 01 22 2c 31 ca 48 e0 f7 a5 df 38 bd c7 49 10 b5 00 22 50 31 c6 48 e0 f7 9d df 01 20  .I...",1.H....8..I..."P1.H..... 
00000bc0  ff f7 d8 ff d3 21 01 20 db f7 90 db 10 bd                                                        .....!. ......

00000bce    int32_t sub_bce(int32_t arg1)

00000bce  {
00000bde      0xff7e1af8(0x23103103, 0x88001f4, 1, arg1);
00000be4      int32_t r1;
00000be4      
00000be4      r1 = !arg1 ? 0xd5 : 0xd4;
00000be4      
00000bf2      return 0xff7dc2ec(3, r1);
00000bce  }


00000bf4    int32_t sub_bf4(int32_t arg1, int32_t arg2, int32_t arg3, int32_t arg4)

00000bf4  {
00000c02      int32_t r4 = 0;
00000c0c      0xff7ede4e(0x20039c, 0, 2, (uint32_t)*(uint8_t*)0x200500 << 0x1c >> 0x1f, arg4);
00000c0c          /* "_250117" */  /* "0117" */
00000c10      int32_t result;
00000c10      
00000c10      while (true)
00000c10      {
00000c10          result = arg3 - r4;
00000c10          
00000c14          if (result < 0x10)  /* "RY02_3.00.33_250117" */
00000c14              break;
00000c14          
00000c1a          0xff7e2a3c(arg1 + r4, arg2 + r4);
00000c1e          r4 += 0x10;  /* "RY02_3.00.33_250117" */
00000c10      }
00000c10      
00000c22      return result;
00000bf4  }


00000c24    int32_t sub_c24(int32_t arg1, char* arg2)

00000c24  {
00000c26      int32_t result = 0;
00000c26      
00000c2c      if (!arg2)
00000c3e          result = 0x1e4;
00000c2c      else
00000c2c      {
00000c32          char* r0;
00000c32          
00000c32          if (arg1 != 0xfffe)
00000c42              r0 = 0xff7e4b32();
00000c32          else
00000c36              r0 = 0xff7e4108(5, 0xfffe);
00000c36          
00000c48          if (!r0)
00000c62              result = 0x1f3;
00000c48          else
00000c4c              *(uint8_t*)arg2 = *(uint8_t*)r0;
00000c2c      }
00000c2c      
00000c58      0xff7e1af8(0x23103102, 0x8800218, 1, result);
00000c5e      return result;
00000c24  }


00000c66    int32_t sub_c66(int32_t arg1, int32_t* arg2, int32_t* arg3, int32_t arg4)

00000c66  {
00000c68      int32_t result = 0;
00000c68      
00000c72      if (!arg3)
00000c86          result = 0x20d;
00000c72      else if (!arg2)
00000c8c          result = 0x213;
00000c76      else
00000c76      {
00000c7c          void* r0;
00000c7c          
00000c7c          if (arg1 != 0xfffe)
00000c92              r0 = 0xff7e4b32(arg1);
00000c7c          else
00000c80              r0 = 0xff7e4108(5);
00000c80          
00000c98          if (!r0)
00000caa              result = 0x221;
00000c98          else if (arg1 == 0x2790)
00000c9e          {
00000cc0              *(uint32_t*)arg2 = *(uint32_t*)((char*)r0 + 0x194);
00000cc4              *(uint32_t*)arg3 = 0;
00000c9e          }
00000c9e          else if (arg1 == 0xfffe || arg1 - 0x2791 < 0xa)
00000cbc          {
00000cc0              *(uint32_t*)arg2 = *(uint32_t*)((char*)r0 + 0x60);
00000cc4              *(uint32_t*)arg3 = 0;
00000cbc          }
00000cbc          else
00000cca              result = 0x232;
00000c76      }
00000c76      
00000cd6      0xff7e1af8(0x23103102, 0x8800244, 1, result, arg4);
00000cdc      return result;
00000c66  }


00000cde    int32_t sub_cde(int16_t* arg1, int32_t arg2, int32_t arg3)

00000cde  {
00000cde      int32_t r3;
00000cde      int32_t var_18_1 = r3;
00000cde      int32_t var_1c_1 = arg3;
00000cde      int32_t var_20_1 = arg2;
00000ce0      uint32_t r4 = 0;
00000ce2      int32_t result = 0;
00000ce2      
00000ce6      if (!(arg2 << 0x1f))  /* "0117" */
00000ce6      {
00000cfe          for (int32_t i = 0; arg2 >> 1 > i; i += 1)
00000cfe          {
00000cf4              uint32_t r7_1 = (uint32_t)*(uint16_t*)arg1;
00000cf6              arg1 = &arg1[1];
00000cf8              r4 ^= r7_1;
00000cfe          }
00000cfe          
00000d02          r4 = (uint32_t)(uint16_t)(RORW(r4 >> 0x10, 0x10) << 0x10)
00000d02              | (uint32_t)RORW((int16_t)r4, 0x10);  /* "RY02_3.00.33_250117" */
00000d02          
00000d06          if (r4 != arg3)
00000d0a              result = 0x260;
00000ce6      }
00000ce6      else
00000cea          result = 0x251;
00000cea      
00000d1c      0xff7e1af8(0x23103102, 0x8800270, 4, arg2, r4, arg3, result);
00000d22      return result;
00000cde  }


00000d24    int32_t sub_d24()

00000d24  {
00000d30      0xff7e1af8(0x23103103, 0x88002c0, 0);
00000d3a      int32_t result = 0xff7e498c(0x800000, 0x208444);
00000d3a      
00000d40      if (!result)
00000d54          return result;
00000d54      
00000d4e      0xff7e1af8(0x23103103, 0x88002e8, 1, (uint32_t)*(uint8_t*)0x208444);
00000d52      return 1;
00000d24  }


00000d56    uint32_t sub_d56()

00000d56  {
00000d5a      uint32_t result = (uint32_t)*(uint8_t*)0x208444;
00000d5a      
00000d5e      if (result == 0xff)
00000d64          return result;
00000d64      
00000d60      return 0xff7e4966(result);
00000d56  }


00000d66    int32_t sub_d66(int32_t arg1, int32_t arg2)

00000d66  {
00000d70      int32_t i = 0;
00000d74      int32_t r0_1;
00000d74      
00000d74      if (arg1 != 0xfffe)
00000d7e          r0_1 = 0xff7e4be4(arg1, 0xfffe);
00000d74      else
00000d78          r0_1 = 0xff7e4108(5, 0xfffe);
00000d78      
00000d84      int32_t result;
00000d84      
00000d84      if (!r0_1)
00000dc2          result = 0x29a;
00000d84      else
00000d84      {
00000daa          do
00000daa          {
00000d88              sub_d24();
00000d8e              sub_fcc(r0_1 + arg2);
00000d92              sub_d56();
00000da2              result = sub_100e(arg1, arg2, 0x1000);
00000da2              
00000da4              if (!result)
00000da4                  break;
00000da4              
00000da6              i += 1;
00000daa          } while (i < 3);
00000d84      }
00000d84      
00000db8      0xff7e1af8(0x23103102, 0x8800318, 2, i, result, arg1, arg2);
00000dbe      return result;
00000d66  }

00000dc6                    ff b5 83 b0 0f 46 06 46 0b 46 00 20 46 49 14 46 00 92 02 90 02 22 8c 31 3d 48        .....F.F.F. FI.F.....".1=H
00000de0  e0 f7 8a de a0 07 01 d0 01 20 b4 e0 06 98 00 28 06 d0 3b 48 86 42 05 d0 30 46 e3 f7 f3 de 04 e0  ......... .....(..;H.B..0F......
00000e00  02 20 a8 e0 05 20 e3 f7 7f d9 05 00 1e d0 02 a8 00 90 22 46 39 46 30 46 06 9b 00 f0 3c f9 00 28  . ... ............"F9F0F....<..(
00000e20  6c d0 0c 98 00 28 33 d0 06 98 80 22 41 88 11 43 41 80 2b 49 8e 42 21 d1 80 68 d1 00 43 18 2d 48  l....(3...."A..CA.+I.B!..h..C.-H
00000e40  29 04 03 60 09 0c 03 d0 06 20 84 e0 03 20 82 e0 28 49 18 0c 48 60 00 90 24 49 1e 48 02 22 b8 31  )..`..... ... ..(I..H`..$I.H.".1
00000e60  40 1c e0 f7 49 de 23 48 00 88 00 04 00 0c 05 d0 01 20 00 03 84 42 01 d9 1f 48 6c e0 1b 49 15 48  @...I.#H......... ...B...Hl..I.H
00000e80  23 46 03 22 f0 31 40 1c 00 96 01 95 e0 f7 34 de ed 19 ff f7 47 ff 38 05 11 49 00 0d 00 19 8e 42  #F.".1@.......4.....G.8..I.....B
00000ea0  36 d1 14 4e b2 68 71 68 8a 42 2d d2 38 04 00 0c 28 d0 b8 b2 01 19 01 20 00 04 81 42 39 d9 84 42  6..N.hqh.B-.8...(...... ...B9..B
00000ec0  37 d8 28 19 00 0c 00 04 00 f0 90 f8 b1 68 16 e0                                                  7.(..........h..

00000ed0  int32_t data_ed0 = 0x8800184
00000ed4  int32_t data_ed4 = 0x23103102
00000ed8  int32_t data_ed8 = 0x200500
00000edc  int32_t data_edc = 0x20039c
00000ee0  int32_t data_ee0 = 0xfffe
00000ee4  int32_t data_ee4 = 0x20d
00000ee8  int32_t data_ee8 = 0x2790
00000eec  int32_t data_eec = 0x88002c0
00000ef0  int32_t data_ef0 = 0x208444

00000ef4    int32_t sub_ef4(int32_t arg1, int32_t arg2, int32_t arg3, int32_t arg4)

00000ef4  {
00000efc      /* tailcall */
00000efc      return sub_f42();
00000ef4  }

00000efe                                                                                            49 1c                                I.
00000f00  b1 60 14 e0 28 46 df e7 31 88 09 04 09 0c 10 d0 39 05 09 d0 01 21 09 03 88 42 0a d9 8c 42 08 d8  .`..(F..1.......9....!...B...B..
00000f20  28 19 00 0b 00 03 00 e0 28 46 00 f0 4f f8 00 28 10 d0 21 46 28 46 06 9a ff f7 c2 fd 02 90 ff f7  (.......(F..O..(..!F(F..........
00000f40  0a ff                                                                                            ..

00000f42    int32_t sub_f42(int32_t arg1, int32_t arg2, int32_t arg3, int32_t arg4, int32_t arg5)

00000f42  {
00000f4a      0xff7e1af8(0x23103102, 0x88003f8, 1, arg1);
00000f52      return arg1;
00000f42  }

00000f54                                                              07 20 02 90 f3 e7                                        . ....

00000f5a    uint32_t sub_f5a(int32_t arg1)

00000f5a  {
00000f5e      sub_d24();
00000f64      0xff81ad6a(arg1);
00000f6c      return sub_d56();
00000f5a  }


00000f6e    int32_t sub_f6e(int32_t arg1, int32_t arg2, int32_t arg3, int32_t arg4)

00000f6e  {
00000f6e      int32_t var_1c_1 = arg3;
00000f6e      int32_t var_20_1 = arg2;
00000f72      int32_t r5 = 0;
00000f76      int32_t result = 0;
00000f7a      int32_t r0_1;
00000f7a      int32_t r1;
00000f7a      
00000f7a      if (arg1 != 0xfffe)
00000f8a          r0_1 = 0xff7e4be4(arg1, 0xfffe);
00000f7a      else
00000f7a      {
00000f84          r1 = 0x1000000;
00000f86          r0_1 = 0xff7e4108(5, 0xfffe) | 0x1000000;
00000f7a      }
00000f7a      
00000f8e      int32_t r4 = r0_1;
00000f8e      
00000f90      if (!r4)
00000f9c          r5 = 1;
00000f90      else
00000f90      {
00000f98          if (!0xff7e4bca(r0_1, r1))
00000fa0              r4 += arg2;
00000fa0          
00000fa8          result = 0xff7e4aac(r4);
00000fa8          
00000faa          if (!result)
00000fc8              r5 = 3;
00000faa          else
00000fae              sub_f5a(r4);
00000f90      }
00000f90      
00000fc0      0xff7e1af8(0x23103102, 0x8800414, 3, result, r4, r5, arg4);
00000fc6      return result;
00000f6e  }


00000fcc    int32_t sub_fcc(int32_t arg1)

00000fcc  {
00000fcc      int32_t r3;
00000fcc      int32_t var_10_1 = r3;
00000fd4      int32_t result = 0xff7e41f0(2, arg1);
00000fe4      0xff7e1af8(0x23103102, 0x8800074, 2, arg1, result);
00000fea      return result;
00000fcc  }

00000fec                                      38 b5 05 46 01 46 04 20 e3 f7 fc d8 42 49 04 46 00 90 2b 46              8..F.F. ....BI.F..+F
00001000  02 22 3c 31 3d 48 e0 f7 77 dd 20 46 38 bd                                                        ."<1=H..w. F8.

0000100e    int32_t sub_100e(int32_t arg1, int32_t arg2, int32_t arg3)

0000100e  {
0000100e      int32_t var_1c = arg2;
0000100e      int32_t var_20 = arg1;
00001014      int32_t i = 0;
00001018      int32_t result = 0;
0000101a      int32_t r4 = 0;
0000101e      int32_t var_30;
0000101e      
0000101e      if (!(arg3 << 0x1e))  /* "50117" */
0000101e      {
00001028          if (arg1 != 0xfffe)
0000102c              arg2 = arg1 - 0x2790;
0000102c          
00001030          if (arg1 == 0xfffe || arg2 < 0xb)
00001030          {
00001038              int32_t r0_2;
00001038              
00001038              if (arg1 != 0xfffe)
00001044                  r0_2 = 0xff7e4be4(arg1, arg2);
00001038              else
0000103c                  r0_2 = 0xff7e4108(5, arg2);
0000103c              
0000104a              r4 = r0_2 + var_1c;
0000104a              
0000104c              if (r0_2 == -(var_1c))
00001056                  result = 0xc3;
0000104c              else
0000104c              {
00001050                  uint32_t r0_5 = arg3 >> 2;
00001052                  uint32_t var_2c_1 = r0_5;
00001052                  
00001078                  for (; r0_5 > i; i += 1)
00001078                  {
00001064                      if (!0xff7e46e8(r4, &var_30))
00001064                      {
00001092                          result = 0xd5;
00001094                          break;
00001064                      }
00001064                      
0000106a                      if (var_30 != 0xffffffff)
0000106a                      {
0000106c                          result = 0xce;
0000106e                          break;
0000106a                      }
0000106a                      
00001070                      r4 += 4;
00001072                      r0_5 = var_2c_1;
00001078                  }
0000104c              }
00001030          }
00001030          else
00001032              result = 0xb4;
0000101e      }
0000101e      else
00001020          result = 0xad;
00001020      
0000107e      var_30 = arg3;
0000108a      0xff7e1af8(0x23103102, 0x88000ec, 4, arg1, var_30, r4, result);
00000f52      return result;
0000100e  }


00001096    int32_t sub_1096(int32_t arg1, int32_t arg2, int32_t arg3, void* arg4, int32_t* arg5)

00001096  {
00001096      int32_t var_1c = arg3;
00001096      int32_t var_20 = arg2;
000010a2      *(uint32_t*)arg5 = 0;
000010a6      int32_t r0_1;
000010a6      
000010a6      if (!arg4)
000010b6          r0_1 = 2;
000010a6      else
000010a6      {
000010ac          int32_t r0;
000010ac          
000010ac          if (arg1 != 0xfffe)
000010ba              r0 = 0xff7e4c56();
000010ac          else
000010b0              r0 = 0xff7e418a(5, 0xfffe);
000010b0          
000010cc          if (arg2 || *(uint32_t*)((char*)arg4 + 8) + 0x400 <= r0)
000010cc          {
000010d6              if (arg2 + arg3 <= r0)
000010f6                  return 1;
000010f6              
000010e8              0xff7e1af8(0x23103100, 0x8800134, 3, arg2, arg3, r0, arg4);
000010ec              r0_1 = 5;
000010cc          }
000010cc          else
000010ce              r0_1 = 4;
000010a6      }
000010a6      
000010ee      *(uint32_t*)arg5 = r0_1;
000010f2      return 0;
00001096  }

000010f8  int32_t data_10f8 = 0x88003f8
000010fc  int32_t data_10fc = 0x23103102
00001100  int32_t data_1100 = 0xfffe
00001104  int32_t data_1104 = 0x8800074
00001108  int32_t data_1108 = -0x2790

0000110c    int32_t sub_110c()

0000110c  {
00001116      sub_fc34(0x10000, 0x20004000, 1);
0000111c      void var_44;
0000111c      sub_10926(&var_44);
00001124      int16_t var_3a = 0;
00001128      int32_t var_38 = 0x4c4b3ff;
0000112e      int16_t var_3c = 1;
00001134      sub_1084c(0x40002064, &var_44);
0000113c      char var_50 = 8;
00001140      int32_t var_4c = 3;
00001142      char var_48 = 1;
00001146      sub_f5a8(&var_50);
00001150      sub_10958(0x40002064, 1);
00001158      sub_10940(0x40002064, 1);
0000115e      return 0x40002064;
0000110c  }

00001160  int32_t data_1160 = 0x20004000
00001164  int32_t data_1164 = 0x4c4b3ff
00001168  int32_t data_1168 = 0x40002064

0000116c    int32_t sub_116c()

0000116c  {
00001170      int32_t result = *(uint32_t*)0x208894;
00001170      
00001174      if (!result)
0000117a          return result;
0000117a      
00001176      return 0xff7ef3d8(result);
0000116c  }


0000117c    int32_t sub_117c()

0000117c  {
00001180      int32_t result = *(uint32_t*)0x2098ac;
00001180      
00001184      if (result)
00001184      {
00001186          int32_t r0 = *(uint32_t*)0x2098ac;
0000118a          *(uint32_t*)0x2098ac = 0;
00001192          *(uint32_t*)0x2087b0 += r0;
0000119c          int32_t __saved_r1;
0000119c          sub_1f9e(&__saved_r1, sub_183e());
000011a4          int32_t r1_3;
000011a4          result = sub_12b2a(*(uint32_t*)0x2087b0, 0x3c);
000011a4          
000011aa          if (!r1_3)
000011aa          {
000011ac              sub_25a4();
000011ac              
000011b6              if ((uint32_t)*(uint8_t*)0x208852 == 1)
000011b6              {
000011b8                  int32_t r0_6 = *(uint32_t*)0x2087b0;
000011c4                  int32_t r1_4 = sub_12b2a(sub_12b2a(r0_6, 0x3c), 0x3c);
000011c4                  
000011ce                  if ((uint32_t)*(uint8_t*)0x208850 == 3)
000011ce                  {
000011e0                      if (!sub_12b2a(r0_6, 0x3c * (uint32_t)*(uint8_t*)0x2086f0))
000011e2                          sub_bb42();
000011e2                      
000011e8                      if (r1_4 == 0x20)  /* "117" */
000011f0                          sub_b8b8();
000011e8                      else if (!r1_4)
000011f6                          sub_c0e8();
000011f6                      
00001204                      if (!sub_12b3e(r1_4, 0x1e))  /* "50117" */
00001206                          sub_bf48();
000011ce                  }
000011ce                  
0000120c                  if (!r1_4)
0000120c                  {
0000120e                      sub_bbd8();
00001212                      sub_315a();
0000120c                  }
0000120c                  
00001216                  sub_8f00();
000011b6              }
000011b6              
0000121e              int32_t r1_9;
0000121e              result = sub_12b2a(*(uint32_t*)0x2087b0, &data_15180);
0000121e              
00001224              if (!r1_9)
00001226                  return sub_8fa0();
000011aa          }
00001184      }
00001184      
0000122a      return result;
0000117c  }


0000122c    int32_t sub_122c()

0000122c  {
00001232      sub_cd30();
00001236      sub_bbb8();
0000123a      int32_t r0;
0000123a      int32_t r1;
0000123a      int32_t r2;
0000123a      int32_t r3;
0000123a      r0 = sub_a8f6();
0000123e      sub_2df2(r0, r1, r2, r3);
00001246      sub_3d06();
0000124a      sub_1e3c();
0000124e      sub_7cfc();
00001256      return sub_aa14();
0000122c  }

00001258                                                                          29 48 01 22 11 46 08 30                          )H.".F.0
00001260  ee f7 7e d8 2c 48 ee f7 c9 d8 2c 48 ee f7 c6 d8 01 f0 60 ff ff f7 da ff 24 4c 03 25 25 70 09 f0  ..~.,H....,H......`.....$L.%%p..
00001280  32 f9 a0 78 01 28 03 d1 00 f0 c2 f8 00 f0 84 f9 1b 4c 02 26 08 27 00 21 c9 43 a0 68 ee f7 88 d8  2..x.(...........L.&.'.!.C.h....
000012a0  00 28 f8 d0 00 20 20 70 03 f0 62 ff 01 20 20 70 09 f0 f9 f9 26 70 05 f0 02 ff 25 70 ff f7 5e ff  .(...  p..b..  p....&p....%p..^.
000012c0  04 20 20 70 01 f0 14 fe 05 20 20 70 0b f0 4b fc 06 20 20 70 0b f0 3e fd 07 20 20 70 0e f0 60 f8  .  p.....  p..K..  p..>..  p..`.
000012e0  27 70 d8 e7                                                                                      'p..

000012e4    int32_t sub_12e4()

000012e4  {
000012e4      int32_t r3;
000012e4      int32_t var_c = r3;
000012e4      int32_t r2;
000012e4      int32_t var_10 = r2;
000012fe      return 0xff7ef4b8(0x208890, &data_1324, 0x825209, 0, 0xe00, 1);
000012e4  }

00001300  int32_t data_1300 = 0x20888c
00001304  int32_t data_1304 = 0x2098ac
00001308  int32_t data_1308 = 0x2087ac
0000130c  int32_t data_130c = 0x208850
00001310  int32_t data_1310 = 0x2086e4
00001314  void* data_1314 = data_15180

00001318    uint32_t sub_1318(int32_t arg1, int32_t arg2, int32_t arg3, void* arg4, void* arg5 @ r4, void* arg6 @ r6, int32_t arg7 @ r7)

00001318  {
00001318      uint32_t result_1 = (uint32_t)*(uint16_t*)((char*)arg5 + 4);
00001320      *(uint16_t*)(arg2 + result_1) = (int16_t)arg2;
00001324      *(uint32_t*)((char*)arg6 + 0x34) = arg2;  /* "_V3.0" */
00001326      *(uint32_t*)((char*)arg4 + 0x14) = arg7;  /* "_3.00.33_250117" */
00001328      *(uint8_t*)((char*)arg6 + 1) = (char)result_1;
0000132c      uint32_t result_2 = result_1;
00001330      uint32_t result = (uint32_t)(uint16_t)result_1;
00001336      *(uint8_t*)0x208898 = (char)result;
00001338      uint32_t r2 = (uint32_t)*(uint16_t*)((char*)result_1)[2];
0000133a      *(uint8_t*)0x208899 = (char)r2;
0000133a      
0000133c      if (!result)
00001362          return sub_a94e(result_1, arg2, r2, arg4);
00001362      
00001340      if (result == 3)
00001358          return sub_b574(result_1, arg2);
00001358      
00001344      if (result == 5)
00001348          result = result_1;
00001348      
0000134e      return result;
00001318  }

00001364              0e b5 34 20 00 90 1c 48 1c 4b 08 22 20 21 08 30 ed f7 5c dd 38 25 00 26 17 4c f6 43      ..4 ...H.K." !.0..\.8%.&.L.C
00001380  00 95 17 4b 32 46 01 a9 a0 68 ed f7 fa dd 00 28 f6 d0 02 99 01 98 ff f7 c9 ff f1 e7              ...K2F...h.....(............

0000139c    int32_t sub_139c()

0000139c  {
0000139c      int32_t r3;
0000139c      int32_t var_c = r3;
0000139c      int32_t r2;
0000139c      int32_t var_10 = r2;
000013b6      return 0xff7ef4b8(0x20889c, &data_13e8, 0x825315, 0, 0xa00, 2);
0000139c  }


000013b8    int32_t sub_13b8(int32_t arg1)

000013b8  {
000013ba      int32_t r3;
000013ba      int32_t var_8 = r3;
000013be      int32_t result = *(uint32_t*)0x2088a0;
000013be      
000013c2      if (result)
000013c2      {
000013c8          var_8 = 0x23;
000013ce          int32_t lr;
000013ce          result = 0xff7eef26(result, arg1, 0, 0x83daba, 0x23, lr);
000013ce          
000013d4          if (result)
000013d6              return 1;
000013c2      }
000013c2      
000013d8      return result;
000013b8  }

000013da                                                                                00 00                                        ..

000013dc  int32_t data_13dc = 0x208898
000013e0  int32_t data_13e0 = 0x83dacf
000013e4  int32_t data_13e4 = 0x825315

000013e8  data_13e8:
000013e8                          68 75 62 00                                                                      hub.

000013ec    int32_t sub_13ec()

000013ec  {
000013f4      if ((uint32_t)*(uint8_t*)0x20b850)
000013f6          sub_7a3a();
000013f6      
000013fe      sub_a50a();
00001402      sub_bb90();
0000140e      return sub_cd42();
000013ec  }


00001410    int32_t sub_1410()

00001410  {
00001412      sub_91ea();
0000141a      return sub_a4e6();
00001410  }


0000141c    int32_t j_sub_1410()

0000141c  {
0000141c      /* tailcall */
0000141c      return sub_1410();
0000141c  }


0000141e    int32_t sub_141e(int32_t arg1, int32_t arg2, int32_t arg3, int32_t arg4)

0000141e  {
00001420      int32_t r0;
00001420      int32_t r1;
00001420      int32_t r2;
00001420      int32_t r3;
00001420      r0 = sub_5b9a(arg1, arg2, arg3, arg4);
00001428      return sub_720c(r0, r1, r2, r3);
0000141e  }


0000142a    uint32_t sub_142a(int32_t arg1, int32_t arg2, int32_t arg3, int32_t arg4)

0000142a  {
00001430      return sub_71ec(arg1, arg2, arg3, arg4);
0000142a  }


00001432    int32_t sub_1432()

00001432  {
0000143a      0xff81b91a(0x2086c4, 0xe8, 0xff);
0000144e      *(uint8_t*)0x2086c6 = (char)((uint32_t)*(uint8_t*)0x2086c6 >> 1 << 1) & 0xcb;
00001452      *(uint32_t*)0x2086d4 = 0x1388;
00001456      *(uint32_t*)0x2086d8 = 0x493e0;
0000145a      *(uint32_t*)0x2086dc = 0xbb8;
0000145e      *(uint16_t*)0x2086e0 = 0x78;
00001462      *(uint16_t*)0x2086e2 = 0x1e0;
00001468      int32_t r2 = *(uint32_t*)0x83dad8;
0000146c      *(uint32_t*)0x2086e8 = *(uint32_t*)0x83dadc;
0000146e      *(uint32_t*)0x2086e4 = r2;
00001474      *(uint8_t*)0x2086f0 = 0x1e;  /* "50117" */
00001482      *(uint8_t*)0x2086f1 = (char)((uint32_t)*(uint8_t*)0x2086f1 >> 1 << 1) & 0xf1;
0000148a      *(uint8_t*)0x20878c = 1;
0000148c      sub_9070();
00001490      sub_3146();
00001494      sub_bbe0();
00001498      sub_91fc();
000014a0      return j_sub_7fd8();
00001432  }


000014a2    uint32_t sub_14a2()

000014a2  {
000014a6      uint32_t result = (uint32_t)*(uint8_t*)0x208852;
000014a6      
000014aa      if (result != 1)
000014b8          return result;
000014b8      
000014ac      sub_3146();
000014b0      sub_bbd8();
000014b4      return sub_8e4e();
000014a2  }


000014ba    int32_t sub_14ba()

000014ba  {
000014c0      *(uint8_t*)0x208850 = 1;
000014ca      uint32_t r0;
000014ca      int32_t r1;
000014ca      int32_t r2;
000014ca      int32_t r3;
000014ca      r0 = sub_357e(0x1e, 2, 3, 2);  /* "50117" */
000014ce      sub_141e(r0, r1, r2, r3);
000014d2      sub_13ec();
000014d6      sub_14a2();
000014da      sub_31aa();
000014de      sub_322e();
000014e2      int32_t r0_1 = sub_187c();
000014e2      
000014fe      while (true)
000014fe      {
000014fe          uint32_t r0_4 = sub_36ca();
00001504          int32_t r0_3;
00001504          
00001504          if (r0_4)
000014f2              r0_3 = sub_187c() - r0_1;
000014f2          
000014f6          if (!r0_4 || r0_3 > 0x7d0)  /* "17 10:58:10 2022" */
0000150a              return sub_302a();
0000150a          
000014fa          0xff7ef196(0x64);
000014fe      }
000014ba  }


0000150c    uint32_t sub_150c()

0000150c  {
00001514      if ((uint32_t)*(uint8_t*)0x208850 != 1)
00001528          return 0x208850;
00001528      
00001518      *(uint8_t*)0x208850 = 3;
0000151e      int32_t r0_2;
0000151e      int32_t r1_1;
0000151e      int32_t r2_1;
0000151e      int32_t r3_1;
0000151e      
0000151e      if ((uint32_t)*(uint8_t*)0x208852 == 1)
0000152a          r0_2 = sub_1410();
0000151e      else
00001520          r0_2 = sub_a4e6();
00001520      
00001524      return sub_71ec(r0_2, r1_1, r2_1, r3_1);
0000150c  }


00001530    int32_t sub_1530()

00001530  {
00001532      int32_t r0;
00001532      int32_t r1;
00001532      int32_t r2;
00001532      int32_t r3;
00001532      r0 = sub_13ec();
00001536      int32_t r0_1;
00001536      int32_t r1_1;
00001536      int32_t r2_1;
00001536      int32_t r3_1;
00001536      r0_1 = sub_5b9a(r0, r1, r2, r3);
0000153a      sub_720c(r0_1, r1_1, r2_1, r3_1);
0000153e      sub_14a2();
00001542      sub_31aa();
00001546      sub_322e();
00001552      return sub_6bcc(0x7d0);  /* "17 10:58:10 2022" */
00001530  }


00001554    int32_t sub_1554()

00001554  {
00001556      int32_t r0;
00001556      int32_t r1;
00001556      int32_t r2;
00001556      int32_t r3;
00001556      r0 = sub_13ec();
0000155a      int32_t r0_1;
0000155a      int32_t r1_1;
0000155a      int32_t r2_1;
0000155a      int32_t r3_1;
0000155a      r0_1 = sub_5b9a(r0, r1, r2, r3);
0000155e      sub_720c(r0_1, r1_1, r2_1, r3_1);
00001562      sub_317e();
00001566      sub_31aa();
0000156e      *(uint8_t*)0x208850 = 5;
00001574      *(uint32_t*)0x2087b0 = 0;
00001576      *(uint32_t*)0x2087b4 = 0;
00001578      *(uint8_t*)0x2087b9 = 0;
0000157a      sub_322e();
0000157e      sub_bbe0();
00001582      sub_91fc();
00001586      j_sub_7fd8();
0000158a      sub_1828();
00001596      return sub_6bcc(0x3e8);
00001554  }


00001598    void* sub_1598()

00001598  {
0000159e      return sub_909e();
00001598  }


000015a0    uint32_t sub_15a0()

000015a0  {
000015a4      return (uint32_t)*(uint8_t*)0x2087be;
000015a0  }


000015a6    void sub_15a6(char arg1)

000015a6  {
000015a8      *(uint8_t*)0x2087be = arg1;
000015a6  }


000015ac    uint32_t sub_15ac()

000015ac  {
000015b6      return (uint32_t)*(uint8_t*)0x2086f1 << 0x1f >> 0x1f;  /* "0117" */
000015ac  }


000015b8    void sub_15b8(uint32_t arg1)

000015b8  {
000015bc      uint32_t r1 = (uint32_t)*(uint8_t*)0x2086f1;
000015bc      
000015c4      if (r1 << 0x1f >> 0x1f != arg1)  /* "0117" */
000015d0          *(uint8_t*)0x2086f1 = (char)(r1 >> 1 << 1) | (arg1 << 0x1f >> 0x1f);  /* "0117" */
000015b8  }


000015d4    void sub_15d4(int32_t arg1)

000015d4  {
000015da      uint32_t r1 = (uint32_t)*(uint8_t*)0x2086f1;
000015da      
000015e2      if (r1 << 0x1e >> 0x1f != arg1)  /* "50117" */  /* "0117" */
000015e2      {
000015ee          *(uint8_t*)0x2086f1 = ((uint8_t)r1 & 0xfd) | (char)(arg1 << 0x1f >> 0x1e);
000015ee              /* "50117" */  /* "0117" */
000015f0          sub_315a();
000015e2      }
000015d4  }


000015f6    uint32_t sub_15f6()

000015f6  {
00001600      return (uint32_t)*(uint8_t*)0x2086f1 << 0x1e >> 0x1f;  /* "50117" */  /* "0117" */
000015f6  }


00001602    uint32_t sub_1602()

00001602  {
0000160c      return (uint32_t)*(uint8_t*)0x2086f1 << 0x1d >> 0x1f;  /* "250117" */  /* "0117" */
00001602  }


0000160e    char sub_160e(int32_t arg1)

0000160e  {
00001616      char result = (char)(arg1 << 2);
0000161c      *(uint8_t*)0x2086f1 = (*(uint8_t*)0x2086f1 & 0xfb) | result;
0000161e      return result;
0000160e  }


00001620    uint32_t sub_1620()

00001620  {
00001628      return (uint32_t)*(uint8_t*)0x2086c6 << 0x1b >> 0x1f;  /* "3_250117" */  /* "0117" */
00001620  }


0000162a    uint32_t sub_162a()

0000162a  {
0000162c      uint32_t result = sub_1620();
0000162c      
00001632      if (!result)
00001632      {
00001634          result = 0x2086c4;
0000163c          *(uint8_t*)0x2086c6 |= 0x10;  /* "RY02_3.00.33_250117" */
00001632      }
00001632      
0000163e      return result;
0000162a  }


00001640    int32_t sub_1640()

00001640  {
00001644      return *(uint32_t*)0x2086ec;
00001640  }


00001646    void sub_1646(int32_t arg1)

00001646  {
00001648      *(uint32_t*)0x2086ec = arg1;
00001646  }


0000164c    void sub_164c(uint32_t arg1)

0000164c  {
0000164e      if (arg1)
00001650          arg1 = 1;
00001650      
00001654      uint32_t r1 = (uint32_t)*(uint8_t*)0x2086c6;
00001654      
0000165c      if (r1 << 0x1d >> 0x1f != arg1)  /* "250117" */  /* "0117" */
00001668          *(uint8_t*)0x2086c6 = ((uint8_t)r1 & 0xfb) | (arg1 << 0x1f >> 0x1d);
00001668              /* "250117" */  /* "0117" */
0000164c  }


0000166c    uint32_t sub_166c()

0000166c  {
00001674      return (uint32_t)*(uint8_t*)0x2086c6 << 0x1d >> 0x1f;  /* "250117" */  /* "0117" */
0000166c  }


00001676    uint32_t sub_1676(int32_t arg1, char arg2, char arg3, char arg4)

00001676  {
0000167a      if (arg1)
0000167c          arg1 = 1;
0000167c      
00001682      *(uint8_t*)0x2086e4 = (char)arg1;
00001684      *(uint8_t*)0x2086e5 = arg2;
00001686      uint32_t r1 = (uint32_t)arg3;
00001688      *(uint8_t*)0x2086e6 = (char)r1;
0000168a      uint32_t r2 = (uint32_t)arg4;
0000168c      *(uint8_t*)0x2086e7 = (char)r2;
00001692      return sub_14cc4((uint8_t)arg1, r1, r2);
00001676  }


00001694    int32_t sub_1694()

00001694  {
00001698      return *(uint32_t*)0x2086d4;
00001694  }


0000169a    int32_t sub_169a()

0000169a  {
0000169e      return *(uint32_t*)0x2086d8;
0000169a  }


000016a0    int32_t sub_16a0()

000016a0  {
000016a4      return *(uint32_t*)0x2086dc;
000016a0  }


000016a6    void sub_16a6(uint32_t arg1, int32_t arg2, int32_t arg3)

000016a6  {
000016aa      if (arg1 < 0x64)
000016aa          return;
000016aa      
000016be      if (*(uint32_t*)0x2086d4 != arg1 || *(uint32_t*)0x2086d8 != arg2
000016be          || *(uint32_t*)0x2086dc != arg3)
000016be      {
000016c2          *(uint32_t*)0x2086d4 = arg1;
000016c2          *(uint32_t*)0x2086d8 = arg2;
000016c2          *(uint32_t*)0x2086dc = arg3;
000016be      }
000016be      
000016c4      sub_9070();
000016a6  }


000016ca    void sub_16ca(int32_t arg1, int32_t arg2)

000016ca  {
000016de      if (arg1 >= 5 && arg2 >= 5 && ((uint32_t)*(uint16_t*)0x2086e0 != arg1
000016de          || (uint32_t)*(uint16_t*)0x2086e2 != arg2))
000016de      {
000016e0          *(uint16_t*)0x2086e0 = (int16_t)arg1;
000016e2          *(uint16_t*)0x2086e2 = (int16_t)arg2;
000016de      }
000016ca  }


000016e6    uint32_t sub_16e6()

000016e6  {
000016f0      return (uint32_t)*(uint8_t*)0x2086f1 << 0x1c >> 0x1f;  /* "_250117" */  /* "0117" */
000016e6  }


000016f2    char sub_16f2(int32_t arg1)

000016f2  {
000016fa      char result = (char)(arg1 << 3);
00001700      *(uint8_t*)0x2086f1 = (*(uint8_t*)0x2086f1 & 0xf7) | result;
00001702      return result;
000016f2  }


00001704    uint32_t sub_1704()

00001704  {
0000170e      return (uint32_t)*(uint8_t*)0x2086f2 << 0x1e >> 0x1e;  /* "50117" */
00001704  }


00001710    void sub_1710(char arg1)

00001710  {
00001714      *(uint8_t*)0x2086f2 = arg1;
00001710  }

00001718  int32_t data_1718 = 0x20b850
0000171c  int32_t data_171c = 0x2086c4
00001720  int32_t data_1720 = 0x1388
00001724  int32_t data_1724 = 0x493e0
00001728  int32_t data_1728 = 0xbb8
0000172c  int32_t data_172c = 0x83dad8
00001730  int32_t data_1730 = 0x208850
00001734  int32_t data_1734 = 0x2087ac

00001738    int32_t sub_1738()

00001738  {
0000173c      int32_t r4 = *(uint32_t*)0x40000130;
0000174a      int32_t r1_1 = 0x3c - sub_12b2a(*(uint32_t*)0x2087b0, 0x3c);
00001752      int32_t r0_2;
00001752      
00001752      if (!(uint32_t)*(uint8_t*)0x2001ec)
0000175c          r0_2 = 0x8000;
00001752      else
00001756          r0_2 = 0x7d00;
00001756      
00001764      sub_18c6(0, r4 + r0_2 * r1_1);
0000176a      *(uint32_t*)0x2087b4 = *(uint32_t*)0x40000130;
00001770      *(uint32_t*)0x2098ac = 0;
00001776      sub_fada(0x10000, 1);
0000177c      sub_fb02(1);
00001786      return sub_fac2(1);
00001738  }


00001788    int32_t sub_1788(int32_t arg1, int32_t arg2)

00001788  {
00001788      int32_t r3;
00001788      int32_t var_8 = r3;
00001788      int32_t r2;
00001788      int32_t var_c_1 = r2;
00001788      int32_t var_10 = arg2;
0000178a      sub_f9fe();
00001790      sub_fab8(0);
0000179a      sub_fada(0x10000, 0);
000017a2      (uint8_t)var_10 = 0xd;
000017a6      int32_t var_c = 3;
000017aa      (uint8_t)var_8 = 1;
000017ae      sub_f5a8(&var_10);
000017b4      sub_fb14(1);
000017bc      return sub_1738();
00001788  }


000017be    int32_t sub_17be()

000017be  {
000017ca      if (sub_fb68(0x10000) == 1)
000017ca      {
000017e0          *(uint32_t*)0x2098ac += 0x3c - sub_12b2a(*(uint32_t*)0x2087b0, 0x3c);
000017e6          *(uint32_t*)0x2087b4 = *(uint32_t*)0x40000130;
000017ec          sub_116c();
000017f8          int32_t r0_5;
000017f8          
000017f8          if (!(uint32_t)*(uint8_t*)0x2001ec)
00001802              r0_5 = 0x8000;
000017f8          else
000017fc              r0_5 = 0x7d00;
000017fc          
0000180c          sub_18c6(0, *(uint32_t*)0x40000110 + 0x3c * r0_5);
00001812          sub_fbc4(0);
000017ca      }
000017ca      
0000181a      int32_t result = sub_fb68(0x200);
0000181a      
00001820      if (result != 1)
00001826          return result;
00001826      
00001822      return sub_fbe4();
000017be  }


00001828    int32_t sub_1828()

00001828  {
0000182c      *(uint32_t*)0x2087b0 = 0;
0000182e      return 0;
00001828  }


00001830    void sub_1830(int32_t arg1)

00001830  {
00001836      if (*(uint32_t*)0x2087b0 == arg1)
0000183c          return;
0000183c      
00001838      *(uint32_t*)0x2087b0 = arg1;
0000183a      /* tailcall */
0000183a      return sub_1738();
00001830  }


0000183e    int32_t sub_183e()

0000183e  {
00001842      int32_t r0 = *(uint32_t*)0x40000130;
0000184c      int32_t r2 = *(uint32_t*)0x2087b4;
0000184e      int32_t r1 = 0x7d00;
00001852      uint32_t r3 = (uint32_t)*(uint8_t*)0x2001ec;
00001856      int32_t r0_1;
00001856      
00001856      if (r2 >= r0)
00001856      {
00001864          if (!r3)
00001866              r1 = 0x8000;
00001866          
0000186a          r0_1 = r0 - r2 - 1;
00001856      }
00001856      else
00001856      {
0000185a          if (!r3)
0000185c              r1 = 0x8000;
0000185c          
0000185e          r0_1 = r0 - r2;
00001856      }
00001856      
0000186c      int32_t r0_3 = sub_12b2a(r0_1, r1);
0000187a      return *(uint32_t*)0x2087b0 + r0_3 + *(uint32_t*)0x2098ac;
0000183e  }


0000187c    int32_t sub_187c()

0000187c  {
0000188e      int32_t r1_1;
0000188e      
0000188e      if (!(uint32_t)*(uint8_t*)0x2001ec)
00001898          r1_1 = 0x8000;
0000188e      else
00001892          r1_1 = 0x7d00;
00001892      
0000189e      return sub_12b2a(0x3e8 * *(uint32_t*)0x40000130, r1_1);
0000187c  }


000018a0    int32_t sub_18a0()

000018a0  {
000018aa      return sub_183e() + 0x386cd300;
000018a0  }


000018ac    void sub_18ac(int32_t arg1, int32_t* arg2)

000018ac  {
000018b2      if (!arg1 || arg1 == 0xffffffff)
000018b2          return;
000018b2      
000018b8      arg1 = arg1 <= 0x386d4380 ? 0 : arg1 - 0x386d4380;
000018b8      
000018c2      *(uint32_t*)arg2 = arg1;
000018ac  }


000018c6    int32_t sub_18c6(int32_t arg1, int32_t arg2)

000018c6  {
000018d4      return sub_f9d8((arg1 << 2) + 0x40000110, arg2);
000018c6  }

000018d6                                                                    00 00                                                ..

000018d8  int32_t data_18d8 = 0x40000100
000018dc  int32_t data_18dc = 0x2087ac
000018e0  int32_t data_18e0 = 0x2001e0
000018e4  int32_t data_18e4 = 0x2098ac
000018e8  int32_t data_18e8 = 0x386cd300
000018ec  int32_t data_18ec = 0x386d4380

000018f0    int32_t sub_18f0()

000018f0  {
000018f4      *(uint16_t*)0x2098b2 = 0;
000018f6      *(uint8_t*)0x2098b4 = 0;
000018f8      return 0x2098b2;
000018f0  }


000018fa    int32_t sub_18fa()

000018fa  {
00001900      if (*(uint32_t*)0x208664 == 2)
00001908          return 0x88;
00001908      
00001904      return 0x77;
000018fa  }


0000190a    int32_t sub_190a()

0000190a  {
00001910      if (*(uint32_t*)0x208664 == 1)
00001918          return 0x88;
00001918      
00001914      return 0x77;
0000190a  }


0000191a    int32_t sub_191a(int32_t arg1)

0000191a  {
0000191a      int32_t r3;
0000191a      int32_t var_c_1 = r3;
0000191a      int32_t r2;
0000191a      int32_t var_10_1 = r2;
0000191a      int32_t r1;
0000191a      int32_t var_14_1 = r1;
0000191a      int32_t result = arg1;
0000191e      result = 0;
00001920      int32_t var_14 = 0;
00001922      int32_t var_10 = 0;
00001924      int32_t var_c = 0;
0000192a      (uint8_t)result = 1;
0000192c      *(uint8_t*)((char*)var_c)[3] = 1;
00001930      sub_6650(&result);
00001934      return result;
0000191a  }


00001936    int32_t sub_1936(int32_t arg1)

00001936  {
00001936      int32_t r3;
00001936      int32_t var_c_1 = r3;
00001936      int32_t r2;
00001936      int32_t var_10_1 = r2;
00001936      int32_t r1;
00001936      int32_t var_14_1 = r1;
00001936      int32_t result = arg1;
0000193a      result = 0;
0000193c      int32_t var_14 = 0;
0000193e      int32_t var_10 = 0;
00001940      int32_t var_c = 0;
00001946      (uint8_t)result = 0x90;
00001948      *(uint8_t*)((char*)var_c)[3] = 0x90;
0000194c      sub_6650(&result);
00001950      return result;
00001936  }


00001952    int32_t sub_1952(int32_t arg1)

00001952  {
00001952      int32_t r3;
00001952      int32_t var_c_1 = r3;
00001952      int32_t r2;
00001952      int32_t var_10_1 = r2;
00001952      int32_t r1;
00001952      int32_t var_14_1 = r1;
00001952      int32_t result = arg1;
00001956      result = 0;
00001958      int32_t var_14 = 0;
0000195a      int32_t var_10 = 0;
0000195c      int32_t var_c = 0;
00001962      (uint8_t)result = 0x91;
0000196e      *(uint8_t*)((char*)var_c)[3] = sub_3764(&result, 0xf);
00001972      sub_6650(&result);
00001976      return result;
00001952  }


00001978    int32_t sub_1978() __pure

00001978  {
00001978      return;
00001978  }


0000197a    int32_t sub_197a() __pure

0000197a  {
0000197a      return;
0000197a  }


0000197c    int32_t sub_197c() __pure

0000197c  {
0000197c      return;
0000197c  }


0000197e    int32_t sub_197e()

0000197e  {
00001990      return sub_3704(0x2098bc, 0x82592d, 0x3e8, 1);
0000197e  }


00001992    int32_t sub_1992(int32_t arg1)

00001992  {
00001992      int32_t r3;
00001992      int32_t var_c_1 = r3;
00001992      int32_t r2;
00001992      int32_t var_10_1 = r2;
00001992      int32_t r1;
00001992      int32_t var_14_1 = r1;
00001992      int32_t result = arg1;
00001996      result = 0;
00001998      int32_t var_14 = 0;
0000199a      int32_t var_10 = 0;
0000199c      int32_t var_c = 0;
000019a2      (uint8_t)result = 0x94;
000019a4      *(uint8_t*)((char*)var_c)[3] = 0x94;
000019a8      sub_6650(&result);
000019b0      *(uint8_t*)0x2098b2 = 1;
000019b2      sub_197e();
000019b6      return result;
00001992  }


000019b8    int32_t sub_19b8(int32_t arg1)

000019b8  {
000019b8      int32_t r3;
000019b8      int32_t var_c_1 = r3;
000019b8      int32_t r2;
000019b8      int32_t var_10_1 = r2;
000019b8      int32_t r1;
000019b8      int32_t var_14_1 = r1;
000019b8      int32_t result = arg1;
000019bc      result = 0;
000019be      int32_t var_14 = 0;
000019c0      int32_t var_10 = 0;
000019c6      int32_t var_c = 0;
000019c8      (uint8_t)result = 0x95;
000019ca      *(uint8_t*)((char*)var_c)[3] = 0x95;
000019ce      sub_6650(&result);
000019d6      *(uint8_t*)0x2098b3 = 0;
000019d8      *(uint8_t*)0x2098b2 = 3;
000019da      sub_197e();
000019de      return result;
000019b8  }


000019e0    int32_t sub_19e0(int32_t arg1)

000019e0  {
000019e0      int32_t r3;
000019e0      int32_t var_c_1 = r3;
000019e0      int32_t r2;
000019e0      int32_t var_10_1 = r2;
000019e0      int32_t r1;
000019e0      int32_t var_14_1 = r1;
000019e0      int32_t result = arg1;
000019e4      result = 0;
000019e6      int32_t var_14 = 0;
000019e8      int32_t var_10 = 0;
000019ee      int32_t var_c = 0;
000019f0      (uint8_t)result = 0x96;
000019f2      *(uint8_t*)((char*)var_c)[3] = 0x96;
000019f6      sub_6650(&result);
000019fe      *(uint8_t*)0x2098b3 = 0;
00001a00      *(uint8_t*)0x2098b2 = 4;
00001a02      sub_197e();
00001a06      return result;
000019e0  }


00001a08    int32_t sub_1a08() __pure

00001a08  {
00001a08      return;
00001a08  }


00001a0a    int32_t sub_1a0a() __pure

00001a0a  {
00001a0a      return;
00001a0a  }


00001a0c    int32_t sub_1a0c(int32_t arg1)

00001a0c  {
00001a0c      int32_t r3;
00001a0c      int32_t var_c_1 = r3;
00001a0c      int32_t r2;
00001a0c      int32_t var_10_1 = r2;
00001a0c      int32_t r1;
00001a0c      int32_t var_14_1 = r1;
00001a0c      int32_t result = arg1;
00001a10      result = 0;
00001a12      int32_t var_14 = 0;
00001a14      int32_t var_10 = 0;
00001a16      int32_t var_c = 0;
00001a1a      (uint8_t)result = (char)arg1;
00001a1c      *(uint8_t*)((char*)var_c)[3] = (char)arg1;
00001a20      sub_6650(&result);
00001a24      return result;
00001a0c  }


00001a26    int32_t j_sub_1a0c()

00001a26  {
00001a28      /* tailcall */
00001a28      return sub_1a0c(0x98);
00001a26  }


00001a2a    int32_t sub_1a2a() __pure

00001a2a  {
00001a2a      return;
00001a2a  }


00001a2c    int32_t j_sub_1a0c()

00001a2c  {
00001a2e      /* tailcall */
00001a2e      return sub_1a0c(0x9a);
00001a2c  }


00001a30    int32_t sub_1a30(int32_t arg1)

00001a30  {
00001a30      int32_t r3;
00001a30      int32_t var_c_1 = r3;
00001a30      int32_t r2;
00001a30      int32_t var_10_1 = r2;
00001a30      int32_t r1;
00001a30      int32_t var_14_1 = r1;
00001a30      int32_t result = arg1;
00001a34      result = 0;
00001a36      int32_t var_14 = 0;
00001a38      int32_t var_10 = 0;
00001a3a      int32_t var_c = 0;
00001a40      (uint8_t)result = 0x9b;
00001a48      *(uint8_t*)((char*)result)[1] = sub_18fa();
00001a54      *(uint8_t*)((char*)var_c)[3] = sub_3764(&result, 0xf);
00001a58      sub_6650(&result);
00001a5c      return result;
00001a30  }


00001a5e    int32_t sub_1a5e(int32_t arg1)

00001a5e  {
00001a5e      int32_t r3;
00001a5e      int32_t var_c_1 = r3;
00001a5e      int32_t r2;
00001a5e      int32_t var_10_1 = r2;
00001a5e      int32_t r1;
00001a5e      int32_t var_14_1 = r1;
00001a5e      int32_t result = arg1;
00001a62      result = 0;
00001a64      int32_t var_14 = 0;
00001a66      int32_t var_10 = 0;
00001a68      int32_t var_c = 0;
00001a6e      (uint8_t)result = 0x9c;
00001a70      *(uint8_t*)((char*)var_c)[3] = 0x9c;
00001a74      sub_6650(&result);
00001a7c      sub_3730(0x2098c0);
00001a80      sub_cd22();
00001a84      sub_14ba();
00001a88      return result;
00001a5e  }

00001a8a                                1f b5 00 20 00 90 01 90 02 90 03 90 93 20 69 46 08 70 c8 73 68 46            ... ......... iF.p.shF
00001aa0  04 f0 d6 fd 00 a8 0e 22 91 a1 01 30 19 f4 f4 f6 0f 21 68 46 01 f0 56 fe 69 46 c8 73 68 46 04 f0  ......."...0.....!hF..V.iF.shF..
00001ac0  c7 fd 1f bd 1f b5 00 20 00 90 01 90 02 90 03 90 9e 20 69 46 08 70 00 a8 09 22 89 a1 01 30 19 f4  ....... ......... iF.p..."...0..
00001ae0  db f6 0f 21 68 46 01 f0 3d fe 69 46 c8 73 68 46 04 f0 ae fd 1f bd                                ...!hF..=.iF.shF......

00001af6    int32_t sub_1af6(int32_t arg1)

00001af6  {
00001af6      int32_t r3;
00001af6      int32_t var_c_1 = r3;
00001af6      int32_t r2;
00001af6      int32_t var_10_1 = r2;
00001af6      int32_t r1;
00001af6      int32_t var_14_1 = r1;
00001af6      int32_t result = arg1;
00001afa      result = 0;
00001afc      int32_t var_14 = 0;
00001afe      int32_t var_10 = 0;
00001b00      int32_t var_c = 0;
00001b02      int32_t r0 = sub_26c6();
00001b0c      (uint8_t)result = 0xa0;
00001b14      *(uint8_t*)((char*)result)[1] = sub_2cd6();
00001b1c      char r1_1;
00001b1c      
00001b1c      if (!sub_a242())
00001b22          r1_1 = 0;
00001b1c      else
00001b1e          r1_1 = 0x23;
00001b1e      
00001b26      *(uint8_t*)((char*)result)[2] = r1_1;
00001b2e      char r1_2;
00001b2e      
00001b2e      if (!sub_c2d2())
00001b34          r1_2 = 0;
00001b2e      else
00001b30          r1_2 = 0x21;  /* "17" */
00001b30      
00001b38      *(uint8_t*)((char*)result)[3] = r1_2;
00001b40      (uint8_t)var_14 = sub_26ac();
00001b44      *(uint8_t*)((char*)var_14)[1] = (char)(r0 >> 8);
00001b48      *(uint8_t*)((char*)var_14)[2] = (char)r0;
00001b4c      *(uint8_t*)((char*)var_14)[3] = (char)*(uint32_t*)0x2086b0;
00001b50      uint32_t r0_7 = (uint32_t)*(uint16_t*)0x208474;
00001b54      (uint8_t)var_10 = (char)(r0_7 >> 8);
00001b56      *(uint8_t*)((char*)var_10)[1] = (char)r0_7;
00001b62      *(uint8_t*)((char*)var_c)[3] = sub_3764(&result, 0xf);
00001b66      sub_6650(&result);
00001b6a      return result;
00001af6  }


00001b6c    uint32_t sub_1b6c()

00001b6c  {
00001b72      return (uint32_t)*(uint8_t*)0x2098b0;
00001b6c  }


00001b74    uint32_t sub_1b74()

00001b74  {
00001b7a      int32_t var_30 = 0;
00001b7c      int32_t var_2c = 0;
00001b7e      int32_t var_28 = 0;
00001b80      int32_t var_24 = 0;
00001b86      (uint8_t)var_30 = 0xa1;
00001b88      int32_t r0 = sub_b744();
00001b92      int32_t r3 = *(uint32_t*)0x2086a8;
00001b94      int32_t r2 = *(uint32_t*)0x2086ac;
00001b96      *(uint8_t*)((char*)var_30)[1] = 1;
00001b9a      *(uint8_t*)((char*)var_30)[2] = (char)(r0 >> 8);
00001b9c      *(uint8_t*)((char*)var_30)[3] = (char)r0;
00001ba0      (uint8_t)var_2c = (char)(r2 >> 8);
00001ba2      *(uint8_t*)((char*)var_2c)[1] = (char)r2;
00001ba6      *(uint8_t*)((char*)var_2c)[2] = (char)(r3 >> 8);
00001ba8      uint32_t r1_1 = (uint32_t)(uint16_t)*(uint32_t*)0x2086b0;
00001bac      *(uint8_t*)((char*)var_2c)[3] = (char)r3;
00001bae      (uint8_t)var_28 = (char)(r1_1 >> 8);
00001bb0      *(uint8_t*)((char*)var_28)[1] = (char)r1_1;
00001bb4      char r0_4;
00001bb4      
00001bb4      r0_4 = !r1_1 ? 0 : 1;
00001bb4      
00001bbc      *(uint8_t*)((char*)var_28)[2] = r0_4;
00001bc8      *(uint8_t*)((char*)var_24)[3] = sub_3764(&var_30, 0xf);
00001bcc      sub_6650(&var_30);
00001bd0      int32_t r0_8 = sub_b73c();
00001bd6      uint32_t r6_1 = (uint32_t)*(uint16_t*)0x20869e;
00001bda      uint32_t r2_1 = (uint32_t)*(uint16_t*)0x2086a0;
00001bdc      uint32_t r1_2 = (uint32_t)*(uint16_t*)0x2086a2;
00001be2      *(uint8_t*)((char*)var_30)[1] = 2;
00001be6      *(uint8_t*)((char*)var_30)[2] = (char)(r0_8 >> 8);
00001be8      *(uint8_t*)((char*)var_30)[3] = (char)r0_8;
00001bec      (uint8_t)var_2c = (char)(r2_1 >> 8);
00001bee      *(uint8_t*)((char*)var_2c)[1] = (char)r2_1;
00001bf2      *(uint8_t*)((char*)var_2c)[2] = (char)(r6_1 >> 8);
00001bf6      *(uint8_t*)((char*)var_2c)[3] = (char)r6_1;
00001bf8      (uint8_t)var_28 = (char)(r1_2 >> 8);
00001bfa      *(uint8_t*)((char*)var_28)[1] = (char)r1_2;
00001bfe      char r0_12;
00001bfe      
00001bfe      r0_12 = !r1_2 ? 0 : 1;
00001bfe      
00001c08      *(uint8_t*)((char*)var_28)[2] = r0_12;
00001c08      
00001c12      if ((uint32_t)*(uint8_t*)0x2098b0 == 4)
00001c16          *(uint8_t*)((char*)var_28)[2] = 0;
00001c16      
00001c22      *(uint8_t*)((char*)var_24)[3] = sub_3764(&var_30, 0xf);
00001c26      sub_6650(&var_30);
00001c2e      uint16_t var_1c = 0;
00001c30      uint16_t var_18 = 0;
00001c32      uint16_t var_20 = 0;
00001c3c      sub_a58c(&var_1c, &var_18, &var_20, 1);
00001c44      *(uint8_t*)((char*)var_30)[1] = 3;
00001c46      uint32_t r0_18 = (uint32_t)var_1c;
00001c4a      *(uint8_t*)((char*)var_30)[2] = (char)(r0_18 >> 8);
00001c4c      *(uint8_t*)((char*)var_30)[3] = (char)r0_18;
00001c4e      uint32_t r0_19 = (uint32_t)var_18;
00001c52      (uint8_t)var_2c = (char)(r0_19 >> 8);
00001c54      *(uint8_t*)((char*)var_2c)[1] = (char)r0_19;
00001c56      uint32_t r0_20 = (uint32_t)var_20;
00001c5a      *(uint8_t*)((char*)var_2c)[2] = (char)(r0_20 >> 8);
00001c5c      *(uint8_t*)((char*)var_2c)[3] = (char)r0_20;
00001c5e      (uint8_t)var_28 = 0;
00001c60      *(uint8_t*)((char*)var_28)[1] = 0;
00001c62      *(uint8_t*)((char*)var_28)[2] = 0;
00001c6e      *(uint8_t*)((char*)var_24)[3] = sub_3764(&var_30, 0xf);
00001c72      int32_t r2_6 = sub_6650(&var_30);
00001c76      uint32_t result = (uint32_t)*(uint8_t*)0x2098b0;
00001c76      
00001c7a      if (result != 4)
00001c7a      {
00001c80          uint32_t r1_4 = (uint32_t)*(uint8_t*)0x2086c2;
00001c88          uint32_t r1_5;
00001c88          
00001c88          if (r1_4 == 1 || r1_4 == 3)
00001c88          {
00001cb0              r1_5 = (uint32_t)*(uint16_t*)0x2086a2;
00001cb0              
00001cb4              if (r1_5)
00001cb4              {
00001cb6                  r1_5 = *(uint32_t*)0x2086b0;
00001cb6                  
00001cba                  if (!r1_5)
00001cba                      goto label_1cc8;
00001cba                  
00001cbc                  *(uint8_t*)0x2098b1 = 0;
00001cbe                  r1_5 = 3;
00001cc0                  *(uint8_t*)0x2086c2 = 3;
00001c9a              label_1c9a:
00001c9a                  sub_b540(0x40, r1_5, r2_6);
00001ca0                  *(uint8_t*)0x2098b0 = 0;
00001ca4                  sub_3730(0x2098c0);
00001ca8                  return sub_31aa();
00001cb4              }
00001cb4              
00001cc8          label_1cc8:
00001cc8              result = (uint32_t)(*(uint8_t*)0x2098b1 + 1);
00001cca              *(uint8_t*)0x2098b1 = (char)result;
00001cca              
00001cce              if (result >= 0x78)
00001cce              {
00001cd0              label_1cd0:
00001cd0                  *(uint8_t*)0x2098b1 = 0;
00001cd4                  sub_b540(0x40, r1_5, r2_6);
00001cda                  *(uint8_t*)0x2098b0 = 0;
00001cde                  return sub_3730(0x2098c0);
00001cce              }
00001c88          }
00001c88          else
00001c88          {
00001c8a              r1_5 = (uint32_t)*(uint16_t*)0x2086a2;
00001c8a              
00001c94              if (r1_5 && *(uint32_t*)0x2086b0)
00001c94              {
00001c96                  *(uint8_t*)0x2098b1 = 0;
00001c96                  goto label_1c9a;
00001c94              }
00001c94              
00001d14              result = (uint32_t)(*(uint8_t*)0x2098b1 + 1);
00001d16              *(uint8_t*)0x2098b1 = (char)result;
00001d16              
00001d1a              if (result >= 0x78)
00001d1a                  goto label_1cd0;
00001d1a              
00001d28              if (r1_5 && !*(uint32_t*)0x2086b0 && result >= 0x3c)
00001d28              {
00001d2c                  result = 0x3e8;
00001d2e                  *(uint32_t*)0x2086b0 = 0x3e8;
00001d28              }
00001c88          }
00001c7a      }
00001c7a      
00001cae      return result;
00001b74  }

00001ce4  int32_t data_1ce4 = 0x2098b2
00001ce8  int32_t data_1ce8 = 0x208660
00001cec  int32_t data_1cec = 0x82592d

00001cf0                                                  33 2e 30 30 2e 33 33 5f 32 35 30 31                              3.00.33_2501

00001cfc  void* data_1cfc = sub_3730

00001d00  52 59 30 32 5f 56 33 2e                                                                          RY02_V3.

00001d08  char const (* data_1d08)[0xa] = 0x30
00001d0c  int32_t data_1d0c = 0x208474

00001d32    uint32_t sub_1d32(void* arg1, int32_t arg2, int32_t arg3)

00001d32  {
00001d3a      int32_t var_28 = 0;
00001d3c      int32_t var_24 = 0;
00001d3e      int32_t var_20 = 0;
00001d40      int32_t var_1c = 0;
00001d42      uint32_t r0 = (uint32_t)*(uint8_t*)((char*)arg1 + 1);
00001d42      
00001d4a      if (r0 == 1)
00001d4a      {
00001d86          sub_317e();
00001d8a          sub_bbe0();
00001d8e          sub_91fc();
00001d92          j_sub_7fd8();
00001d96          sub_1828();
00001d9e          *(uint32_t*)0x2086a8 = 0;
00001da0          *(uint32_t*)0x2086ac = 0;
00001da2          *(uint32_t*)0x2086b0 = 0;
00001da4          *(uint16_t*)0x20869e = 0;
00001da6          *(uint16_t*)0x2086a0 = 0;
00001da8          *(uint16_t*)0x2086a2 = 0;
00001daa          sub_e9b4();
00001dae          int32_t r1;
00001dae          int32_t r2;
00001dae          r1 = sub_31aa();
00001db4          sub_b55a(0x40, r1, r2);
00001dba          *(uint8_t*)0x2098b0 = *(uint8_t*)((char*)arg1 + 2);
00001dc2          *(uint8_t*)0x2086c2 = 1;
00001e18          sub_3704(0x2098c0, 0x825b25, 0x3e8, 1);
00001e1e          return sub_1b74();
00001d4a      }
00001d4a      
00001d4e      int32_t r0_6;
00001d4e      
00001d4e      if (r0 == 2)
00001dc6          r0_6 = 0x40;
00001d4e      else
00001d4e      {
00001d52          if (r0 == 3)
00001e1e              return sub_1b74();
00001e1e          
00001d56          arg2 = 0x800;
00001d5a          char r0_7;
00001d5a          
00001d5a          if (r0 == 4)
00001d5a          {
00001dcc              sub_b55a(0x800, 0x800, arg3);
00001dd0              r0_7 = 4;
00001e0a          label_1e0a:
00001e0a              *(uint8_t*)0x2098b0 = r0_7;
00001e18              sub_3704(0x2098c0, 0x825b25, 0x3e8, 1);
00001e1e              return sub_1b74();
00001d5a          }
00001d5a          
00001d5e          if (r0 != 5)
00001d5e          {
00001d62              if (r0 != 6)
00001d62              {
00001d64                  *(uint8_t*)0x2098b0 = 0;
00001d6a                  (uint8_t)var_28 = 0xa1;
00001d6e                  *(uint8_t*)((char*)var_28)[1] = 0xff;
00001d7a                  *(uint8_t*)((char*)var_1c)[3] = sub_3764(&var_28, 0xf);
00001d7e                  return sub_6650(&var_28);
00001d62              }
00001d62              
00001dea              *(uint32_t*)0x2086a8 = 0;
00001dec              *(uint32_t*)0x2086ac = 0;
00001dee              *(uint32_t*)0x2086b0 = 0;
00001df0              *(uint16_t*)0x20869e = 0;
00001df2              *(uint16_t*)0x2086a0 = 0;
00001df4              *(uint16_t*)0x2086a2 = 0;
00001df6              sub_b724();
00001dfa              sub_e9b4();
00001dfe              int32_t r1_1;
00001dfe              int32_t r2_1;
00001dfe              r1_1 = sub_31aa();
00001e04              sub_b55a(0x40, r1_1, r2_1);
00001e08              r0_7 = *(uint8_t*)((char*)arg1 + 2);
00001d62              goto label_1e0a;
00001d5e          }
00001d5e          
00001dd4          r0_6 = 0x800;
00001d4e      }
00001d4e      
00001dd6      sub_b540(r0_6, arg2, arg3);
00001ddc      *(uint8_t*)0x2098b0 = 0;
00001de0      return sub_3730(0x2098c0);
00001d32  }


00001e24    int32_t sub_1e24() __pure

00001e24  {
00001e24      return;
00001e24  }


00001e26    int32_t sub_1e26()

00001e26  {
00001e34      if (!(uint32_t)*(uint8_t*)0x2098b4 && (uint32_t)*(uint8_t*)0x2098b2 == 1)
00001e38          *(uint8_t*)0x2098b2 = 2;
00001e38      
00001e3a      return 0x2098b2;
00001e26  }


00001e3c    int32_t sub_1e3c()

00001e3c  {
00001e4a      sub_3704(0x2098b8, 0x825dd5, 0x7d0, 0);  /* "17 10:58:10 2022" */
00001e4e      sub_18f0();
00001e52      return 0x2098b2;
00001e3c  }


00001e54    int32_t sub_1e54()

00001e54  {
00001e5e      return sub_3730(0x2098bc);
00001e54  }


00001e60    uint32_t sub_1e60()

00001e60  {
00001e66      return (uint32_t)*(uint8_t*)0x208664;
00001e60  }

00001e68  int32_t data_1e68 = 0x2098b0
00001e6c  int32_t data_1e6c = 0x2086a0
00001e70  int32_t data_1e70 = 0x825b25
00001e74  int32_t data_1e74 = 0x825dd5

00001e78    int32_t sub_1e78(int32_t arg1)

00001e78  {
00001e86      if (sub_12b2a(arg1, 0x190))
00001e86      {
00001e8a          int32_t r1_2;
00001e8a          
00001e8a          if (!(arg1 << 0x1e))  /* "50117" */
00001e90              r1_2 = sub_12b2a(arg1, 0x64);
00001e90          
00001e96          if (arg1 << 0x1e || !r1_2)  /* "50117" */
00001e9e              return 0;
00001e86      }
00001e86      
00001e9a      return 1;
00001e78  }


00001ea0    int32_t sub_1ea0(int32_t arg1, int32_t arg2)

00001ea0  {
00001ea4      if (arg2 == 2)
00001ea4      {
00001ebc          if (!sub_1e78(arg1 + 0x7d0))  /* "17 10:58:10 2022" */
00001ec4              return 0x1c;  /* "_250117" */
00001ec4          
00001ec0          return 0x1d;  /* "250117" */
00001ea4      }
00001ea4      
00001ea8      if (arg2 > 7)
00001ea8      {
00001ec8          if (arg2 << 0x1f)  /* "0117" */
00001ecc              return 0x1e;  /* "50117" */
00001ea8      }
00001ea8      else if (!(arg2 << 0x1f))  /* "0117" */
00001ecc          return 0x1e;  /* "50117" */
00001ecc      
00001ed0      return 0x1f;  /* "0117" */
00001ea0  }


00001ed2    uint32_t sub_1ed2(char* arg1)

00001ed2  {
00001ed6      uint32_t i = 0;
00001ed8      uint32_t r0 = (uint32_t)*(uint8_t*)arg1;
00001eda      uint32_t i_1 = 1;
00001edc      int16_t r5 = 0;
00001edc      
00001ee0      if (r0 > 0x63)
00001ee2          r0 = 0x63;
00001ee2      
00001ee4      *(uint8_t*)arg1 = (char)r0;
00001ee6      uint32_t r1 = (uint32_t)arg1[1];
00001ee6      
00001eea      if (r1 > 0xc)
00001eec          r1 = 0xc;
00001eec      
00001eee      arg1[1] = (char)r1;
00001ef0      int32_t r0_1 = sub_1ea0(r0, r1);
00001ef6      uint32_t r0_2 = (uint32_t)arg1[2];
00001ef6      
00001efa      if (r0_1 < r0_2)
00001f00          r0_2 = sub_1ea0((uint32_t)*(uint8_t*)arg1, (uint32_t)arg1[1]);
00001f00      
00001f04      arg1[2] = (char)r0_2;
00001f04      
00001f2c      for (; (uint32_t)*(uint8_t*)arg1 > i; i = (uint32_t)((uint8_t)i + 1))
00001f2c      {
00001f14          int16_t r0_6;
00001f14          
00001f14          if (!sub_1e78(i + 0x7d0))  /* "17 10:58:10 2022" */
00001f1e              r0_6 = 0x16d;
00001f14          else
00001f18              r0_6 = 0x16e;
00001f18          
00001f24          r5 += r0_6;
00001f2c      }
00001f2c      
00001f44      for (; (uint32_t)arg1[1] > i_1; i_1 = (uint32_t)((uint8_t)i_1 + 1))
00001f3c          r5 += sub_1ea0((uint32_t)*(uint8_t*)arg1, i_1);
00001f3c      
00001f4c      return (uint32_t)((uint16_t)arg1[2] + r5);
00001ed2  }


00001f4e    int32_t sub_1f4e(int32_t arg1, int32_t arg2)

00001f4e  {
00001f5a      int32_t r0_1;
00001f5a      
00001f5a      if (!sub_1e78(arg1))
00001f62          r0_1 = 0x83dae0;
00001f5a      else
00001f5c          r0_1 = 0x83db10;
00001f5c      
00001f6a      return *(uint32_t*)((arg2 << 2) + r0_1 - 4);
00001f4e  }


00001f6c    int32_t sub_1f6c(char arg1, char arg2, char arg3, int32_t arg4)

00001f6c  {
00001f6c      int32_t var_8 = arg4;
00001f70      (uint8_t)var_8 = arg1;
00001f72      *(uint8_t*)((char*)var_8)[1] = arg2;
00001f74      *(uint8_t*)((char*)var_8)[2] = arg3;
00001f86      return sub_12b2a(sub_1ed2(&var_8) + 4, 7) + 1;
00001f6c  }


00001f88    int32_t sub_1f88(char* arg1, char* arg2)

00001f88  {
00001f9c      return (int32_t)(sub_1ed2(arg1) - sub_1ed2(arg2));
00001f88  }


00001f9e    int32_t sub_1f9e(int32_t arg1, int32_t arg2)

00001f9e  {
00001f9e      int32_t var_18 = arg2;
00001fa4      int32_t i = arg2;
00001fa6      uint32_t r5 = 0x7d0;  /* "17 10:58:10 2022" */
00001fa6      
00001fb8      while (sub_223e(r5) <= i)
00001fb8      {
00001fb0          i -= sub_223e(r5);
00001fb4          r5 = (uint32_t)((uint16_t)r5 + 1);
00001fb8      }
00001fb8      
00001fc0      uint32_t r6 = 1;
00001fc0      
00001fd6      while (sub_1f4e(r5, r6) <= i)
00001fd6      {
00001fcc          i -= sub_1f4e(r5, r6);
00001fd0          r6 = (uint32_t)((uint8_t)r6 + 1);
00001fd6      }
00001fd6      
00001fe2      char r0_9;
00001fe2      int32_t r1_2;
00001fe2      r0_9 = sub_12b2a(i, &data_15180);
00001fee      char r0_11;
00001fee      int32_t r1_3;
00001fee      r0_11 = sub_12b2a(r1_2, 0xe10);
00001ff8      char r0_13;
00001ff8      char r1_4;
00001ff8      r0_13 = sub_12b2a(r1_3, 0x3c);
00002004      char var_28 = (uint8_t)r5 + 0x30;  /* "RY02_V3.0" */
00002006      char var_27 = (char)r6;
00002008      char var_26 = r0_9 + 1;
0000200a      char var_25 = r0_11;
0000200c      char var_24 = r0_13;
0000200e      char var_23 = r1_4;
0000201c      return 0xff81b898(arg1, &var_28, 6);
00001f9e  }


0000201e    int32_t sub_201e(char* arg1, int32_t arg2, int32_t arg3)

0000201e  {
0000201e      int32_t result = arg3;
00002030      sub_1f9e(&result, &data_15180 * (sub_1ed2(arg1) - arg2 - 1));
00002036      return result;
0000201e  }


00002038    int32_t sub_2038(char* arg1, char* arg2)

00002038  {
0000204a      return sub_2228(arg1) - sub_2228(arg2);
00002038  }


0000204c    int32_t sub_204c(int32_t arg1, char* arg2, char* arg3)

0000204c  {
0000204c      int32_t r3;
0000204c      int32_t var_18_1 = r3;
0000205e      int32_t r0_3 = &data_15180 * (sub_1ed2(arg2) - 1);
0000207c      int32_t i = 0xe10 * arg1 + 0xe10 * (uint32_t)arg2[3] + 0x3c * (uint32_t)arg2[4]
0000207c          + (uint32_t)arg2[5] + r0_3;
00002080      uint32_t r5_2 = 0x7d0;  /* "17 10:58:10 2022" */
00002080      
00002092      while (sub_223e(r5_2) <= i)
00002092      {
0000208a          i -= sub_223e(r5_2);
0000208e          r5_2 = (uint32_t)((uint16_t)r5_2 + 1);
00002092      }
00002092      
0000209a      uint32_t r7 = 1;
0000209a      
000020b0      while (sub_1f4e(r5_2, r7) <= i)
000020b0      {
000020a6          i -= sub_1f4e(r5_2, r7);
000020aa          r7 = (uint32_t)((uint8_t)r7 + 1);
000020b0      }
000020b0      
000020bc      char r0_15;
000020bc      int32_t r1_5;
000020bc      r0_15 = sub_12b2a(i, &data_15180);
000020c8      int32_t r0_17;
000020c8      int32_t r1_6;
000020c8      r0_17 = sub_12b2a(r1_5, 0xe10);
000020d2      char result;
000020d2      char r1_7;
000020d2      result = sub_12b2a(r1_6, 0x3c);
000020dc      *(uint8_t*)arg3 = (uint8_t)r5_2 + 0x30;  /* "RY02_V3.0" */
000020de      arg3[1] = (char)r7;
000020e0      arg3[2] = r0_15 + 1;
000020e4      arg3[3] = (uint8_t)r0_17;
000020e6      arg3[4] = result;
000020e8      arg3[5] = r1_7;
000020ea      return result;
0000204c  }


000020ec    int32_t sub_20ec(char* arg1)

000020ec  {
000020f8      uint32_t r0_3;
000020f8      
000020f8      if (!sub_1ed2(arg1))
0000211c          r0_3 = sub_1ed2(arg1);
000020f8      else
000020fe          r0_3 = sub_1ed2(arg1) - 1;
000020fe      
0000211a      return 0xe10 * (uint32_t)arg1[3] + 0x3c * (uint32_t)arg1[4] + (uint32_t)arg1[5] +
0000211a          &data_15180 * r0_3;
000020ec  }


00002122    int32_t sub_2122() __pure

00002122  {
00002122      return;
00002122  }


00002124    int32_t sub_2124(int32_t arg1)

00002124  {
00002134      return sub_1f9e(arg1, sub_183e());
00002124  }


00002136    int32_t sub_2136(char* arg1)

00002136  {
0000214a      char r0_2;
0000214a      int32_t r1_1;
0000214a      r0_2 = sub_12b2a(sub_12b2a(sub_183e(), &data_15180), 0xe10);
0000214e      *(uint8_t*)arg1 = r0_2;
00002154      char result;
00002154      char r1_2;
00002154      result = sub_12b2a(r1_1, 0x3c);
00002158      arg1[1] = result;
0000215a      arg1[2] = r1_2;
0000215c      return result;
00002136  }


0000215e    uint32_t sub_215e(char* arg1)

0000215e  {
00002168      return (uint32_t)(sub_1ed2(arg1) - 1);
0000215e  }


0000216a    uint32_t sub_216a()

0000216a  {
00002178      return (uint32_t)sub_12b2a(sub_183e(), &data_15180);
0000216a  }


0000217a    int32_t sub_217a()

0000217a  {
00002190      return sub_12b2a(sub_12b2a(sub_183e(), 0x3c), 0x5a0);
0000217a  }


00002192    int32_t sub_2192()

00002192  {
000021a8      return sub_12b2a(sub_12b2a(sub_183e(), &data_15180) + 5, 7) + 1;
00002192  }


000021aa    int32_t sub_21aa(int32_t arg1)

000021aa  {
000021bc      return sub_12b2a(sub_12b2a(arg1, &data_15180) + 5, 7) + 1;
000021aa  }


000021be    int32_t sub_21be(int32_t arg1, char* arg2)

000021be  {
000021c6      int32_t i = &data_15180 * arg1;
000021ca      uint32_t r5 = 0x7d0;  /* "17 10:58:10 2022" */
000021ca      
000021dc      while (sub_223e(r5) <= i)
000021dc      {
000021d4          i -= sub_223e(r5);
000021d8          r5 = (uint32_t)((uint16_t)r5 + 1);
000021dc      }
000021dc      
000021e4      uint32_t r6 = 1;
000021e4      
000021fa      while (sub_1f4e(r5, r6) <= i)
000021fa      {
000021f0          i -= sub_1f4e(r5, r6);
000021f4          r6 = (uint32_t)((uint8_t)r6 + 1);
000021fa      }
000021fa      
00002206      char r0_9 = sub_12b2a(i, &data_15180);
00002210      *(uint8_t*)arg2 = (uint8_t)r5 + 0x30;  /* "RY02_V3.0" */
00002212      arg2[1] = (char)r6;
00002216      arg2[2] = r0_9 + 1;
00002218      return r0_9 + 1;
000021be  }


0000221a    void sub_221a(int32_t arg1) __pure

00002226  {
00002226      return;
00002226  }


00002228    int32_t sub_2228(char* arg1)

00002228  {
0000223c      return 0xe10 * (uint32_t)*(uint8_t*)arg1 + 0x3c * (uint32_t)arg1[1]
0000223c          + (uint32_t)arg1[2];
00002228  }


0000223e    int32_t sub_223e(int32_t arg1)

0000223e  {
00002246      if (!sub_1e78(arg1))
0000224e          return 0x1e13380;
0000224e      
0000224a      return 0x1e28500;
0000223e  }

00002250  int32_t data_2250 = 0x83db10
00002254  void* data_2254 = data_15180
00002258  int32_t data_2258 = 0x1e28500
0000225c  int32_t data_225c = 0x1e13380

00002260    int32_t sub_2260()

00002260  {
00002272      sub_f6bc(0x20, 1, 1, 1, 0, 0);  /* "117" */
0000227e      (*(uint32_t*)0x20011c)(0x3e8);
0000228e      sub_f6bc(0x20, 1, 1, 0, 0, 1);  /* "117" */
00002296      sub_f69e(0x20, 0x5a);  /* "117" */
000022a2      sub_fc34(0xc000100, 0x21000000, 1);
000022a8      int32_t var_28;
000022a8      sub_10464(&var_28);
000022b2      var_28 = sub_104aa(0x20);  /* "117" */
000022b6      char var_24 = 0;
000022b8      char var_23 = 1;
000022ba      char var_22 = 1;
000022bc      char var_21 = 0;
000022c0      sub_103ac(&var_28);
000022c8      char var_18 = 0x1d;  /* "250117" */
000022cc      int32_t var_14 = 3;
000022d0      char var_10 = 1;
000022d4      sub_f5a8(&var_18);
000022e0      sub_10498(sub_104aa(0x20), 1);  /* "117" */
000022ec      sub_1047e(sub_104aa(0x20), 1);  /* "117" */
000022f6      sub_10490(sub_104aa(0x20));  /* "117" */
00002302      sub_10498(sub_104aa(0x20), 0);  /* "117" */
00002312      return sub_f790(0x20, 1, 0);  /* "117" */
00002260  }


00002314    int32_t sub_2314()

00002314  {
00002314      int32_t r3;
00002314      int32_t var_c = r3;
00002314      int32_t r2;
00002314      int32_t var_10 = r2;
0000231e      sub_10498(sub_104aa(0x20), 1);  /* "117" */
0000232a      sub_1047e(sub_104aa(0x20), 0);  /* "117" */
00002334      sub_10490(sub_104aa(0x20));  /* "117" */
00002346      sub_f6bc(0x20, 1, 1, 1, 0, 0);  /* "117" */
00002350      (*(uint32_t*)0x200120)(1);
00002360      sub_f6bc(0x20, 1, 1, 0, 0, 1);  /* "117" */
00002368      return sub_2260();
00002314  }


0000236a    int32_t sub_236a()

0000236a  {
0000236a      int32_t r3;
0000236a      int32_t var_c = r3;
0000236a      int32_t r2;
0000236a      int32_t var_10 = r2;
0000237e      return sub_f6bc(0x20, 1, 1, 1, 0, 0);  /* "117" */
0000236a  }


00002380    int32_t sub_2380()

00002380  {
00002380      int32_t r3;
00002380      int32_t var_c = r3;
00002380      int32_t r2;
00002380      int32_t var_10 = r2;
00002396      return sub_f6bc(0x20, 0, 1, 0, 0, 1);  /* "117" */
00002380  }


00002398    int32_t sub_2398()

00002398  {
00002398      int32_t r3;
00002398      int32_t var_c = r3;
00002398      int32_t r2;
00002398      int32_t var_10 = r2;
000023ac      return sub_f6bc(0x20, 1, 1, 0, 0, 1);  /* "117" */
00002398  }


000023ae    uint32_t sub_23ae()

000023ae  {
000023b2      return (uint32_t)*(uint8_t*)0x208445;
000023ae  }


000023b4    int32_t sub_23b4()

000023b4  {
000023be      if (j_sub_f7f6(0x20) != 1)  /* "117" */
000023c2          return 0;
000023c2      
000023c4      j_sub_2dd8();
000023ca      return 1;
000023b4  }


000023cc    int32_t sub_23cc()

000023cc  {
000023d6      sub_10498(sub_104aa(0x20), 1);  /* "117" */
000023e2      sub_1047e(sub_104aa(0x20), 0);  /* "117" */
000023e6      j_sub_2dd8();
000023f0      sub_10490(sub_104aa(0x20));  /* "117" */
000023fc      sub_10498(sub_104aa(0x20), 0);  /* "117" */
00002402      int32_t result = sub_104aa(0x20);  /* "117" */
00002408      sub_1047e(result, 1);
0000240c      return result;
000023cc  }


0000240e    uint32_t sub_240e(int32_t arg1, int32_t arg2, int32_t arg3, uint32_t arg4)

0000240e  {
0000240e      int32_t lr;
0000240e      int32_t var_4 = lr;
0000240e      int32_t r5;
0000240e      int32_t var_8 = r5;
0000240e      int32_t r4;
0000240e      int32_t var_c = r4;
0000240e      uint32_t result_2 = arg4;
0000240e      int32_t* sp = &result_2;
00002414      sub_107ea(3, 1);
00002420      sub_106a6(0x40010000, 2, 1);
0000242e      int32_t i;
0000242e      
0000242e      do
00002428          i = sub_10818(0x40010000, 0x10);  /* "RY02_3.00.33_250117" */
0000242e       while (i != 1);
00002434      uint32_t r0 = sub_10746(0x40010000, 0);
00002440      int32_t r3 = sub_106a6(0x40010000, 2, 0);
00002448      sub_10828(0x40010000, 0x10);  /* "RY02_3.00.33_250117" */
00002454      uint32_t result;
00002454      
00002454      if (!(uint32_t)*(uint8_t*)0x2098c4)
00002454      {
00002476          int32_t r0_6;
00002476          int32_t r1_1;
00002476          r0_6 = j_sub_134d8(r0);
0000247e          int32_t r0_7;
0000247e          int32_t r1_2;
0000247e          r0_7 = sub_13530(r0_6, r1_1, 0xbc01a36e, 0x3fd01205);
00002486          int32_t r0_8;
00002486          int32_t r1_3;
00002486          r0_8 = sub_12f96(r0_7, r1_2, 0xf837b4a2, 0x40405cc2);
0000249a          uint32_t result_1 = sub_13984(sub_19964(
0000249a              j_sub_139b4((uint32_t)sub_13490(r0_8, r1_3)), 0x409b406a, 0x409b406a));
0000249e          result = result_1;
000024a0          result_2 = result_1;
000024aa          0xff7e1af8(0x23103002, 0x880049c, 2, r0, result_2);
00002454      }
00002454      else
00002454      {
0000245a          (uint8_t)result_2 = 0;
00002462          sp = &var_8;
00002470          result = sub_13984(sub_19964(
00002470              sub_126f8(2, r0, &result_2, 0x409b406a, r3, result_2), 0x409b406a, 
00002470              0x409b406a));
00002454      }
00002454      
000024b0      *(uint32_t*)sp;
000024b0      sp[1];
000024b0      sp[2];
000024b0      return result;
0000240e  }


000024b2    uint32_t sub_24b2()

000024b2  {
000024b4      uint32_t r6 = 0;
000024b8      uint32_t r5 = 0xffffffff;
000024ba      int32_t r7 = 0;
000024c0      int32_t var_40[0xb];
000024c0      uint32_t r0_1;
000024c0      int32_t (* r1)[0xb];
000024c0      int32_t r2;
000024c0      uint32_t r3;
000024c0      r0_1 = 0xff81b968(&var_40, 0x28);
000024c0      
000024e4      for (uint32_t i = 0; i < 0xa; i = (uint32_t)((uint8_t)i + 1))
000024e4      {
000024c6          r0_1 = sub_240e(r0_1, r1, r2, r3);
000024ca          r2 = i << 2;
000024cc          r1 = &var_40;
000024ce          *(uint32_t*)(&var_40 + r2) = r0_1;
000024ce          
000024d2          if (r0_1 > r6)
000024d4              r6 = r0_1;
000024d4          
000024d8          if (r0_1 < r5)
000024da              r5 = r0_1;
000024da          
000024de          r7 += r0_1;
000024e4      }
000024e4      
000024ee      return (r7 - (r6 + r5)) >> 3;
000024b2  }


000024f0    uint32_t sub_24f0(int32_t arg1)

000024f0  {
000024fc      int16_t var_28[0xe];
000024fc      0xff7dc2f8(&var_28, 0x83db68, 0x18);  /* "0.33_250117" */
000024fc      
00002506      if ((uint32_t)var_28[0] <= arg1)
00002508          return 0x64;
00002508      
00002510      int32_t r4_1 = 1;
00002510      
0000251a      while ((uint32_t)var_28[r4_1] > arg1)
0000251a      {
0000254e          r4_1 += 1;
0000254e          
00002552          if (r4_1 >= 0xb)
00002554              return 0;
0000251a      }
0000251a      
00002524      uint32_t r0_3 = (uint32_t)var_28[r4_1];
0000253a      int32_t r0_7 =
0000253a          sub_12b3e(0xa * (arg1 - r0_3), (uint32_t)*(uint16_t*)(&var_28[r4_1] - 2) - r0_3)
0000253a          + 0x64 - 0xa * r4_1;
0000253a      
0000253e      if (r0_7 > 0x64)
00002540          r0_7 = 0x64;
0000253e      else if (r0_7 < 0)
00002548          r0_7 = 0;
00002548      
0000254a      return (uint32_t)(uint8_t)r0_7;
000024f0  }


00002558    int32_t sub_2558()

00002558  {
0000255a      int16_t r0 = sub_24b2();
00002562      *(uint16_t*)0x2098ce = r0;
00002566      uint32_t r0_2 = sub_24f0((uint32_t)r0);
0000256a      uint32_t r4 = r0_2;
0000256a      
0000256e      if (r0_2 > 0x64)
00002570          r4 = 0x64;
00002570      
0000257e      if (sub_2e56() != 3 && (uint32_t)*(uint8_t*)0x2098d8 >= 0x64)
00002582          *(uint8_t*)0x2098d8 = 0x63;
00002582      
0000258e      if ((uint32_t)*(uint8_t*)0x2087b8 - r4 + 0x14 > 0x28)  /* "_3.00.33_250117" */
0000258e      {
00002590          uint32_t r0_8 = sub_2d88();
00002590          
00002596          if (!r0_8)
00002596          {
0000259e              *(uint8_t*)0x2098d8 = (char)r4;
000025a0              *(uint8_t*)0x2087b8 = (char)r4;
000025a2              return r0_8;
00002596          }
0000258e      }
0000258e      
00002598      char r0_9 = *(uint8_t*)0x2087b8;
0000259a      *(uint8_t*)0x2098d8 = r0_9;
0000259c      return r0_9;
00002558  }


000025a4    int32_t sub_25a4()

000025a4  {
000025a6      int16_t r0 = sub_24b2();
000025ae      *(uint16_t*)0x2098ce = r0;
000025b2      uint32_t r0_2 = sub_24f0((uint32_t)r0);
000025b2      
000025bc      if (!((uint32_t)*(uint8_t*)0x2098cc << 0x1f))  /* "0117" */
000025bc      {
0000261e          uint32_t r1_5 = (uint32_t)*(uint8_t*)0x2098d8;
0000261e          
00002622          if (r1_5 > r0_2)
00002622          {
00002626              if (r1_5)
00002626              {
00002628                  r1_5 -= 1;
0000262a                  *(uint8_t*)0x2098d8 = (char)r1_5;
00002626              }
00002626              
0000262c              *(uint8_t*)0x2087b8 = (char)r1_5;
00002630              sub_529c(0xc);
00002630              
00002638              if (!(uint32_t)*(uint8_t*)0x2098d8 && sub_1b6c() != 4)
00002642                  sub_14ba();
00002622          }
00002622          else if (r1_5 < 0x1e && r0_2 > 0x3c)  /* "50117" */
0000264e          {
00002652              *(uint8_t*)0x2098d8 = (uint8_t)r1_5 + 1;
00002654              *(uint8_t*)0x2087b8 = (uint8_t)r1_5 + 1;
00002658              sub_529c(0xc);
0000264e          }
000025bc      }
000025bc      else
000025bc      {
000025be          uint32_t r4_1 = (uint32_t)*(uint8_t*)0x2098d8;
000025c2          uint32_t r0_10;
000025c2          
000025c2          if (r4_1 < r0_2)
000025c2          {
000025c8              uint32_t r0_4;
000025c8              int32_t r1_2;
000025c8              r0_4 = j_sub_134d8((uint32_t)*(uint16_t*)0x2098c6);
000025d0              int32_t r0_5;
000025d0              int32_t r1_3;
000025d0              r0_5 = sub_12f7c(r0_4, r1_2, 0x7eb50295, 0x409940a5);
000025d8              uint32_t r0_7 = (uint32_t)sub_13490(r0_5, r1_3);
000025de              *(uint16_t*)0x2098c6 = (int16_t)r0_7;
000025de              
000025e2              if (r0_7 >= 0x3e8)
000025e2              {
000025e4                  char r0_8;
000025e4                  int16_t r1_4;
000025e4                  r0_8 = sub_12b2a(r0_7, 0x3e8);
000025ea                  r0_10 = (uint32_t)(r0_8 + (uint8_t)r4_1);
000025ec                  *(uint8_t*)0x2098d8 = (char)r0_10;
000025ee                  *(uint16_t*)0x2098c6 = r1_4;
00002616              label_2616:
00002616                  
00002616                  if (r0_10 > 0x64)
00002616                  {
00002618                      r0_10 = 0x64;
0000261a                      *(uint8_t*)0x2098d8 = 0x64;
00002616                  }
00002616                  
000025f2                  *(uint8_t*)0x2087b8 = (char)r0_10;
000025f6                  *(uint8_t*)0x2098da = 0;
00002658                  sub_529c(0xc);
000025e2              }
000025c2          }
000025c2          else if (r4_1 != 0x64 && r4_1 > 0x32)  /* "02_V3.0" */
00002600          {
00002606              uint32_t r0_13 = (uint32_t)(*(uint8_t*)0x2098da + 1);
00002608              *(uint8_t*)0x2098da = (char)r0_13;
00002608              
0000260c              if (r0_13 >= 5)
0000260c              {
00002610                  r0_10 = (uint32_t)((uint8_t)r4_1 + 1);
00002612                  *(uint8_t*)0x2098d8 = (char)r0_10;
00002612                  goto label_2616;
0000260c              }
00002600          }
000025bc      }
000025bc      
00002666      return sub_116c();
000025a4  }

00002668  int32_t data_2668 = 0x20011c
0000266c  int32_t data_266c = 0xc000100
00002670  int32_t data_2670 = 0x200120
00002674  int32_t data_2674 = 0x208445
00002678  int32_t data_2678 = 0x40010000
0000267c  int32_t data_267c = 0x2098c4
00002680  int32_t data_2680 = 0x409b406a
00002684  int32_t data_2684 = -0x43fe5c92
00002688  int32_t data_2688 = 0x3fd01205
0000268c  int32_t data_268c = -0x7c84b5e
00002690  int32_t data_2690 = 0x40405cc2
00002694  int32_t data_2694 = 0x880049c
00002698  int32_t data_2698 = 0x23103002
0000269c  int32_t data_269c = 0x83db68
000026a0  int32_t data_26a0 = 0x2087ac
000026a4  int32_t data_26a4 = 0x7eb50295
000026a8  int32_t data_26a8 = 0x409940a5

000026ac    uint32_t sub_26ac()

000026ac  {
000026ae      uint32_t result = (uint32_t)*(uint8_t*)0x2098d8;
000026ae      
000026b2      if (result <= 0x64)
000026b6          return result;
000026b6      
000026b4      return 0x64;
000026ac  }


000026b8    int32_t sub_26b8(char arg1)

000026b8  {
000026bc      *(uint8_t*)0x2098d8 = arg1;
000026c4      return sub_529c(0xc);
000026b8  }


000026c6    int32_t sub_26c6()

000026c6  {
000026cc      return (int32_t)*(uint16_t*)0x2098ce;
000026c6  }


000026ce    int32_t sub_26ce()

000026ce  {
000026e0      sub_f6bc(0x17, 1, 1, 2, 0, 0);  /* "00.33_250117" */
000026e8      sub_f69e(0x17, 0);  /* "00.33_250117" */
000026f0      sub_10530();
000026fc      sub_fc34(0xc000001, 0x61000000, 1);
00002702      int32_t var_78;
00002702      sub_10654(&var_78);
00002702      
00002718      for (uint32_t i = 0; i < 0x10; )  /* "RY02_3.00.33_250117" */
00002718      {
0000270e          void* r3_2 = (i << 1) + &var_78;
00002712          i = (uint32_t)((uint8_t)i + 1);
00002714          *(uint16_t*)((char*)r3_2 + 0x1c) = 3;  /* "_250117" */
00002718      }
00002718      
00002720      int16_t var_3c = 0xffff;
00002724      var_78 = 0xe;
0000272a      sub_10540(0x40010000, &var_78);
00002734      sub_10736(0x40010000, 0x10, 1);  /* "RY02_3.00.33_250117" */
00002740      *(uint8_t*)0x2098c4 = sub_12530();
0000274c      return 0xff81b964(0x2098cc, 0x10);  /* "RY02_3.00.33_250117" */
000026ce  }


0000274e    int32_t sub_274e()

0000274e  {
00002760      return sub_3704(0x2098c8, 0x826509, 0x190, 0);
0000274e  }


00002762    int32_t sub_2762()

00002762  {
00002774      sub_f6bc(0x17, 1, 1, 2, 0, 0);  /* "00.33_250117" */
0000277c      sub_f69e(0x17, 0);  /* "00.33_250117" */
00002784      sub_10530();
00002790      sub_fc34(0xc000001, 0x61000000, 1);
00002796      int32_t var_78;
00002796      sub_10654(&var_78);
00002796      
000027ac      for (uint32_t i = 0; i < 0x10; )  /* "RY02_3.00.33_250117" */
000027ac      {
000027a2          void* r3_2 = (i << 1) + &var_78;
000027a6          i = (uint32_t)((uint8_t)i + 1);
000027a8          *(uint16_t*)((char*)r3_2 + 0x1c) = 3;  /* "_250117" */
000027ac      }
000027ac      
000027b4      int16_t var_3c = 0xffff;
000027b8      var_78 = 0xe;
000027be      sub_10540(0x40010000, &var_78);
000027c8      sub_10736(0x40010000, 0x10, 1);  /* "RY02_3.00.33_250117" */
000027cc      return sub_12530();
00002762  }


000027d2    int32_t sub_27d2()

000027d2  {
000027d2      int32_t r3;
000027d2      int32_t var_c = r3;
000027d2      int32_t r2;
000027d2      int32_t var_10 = r2;
000027e6      return sub_f6bc(0x17, 0, 0, 2, 0, 0);  /* "00.33_250117" */
000027d2  }


000027e8    int32_t sub_27e8()

000027e8  {
000027e8      int32_t r3;
000027e8      int32_t var_c = r3;
000027e8      int32_t r2;
000027e8      int32_t var_10 = r2;
000027fc      return sub_f6bc(0x17, 1, 0, 2, 0, 0);  /* "00.33_250117" */
000027e8  }


000027fe    uint32_t sub_27fe()

000027fe  {
00002802      return (uint32_t)*(uint8_t*)0x208446;
000027fe  }


00002804    int32_t sub_2804()

00002804  {
00002806      sub_26ce();
0000280a      sub_2260();
00002810      sub_7760(0x83db40);
0000281c      return sub_7760(0x83db54);
00002804  }


0000281e    uint32_t sub_281e()

0000281e  {
00002826      return (uint32_t)*(uint8_t*)0x2098cc << 0x1f >> 0x1f;  /* "0117" */
0000281e  }


00002828    int32_t sub_2828(int32_t arg1)

00002828  {
00002838      *(uint8_t*)0x2098cc =
00002838          (char)((uint32_t)*(uint8_t*)0x2098cc >> 1 << 1) | (char)(arg1 << 0x1f >> 0x1f);
00002838          /* "0117" */
00002840      return sub_529c(0xc);
00002828  }


00002842    int32_t sub_2842()

00002842  {
00002848      if ((uint32_t)*(uint8_t*)0x2098d8 == 0x64)
00002850          return 1;
00002850      
0000284c      return 0;
00002842  }

00002852                                                        00 00                                                        ..

00002854  int32_t data_2854 = 0x2098cc
00002858  int32_t data_2858 = 0x40010000
0000285c  int32_t data_285c = 0xc000001
00002860  int32_t data_2860 = 0x826509
00002864  int32_t data_2864 = 0x208445
00002868  int32_t data_2868 = 0x83db40

0000286c    int32_t sub_286c(int32_t arg1, char* arg2)

0000286c  {
0000286c      int32_t r3;
0000286c      int32_t var_18 = r3;
00002874      int32_t result = 0;
00002874      
00002880      if (0xff7ef444(*(uint32_t*)0x2088a8, 0x64))
00002880      {
0000288e          result = sub_b524(7, arg1, arg2, 1);
00002892          0xff7ef46c(*(uint32_t*)0x2088a8);
00002880      }
00002880      
00002898      return result;
0000286c  }


0000289a    int32_t sub_289a(int32_t arg1, int32_t arg2)

0000289a  {
0000289a      int32_t var_14 = arg2;
0000289a      int32_t var_18 = arg1;
000028a0      int32_t result = 0;
000028a0      
000028ac      if (0xff7ef444(*(uint32_t*)0x2088a8, 0x64))
000028ac      {
000028ba          result = sub_b458(7, arg1, &var_14, 1);
000028be          0xff7ef46c(*(uint32_t*)0x2088a8);
000028ac      }
000028ac      
000028c4      return result;
0000289a  }


000028c6    uint32_t sub_28c6(int32_t arg1, int32_t arg2, int32_t arg3, int32_t arg4)

000028c6  {
000028c6      int32_t var_18 = arg4;
000028d2      sub_286c(arg1, &var_18);
000028e2      uint32_t r1_1 = ((uint32_t)(uint8_t)var_18 & (uint32_t)(uint8_t)~(arg2 << arg3))
000028e2          | (uint32_t)(uint8_t)(arg4 << arg3);
000028e6      (uint8_t)var_18 = (char)r1_1;
000028ea      sub_289a(arg1, r1_1);
000028f2      return (uint32_t)(uint8_t)var_18;
000028c6  }


000028f4    uint32_t sub_28f4(int32_t arg1, int32_t arg2, int32_t arg3, int32_t arg4)

000028f4  {
000028f4      int32_t var_10 = arg4;
000028fe      (uint8_t)var_10 = 0;
00002900      sub_286c(arg1, &var_10);
0000290c      return ((uint32_t)(uint8_t)var_10 & arg2) >> arg3;
000028f4  }


0000290e    uint32_t sub_290e(int32_t arg1)

0000290e  {
00002926      return sub_28c6(0, 0xf, 4, (uint32_t)sub_12b3e(arg1 - 0xf28, 0x50));
0000290e  }


00002928    uint32_t sub_2928(int32_t arg1)

00002928  {
0000293e      return sub_28c6(0, 0xf, 0, (uint32_t)sub_12b3e(arg1 - 0x32, 0x1e));
0000293e          /* "50117" */  /* "02_V3.0" */
00002928  }


00002940    int32_t sub_2940(int32_t arg1)

00002940  {
00002942      int32_t entry_r3;
00002942      
00002942      if (arg1 <= 8)
00002944          entry_r3 = 0;
00002942      else if (arg1 - 9 <= 3)
00002950          entry_r3 = 1;
0000294e      else if (arg1 - 0xd <= 3)
0000295c          entry_r3 = 2;
0000295a      else if (arg1 > 0x10)  /* "RY02_3.00.33_250117" */
00002964          entry_r3 = 3;
00002964      
0000296c      /* tailcall */
0000296c      return sub_28c6(1, 3, 6, entry_r3);
00002940  }


0000296e    int32_t sub_296e(int32_t arg1)

0000296e  {
00002970      int32_t r3;
00002970      
00002970      r3 = arg1 > 2 ? 1 : 0;
00002970      
0000297e      /* tailcall */
0000297e      return sub_28c6(1, 1, 5, r3);
0000296e  }


00002980    int32_t sub_2980()

00002980  {
00002988      /* tailcall */
00002988      return sub_28c6(1, 1, 4, 1);
00002980  }


0000298a    int32_t sub_298a(int32_t arg1)

0000298a  {
0000298c      int32_t r3;
0000298c      
0000298c      r3 = !arg1 ? 1 : 0;
0000298c      
0000299a      /* tailcall */
0000299a      return sub_28c6(1, 1, 3, r3);
0000298a  }


0000299c    uint32_t sub_299c(int32_t arg1)

0000299c  {
000029a4      uint32_t r3;
000029a4      
000029a4      if (arg1 <= 0x960)
000029a6          r3 = 0;
000029a4      else if (arg1 < 0xbd6)
000029bc          r3 = (uint32_t)sub_12b3e(arg1 - 0x960, 0x5a);
000029ae      else
000029b0          r3 = 7;
000029b0      
000029c8      return sub_28c6(1, 7, 0, r3);
0000299c  }


000029ca    int32_t sub_29ca()

000029ca  {
000029d2      /* tailcall */
000029d2      return sub_28c6(2, 1, 7, 1);
000029ca  }


000029d4    int32_t sub_29d4()

000029d4  {
000029dc      /* tailcall */
000029dc      return sub_28c6(2, 1, 6, 1);
000029d4  }


000029de    int32_t sub_29de(int32_t arg1)

000029de  {
000029e0      uint32_t r3;
000029e0      
000029e0      if (arg1 <= 8)
000029e2          r3 = 0;
000029e0      else if (arg1 < 0x200)
000029fc          r3 = (((arg1 - 8) >> 0x1f >> 0x1d) + arg1 - 8) << 0x15 >> 0x18;
000029fc              /* "3.00.33_250117" */  /* "0.33_250117" */  /* "250117" */  /* "0117" */
000029ec      else
000029ee          r3 = 0x3f;
000029ee      
00002a04      /* tailcall */
00002a04      return sub_28c6(2, 0x3f, 0, r3);
000029de  }


00002a06    uint32_t sub_2a06(int32_t arg1)

00002a06  {
00002a0a      uint32_t r3;
00002a0a      
00002a0a      if (arg1 <= 0xc8)
00002a0c          r3 = 0;
00002a0a      else if (arg1 < 0xc80)
00002a24          r3 = (uint32_t)sub_12b3e(arg1 - 0xc8, 0xc8);
00002a16      else
00002a18          r3 = 0xf;
00002a18      
00002a30      return sub_28c6(3, 0xf, 4, r3);
00002a06  }


00002a32    int32_t sub_2a32(int32_t arg1)

00002a32  {
00002a34      uint32_t r3;
00002a34      
00002a34      if (arg1 <= 1)
00002a36          r3 = 0;
00002a34      else if (arg1 < 0x1f)  /* "0117" */
00002a4a          r3 = (((arg1 - 1) >> 0x1f) + arg1 - 1) << 0x17 >> 0x18;
00002a4a              /* "00.33_250117" */  /* "0.33_250117" */  /* "0117" */
00002a3c      else
00002a3e          r3 = 0xf;
00002a3e      
00002a52      /* tailcall */
00002a52      return sub_28c6(3, 0xf, 0, r3);
00002a32  }


00002a54    uint32_t sub_2a54(int32_t arg1)

00002a54  {
00002a5c      uint32_t r3;
00002a5c      
00002a5c      if (arg1 <= 0xe10)
00002a5e          r3 = 0;
00002a5c      else if (arg1 < 0x11c1)
00002a74          r3 = (uint32_t)sub_12b3e(arg1 - 0xe10, 0xf);
00002a66      else
00002a68          r3 = 0x3f;
00002a68      
00002a80      return sub_28c6(4, 0x3f, 2, r3);
00002a54  }


00002a82    int32_t sub_2a82(int32_t arg1)

00002a82  {
00002a84      int32_t r3;
00002a84      
00002a84      r3 = !arg1 ? 1 : 0;
00002a84      
00002a92      /* tailcall */
00002a92      return sub_28c6(4, 1, 1, r3);
00002a82  }


00002a94    int32_t sub_2a94(int32_t arg1)

00002a94  {
00002a96      int32_t r3;
00002a96      
00002a96      r3 = !arg1 ? 1 : 0;
00002a96      
00002aa4      /* tailcall */
00002aa4      return sub_28c6(4, 1, 0, r3);
00002a94  }


00002aa6    int32_t sub_2aa6(int32_t arg1)

00002aa6  {
00002aa8      int32_t r3;
00002aa8      
00002aa8      r3 = !arg1 ? 0 : 1;
00002aa8      
00002ab6      /* tailcall */
00002ab6      return sub_28c6(5, 1, 7, r3);
00002aa6  }


00002ab8    int32_t sub_2ab8(int32_t arg1)

00002ab8  {
00002aba      int32_t r3;
00002aba      
00002aba      if (!arg1)
00002ac4          r3 = 0;
00002aba      else if (arg1 <= 0x28)
00002ac0          r3 = 1;
00002abe      else if (arg1 - 0x29 > 0x27)
00002ad2          r3 = 3;
00002acc      else
00002ace          r3 = 2;
00002ace      
00002ada      /* tailcall */
00002ada      return sub_28c6(5, 3, 5, r3);
00002ab8  }


00002adc    int32_t sub_2adc()

00002adc  {
00002ae4      /* tailcall */
00002ae4      return sub_28c6(5, 1, 4, 1);
00002adc  }


00002ae6    int32_t sub_2ae6(int32_t arg1)

00002ae6  {
00002ae8      int32_t r3;
00002ae8      
00002ae8      r3 = !arg1 ? 0 : 1;
00002ae8      
00002af6      /* tailcall */
00002af6      return sub_28c6(5, 1, 3, r3);
00002ae6  }


00002af8    int32_t sub_2af8(int32_t arg1)

00002af8  {
00002afa      int32_t r3;
00002afa      
00002afa      if (arg1 <= 3)
00002afc          r3 = 0;
00002afa      else if (arg1 - 6 > 2)
00002b0a          r3 = 1;
00002b04      else
00002b06          r3 = 2;
00002b06      
00002b12      /* tailcall */
00002b12      return sub_28c6(5, 3, 1, r3);
00002af8  }


00002b14    int32_t sub_2b14(int32_t arg1)

00002b14  {
00002b16      int32_t r3;
00002b16      
00002b16      r3 = !arg1 ? 0 : 1;
00002b16      
00002b24      /* tailcall */
00002b24      return sub_28c6(5, 1, 0, r3);
00002b14  }


00002b26    int32_t sub_2b26(int32_t arg1)

00002b26  {
00002b28      int32_t r3;
00002b28      
00002b28      r3 = !arg1 ? 0 : 1;
00002b28      
00002b36      /* tailcall */
00002b36      return sub_28c6(6, 1, 7, r3);
00002b26  }


00002b38    int32_t sub_2b38(int32_t arg1)

00002b38  {
00002b3a      int32_t r3;
00002b3a      
00002b3a      r3 = !arg1 ? 0 : 1;
00002b3a      
00002b48      /* tailcall */
00002b48      return sub_28c6(6, 1, 6, r3);
00002b38  }


00002b4a    int32_t sub_2b4a(int32_t arg1)

00002b4a  {
00002b4c      int32_t r3;
00002b4c      
00002b4c      r3 = !arg1 ? 0 : 1;
00002b4c      
00002b5a      /* tailcall */
00002b5a      return sub_28c6(6, 1, 4, r3);
00002b4a  }


00002b5c    int32_t sub_2b5c(int32_t arg1)

00002b5c  {
00002b5e      int32_t r3;
00002b5e      
00002b5e      r3 = !arg1 ? 0 : 1;
00002b5e      
00002b6c      /* tailcall */
00002b6c      return sub_28c6(6, 1, 3, r3);
00002b5c  }


00002b6e    int32_t sub_2b6e(int32_t arg1)

00002b6e  {
00002b70      int32_t r3;
00002b70      
00002b70      r3 = !arg1 ? 0 : 1;
00002b70      
00002b7e      /* tailcall */
00002b7e      return sub_28c6(6, 1, 2, r3);
00002b6e  }


00002b80    int32_t sub_2b80(int32_t arg1)

00002b80  {
00002b82      int32_t r3;
00002b82      
00002b82      r3 = !arg1 ? 0 : 1;
00002b82      
00002b90      /* tailcall */
00002b90      return sub_28c6(6, 1, 2, r3);
00002b80  }


00002b92    int32_t sub_2b92(int32_t arg1)

00002b92  {
00002b94      int32_t r3;
00002b94      
00002b94      r3 = !arg1 ? 0 : 1;
00002b94      
00002ba2      /* tailcall */
00002ba2      return sub_28c6(6, 1, 0, r3);
00002b92  }


00002ba4    int32_t sub_2ba4(int32_t arg1)

00002ba4  {
00002ba6      int32_t r3;
00002ba6      
00002ba6      r3 = !arg1 ? 1 : 0;
00002ba6      
00002bb4      /* tailcall */
00002bb4      return sub_28c6(7, 1, 7, r3);
00002ba4  }


00002bb6    int32_t sub_2bb6(int32_t arg1)

00002bb6  {
00002bb8      int32_t r3;
00002bb8      
00002bb8      r3 = !arg1 ? 1 : 0;
00002bb8      
00002bc6      /* tailcall */
00002bc6      return sub_28c6(7, 1, 6, r3);
00002bb6  }


00002bc8    int32_t sub_2bc8(int32_t arg1)

00002bc8  {
00002bca      int32_t r3;
00002bca      
00002bca      if (arg1 <= 0x3c)
00002bcc          r3 = 0;
00002bca      else if (arg1 - 0x3d <= 0x13)  /* "2_3.00.33_250117" */
00002bd8          r3 = 1;
00002bd6      else if (arg1 - 0x51 > 0x13)  /* "2_3.00.33_250117" */
00002be6          r3 = 3;
00002be0      else
00002be2          r3 = 2;
00002be2      
00002bee      /* tailcall */
00002bee      return sub_28c6(7, 3, 4, r3);
00002bc8  }


00002bf0    uint32_t sub_2bf0(int32_t arg1)

00002bf0  {
00002bf6      uint32_t r3;
00002bf6      
00002bf6      if (arg1 <= 0x1068)
00002bf8          r3 = 0;
00002bf6      else if (arg1 < 0x1356)
00002c12          r3 = (uint32_t)sub_12b3e(arg1 - 0x1068, 0x32);  /* "02_V3.0" */
00002c00      else
00002c02          r3 = 0xf;
00002c02      
00002c1e      return sub_28c6(7, 0xf, 0, r3);
00002bf0  }


00002c20    int32_t sub_2c20(int32_t arg1)

00002c20  {
00002c22      int32_t r3;
00002c22      
00002c22      if (arg1 <= 1)
00002c24          r3 = 0;
00002c22      else if (arg1 <= 2)
00002c40          r3 = 1;
00002c2a      else if (arg1 - 3 <= 1)
00002c32          r3 = 2;
00002c30      else if (arg1 - 5 > 3)
00002c40          r3 = 1;
00002c3a      else
00002c3c          r3 = 3;
00002c3c      
00002c48      /* tailcall */
00002c48      return sub_28c6(9, 3, 6, r3);
00002c20  }


00002c4a    int32_t sub_2c4a(int32_t arg1)

00002c4a  {
00002c4c      int32_t r3;
00002c4c      
00002c4c      r3 = !arg1 ? 0 : 1;
00002c4c      
00002c74      /* tailcall */
00002c74      return sub_28c6(0xa, 1, 4, r3);
00002c4a  }

00002c52                                                        00 00                                                        ..

00002c54  int32_t data_2c54 = 0x2088a8
00002c58  int32_t data_2c58 = -0xf28
00002c5c  int32_t data_2c5c = 0xbd6
00002c60  int32_t data_2c60 = 0x11c1
00002c64  int32_t data_2c64 = 0x1068
00002c68  int32_t data_2c68 = 0x1356

00002c76    uint32_t sub_2c76(int32_t arg1)

00002c76  {
00002c7a      int32_t r3;
00002c7a      
00002c7a      r3 = !arg1 ? 0 : 1;
00002c7a      
00002c8c      return sub_28c6(0xa, 1, 3, r3);
00002c76  }


00002c8e    uint32_t sub_2c8e(int32_t arg1)

00002c8e  {
00002c92      int32_t r3;
00002c92      
00002c92      r3 = !arg1 ? 0 : 1;
00002c92      
00002ca4      return sub_28c6(0xa, 1, 2, r3);
00002c8e  }


00002ca6    uint32_t sub_2ca6(int32_t arg1)

00002ca6  {
00002caa      int32_t r3;
00002caa      
00002caa      r3 = !arg1 ? 1 : 0;
00002caa      
00002cbc      return sub_28c6(0xa, 1, 1, r3);
00002ca6  }


00002cbe    uint32_t sub_2cbe(int32_t arg1)

00002cbe  {
00002cc2      int32_t r3;
00002cc2      
00002cc2      r3 = !arg1 ? 1 : 0;
00002cc2      
00002cd4      return sub_28c6(0xa, 1, 0, r3);
00002cbe  }


00002cd6    uint32_t sub_2cd6()

00002cd6  {
00002cda      return (uint32_t)*(uint8_t*)0x2098dc;
00002cd6  }


00002cdc    int32_t sub_2cdc(int32_t arg1, int32_t arg2, int32_t arg3, int32_t arg4)

00002cdc  {
00002cdc      int32_t var_10 = arg4;
00002ce2      (uint8_t)var_10 = 0;
00002ce2      
00002d06      for (uint32_t i = 0; i < 3; i = (uint32_t)((uint8_t)i + 1))
00002d06      {
00002cfa          if (!(sub_286c(8, &var_10) << 0x18 >> 0x18)
00002cfa                  && (uint32_t)(uint8_t)var_10 << 0x1e < 0)  /* "0.33_250117" */  /* "50117" */
00002cfe              return 0;
00002d06      }
00002d06      
00002d0a      return 1;
00002cdc  }


00002d0c    uint32_t sub_2d0c()

00002d0c  {
00002d10      sub_2aa6(0);
00002d16      sub_2ab8(0);
00002d1c      sub_290e(0x11f8);
00002d24      sub_2928(0x1f4);
00002d2a      sub_299c(0xac8);
00002d30      sub_29de(0x10);  /* "RY02_3.00.33_250117" */
00002d38      sub_2a06(0x7d0);  /* "17 10:58:10 2022" */
00002d3e      sub_2ba4(0);
00002d44      sub_2a32(3);
00002d4a      sub_2a54(0x1068);
00002d50      sub_2a94(1);
00002d56      sub_2a82(0);
00002d5c      sub_2adc();
00002d62      sub_2af8(5);
00002d68      sub_2b26(0);
00002d70      sub_2bf0(0x1194);
00002d7a      return sub_2c8e(1);
00002d0c  }


00002d7c    int32_t sub_2d7c(int32_t arg1)

00002d7c  {
00002d80      *(uint8_t*)0x2098de = (char)arg1;
00002d86      return sub_2828(arg1);
00002d7c  }


00002d88    uint32_t sub_2d88()

00002d88  {
00002d8c      return (uint32_t)*(uint8_t*)0x2098de;
00002d88  }


00002d8e    int32_t sub_2d8e(int32_t arg1, int32_t arg2, int32_t arg3, int32_t arg4)

00002d8e  {
00002d8e      int32_t var_18 = arg4;
00002d92      uint32_t r4 = 0;
00002d9c      (uint8_t)var_18 = 0xff;
00002d9c      
00002da8      while (sub_286c(8, &var_18) << 0x18 >> 0x18)  /* "0.33_250117" */
00002da8      {
00002db0          (*(uint32_t*)0x20011c)(0x2710);
00002db4          r4 = (uint32_t)((uint8_t)r4 + 1);
00002db4          
00002db8          if (r4 >= 5)
00002dbc              return 0;
00002da8      }
00002da8      
00002dc6      uint32_t r0_6 = ((uint32_t)(uint8_t)var_18 & 0x18) >> 3;  /* "0.33_250117" */
00002dca      (uint8_t)var_18 = (char)r0_6;
00002dca      
00002dce      if (arg1 != r0_6)
00002dd6          return 2;
00002dd6      
00002dd2      return 1;
00002d8e  }


00002dd8    int32_t sub_2dd8()

00002dd8  {
00002de0      if ((uint32_t)*(uint8_t*)0x2098df)
00002dee          return 0x2098dc;
00002dee      
00002de4      *(uint8_t*)0x2098df = 1;
00002dea      return sub_116c();
00002dd8  }


00002df0    int32_t j_sub_2dd8()

00002df0  {
00002df0      /* tailcall */
00002df0      return sub_2dd8();
00002df0  }


00002df2    int32_t sub_2df2(int32_t arg1, int32_t arg2, int32_t arg3, int32_t arg4)

00002df2  {
00002df2      int32_t var_10 = arg4;
00002df4      uint32_t i = 0;
00002dfa      (uint8_t)var_10 = 0xff;
00002dfa      
00002e1c      do
00002e1c      {
00002e02          int32_t r0;
00002e02          int32_t r1_1;
00002e02          int32_t r2;
00002e02          int32_t r3;
00002e02          r0 = sub_286c(0xa, &var_10);
00002e02          
00002e14          if (!(r0 << 0x18 >> 0x18) && (uint32_t)(uint8_t)var_10 >> 4 == 0xe)  /* "
00002e14              0.33_250117" */
00002e14          {
00002e26              uint32_t r0_6 = (uint32_t)(uint8_t)var_10 >> 4;
00002e28              *(uint8_t*)0x2098dc = (char)r0_6;
00002e30              int32_t r0_8;
00002e30              
00002e30              if (!sub_2cdc(r0_6, r1_1, r2, r3))
00002e52                  r0_8 = 1;
00002e30              else
00002e32                  r0_8 = 0;
00002e32              
00002e34              sub_2d7c(r0_8);
00002e38              *(uint8_t*)0x2098dd = 0;
00002e3a              sub_29ca();
00002e48              sub_3704(0x2098ec, 0x826d89, 0x64, 1);
00002e48              break;
00002e14          }
00002e14          
00002e18          i = (uint32_t)((uint8_t)i + 1);
00002e1c      } while (i < 5);
00002e1c      
00002e50      return sub_274e();
00002df2  }


00002e56    uint32_t sub_2e56()

00002e56  {
00002e5a      return (uint32_t)*(uint8_t*)0x2098e1;
00002e56  }


00002e5c    uint32_t sub_2e5c(int32_t arg1, int32_t arg2, int32_t arg3, int32_t arg4)

00002e5c  {
00002e5c      int32_t var_10 = arg4;
00002e62      (uint8_t)var_10 = 0xff;
00002e6c      uint32_t result = sub_286c(8, &var_10) << 0x18 >> 0x18;  /* "0.33_250117" */
00002e6c      
00002e6e      if (!result)
00002e6e      {
00002e78          result = ((uint32_t)(uint8_t)var_10 & 0x18) >> 3;  /* "0.33_250117" */
00002e7e          (uint8_t)var_10 = (char)result;
00002e80          *(uint8_t*)0x2098e1 = (char)result;
00002e80          
00002e82          if (!result)
00002eb0              return sub_35fe(1, 0xff, 0xa);
00002eb0          
00002e8e          if (result == 1 || result == 2)
00002e8e          {
00002eba              if ((uint32_t)*(uint8_t*)0x2098e0)
00002eb0                  return sub_35fe(1, 1, 0x7d0);  /* "17 10:58:10 2022" */
00002eb0              
00002ec2              if (sub_26ac() == 0x64)
00002ec6                  sub_26b8(0x63);
00002ec6              
00002ea4          label_2ea4:
00002eb0              return sub_35fe(1, 2, 0x7d0);  /* "17 10:58:10 2022" */
00002e8e          }
00002e8e          
00002e92          if (result == 3)
00002e92          {
00002e9a              if (sub_26ac() < 0x64)
00002e9a                  goto label_2ea4;
00002e9a              
00002ed2              sub_35fe(1, 1, 0x7d0);  /* "17 10:58:10 2022" */
00002ed8              *(uint8_t*)0x2098e0 = 1;
00002eda              return 1;
00002e92          }
00002e6e      }
00002e6e      
00002eb4      return result;
00002e5c  }


00002edc    int32_t sub_2edc()

00002edc  {
00002ede      sub_2d0c();
00002ee4      sub_2c8e(1);
00002eec      *(uint8_t*)0x2098dd = 0;
00002eee      return 0;
00002edc  }


00002ef0    uint32_t sub_2ef0(int32_t arg1, int32_t arg2, int32_t arg3, int32_t arg4)

00002ef0  {
00002ef0      int32_t var_18 = arg4;
00002ef4      uint32_t r0 = (uint32_t)*(uint8_t*)0x2098df;
00002ef4      
00002ef8      if (r0)
00002ef8      {
00002efc          *(uint8_t*)0x2098df = 0;
00002f02          uint32_t r0_2;
00002f02          
00002f02          if ((uint32_t)*(uint8_t*)0x2098de)
00002f04              r0_2 = (uint32_t)*(uint8_t*)0x2098dd;
00002f04          
00002f08          int32_t r0_12;
00002f08          
00002f08          if (!(uint32_t)*(uint8_t*)0x2098de || !r0_2)
00002f08          {
00002f26              sub_150c();
00002f2e              (uint8_t)var_18 = 0xff;
00002f2e              
00002ff0              for (uint32_t i = 5; i; )
00002ff0              {
00002f36                  int32_t r0_4;
00002f36                  int32_t r1_2;
00002f36                  int32_t r2_1;
00002f36                  int32_t r3_2;
00002f36                  r0_4 = sub_286c(8, &var_18);
00002f36                  
00002f3e                  if (!(r0_4 << 0x18 >> 0x18))  /* "0.33_250117" */
00002f3e                  {
00002f4a                      uint32_t r0_7 = (uint32_t)*(uint8_t*)0x2098dd;
00002f4a                      
00002f4e                      if (!r0_7)
00002f4e                      {
00002f52                          *(uint8_t*)0x2098dd = 1;
00002f54                          uint32_t r0_8;
00002f54                          int32_t r1_3;
00002f54                          int32_t r2_2;
00002f54                          int32_t r3_3;
00002f54                          r0_8 = sub_2d0c();
00002f58                          r0_7 = sub_2cdc(r0_8, r1_3, r2_2, r3_3);
00002f58                          
00002f5e                          if (!r0_7)
00002f5e                          {
00002f62                              sub_298a(1);
00002f66                              sub_bb90();
00002f76                              r0_7 = sub_3704(0x2098ec, 0x826d89, 0x3e8, 1);
00002f5e                          }
00002f4e                      }
00002f4e                      
00002f7a                      int32_t r0_9;
00002f7a                      int32_t r1_4;
00002f7a                      int32_t r2_3;
00002f7a                      int32_t r3_4;
00002f7a                      r0_9 = sub_2cdc(r0_7, r1_2, r2_1, r3_2);
00002f82                      uint32_t r0_10;
00002f82                      
00002f82                      if (!r0_9)
00002f82                      {
00002fa2                          r0_10 = sub_2d8e(0, r1_4, r2_3, r3_4);
00002fa2                          
00002fa8                          if (r0_10 == 2)
00002fa8                          {
00002faa                              sub_36d2();
00002fae                              sub_ea1e();
00002fb2                              sub_e1f8();
00002fba                              *(uint32_t*)0x2098e8 = sub_187c();
00002fbe                              sub_2d7c(1);
00002fca                              r0_10 = sub_35fe(1, 2, 0x7d0);  /* "17 10:58:10 2022" */
00002fa8                          }
00002f82                      }
00002f82                      else
00002f82                      {
00002f88                          sub_3730(0x2098ec);
00002f8c                          sub_2edc();
00002f92                          sub_2d7c(0);
00002f96                          *(uint8_t*)0x2098e0 = 0;
00002f98                          r0_10 = (uint32_t)*(uint8_t*)0x208447;
00002f98                          
00002f9c                          if (r0_10 == 1)
00002fd8                              r0_10 = sub_357e(0x1e, 1, 3, 2);  /* "50117" */
00002f82                      }
00002f82                      
00002fdc                      *(uint8_t*)0x208447 = 0;
00002fde                      return r0_10;
00002f3e                  }
00002f3e                  
00002f44                  i = (i - 1) << 0x18 >> 0x18;  /* "0.33_250117" */
00002f44                  
00002f46                  if (!i)
00002fe4                      sub_3730(0x2098ec);
00002fe4                  
00002fea                  r0_12 = 0xff7ef196(0xa);
00002ff0              }
00002ff0              
00002ff2              return r0_12;
00002f08          }
00002f08          
00002f0a          int32_t r0_3;
00002f0a          int32_t r1;
00002f0a          int32_t r2;
00002f0a          int32_t r3;
00002f0a          r0_3 = sub_2cdc(r0_2, arg2, arg3, arg4);
00002f0a          
00002f10          if (!r0_3)
00002f10          {
00002ff6              sub_2e5c(r0_3, r1, r2, r3);
00002ffc              r0_12 = *(uint32_t*)0x2098e4 + 1;
00002ffe              *(uint32_t*)0x2098e4 = r0_12;
00002ff2              return r0_12;
00002f10          }
00002f10          
00002f14          sub_2d7c(0);
00002f1e          r0 = sub_35fe(1, 0, 0xa);
00002f22          *(uint32_t*)0x2098e4 = 0;
00002ef8      }
00002ef8      
00002f24      return r0;
00002ef0  }

00002ff4                                                              ff e7                                                    ..

00003002    int32_t sub_3002(int32_t arg1, int32_t arg2, int32_t arg3, int32_t arg4)

00003002  {
00003002      int32_t var_10 = arg4;
00003008      (uint8_t)var_10 = 0;
0000300c      int32_t r3;
0000300c      
0000300c      r3 = !arg1 ? 1 : 0;
0000300c      
0000301a      sub_28c6(6, 1, 5, r3);
00003020      (uint8_t)var_10 = 0;
00003028      return sub_286c(6, &var_10);
00003002  }


0000302a    int32_t sub_302a()

0000302a  {
0000302c      int32_t r1;
0000302c      int32_t r2;
0000302c      int32_t r3;
0000302c      r1 = sub_2d0c();
00003032      sub_3002(0, r1, r2, r3);
0000303a      *(uint8_t*)0x2098df = 0;
0000303c      return 0;
0000302a  }

0000303e                                                                                            00 00                                ..

00003040  int32_t data_3040 = 0x2098dc
00003044  int32_t data_3044 = 0x11f8
00003048  int32_t data_3048 = 0xac8
0000304c  int32_t data_304c = 0x1068
00003050  int32_t data_3050 = 0x2710
00003054  int32_t data_3054 = 0x20011c
00003058  int32_t data_3058 = 0x245
0000305c  int32_t data_305c = 0x826d89
00003060  int32_t data_3060 = 0x208447

00003064    int32_t sub_3064(int32_t arg1)

00003064  {
00003070      0xff7ef444(*(uint32_t*)0x2088a4, 0x1f4);
00003078      0xff7e41f0(2, arg1);
00003082      return 0xff7ef46c(*(uint32_t*)0x2088a4);
00003064  }

00003084              70 b5 22 4c 05 46 ff 21 f5 31 20 68 ec f7 d8 d9 29 46 04 20 e1 f7 aa d8 20 68 ec f7      p."L.F.!.1 h....)F. .... h..
000030a0  e5 d9 70 bd                                                                                      ..p.

000030a4    int32_t sub_30a4(int32_t arg1, int32_t arg2, int32_t arg3)

000030a4  {
000030a4      int32_t r3;
000030a4      int32_t var_18 = r3;
000030b4      0xff7ef444(*(uint32_t*)0x2088a4, 0x1f4);
000030be      0xff7e4650(arg2, arg3, arg1);
000030c8      return 0xff7ef46c(*(uint32_t*)0x2088a4);
000030a4  }


000030ca    int32_t sub_30ca(int32_t arg1, int32_t arg2, int32_t arg3)

000030ca  {
000030ca      int32_t r3;
000030ca      int32_t var_18 = r3;
000030da      0xff7ef444(*(uint32_t*)0x2088a4, 0x1f4);
000030e4      0xff7e46c0(arg2, arg3, arg1);
000030ee      return 0xff7ef46c(*(uint32_t*)0x2088a4);
000030ca  }


000030f0    uint32_t sub_30f0()

000030f0  {
000030f2      uint32_t result = (uint32_t)*(uint8_t*)0x2098f0;
000030f2      
000030f6      if (result == 1)
000030fa          return result;
000030fa      
000030f8      return 0;
000030f0  }


000030fc    int32_t sub_30fc(int32_t arg1, int32_t arg2, int16_t arg3)

000030fc  {
00003106      sub_30a4(arg2, arg1, (uint32_t)arg3);
0000310c      return 0;
000030fc  }

0000310e                                            00 00                                                                ..

00003110  int32_t data_3110 = 0x2088a4
00003114  int32_t data_3114 = 0x2098f0

00003118    int32_t sub_3118()

00003118  {
00003120      0xff7e3b6e(0x2086c4, 0, 0xe8);
00003120      
0000312a      if ((uint32_t)*(uint8_t*)0x2086c4 == 4)
00003132          return 1;
00003132      
0000312e      return 0;
00003118  }


00003134    int32_t sub_3134()

00003134  {
00003136      int32_t result = sub_3118();
00003136      
0000313c      if (result == 1)
00003144          return result;
00003144      
0000313e      sub_1432();
00003142      return 0;
00003134  }


00003146    int32_t sub_3146()

00003146  {
0000314c      *(uint8_t*)0x2086c4 = 4;
00003158      return 0xff7e3b82(0x2086c4, 0, 0xe8);
00003146  }


0000315a    int32_t sub_315a()

0000315a  {
00003164      void var_f0;
00003164      0xff7e3b6e(&var_f0, 0, 0xe8);
0000316e      int32_t result = 0xff81b7f8(&var_f0, 0x2086c4, 0xe8);
0000316e      
00003174      if (!result)
0000317c          return result;
0000317c      
00003176      return sub_3146();
0000315a  }


0000317e    int32_t sub_317e()

0000317e  {
0000318e      void var_404;
0000318e      0xff81b968(&var_404, 0x3fc);
00003198      int32_t var_408 = *(uint32_t*)0x83db80;
000031a8      return 0xff7e3b82(&var_408, 0, 0xe8);
0000317e  }


000031aa    int32_t sub_31aa()

000031aa  {
000031b0      *(uint8_t*)0x208660 = 3;
000031be      return 0xff7e3b82(0x208660, 0x400, 0x64);
000031aa  }

000031c0  10 b5 01 21 64 22 89 02 af 48 e0 f7 d0 dc ae 48 00 78 03 28 05 d0 64 21 ab 48 18 f4 c5 f3 00 20  ...!d"...H.....H.x.(..d!.H..... 
000031e0  10 bd 01 20 10 bd                                                                                ... ..

000031e6    int32_t sub_31e6()

000031e6  {
000031f2      void var_204;
000031f2      0xff81b968(&var_204, 0x1fc);
000031fc      int32_t var_208 = *(uint32_t*)0x83db84;
0000320c      return 0xff7e3b82(&var_208, 0x400, 0x64);
000031e6  }


0000320e    int32_t sub_320e()

0000320e  {
00003218      0xff7e3b6e(0x2087ac, 0x600, 0xa4);
00003218      
00003224      if (*(uint32_t*)0x2087ac == 0xa1b2c3e5)
0000322c          return 1;
0000322c      
00003228      return 0;
0000320e  }


0000322e    int32_t sub_322e()

0000322e  {
00003234      *(uint32_t*)0x2087ac = 0xa1b2c3e5;
00003242      return 0xff7e3b82(0x2087ac, 0x600, 0xa4);
0000322e  }


00003244    int32_t sub_3244()

00003244  {
00003250      void var_208;
00003250      0xff81b968(&var_208, 0x200);
0000325c      return 0xff7e3b82(&var_208, 0x600, 0xa4);
00003244  }


00003262    int32_t sub_3262(int32_t* arg1)

00003262  {
00003268      int32_t* r4 = *(uint32_t*)arg1;
0000326e      int32_t r0 = sub_12b2a(0x1000, (uint32_t)*(uint16_t*)((char*)arg1 + 0xa));
00003274      int32_t r6 = 0;
0000329e      int32_t result;
0000329e      
0000329e      while (true)
0000329e      {
0000329e          result = arg1[1];
0000329e          
000032a2          if (result <= r6)
000032a2              break;
000032a2          
00003278          int32_t* r0_1 = r4;
00003278          
00003294          for (int32_t i = 0; i < r0; i += 1)
00003294          {
00003282              if (*(uint32_t*)r0_1 != 0xffffffff)
00003282              {
00003286                  sub_3064(r4);
0000328a                  break;
00003282              }
00003282              
0000328e              r0_1 += (uint32_t)*(uint16_t*)((char*)arg1 + 0xa);
00003294          }
00003294          
0000329a          r4 = &r4[0x400];
0000329c          r6 += 0x1000;
0000329e      }
0000329e      
000032a4      return result;
00003262  }


000032a6    int32_t* sub_32a6(int32_t* arg1, int32_t* arg2, int32_t arg3)

000032a6  {
000032a6      int32_t var_18 = arg3;
000032a6      int32_t* var_20 = arg1;
000032ae      int32_t* r0_1 = *(uint32_t*)arg2;
000032ae      
000032b4      if (*(uint32_t*)r0_1 == arg3)
00003370          return r0_1;
00003370      
000032b8      int32_t* r4_1 = *(uint32_t*)arg1;
000032ba      int32_t* r0_2 = &data_0;
000032bc      void* r1_1 = &data_0;
000032bc      
000032da      while (true)
000032da      {
000032da          if (arg1[1] <= r1_1)
000032da          {
000032e2              if (!r0_2)
000032e2              {
000032e6                  sub_3262(arg1);
000032ea                  r0_2 = *(uint32_t*)arg1;
000032e2              }
000032e2              
000032ec              uint32_t r6_2 = (uint32_t)arg1[2];
000032ee              r4_1 = r0_2;
000032f2              int32_t r1_3 = sub_12b2a(r0_2, r6_2);
000032f6              uint32_t r0_4 = (uint32_t)*(uint16_t*)((char*)arg1 + 0xa);
000032f6              
00003314              if (sub_12b2a(r1_3, r0_4) == sub_12b2a(r6_2, r0_4) - 1)
00003314              {
00003316                  int32_t* r1_6 = *(uint32_t*)arg1;
0000331c                  int32_t* r0_11 = r0_4 + r4_1;
0000331c                  
00003320                  if ((char*)r1_6 + arg1[1] <= r0_11)
00003322                      r0_11 = r1_6;
00003322                  
00003328                  if (*(uint32_t*)r0_11 != 0xffffffff)
00003328                  {
00003330                      if (r6_2 != 0x1000)
00003330                      {
0000333a                          uint32_t r5_5 = r0_11 << 0x14 >> 0x14;  /* "_3.00.33_250117" */
0000333c                          void* r7_2 = (char*)r0_11 - r5_5;
00003346                          0xff81b898(0x2088ac, r7_2, 0x1000);
00003352                          0xff81b91a(r5_5 + 0x2088ac, r6_2, 0xff);
00003358                          sub_3064(r7_2);
00003364                          sub_30fc(r7_2, 0x2088ac, 0x1000);
00003330                      }
00003330                      else
00003332                          sub_3064(r0_11);
00003328                  }
00003314              }
00003314              
00003314              break;
000032da          }
000032da          
000032c2          int32_t r3_1 = *(uint32_t*)r4_1;
000032c2          
000032c6          if (r3_1 == arg3)
000032c6              break;
000032c6          
000032ce          if (!r0_2 && r3_1 == 0xffffffff)
000032d0              r0_2 = r4_1;
000032d0          
000032d2          uint32_t r3_3 = (uint32_t)*(uint16_t*)((char*)arg1 + 0xa);
000032d4          r4_1 += r3_3;
000032d6          r1_1 += r3_3;
000032da      }
000032da      
0000336a      *(uint32_t*)arg2 = r4_1;
0000336c      return r4_1;
000032a6  }


00003372    int32_t sub_3372(int32_t* arg1, int32_t* arg2, int32_t arg3, int32_t arg4, int32_t arg5, int32_t arg6)

00003372  {
00003372      int32_t var_18 = arg4;
00003372      int32_t var_1c = arg3;
00003372      int32_t* var_20 = arg2;
00003376      int32_t r2 = var_1c;
0000337a      int32_t result = r2 + 1;
0000337a      
0000337c      if (r2 != 0xffffffff)
0000337c      {
00003380          int32_t* r0_1 = sub_32a6(arg1, arg2, r2);
00003380          
0000338a          if (*(uint32_t*)r0_1 == 0xffffffff)
00003392              sub_30fc(r0_1, &var_1c, 4);
00003392          
00003396          void* r1_1 = (char*)r0_1 + arg4;
0000339c          int32_t r0_5 = 0;
0000339e          int32_t r2_1 = arg6;
0000339e          
000033fe          while (true)
000033fe          {
000033fe              void* r0_13;
000033fe              
000033fe              if (r0_5 >= r2_1)
00003400                  r0_13 = r1_1;
000033fe              else if ((uint32_t)*(uint8_t*)((char*)r1_1 + r0_5) == 0xff)
000033a6              {
000033fa                  r0_5 += 1;
000033fa                  continue;
000033a6              }
000033a6              else
000033a6              {
000033ac                  result = 0xff81b7f8(r1_1, arg5);
000033ac                  
000033b2                  if (!result)
000033b2                      break;
000033b2                  
000033b6                  uint32_t r7_3 = r0_1 << 0x14 >> 0x14;  /* "_3.00.33_250117" */
000033b8                  void* r5_2 = (char*)r0_1 - r7_3;
000033c2                  0xff81b898(0x2088ac, r5_2, 0x1000);
000033c8                  uint32_t r0_8 = (uint32_t)*(uint16_t*)((char*)arg1 + 0xa);
000033c8                  
000033cc                  if (r0_8 > arg4)
000033d8                      0xff81b91a(r7_3 + 0x2088ac + arg4, r0_8 - arg4, 0xff);
000033d8                  
000033de                  sub_3064(r5_2);
000033ea                  sub_30fc(r5_2, 0x2088ac, 0x1000);
000033ee                  r2_1 = arg6;
000033f0                  r0_13 = r1_1;
000033a6              }
000033a6              
000033f4              return sub_30fc(r0_13, arg5, (uint16_t)r2_1);
000033fe          }
0000337c      }
0000337c      
00003370      return result;
00003372  }


00003404    void* sub_3404(int32_t* arg1, int32_t* arg2, int32_t arg3)

00003404  {
0000340c      if (*(uint32_t*)arg2 == arg3)
0000340e          return arg2;
0000340e      
00003412      void* r5_1 = *(uint32_t*)arg1;
0000341e      void* r0_1;
0000341e      
0000341e      if (r5_1 >= arg2 || (char*)r5_1 + arg1[1] <= arg2)
0000342a          r0_1 = (char*)r5_1 + (arg1[1] >> 1);
0000341e      else
00003422          r0_1 = (char*)arg2 - (uint32_t)*(uint16_t*)((char*)arg1 + 0xa);
00003422      
0000342c      int32_t i = 0;
00003446      uint32_t r4_2;
00003446      
00003446      for (void* r6_1 = arg1[1]; r6_1 > i; i += r4_2)
00003446      {
00003436          if (*(uint32_t*)r0_1 == arg3)
00003410              return r0_1;
00003410          
00003438          r4_2 = (uint32_t)*(uint16_t*)((char*)arg1 + 0xa);
0000343a          r0_1 -= r4_2;
0000343a          
0000343e          if (r5_1 > r0_1)
00003440              r0_1 += r6_1;
00003446      }
00003446      
0000344a      return 0;
00003404  }


0000344c    void sub_344c(int32_t* arg1, int32_t** arg2)

0000344c  {
0000344e      int32_t r3 = 0;
0000344e      
00003468      for (int32_t* i = *(uint32_t*)arg1; arg1[1] > i; 
00003468          i += (uint32_t)*(uint16_t*)((char*)arg1 + 0xa))
00003468      {
00003454          int32_t r4_1 = *(uint32_t*)i;
00003454          
00003458          if (r3)
00003458          {
0000345c              if (r4_1 == 0xffffffff)
0000345c                  break;
0000345c              
0000345e              *(uint32_t*)arg2 = i;
00003458          }
00003458          else if (r4_1 == 0xffffffff)
0000347a              i += (uint32_t)arg1[2] - (uint32_t)*(uint16_t*)((char*)arg1 + 0xa);
0000346e          else
0000346e          {
00003470              r3 = 1;
0000345e              *(uint32_t*)arg2 = i;
0000346e          }
00003468      }
0000344c  }

0000347e                                                                                            00 00                                ..

00003480  int32_t data_3480 = 0x2086c4
00003484  int32_t data_3484 = 0x83db80
00003488  int32_t data_3488 = 0x208660
0000348c  int32_t data_348c = 0x2087ac
00003490  int32_t data_3490 = -0x5e4d3c1b
00003494  int32_t data_3494 = 0x2088ac

00003498    int32_t sub_3498(int32_t arg1)

00003498  {
0000349e      sub_3730(0x2098fc);
0000349e      
000034a4      if (arg1 == 0xff)
000034be          sub_e1f8();
000034a4      else
000034a4      {
000034a8          uint32_t r0_1;
000034a8          int32_t r2_2;
000034a8          
000034a8          if (!arg1)
000034a8          {
000034c6              r2_2 = 0;
000034ca              r0_1 = 0;
000034a8          }
000034a8          else
000034a8          {
000034b0              r0_1 = arg1 << 0x1f >> 0x1f;  /* "0117" */
000034b2              r2_2 = arg1 & 2;
000034b2              
000034ba              if (arg1 == 4 || arg1 == 8)
000034ba              {
000034d4                  *(uint32_t*)0x209900 = arg1;
000034d6                  *(uint8_t*)0x2098f4 = 0;
000034d8                  *(uint8_t*)0x2098f5 = 0;
000034ba              }
000034a8          }
000034a8          
000034de          sub_d020(r0_1, 0x29, r2_2, 0x29);
000034a4      }
000034a4      
000034e4      return 0;
00003498  }


000034e6    uint32_t sub_34e6()

000034e6  {
000034f2      uint32_t r1 = (uint32_t)*(uint8_t*)0x209904;
000034f6      uint32_t result = (uint32_t)(*(uint8_t*)0x209906 - 1);
000034f6      
000034fa      if (r1 == 1)
000034fa      {
00003514          *(uint8_t*)0x209906 = (char)result;
00003514          
00003518          if (!result)
00003518          {
0000351a          label_351a:
0000351a              *(uint8_t*)0x209904 = 0;
0000351e              sub_3498(0xff);
00003526              result = sub_3730(0x2098f8);
0000352a              *(uint8_t*)0x209908 = 0;
00003518          }
000034fa      }
000034fa      else
000034fa      {
000034fe          if (r1 == 3)
000034fe          {
0000352e              *(uint8_t*)0x209906 = (char)result;
0000352e              
00003532              if (result)
0000352c                  return result;
0000352c              
00003534              char* r0_2 = *(uint32_t*)0x209910;
00003536              uint32_t r1_1 = (uint32_t)*(uint8_t*)r0_2;
0000353a              *(uint32_t*)0x209910 = &r0_2[1];
00003540              uint32_t r0_4 = (uint32_t)*(uint8_t*)0x209907;
00003540              
00003544              if (r1_1 != 0xff)
00003544              {
00003548                  if (r1_1 << 0x18 >= 0)  /* "0.33_250117" */
00003576                      *(uint8_t*)0x209906 = (char)(r1_1 << 0x19 >> 0x19);
00003576                          /* ".33_250117" */
00003548                  else
00003548                  {
0000354e                      *(uint8_t*)0x209906 = (char)(r1_1 << 0x19 >> 0x19);
0000354e                          /* ".33_250117" */
00003550                      r0_4 = 0;
00003548                  }
00003548                  
0000357c                  return sub_3498(r0_4);
00003544              }
00003544              
0000355a              uint32_t r1_5 = ((uint32_t)*(uint8_t*)0x209905 - 1) << 0x18 >> 0x18;
0000355a                  /* "0.33_250117" */
0000355c              *(uint8_t*)0x209905 = (char)r1_5;
0000355c              
0000355e              if (!r1_5)
00003544                  goto label_351a;
00003544              
00003560              char* r1_6 = *(uint32_t*)0x20990c;
00003562              *(uint32_t*)0x209910 = r1_6;
0000356a              *(uint8_t*)0x209906 = (char)((uint32_t)*(uint8_t*)r1_6 << 0x19 >> 0x19);
0000356a                  /* ".33_250117" */
0000356e              *(uint32_t*)0x209910 = &r1_6[1];
0000357c              return sub_3498(r0_4);
000034fe          }
000034fe          
00003502          sub_3498(0xff);
0000350a          result = sub_3730(0x2098f8);
0000350e          *(uint8_t*)0x209908 = 0;
00003510          *(uint8_t*)0x209904 = 0;
000034fa      }
000034fa      
00003512      return result;
000034e6  }


0000357e    uint32_t sub_357e(int32_t arg1, int32_t arg2, int32_t arg3, char arg4)

0000357e  {
0000357e      int32_t var_1c = arg3;
0000357e      int32_t var_20 = arg2;
0000357e      int32_t var_24 = arg1;
00003586      uint32_t result = (uint32_t)*(uint8_t*)0x209908;
00003586      
00003590      if (result <= arg1)
00003590      {
00003592          result = (uint32_t)*(uint8_t*)0x209904;
00003592          
00003596          if (result)
00003596          {
0000359a              sub_3498(0xff);
000035a2              result = sub_3730(0x2098f8);
00003596          }
00003596          
000035a8          int32_t r0;
000035a8          
000035a8          if (arg3 == 1)
000035a8          {
000035d8              r0 = 0x83db88;
000035b4          label_35b4:
000035b4              *(uint32_t*)0x209910 = r0;
000035b6              *(uint8_t*)0x209908 = (char)arg1;
000035b8              *(uint8_t*)0x209907 = (char)arg2;
000035bc              *(uint8_t*)0x209905 = arg4;
000035be              char* r0_2 = *(uint32_t*)0x209910;
000035c0              *(uint32_t*)0x20990c = r0_2;
000035c2              uint32_t r1 = (uint32_t)*(uint8_t*)r0_2;
000035c6              *(uint32_t*)0x209910 = &r0_2[1];
000035cc              *(uint8_t*)0x209906 = (char)(r1 << 0x19 >> 0x19);  /* ".33_250117" */
000035d0              int32_t r0_7;
000035d0              
000035d0              r0_7 = r1 << 0x18 >= 0 ? arg2 : 0;  /* "0.33_250117" */
000035d0              
000035e4              sub_3498(r0_7);
000035ea              *(uint8_t*)0x209904 = 3;
000035f6              return sub_3704(0x2098f8, 0x827497, 0x64, 1);
000035a8          }
000035a8          
000035ac          if (arg3 == 2)
000035ac          {
000035de              r0 = 0x83db8e;
000035e0              goto label_35b4;
000035ac          }
000035ac          
000035b0          if (arg3 == 3)
000035b0          {
000035b2              r0 = 0x83db8b;
000035b2              goto label_35b4;
000035b0          }
00003590      }
00003590      
000035fc      return result;
0000357e  }


000035fe    uint32_t sub_35fe(int32_t arg1, int32_t arg2, int32_t arg3)

000035fe  {
00003606      uint32_t result = (uint32_t)*(uint8_t*)0x209908;
00003608      int32_t r4 = arg3;
00003608      
0000360e      if (result <= arg1)
0000360e      {
00003614          if ((uint32_t)*(uint8_t*)0x209904)
0000361a              sub_3730(0x2098f8);
0000361a          
00003628          sub_3704(0x2098f8, 0x827497, 0x64, 1);
0000362e          sub_3498(arg2);
00003634          *(uint8_t*)0x209904 = 1;
00003634          
00003638          if (r4 < 0x64)
0000363a              r4 = 0x64;
0000363a          
0000363c          *(uint8_t*)0x209908 = (char)arg1;
00003646          *(uint8_t*)0x209906 = sub_12b2a(r4, 0x64);
0000364a          result = 2;
0000364c          *(uint8_t*)0x208448 = 2;
0000360e      }
0000360e      
0000364e      return result;
000035fe  }


00003650    int32_t sub_3650(int32_t arg1, int32_t arg2, int32_t arg3, int32_t arg4)

00003650  {
00003656      sub_35fe(arg1, arg2, arg4);
0000365e      char r1;
0000365e      
0000365e      if (arg3 == 3)
0000366a          r1 = 4;
0000365e      else if (arg3 == 2)
0000366e          r1 = 1;
00003662      else
00003664          r1 = 2;
00003664      
00003666      *(uint8_t*)0x208448 = r1;
00003668      return 0x208448;
00003650  }


00003672    uint32_t sub_3672()

00003672  {
0000367c      uint8_t r1 = *(uint8_t*)0x208448 << 1;
00003682      char r0_1 = *(uint8_t*)0x2098f4;
00003682      
00003686      if (!(uint32_t)*(uint8_t*)0x2098f5)
00003686      {
000036be          uint32_t r0_10 = (uint32_t)(r1 + r0_1);
000036c0          *(uint8_t*)0x2098f4 = (char)r0_10;
000036c0          
000036c4          if (r0_10 >= 0x5a)
00003694              *(uint8_t*)0x2098f5 = 1;
00003686      }
00003686      else
00003686      {
0000368a          uint32_t r0_3 = (uint32_t)(r0_1 - r1);
0000368c          *(uint8_t*)0x2098f4 = (char)r0_3;
0000368c          
00003690          if (r0_3 <= 0xa)
00003694              *(uint8_t*)0x2098f5 = 0;
00003686      }
00003686      
0000369a      if ((uint32_t)*(uint8_t*)0x209900 << 0x1d < 0)  /* "250117" */
000036a0          *(uint8_t*)0x2098f4;
000036a0      
000036aa      uint32_t result = (uint32_t)*(uint8_t*)0x209900 << 0x1c;  /* "_250117" */
000036aa      
000036ac      if (result < 0)
000036ac      {
000036b0          *(uint8_t*)0x2098f4;
000036b4          result = 0;
000036ac      }
000036ac      
000036ba      return result;
00003672  }


000036ca    uint32_t sub_36ca()

000036ca  {
000036d0      return (uint32_t)*(uint8_t*)0x209904;
000036ca  }


000036d2    int32_t sub_36d2()

000036d2  {
000036dc      if ((uint32_t)*(uint8_t*)0x209904)
000036e2          sub_3730(0x2098f8);
000036e2      
000036e8      *(uint8_t*)0x209904 = 0;
000036ea      *(uint8_t*)0x209908 = 0;
000036f2      return sub_3498(0xff);
000036d2  }

000036f4  int32_t data_36f4 = 0x2098fc
000036f8  int32_t data_36f8 = 0x83db8b
000036fc  int32_t data_36fc = 0x827497
00003700  int32_t data_3700 = 0x208448

00003704    int32_t sub_3704(int32_t* arg1, int32_t arg2, int32_t arg3, int32_t arg4)

00003704  {
00003704      int32_t var_c_1 = arg4;
00003704      int32_t var_10_1 = arg3;
00003704      
0000370c      if (*(uint32_t*)arg1)
00003716          return 0xff7ef6e4(arg1, arg3);
00003716      
00003724      0xff7ef684(arg1, "qc_timer_restart", 1, arg3, arg4, arg2);
0000372e      return 0xff7ef6c0(arg1);
00003704  }


00003730    int32_t sub_3730(int32_t* arg1)

00003730  {
00003734      int32_t result = *(uint32_t*)arg1;
00003734      
00003738      if (!result)
00003746          return result;
00003746      
0000373c      0xff7ef70c(arg1);
00003742      return 0xff7ef730(arg1);
00003730  }

00003748  data_3748:
00003748                          71 63 5f 74 69 6d 65 72 5f 72 65 73 74 61 72 74 00 00 00 00                      qc_timer_restart....

0000375c    int32_t sub_375c() __pure

0000375c  {
0000375c      return;
0000375c  }


0000375e    int32_t sub_375e() __pure

0000375e  {
0000375e      return;
0000375e  }


00003760    int32_t sub_3760() __pure

00003760  {
00003760      return;
00003760  }


00003762    int32_t sub_3762() __pure

00003762  {
00003762      return;
00003762  }


00003764    uint32_t sub_3764(char* arg1, int32_t arg2)

00003764  {
00003766      int16_t r3 = 0;
00003766      
00003778      for (int32_t i = 0; i < arg2; i += 1)
00003778      {
0000376c          uint16_t r4_1 = (uint16_t)*(uint8_t*)arg1;
0000376e          arg1 = &arg1[1];
00003772          r3 += r4_1;
00003778      }
00003778      
0000377c      return (uint32_t)(uint8_t)r3;
00003764  }


0000377e    int32_t sub_377e()

0000377e  {
00003784      int32_t var_30 = 0;
00003786      int32_t var_2c = 0;
00003788      int32_t var_28 = 0;
0000378a      int32_t var_24 = 0;
0000378e      uint32_t r4 = 0;
00003790      int32_t r7 = *(uint32_t*)0x20b8b8;
00003792      int32_t r6 = *(uint32_t*)0x20b8a8;
00003796      void* var_20 = 0x20b890;
00003798      uint32_t r5 = (uint32_t)*(uint16_t*)0x20b8a0;
0000379c      uint32_t r0_1 = (uint32_t)*(uint16_t*)0x20b89e;
0000379c      
000037a6      if (sub_cd0c() == 2)
000037ac          r4 = sub_cd12();
000037ac      
000037b4      if (r4 - 0x28 >= 0xb5)
000037b6          r4 = 0;
000037b6      
000037bc      (uint8_t)var_30 = 0x78;
000037c2      *(uint8_t*)((char*)var_30)[1] = *(uint8_t*)((char*)var_20 + 2);
000037c2      
000037cc      if (sub_281e())
000037dc          *(uint8_t*)((char*)var_30)[2] = 3;
000037cc      else
000037cc      {
000037d0          uint32_t r0_9 = (uint32_t)*(uint8_t*)0x20b850;
000037d0          
000037d4          if (r0_9 == 1)
00003828              *(uint8_t*)((char*)var_30)[2] = 2;
000037d4          else if (r0_9 == 2)
00003828              *(uint8_t*)((char*)var_30)[2] = 1;
000037d8          else
000037dc              *(uint8_t*)((char*)var_30)[2] = 3;
000037cc      }
000037cc      
000037e4      *(uint8_t*)((char*)var_30)[3] = (char)(r0_1 >> 8);
000037e8      (uint8_t)var_2c = (uint8_t)r0_1;
000037ea      *(uint8_t*)((char*)var_2c)[1] = (char)r4;
000037ee      *(uint8_t*)((char*)var_2c)[2] = (char)(r7 >> 0x10);  /* "RY02_3.00.33_250117" */
000037f2      *(uint8_t*)((char*)var_2c)[3] = (char)(r7 >> 8);
000037f4      (uint8_t)var_28 = (char)r7;
000037f8      *(uint8_t*)((char*)var_28)[1] = (char)(r5 >> 0x10);  /* "RY02_3.00.33_250117" */
000037fc      *(uint8_t*)((char*)var_28)[2] = (char)(r5 >> 8);
000037fe      *(uint8_t*)((char*)var_28)[3] = (char)r5;
00003802      (uint8_t)var_24 = (char)(r6 >> 0x10);  /* "RY02_3.00.33_250117" */
00003806      *(uint8_t*)((char*)var_24)[1] = (char)(r6 >> 8);
00003808      *(uint8_t*)((char*)var_24)[2] = (char)r6;
00003814      *(uint8_t*)((char*)var_24)[3] = sub_3764(&var_30, 0xf);
0000381e      return sub_6650(&var_30);
0000377e  }


0000382c    int32_t sub_382c()

0000382c  {
00003834      if ((uint32_t)*(uint8_t*)0x20b850)
0000383a          return sub_377e();
0000383a      
0000383c      sub_377e();
00003846      return 0xff7ef70c(0x209924);
0000382c  }


00003848    int32_t sub_3848()

00003848  {
00003848      int32_t r3;
00003848      int32_t var_c = r3;
00003848      int32_t r2;
00003848      int32_t var_10 = r2;
00003860      return 0xff7ef684(0x209924, &data_3b90, 1, 0x3e8, 1, 0x8277dd);
00003848  }


00003862    uint32_t sub_3862()

00003862  {
00003862      int32_t lr;
00003862      int32_t var_4 = lr;
00003862      int32_t r7;
00003862      int32_t var_8 = r7;
00003862      int32_t r6;
00003862      int32_t var_c = r6;
00003862      int32_t r5;
00003862      int32_t var_10 = r5;
00003862      int32_t r4;
00003862      int32_t var_14 = r4;
00003868      void* r4_1 = 0x209914;
0000386a      uint32_t result = (uint32_t)*(uint8_t*)0x20991e;
0000386e      int32_t* r1 = result - 1;
00003870      int32_t var_28;
00003870      int32_t* sp = &var_28;
00003874      int32_t var_24;
00003874      
00003874      if (r1 <= 0x3b)
00003874      {
00003884          if (!sub_ccfc() && (uint32_t)*(uint8_t*)0x20991e > 6)
00003884          {
00003886              *(uint8_t*)0x209916 = 1;
00003888              var_28 = 0;
0000388a              var_24 = 0;
0000388c              int32_t var_20_1 = 0;
00003890              int32_t var_1c_1 = 0;
00003892              (uint8_t)var_28 = 0x69;
00003896              *(uint8_t*)((char*)var_28)[1] = *(uint8_t*)0x20991c;
00003898              *(uint8_t*)((char*)var_28)[2] = 1;
0000389a              *(uint8_t*)((char*)var_28)[3] = 0;
000038a6              *(uint8_t*)((char*)var_1c_1)[3] = sub_3764(&var_28, 0xf);
000038aa              int32_t r1_1;
000038aa              int32_t r2;
000038aa              r1_1 = sub_6650(&var_28);
000038ae              *(uint8_t*)0x209916 = 0;
000038b0              uint32_t r0_6 = (uint32_t)*(uint8_t*)0x20991c;
000038b4              int32_t r0_7;
000038b4              
000038b4              if (r0_6 == 3)
00003918                  r0_7 = 0x20;  /* "117" */
000038b4              else if (r0_6 == 9)
0000391e                  r0_7 = 0x400;
000038b8              else if (r0_6 == 0xa)
00003924                  r0_7 = 0x100;
000038bc              else if (r0_6 == 8)
0000392a                  r0_7 = 0x200;
000038c0              else
000038c2                  r0_7 = 1;
000038c2              
000038c4              sub_b540(r0_7, r1_1, r2);
000038cc              r1 = 0xff7ef70c(0x209920);
00003884          }
00003884          
000038d0          result = (uint32_t)*(uint8_t*)0x20991e;
000038d0          
000038d4          if (result > 0x32)  /* "02_V3.0" */
000038d4          {
000038d6              result = (uint32_t)*(uint8_t*)0x209916;
000038d6              
000038da              if (result != 1)
000038da              {
000038dc                  result = sub_cd0c();
000038dc                  
000038e2                  if (result == 2)
000038e2                  {
000038e4                      var_28 = 0;
000038e6                      var_24 = 0;
000038e8                      int32_t var_20_2 = 0;
000038ec                      int32_t var_1c_2 = 0;
000038ee                      (uint8_t)var_28 = 0x69;
000038f0                      uint32_t r0_8 = (uint32_t)*(uint8_t*)0x20991c;
000038f2                      *(uint8_t*)((char*)var_28)[1] = (char)r0_8;
000038f4                      *(uint8_t*)((char*)var_28)[2] = 0;
000038f4                      
000038f8                      if (r0_8 == 3)
000038f8                      {
00003934                          *(uint8_t*)((char*)var_28)[3] = sub_b810();
00003936                          (uint8_t)var_24 = 1;
00003986                      label_3986:
00003986                          
00003988                          if ((uint32_t)*(uint8_t*)((char*)sp + 3))
00003988                              goto label_39a6;
00003988                          
00003988                          goto label_398c;
000038f8                      }
000038f8                      
000038fc                      if (r0_8 == 8)
000038fc                      {
0000393a                          uint32_t r0_12 = sub_bec0();
00003940                          *(uint8_t*)((char*)var_28)[3] = (char)r0_12;
00003940                          
00003946                          if (r0_12 - 0x14 < 0x2e)  /* "_3.00.33_250117" */
00003946                              goto label_3986;
00003946                          
00003980                      label_3980:
00003980                          *(uint8_t*)((char*)var_28)[3] = sub_12b3e(sub_814(), 0x14) + 0x1e;
00003980                              /* "_3.00.33_250117" */  /* "50117" */
00003980                          goto label_3986;
000038fc                      }
000038fc                      
00003900                      if (r0_8 == 9)
00003900                      {
0000394e                          r4_1 = sub_c17c(sub_b810(), 0x209914, 0, r1);
0000394e                          sp = &var_24;
00003958                          *(uint8_t*)((char*)var_24)[3] = sub_c1dc();
0000395a                          goto label_3986;
00003900                      }
00003900                      
00003904                      if (r0_8 == 0xa)
00003904                      {
0000395e                          uint32_t r0_16 = sub_c060();
00003964                          *(uint8_t*)((char*)var_28)[3] = (char)r0_16;
00003964                          
0000396c                          if (r0_16 - 0x1e < 0x15)  /* "3.00.33_250117" */  /* "50117" */
0000396c                              goto label_3986;
0000396c                          
00003970                          if (r0_16)
00003970                              goto label_3980;
00003904                      }
00003904                      else
00003904                      {
00003906                          uint32_t r0_9 = sub_cd12();
0000390c                          *(uint8_t*)((char*)var_28)[3] = (char)r0_9;
0000390c                          
00003912                          if (r0_9 - 0x28 < 0xb5)
00003912                              goto label_3986;
00003912                          
00003914                          *(uint8_t*)((char*)var_28)[3] = 0;
00003904                      }
00003904                      
0000398c                  label_398c:
0000398c                      
0000398e                      if ((uint32_t)*(uint8_t*)((char*)r4_1 + 8) != 0xa)
0000398e                      {
00003990                          uint32_t r0_21 = sub_814();
000039a4                          *(uint8_t*)((char*)sp + 3) = (uint8_t)r0_21
000039a4                              - (char)(((r0_21 >> 0x1f >> 0x1e) + r0_21) >> 2 << 2) + 0x5f;
000039a4                              /* "50117" */  /* "0117" */
000039a6                      label_39a6:
000039a6                          uint32_t r0_24 = (uint32_t)*(uint8_t*)((char*)r4_1 + 8);
000039a6                          
000039b4                          if ((r0_24 == 5 || r0_24 == 2)
000039b4                              && (uint32_t)*(uint8_t*)((char*)r4_1 + 0xa) >= 0x33)  /* "2_V3.0"
000039b4                              */
000039b4                          {
000039bc                              if (!(uint32_t)*(uint8_t*)((char*)r4_1 + 3))
000039bc                              {
000039e0                                  *(uint8_t*)((char*)r4_1 + 3) = 1;
000039e8                                  sub_bd82((uint32_t)*(uint8_t*)((char*)sp + 3), &sp[1], 
000039e8                                      (char*)sp + 5);
000039bc                              }
000039bc                              else
000039c2                                  sub_bc3c(&sp[1], (char*)sp + 5);
000039b4                          }
0000398e                      }
0000398e                      
000039d0                      *(uint8_t*)((char*)sp + 0xf) = sub_3764(sp, 0xf);
000039d8                      result = sub_6650(sp);
000038e2                  }
000038da              }
000038d4          }
00003874      }
00003874      else if (result >= 0x3b)
000039f0      {
000039f2          uint32_t r0_32 = (uint32_t)*(uint8_t*)0x20991c;
000039f6          int32_t entry_r2;
000039f6          
000039f6          if (r0_32 == 0xa)
000039f6          {
000039f8              var_28 = 0;
000039fa              var_24 = 0;
000039fc              int32_t var_20_3 = 0;
00003a00              int32_t var_1c_3 = 0;
00003a02              (uint8_t)var_28 = 0x69;
00003a04              *(uint8_t*)((char*)var_28)[1] = (char)r0_32;
00003a06              *(uint8_t*)((char*)var_28)[2] = 0;
00003a08              uint32_t r0_33 = sub_c060();
00003a0e              *(uint8_t*)((char*)var_28)[3] = (char)r0_33;
00003a0e              
00003a18              if ((uint32_t)*(uint8_t*)0x20991e >= 0x65 && !r0_33)
00003a28                  *(uint8_t*)((char*)var_28)[3] = sub_12b3e(sub_814(), 0x14) + 0x1e;
00003a28                      /* "_3.00.33_250117" */  /* "50117" */
00003a28              
00003a2c              uint32_t r0_35 = (uint32_t)*(uint8_t*)((char*)var_28)[3];
00003a2c              
00003a38              if (r0_35 - 0x1e >= 0x15 && r0_35)  /* "3.00.33_250117" */  /* "50117" */
00003a48                  *(uint8_t*)((char*)var_28)[3] = sub_12b3e(sub_814(), 0x14) + 0x1e;
00003a48                      /* "_3.00.33_250117" */  /* "50117" */
00003a48              
00003a54              *(uint8_t*)((char*)var_1c_3)[3] = sub_3764(&var_28, 0xf);
00003a58              entry_r2 = sub_6650(&var_28);
00003a5c              r1 = &var_28;
00003a5e              result = (uint32_t)*(uint8_t*)((char*)var_28)[3];
000039f6          }
000039f6          
00003a62          if (r0_32 != 0xa || result)
00003a62          {
00003a64              *(uint8_t*)0x209916 = 0;
00003a66              uint32_t r0_40 = (uint32_t)*(uint8_t*)0x20991c;
00003a6a              int32_t r0_41;
00003a6a              
00003a6a              if (r0_40 == 3)
00003a8c                  r0_41 = 0x20;  /* "117" */
00003a6a              else if (r0_40 == 9)
00003a92                  r0_41 = 0x400;
00003a6e              else if (r0_40 == 0xa)
00003a98                  r0_41 = 0x100;
00003a72              else if (r0_40 == 8)
00003a9e                  r0_41 = 0x200;
00003a76              else
00003a78                  r0_41 = 1;
00003a78              
00003a7a              sub_b540(r0_41, r1, entry_r2);
00003a7e              sub_c0de();
00003a86              result = 0xff7ef70c(0x209920);
00003a62          }
000039f0      }
000039dc      sp[5];
000039de      sp[6];
000039de      sp[7];
000039de      sp[8];
000039de      return result;
00003862  }


00003aa2    uint32_t sub_3aa2()

00003aa2  {
00003aaa      uint32_t r2 = (uint32_t)*(uint8_t*)0x20991d;
00003aae      uint32_t result = 0x16;  /* ".00.33_250117" */
00003ab0      uint32_t r1 = (uint32_t)*(uint8_t*)0x20991e;
00003ab8      int32_t var_28;
00003ab8      
00003ab8      if (r2 == 1)
00003ab8      {
00003acc          if (r1 - 1 > 0x13)  /* "2_3.00.33_250117" */
00003acc          {
00003b48              *(uint8_t*)0x20991e = 0x16;  /* ".00.33_250117" */
00003b50              int32_t var_1c_2;
00003b50              
00003b50              if (!sub_ccfc())
00003b50              {
00003bf2                  int32_t r0_24;
00003bf2                  int32_t r1_6;
00003bf2                  int32_t r2_2;
00003bf2                  r0_24 = sub_139fc(sub_cd12() + sub_12b3e(sub_814(), 3) - 1);
00003bf8                  *(uint32_t*)0x209928 = r0_24;
00003bfa                  *(uint8_t*)0x209919 = 1;
00003bfe                  sub_b540(1, r1_6, r2_2);
00003c02                  var_28 = 0;
00003c04                  int32_t var_24_3 = 0;
00003c06                  int32_t var_20_3 = 0;
00003c0a                  var_1c_2 = 0;
00003c0c                  (uint8_t)var_28 = 0x69;
00003c10                  *(uint8_t*)((char*)var_28)[1] = *(uint8_t*)0x20991c;
00003c12                  *(uint8_t*)((char*)var_28)[2] = 1;
00003c1c                  *(uint8_t*)((char*)var_28)[3] = sub_13984(*(uint32_t*)0x209928);
00003c28                  *(uint8_t*)((char*)var_1c_2)[3] = sub_3764(&var_28, 0xf);
00003c2c                  int32_t r1_7;
00003c2c                  int32_t r2_3;
00003c2c                  r1_7 = sub_6650(&var_28);
00003c34                  result = (uint32_t)(*(uint8_t*)0x20991a + 1);
00003c36                  *(uint8_t*)0x20991a = (char)result;
00003c36                  
00003c3a                  if (result >= 0x3c)
00003c3a                  {
00003c3c                      *(uint8_t*)0x20991a = 0;
00003c40                      sub_b540(1, r1_7, r2_3);
00003c44                      *(uint8_t*)0x20991e = 0;
00003c48                      0xff7ef70c(0x209920);
00003c50                      *(uint8_t*)((char*)var_28)[2] = 2;
00003c5c                  label_3c5c:
00003c5c                      *(uint8_t*)((char*)var_1c_2)[3] = sub_3764(&var_28, 0xf);
00003cc8                      return sub_6650(&var_28);
00003c3a                  }
00003b50              }
00003b50              else
00003b50              {
00003b54                  *(uint8_t*)0x20991a = 0x38;  /* "0" */
00003b56                  result = (uint32_t)*(uint8_t*)0x209919;
00003b56                  
00003b5a                  if (!result)
00003b5a                  {
00003b6c                      result = (uint32_t)(*(uint8_t*)0x209918 + 1);
00003b6e                      *(uint8_t*)0x209918 = (char)result;
00003b6e                      
00003b72                      if (result >= 2)
00003b72                      {
00003b74                          *(uint8_t*)0x209918 = 0;
00003b76                          result = sub_cd0c();
00003b76                          
00003b7c                          if (result == 2)
00003b7c                          {
00003bbc                              int32_t r0_18 =
00003bbc                                  sub_139fc(sub_cd12() + sub_12b3e(sub_814(), 3) - 1);
00003bc0                              *(uint32_t*)0x209928 = r0_18;
00003bc2                              var_28 = 0;
00003bc4                              int32_t var_24_2 = 0;
00003bc6                              int32_t var_20_2 = 0;
00003bca                              var_1c_2 = 0;
00003bcc                              (uint8_t)var_28 = 0x69;
00003bd0                              *(uint8_t*)((char*)var_28)[1] = *(uint8_t*)0x20991c;
00003bd2                              *(uint8_t*)((char*)var_28)[2] = 0;
00003bda                              *(uint8_t*)((char*)var_28)[3] = sub_13984(r0_18);
00003bdc                              goto label_3c5c;
00003b7c                          }
00003b7c                          
00003b7e                          *(uint32_t*)0x209928 = 0;
00003b72                      }
00003b5a                  }
00003b5a                  else if (result == 1)
00003b5e                  {
00003b60                      *(uint8_t*)0x20991e = 0;
00003b62                      return sub_b55a(result, r1 - 1, r2);
00003b5e                  }
00003b50              }
00003acc          }
00003acc          else
00003acc          {
00003ada              if (!sub_ccfc() && (uint32_t)*(uint8_t*)0x20991e > 6)
00003ada              {
00003adc                  *(uint8_t*)0x20991e = 0;
00003ade                  *(uint8_t*)0x20991a = 0;
00003ae0                  *(uint8_t*)0x209918 = 0;
00003ae4                  *(uint8_t*)0x209919 = 1;
00003ae6                  sub_b540(1, r1 - 1, r2);
00003aee                  0xff7ef70c(0x209920);
00003b06                  int32_t r0_6 = sub_139fc(sub_cd12() + sub_12b3e(sub_814(), 3) - 1);
00003b0a                  *(uint32_t*)0x209928 = r0_6;
00003b0c                  var_28 = 0;
00003b0e                  int32_t var_24_1 = 0;
00003b10                  int32_t var_20_1 = 0;
00003b14                  int32_t var_1c_1 = 0;
00003b16                  (uint8_t)var_28 = 0x69;
00003b1a                  *(uint8_t*)((char*)var_28)[1] = *(uint8_t*)0x20991c;
00003b1e                  *(uint8_t*)((char*)var_28)[2] = 2;
00003b26                  *(uint8_t*)((char*)var_28)[3] = sub_13984(r0_6);
00003b32                  *(uint8_t*)((char*)var_1c_1)[3] = sub_3764(&var_28, 0xf);
00003b36                  sub_6650(&var_28);
00003ada              }
00003ada              
00003b3a              result = (uint32_t)*(uint8_t*)0x20991e;
00003b3a              
00003b3e              if (result == 0x14)  /* "_3.00.33_250117" */
00003b3e              {
00003b40                  *(uint8_t*)0x20991a = 0;
00003b42                  *(uint8_t*)0x209919 = 0;
00003b44                  *(uint8_t*)0x209918 = 0;
00003b3e              }
00003acc          }
00003ab8      }
00003ab8      else if (r2 == 3)
00003abc      {
00003abe          *(uint8_t*)0x20991a = 0;
00003abe          
00003ac2          if (r1 > 0x14)  /* "_3.00.33_250117" */
00003c62              *(uint8_t*)0x20991e = 0x16;  /* ".00.33_250117" */
00003ac2          else
00003ac4              *(uint8_t*)0x20991e = 0;
00003ac4          
00003c66          *(uint8_t*)0x20991d = 1;
00003c68          result = sub_ccfc();
00003c68          
00003c6e          if (!result)
00003c6e          {
00003c70              *(uint8_t*)0x20991e = 0;
00003c72              *(uint8_t*)0x20991a = 0;
00003c74              *(uint8_t*)0x209918 = 0;
00003c76              *(uint8_t*)0x209919 = 1;
00003c7a              sub_b540(1, r1, r2);
00003c80              0xff7ef70c(0x209920);
00003c98              int32_t r0_40 = sub_139fc(sub_cd12() + sub_12b3e(sub_814(), 3) - 1);
00003c9c              *(uint32_t*)0x209928 = r0_40;
00003c9e              var_28 = 0;
00003ca0              int32_t var_24_4 = 0;
00003ca2              int32_t var_20_4 = 0;
00003ca6              int32_t var_1c_3 = 0;
00003ca8              (uint8_t)var_28 = 0x69;
00003cac              *(uint8_t*)((char*)var_28)[1] = *(uint8_t*)0x20991c;
00003cb0              *(uint8_t*)((char*)var_28)[2] = 2;
00003cb8              *(uint8_t*)((char*)var_28)[3] = sub_13984(r0_40);
00003cc4              *(uint8_t*)((char*)var_1c_3)[3] = sub_3764(&var_28, 0xf);
00003cc8              return sub_6650(&var_28);
00003c6e          }
00003abc      }
000039de      return result;
00003aa2  }

00003b84  int32_t data_3b84 = 0x20b850
00003b88  int32_t data_3b88 = 0x209924

00003b8c    int32_t sub_3b8c(int32_t arg1, char arg2, int32_t arg3, void* arg4, void* arg5 @ r4, void* arg6 @ r5, void* arg7 @ r6, int32_t arg8 @ r7, int32_t arg9, int32_t arg10, int32_t arg11, int32_t arg12)

00003b8c  {
00003b8c      *(uint8_t*)((char*)arg4 + 0x1f) = (char)arg6;  /* "0117" */
00003b90      *(uint8_t*)((char*)arg5 + 1) = arg2;
00003b94      char r2 = (char)*(uint32_t*)((char*)arg7 + 0x14);  /* "_3.00.33_250117" */
00003b96      *(uint32_t*)((char*)arg6 + 0x74) = arg7;
00003b98      *(uint8_t*)((char*)arg4 + 0xd) = (char)arg8;
00003b9a      *(uint32_t*)((char*)arg7 + 0x74);
00003b9c      *(uint8_t*)((char*)arg7 + 0x11) = r2;  /* "Y02_3.00.33_250117" */
00003b9e      *(uint32_t*)((char*)arg4 + 0x44) = arg8;
00003ba0      *(uint8_t*)((char*)arg5 + 0x11) = arg2;  /* "Y02_3.00.33_250117" */
00003ba4      *(uint32_t*)((char*)arg6 + 0x44) = (int32_t)*(uint16_t*)((char*)arg5 + arg6);
00003bbc      int32_t r0_6 = sub_139fc(sub_cd12() + sub_12b3e(sub_814(), 3) - 1);
00003bc0      *(uint32_t*)((char*)arg5 + 0x14) = r0_6;  /* "_3.00.33_250117" */
00003bc2      void* arg_0 = arg6;
00003bc4      void* arg_4 = arg6;
00003bc6      void* arg_8 = arg6;
00003bca      void* arg_c = arg6;
00003bcc      (uint8_t)arg_0 = (char)arg7;
00003bd0      *(uint8_t*)((char*)arg_0)[1] = *(uint8_t*)((char*)arg5 + 8);
00003bd2      *(uint8_t*)((char*)arg_0)[2] = (char)arg6;
00003bda      *(uint8_t*)((char*)arg_0)[3] = sub_13984(r0_6);
00003c5c      *(uint8_t*)((char*)arg_c)[3] = sub_3764(&arg_0, 0xf);
00003cc8      return sub_6650(&arg_0);
00003b8c  }


00003cce    uint32_t sub_3cce()

00003cce  {
00003cd8      *(uint8_t*)0x20991e += 1;
00003cd8      
00003cde      if ((uint32_t)*(uint8_t*)0x20991c == 6)
00003cea          return sub_3aa2();
00003cea      
00003ce4      return sub_3862();
00003cce  }


00003cec    int32_t sub_3cec()

00003cec  {
00003cec      int32_t r3;
00003cec      int32_t var_c = r3;
00003cec      int32_t r2;
00003cec      int32_t var_10 = r2;
00003d04      return 0xff7ef684(0x209920, "m_heart_rate_timer_id", 1, 0x1f4, 1, 0x827c7f);
00003cec  }


00003d06    int32_t sub_3d06()

00003d06  {
00003d08      sub_3cec();
00003d10      return sub_3848();
00003d06  }


00003d12    uint32_t sub_3d12(char arg1, int32_t arg2, uint32_t arg3)

00003d12  {
00003d16      uint32_t i = arg3;
00003d18      int32_t r5 = arg2;
00003d5c      uint32_t result;
00003d5c      
00003d5c      do
00003d5c      {
00003d1e          int32_t var_28 = 0;
00003d20          int32_t var_24_1 = 0;
00003d22          int32_t var_20_1 = 0;
00003d24          int32_t var_1c_1 = 0;
00003d28          char r0;
00003d28          
00003d28          r0 = i <= 0xe ? (uint8_t)i : 0xe;
00003d28          
00003d30          uint32_t r7_1 = (uint32_t)r0;
00003d34          (uint8_t)var_28 = arg1;
00003d3e          0xff81b898(&*(uint32_t*)((char*)var_28)[1], r5, r7_1);
00003d4c          *(uint8_t*)((char*)var_1c_1)[3] = sub_3764(&var_28, 0xf);
00003d50          sub_6650(&var_28);
00003d54          r5 += r7_1;
00003d56          result = i - r7_1;
00003d5a          i = result << 0x10 >> 0x10;  /* "RY02_3.00.33_250117" */
00003d5c      } while (i);
00003d5c      
000039de      return result;
00003d12  }


00003d60    int32_t sub_3d60(int32_t arg1, int32_t arg2)

00003d60  {
00003d60      int32_t r3;
00003d60      int32_t var_c_1 = r3;
00003d60      int32_t r2;
00003d60      int32_t var_10_1 = r2;
00003d60      int32_t var_14_1 = arg2;
00003d60      int32_t result = arg1;
00003d64      result = 0;
00003d66      int32_t var_14 = 0;
00003d68      int32_t var_10 = 0;
00003d6a      int32_t var_c = 0;
00003d6a      
00003d6e      if (arg2)
00003d72          arg1 |= 0x80;
00003d72      
00003d76      (uint8_t)result = (char)arg1;
00003d78      *(uint8_t*)((char*)var_c)[3] = (char)arg1;
00003d7c      sub_6650(&result);
00003d80      return result;
00003d60  }


00003d82    int32_t sub_3d82(int32_t arg1, int32_t arg2)

00003d82  {
00003d82      int32_t r3;
00003d82      int32_t var_c_1 = r3;
00003d82      int32_t r2;
00003d82      int32_t var_10_1 = r2;
00003d82      int32_t var_14_1 = arg2;
00003d82      int32_t result = arg1;
00003d86      result = 0;
00003d88      int32_t var_14 = 0;
00003d8a      int32_t var_10 = 0;
00003d8c      int32_t var_c = 0;
00003d90      (uint8_t)result = (char)arg1;
00003d92      *(uint8_t*)((char*)result)[1] = (char)arg2;
00003d96      *(uint8_t*)((char*)var_c)[3] = (uint8_t)arg1 + (uint8_t)arg2;
00003d9a      sub_6650(&result);
00003d9e      return result;
00003d82  }


00003da0    int32_t sub_3da0()

00003da0  {
00003daa      sub_357e(0x14, 1, 1, 2);  /* "_3.00.33_250117" */
00003db6      return sub_3d60(0x10, 0);  /* "RY02_3.00.33_250117" */
00003da0  }


00003db8    void* sub_3db8(void* arg1)

00003db8  {
00003db8      int32_t r3;
00003db8      int32_t var_14_1 = r3;
00003db8      int32_t r2;
00003db8      int32_t var_18_1 = r2;
00003db8      int32_t r1;
00003db8      int32_t var_1c_1 = r1;
00003db8      void* result = arg1;
00003dbe      result = &data_0;
00003dc0      int32_t var_1c = 0;
00003dc2      int32_t var_18 = 0;
00003dc4      int32_t var_14 = 0;
00003dcc      void** r0_6;
00003dcc      
00003dcc      if ((uint32_t)*(uint8_t*)((char*)arg1 + 1) == 1)
00003dcc      {
00003e0e          (uint8_t)result = 0xa;
00003e12          *(uint8_t*)((char*)result)[1] = 1;
00003e14          *(uint8_t*)((char*)result)[2] = 0;
00003e1c          *(uint8_t*)((char*)result)[3] = sub_166c();
00003e28          *(uint8_t*)((char*)var_14)[3] = sub_3764(&result, 0xf);
00003e2a          r0_6 = &result;
00003dcc      }
00003dcc      else
00003dcc      {
00003dd0          sub_164c((uint32_t)*(uint8_t*)((char*)arg1 + 3));
00003dd4          sub_9070();
00003dd8          uint32_t r2_1 = (uint32_t)*(uint8_t*)((char*)arg1 + 6);
00003dd8          
00003ddc          if (r2_1)
00003de4              sub_1676((uint32_t)*(uint8_t*)((char*)arg1 + 4), 
00003de4                  *(uint8_t*)((char*)arg1 + 5), (uint8_t)r2_1, 
00003de4                  *(uint8_t*)((char*)arg1 + 7));
00003de4          
00003dea          (uint8_t)result = 0xa;
00003dee          *(uint8_t*)((char*)result)[1] = 2;
00003df2          *(uint8_t*)((char*)result)[2] = *(uint8_t*)((char*)arg1 + 2);
00003df6          *(uint8_t*)((char*)result)[3] = *(uint8_t*)((char*)arg1 + 3);
00003e02          *(uint8_t*)((char*)var_14)[3] = sub_3764(&result, 0xf);
00003e04          r0_6 = &result;
00003dcc      }
00003dcc      
00003e06      sub_6650(r0_6);
00003e0a      return result;
00003db8  }


00003e2e    int32_t sub_3e2e(int32_t arg1)

00003e2e  {
00003e2e      int32_t r3;
00003e2e      int32_t var_c_1 = r3;
00003e2e      int32_t r2;
00003e2e      int32_t var_10_1 = r2;
00003e2e      int32_t r1;
00003e2e      int32_t var_14_1 = r1;
00003e2e      int32_t result = arg1;
00003e32      result = 0;
00003e34      int32_t var_14 = 0;
00003e36      int32_t var_10 = 0;
00003e38      int32_t var_c = 0;
00003e3e      (uint8_t)result = 0x2b;
00003e4a      *(uint8_t*)((char*)var_c)[3] = sub_3764(&result, 0xf);
00003e4e      sub_6650(&result);
00003e52      return result;
00003e2e  }


00003e54    uint32_t sub_3e54(void* arg1)

00003e54  {
00003e5a      uint32_t r0 = sub_5b94();
00003e60      uint32_t r1;
00003e60      
00003e60      r1 = r0 <= 0x32 ? 0x14 : (uint32_t)(uint8_t)r0;
00003e60          /* "_3.00.33_250117" */  /* "02_V3.0" */
00003e60      
00003e6a      sub_3d82(0x2f, r1);
00003e76      char var_20 = sub_6830((uint32_t)*(uint8_t*)((char*)arg1 + 1));
00003e80      char var_1f = sub_6830((uint32_t)*(uint8_t*)((char*)arg1 + 2));
00003e8a      char var_1e = sub_6830((uint32_t)*(uint8_t*)((char*)arg1 + 3));
00003e94      char var_1d = sub_6830((uint32_t)*(uint8_t*)((char*)arg1 + 4));
00003e9e      char var_1c = sub_6830((uint32_t)*(uint8_t*)((char*)arg1 + 5));
00003ea8      char var_1b = sub_6830((uint32_t)*(uint8_t*)((char*)arg1 + 6));
00003ea8      
00003eb0      if (!sub_1620())
00003eb2          sub_162a();
00003eb2      
00003eb6      int32_t r0_14 = sub_183e();
00003ebe      int32_t r0_16 = sub_20ec(&var_20);
00003ebe      
00003ec6      if (r0_14 != r0_16)
00003ec6      {
00003ece          if (!(uint32_t)*(uint8_t*)0x208852)
00003ece          {
00003f06              sub_1830(sub_20ec(&var_20));
00003f0e              *(uint8_t*)0x208852 = 1;
00003f10              *(uint8_t*)0x2087b9 = 1;
00003f12              sub_1598();
00003f16              j_sub_1410();
00003ece          }
00003ece          else
00003ece          {
00003ed6              int32_t r0_19 = sub_12b2a(r0_14, 0x384);
00003ed6              
00003ee8              if (r0_19 == sub_12b2a(r0_16, 0x384))
00003f30                  sub_1830(r0_16);
00003ee8              else if (r0_16 > r0_14)
00003eec              {
00003ef6                  sub_1830(0x384 * (r0_19 + 1));
00003efa                  sub_8f00();
00003f24                  sub_1830(r0_16);
00003f28                  sub_1598();
00003eec              }
00003eec              else if (r0_14 - r0_16 > 2)
00003f20              {
00003f24                  sub_1830(r0_16);
00003f28                  sub_1598();
00003f20              }
00003ece          }
00003ec6      }
00003ec6      
00003f36      int32_t var_30 = 0;
00003f38      int32_t var_2c = 0;
00003f3a      int32_t var_28 = 0;
00003f46      *(uint8_t*)((char*)var_30)[3] |= 2;
00003f4a      (uint8_t)var_28 = 1;
00003f52      *(uint8_t*)((char*)var_28)[2] = 0x20;  /* "117" */
00003f5e      int16_t var_24;
00003f5e      *(uint8_t*)((char*)var_24)[1] = *(uint8_t*)((char*)0)[1] | 0x10 | 0x20;
00003f5e          /* "RY02_3.00.33_250117" */  /* "117" */
00003f5e      
00003f64      if ((uint32_t)*(uint8_t*)((char*)arg1 + 7) != 0xff)
00003f6a          sub_1646(sub_183e());
00003f6a      
00003f74      return sub_3d12(1, &var_30, 0xe);
00003e54  }


00003f7a    int32_t sub_3f7a(int32_t arg1)

00003f7a  {
00003f7a      int32_t r3;
00003f7a      int32_t var_c_1 = r3;
00003f7a      int32_t r2;
00003f7a      int32_t var_10_1 = r2;
00003f7a      int32_t r1;
00003f7a      int32_t var_14_1 = r1;
00003f7a      int32_t result = arg1;
00003f7e      result = 0;
00003f80      int32_t var_14 = 0;
00003f82      int32_t var_10 = 0;
00003f84      int32_t var_c = 0;
00003f8a      (uint8_t)result = 3;
00003f92      *(uint8_t*)((char*)result)[1] = sub_26ac();
00003f92      
00003f9a      if (sub_281e())
00003fa0          *(uint8_t*)((char*)result)[2] = 1;
00003fa0      
00003fac      *(uint8_t*)((char*)var_c)[3] = sub_3764(&result, 0xf);
00003fb0      sub_6650(&result);
00003fb4      return result;
00003f7a  }


00003fb6    int32_t sub_3fb6(int32_t arg1)

00003fb6  {
00003fb6      int32_t r3;
00003fb6      int32_t var_c_1 = r3;
00003fb6      int32_t r2;
00003fb6      int32_t var_10_1 = r2;
00003fb6      int32_t r1;
00003fb6      int32_t var_14_1 = r1;
00003fb6      int32_t result = arg1;
00003fba      result = 0;
00003fbc      int32_t var_14 = 0;
00003fbe      int32_t var_10 = 0;
00003fc0      int32_t var_c = 0;
00003fc4      char r0 = (uint8_t)arg1 | 0x80;
00003fc8      (uint8_t)result = r0;
00003fcc      *(uint8_t*)((char*)result)[1] = 0xee;
00003fd0      *(uint8_t*)((char*)var_c)[3] = r0 - 0x12;  /* "02_3.00.33_250117" */
00003fd4      sub_6650(&result);
00003fd8      return result;
00003fb6  }


00003fda    int32_t sub_3fda(void* arg1)

00003fda  {
00003fe0      int32_t var_30 = 0;
00003fe2      int32_t var_2c = 0;
00003fe4      int32_t var_28 = 0;
00003fe6      int32_t var_24 = 0;
00003fec      (uint8_t)var_30 = 0xce;
00003fee      uint32_t r4 = (uint32_t)*(uint8_t*)((char*)arg1 + 1);
00003ff0      uint32_t r7 = (uint32_t)*(uint8_t*)((char*)arg1 + 2);
00003ff2      uint32_t r6 = (uint32_t)*(uint8_t*)((char*)arg1 + 3);
00003ff4      uint32_t r5 = (uint32_t)*(uint8_t*)((char*)arg1 + 4);
00003ffc      char var_20;
00003ffc      0xff81b898(&var_20, (char*)arg1 + 5, 0xa);
00003ffc      
00004002      if (r4 == 1)
00004012          sub_b524(r7, r6, &var_20, r5);
00004002      else if (r4 == 2)
00004020          sub_b458(r7, r6, &var_20, r5);
00004020      
0000402c      0xff81b898(&*(uint32_t*)((char*)var_30)[1], &var_20, r5);
0000403a      *(uint8_t*)((char*)var_24)[3] = sub_3764(&var_30, 0xf);
00004068      return sub_6650(&var_30);
00003fda  }

00004040  int32_t data_4040 = 0x209920
00004044  int32_t data_4044 = 0x827c7f

00004048  data_4048:
00004048                          6d 5f 68 65 61 72 74 5f 72 61 74 65 5f 74 69 6d 65 72 5f 69 64 00 00 00          m_heart_rate_timer_id...

00004060  int32_t data_4060 = 0x208850
00004064  int32_t data_4064 = 0x2087ac

0000406e    void* sub_406e(void* arg1)

0000406e  {
0000406e      int32_t r3;
0000406e      int32_t var_c_1 = r3;
0000406e      int32_t r2;
0000406e      int32_t var_10_1 = r2;
0000406e      int32_t r1;
0000406e      int32_t var_14_1 = r1;
0000406e      void* result = arg1;
00004072      result = &data_0;
00004074      int32_t var_14 = 0;
00004076      int32_t var_10 = 0;
00004078      int32_t var_c = 0;
0000407e      (uint8_t)result = 0xcd;
0000407e      
0000409c      if ((uint32_t)*(uint8_t*)((char*)arg1 + 1) == 1)
0000409c      {
00004096          *(uint8_t*)((char*)arg1 + 2);
000040a8          0xff81b898(&*(uint32_t*)((char*)result)[1]);
0000409c      }
0000409c      
000040b6      *(uint8_t*)((char*)var_c)[3] = sub_3764(&result, 0xf);
000040ba      sub_6650(&result);
000040be      return result;
0000406e  }


000040c0    int32_t sub_40c0(int32_t arg1)

000040c0  {
000040d0      0xff81b898(((uint32_t)*(uint16_t*)0x20992e << 4) + 0x209930, arg1, 0x10);
000040d0          /* "RY02_3.00.33_250117" */
000040d4      uint32_t r0_4 = (uint32_t)*(uint16_t*)0x20992e;
000040d8      int16_t r0_5;
000040d8      
000040d8      r0_5 = r0_4 < 9 ? (uint16_t)r0_4 + 1 : 0;
000040d8      
000040e0      *(uint16_t*)0x20992e = r0_5;
000040ea      return sub_116c();
000040c0  }


000040ec    uint32_t sub_40ec(char* arg1)

000040ec  {
00004108      uint32_t r2_6 = (uint32_t)arg1[8] + ((uint32_t)arg1[7] << 8);
00004112      uint32_t r3_6 = ((uint32_t)arg1[6] << 0x10) + ((uint32_t)arg1[5] << 0x18);
00004112          /* "RY02_3.00.33_250117" */  /* "0.33_250117" */
00004114      uint32_t r2_7 = r2_6 + r3_6;
00004114      
00004116      if (r2_6 == -(r3_6))
0000412c          r2_7 = 0x10;  /* "RY02_3.00.33_250117" */
00004116      else if (r2_7 > 0x200)
00004120          r2_7 = 0x200;
00004120      
0000412a      return sub_3d12(*(uint8_t*)arg1, 
0000412a          (uint32_t)arg1[4] + ((uint32_t)arg1[3] << 8) + ((uint32_t)arg1[2] << 0x10)
0000412a              + ((uint32_t)arg1[1] << 0x18), 
0000412a          (uint32_t)(uint16_t)r2_7);  /* "RY02_3.00.33_250117" */  /* "0.33_250117" */
000040ec  }


00004130    int32_t sub_4130(int32_t arg1)

00004130  {
00004130      int32_t r3;
00004130      int32_t var_c_1 = r3;
00004130      int32_t r2;
00004130      int32_t var_10_1 = r2;
00004130      int32_t r1;
00004130      int32_t var_14_1 = r1;
00004130      int32_t result = arg1;
00004134      result = 0;
00004136      int32_t var_14 = 0;
00004138      int32_t var_10 = 0;
0000413e      int32_t var_c = 0;
00004140      (uint8_t)result = 0x61;
00004142      uint32_t r0 = sub_15a0();
00004148      uint32_t r0_1;
00004148      
00004148      if (r0 == 1)
0000414a          r0_1 = sub_53f0();
0000414a      
00004150      if (r0 != 1 || r0_1)
00004150      {
00004154          *(uint8_t*)((char*)result)[1] = 0;
00004156          *(uint8_t*)((char*)result)[2] = 0;
00004150      }
00004150      
00004162      *(uint8_t*)((char*)var_c)[3] = sub_3764(&result, 0xf);
00004166      sub_6650(&result);
0000416a      return result;
00004130  }


0000416c    int32_t sub_416c()

0000416c  {
00004172      int32_t var_28 = 0;
00004174      int32_t var_24 = 0;
00004176      int32_t var_20 = 0;
00004178      int32_t var_1c = 0;
0000417a      int32_t r0 = sub_9178();
00004180      int32_t r0_1 = sub_932e();
00004186      int32_t r0_2 = sub_9336();
00004190      (uint8_t)var_28 = 0x48;
00004194      *(uint8_t*)((char*)var_28)[1] = (char)(r0 >> 0x10);  /* "RY02_3.00.33_250117" */
00004198      *(uint8_t*)((char*)var_28)[2] = (char)(r0 >> 8);
0000419a      *(uint8_t*)((char*)var_28)[3] = (char)r0;
000041a0      0xff81b964(&var_24, 3);
000041a8      *(uint8_t*)((char*)var_24)[3] = (char)(r0_1 >> 0x10);  /* "RY02_3.00.33_250117" */
000041ac      (uint8_t)var_20 = (char)(r0_1 >> 8);
000041ae      *(uint8_t*)((char*)var_20)[1] = (char)r0_1;
000041b2      *(uint8_t*)((char*)var_20)[2] = (char)(r0_2 >> 0x10);  /* "RY02_3.00.33_250117" */
000041b6      *(uint8_t*)((char*)var_20)[3] = (char)(r0_2 >> 8);
000041b8      (uint8_t)var_1c = (char)r0_2;
000041ba      *(uint8_t*)((char*)var_1c)[1] = 0;
000041bc      *(uint8_t*)((char*)var_1c)[2] = 0;
000041c6      *(uint8_t*)((char*)var_1c)[1] = (char)(sub_9188() >> 8);
000041ce      *(uint8_t*)((char*)var_1c)[2] = sub_9188();
000041da      *(uint8_t*)((char*)var_1c)[3] = sub_3764(&var_28, 0xf);
000041de      return sub_6650(&var_28);
0000416c  }


000041e4    int32_t sub_41e4(void* arg1)

000041e4  {
000041f0      void var_28;
000041f0      0xff81b898(&var_28, arg1, 0x10);  /* "RY02_3.00.33_250117" */
000041f0      
000041f8      if ((uint32_t)*(uint8_t*)((char*)arg1 + 1) == 1)
000041f8      {
0000423c          int32_t r0_15 = sub_1694();
00004242          int32_t r0_16 = sub_169a();
00004248          int32_t r0_17 = sub_16a0();
0000424e          char var_26_1 = (char)r0_15;
00004252          uint8_t var_25_1 = (char)(r0_15 >> 8);
00004256          uint8_t var_24_1 = (char)(r0_15 >> 0x10);  /* "RY02_3.00.33_250117" */
00004258          char var_23_1 = (char)r0_16;
0000425c          uint8_t var_22_1 = (char)(r0_16 >> 8);
00004260          uint8_t var_21_1 = (char)(r0_16 >> 0x10);  /* "RY02_3.00.33_250117" */
00004262          char var_20_1 = (char)r0_17;
00004266          uint8_t var_1f_1 = (char)(r0_17 >> 8);
0000426a          uint8_t var_1e_1 = (char)(r0_17 >> 0x10);  /* "RY02_3.00.33_250117" */
000041f8      }
000041f8      else
000041f8      {
00004206          uint32_t r5_2 = (uint32_t)*(uint8_t*)((char*)arg1 + 3) << 8
00004206              | (uint32_t)*(uint8_t*)((char*)arg1 + 2)
00004206              | (uint32_t)*(uint8_t*)((char*)arg1 + 4) << 0x10;  /* "RY02_3.00.33_250117" */
0000421a          uint32_t r1_5 = (uint32_t)*(uint8_t*)((char*)arg1 + 6) << 8
0000421a              | (uint32_t)*(uint8_t*)((char*)arg1 + 5)
0000421a              | (uint32_t)*(uint8_t*)((char*)arg1 + 7) << 0x10;  /* "RY02_3.00.33_250117" */
0000422c          sub_16a6(r5_2, r1_5, 
0000422c              (uint32_t)*(uint8_t*)((char*)arg1 + 9) << 8
0000422c                  | (uint32_t)*(uint8_t*)((char*)arg1 + 8)
0000422c                  | (uint32_t)*(uint8_t*)((char*)arg1 + 0xa) << 0x10);  /* "RY02_3.00.33_250117" */
00004236          int32_t r0_14;
00004236          
00004236          if (sub_9178() < r5_2)
0000426e              r0_14 = 0;
00004236          else
00004238              r0_14 = 1;
00004238          
00004270          sub_9350(r0_14);
0000427a          int32_t r0_20;
0000427a          
0000427a          if (sub_932e() < r1_5)
00004280              r0_20 = 0;
0000427a          else
0000427c              r0_20 = 1;
0000427c          
00004282          sub_93b0(r0_20);
00004298          sub_16ca(
00004298              (uint32_t)*(uint8_t*)((char*)arg1 + 0xc) << 8
00004298                  | (uint32_t)*(uint8_t*)((char*)arg1 + 0xb), 
00004298              (uint32_t)*(uint8_t*)((char*)arg1 + 0xe) << 8
00004298              | (uint32_t)*(uint8_t*)((char*)arg1 + 0xd));
000041f8      }
000041f8      
000042a6      char var_19 = sub_3764(&var_28, 0xf);
000042aa      return sub_6650(&var_28);
000041e4  }


000042b0    uint32_t sub_42b0()

000042b0  {
000042b8      sub_be1e();
000042c8      void var_1c;
000042c8      return sub_3d12(0xd, &var_1c, 0xe);
000042b0  }


000042de    uint32_t sub_42de()

000042de  {
000042e8      return sub_42b0();
000042de  }


000042ea    char* sub_42ea(char* arg1)

000042ea  {
000042ea      char* result = arg1;
000042f0      uint32_t r1 = (uint32_t)arg1[1];
000042f0      
000042f4      if (r1 == 1)
000042f4      {
00004312          (uint8_t)result = 1;
00004318          sub_3d12(*(uint8_t*)arg1, &result, 7);
0000431c          return result;
000042f4      }
000042f4      
000042f8      if (r1 == 2)
00004302          sub_3d60((uint32_t)*(uint8_t*)arg1, 0);
00004302      
00004306      return result;
000042ea  }


0000431e    void* sub_431e(void* arg1)

0000431e  {
0000431e      int32_t r3;
0000431e      int32_t var_14_1 = r3;
0000431e      int32_t r2;
0000431e      int32_t var_18_1 = r2;
0000431e      int32_t r1;
0000431e      int32_t var_1c_1 = r1;
0000431e      void* result = arg1;
00004320      char r5 = *(uint8_t*)((char*)arg1 + 1);
00004322      uint32_t r4 = (uint32_t)*(uint8_t*)((char*)arg1 + 2);
00004326      result = &data_0;
00004328      int32_t var_1c = 0;
0000432a      int32_t var_18 = 0;
0000432c      int32_t var_14 = 0;
0000432c      
00004334      if ((uint32_t)*(uint8_t*)((char*)arg1 + 1) == 1)
00004334      {
0000435e          (uint8_t)result = 0x36;  /* "3.0" */
00004360          *(uint8_t*)((char*)result)[1] = r5;
00004368          *(uint8_t*)((char*)result)[2] = sub_1602();
00004334      }
00004334      else
00004334      {
00004338          int32_t r0_1;
00004338          
00004338          r0_1 = r4 == 1 ? 1 : 0;
00004338          
0000433c          sub_160e(r0_1);
00004342          (uint8_t)result = 0x36;  /* "3.0" */
00004344          *(uint8_t*)((char*)result)[1] = r5;
00004346          *(uint8_t*)((char*)result)[2] = (char)r4;
00004334      }
00004334      
00004352      *(uint8_t*)((char*)var_14)[3] = sub_3764(&result, 0xf);
00004356      sub_6650(&result);
0000435a      return result;
0000431e  }


00004370    void* sub_4370(void* arg1)

00004370  {
00004370      int32_t r3;
00004370      int32_t var_c = r3;
00004370      void* result = arg1;
0000437a      0xff81b898(&result, arg1, 0x10);  /* "RY02_3.00.33_250117" */
00004382      (uint8_t)result = 0x2c;
00004386      *(uint8_t*)((char*)result)[1] = *(uint8_t*)((char*)arg1 + 1);
00004388      uint32_t r0_2 = (uint32_t)*(uint8_t*)((char*)arg1 + 1);
00004388      
0000438c      if (r0_2 == 1)
000043a4          *(uint8_t*)((char*)result)[2] = sub_15f6();
0000438c      else if (r0_2 == 2)
00004390      {
0000439c          sub_15d4((uint32_t)*(uint8_t*)((char*)arg1 + 2));
000043a4          *(uint8_t*)((char*)result)[2] = *(uint8_t*)((char*)arg1 + 2);
00004390      }
00004390      
000043b0      *(uint8_t*)((char*)var_c)[3] = sub_3764(&result, 0xf);
000043b4      sub_6650(&result);
000043b8      return result;
00004370  }


000043ba    int32_t sub_43ba(void* arg1)

000043ba  {
000043be      char r6 = *(uint8_t*)((char*)arg1 + 1);
000043c0      uint32_t r5 = (uint32_t)*(uint8_t*)((char*)arg1 + 2);
000043c6      int32_t var_28 = 0;
000043c8      int32_t var_24 = 0;
000043ca      int32_t var_20 = 0;
000043cc      int32_t var_1c = 0;
000043cc      
000043d4      if ((uint32_t)*(uint8_t*)((char*)arg1 + 1) == 1)
000043d4      {
000043f2          (uint8_t)var_28 = 0x16;  /* ".00.33_250117" */
000043f4          *(uint8_t*)((char*)var_28)[1] = r6;
000043fc          char r0_4;
000043fc          
000043fc          if (!sub_15ac())
00004402              r0_4 = 2;
000043fc          else
000043fe              r0_4 = 1;
000043fe          
00004406          *(uint8_t*)((char*)var_28)[2] = r0_4;
0000440a          *(uint8_t*)((char*)var_28)[3] = *(uint8_t*)0x2086f0;
0000440e          (uint8_t)var_24 = 5;
000043d4      }
000043d4      else
000043d4      {
000043d8          uint32_t r0_1;
000043d8          
000043d8          r0_1 = r5 == 1 ? 1 : 0;
000043d8          
000043dc          sub_15b8(r0_1);
000043e0          uint32_t r0_2 = (uint32_t)*(uint8_t*)((char*)arg1 + 3);
000043e2          *(uint8_t*)0x2086f0 = (char)r0_2;
000043e2          
000043ea          if (r0_2 == 0xff || !r0_2)
00004418              *(uint8_t*)0x2086f0 = 0x1e;  /* "50117" */
00004418          
0000441e          (uint8_t)var_28 = 0x16;  /* ".00.33_250117" */
00004420          *(uint8_t*)((char*)var_28)[1] = r6;
00004422          *(uint8_t*)((char*)var_28)[2] = (char)r5;
000043d4      }
000043d4      
0000442e      *(uint8_t*)((char*)var_1c)[3] = sub_3764(&var_28, 0xf);
00004432      return sub_6650(&var_28);
000043ba  }


00004438    uint32_t sub_4438(void* arg1, int32_t arg2, int32_t arg3)

00004438  {
0000444c      if ((uint32_t)*(uint8_t*)0x20991e < 0x3c)
0000444c      {
0000444e          *(uint8_t*)0x209916 = 0;
00004450          uint32_t r0_1 = (uint32_t)*(uint8_t*)0x20991c;
00004454          int32_t r0_2;
00004454          
00004454          if (r0_1 == 3)
000044c8              r0_2 = 0x20;  /* "117" */
00004454          else if (r0_1 == 9)
000044cc              r0_2 = 0x400;
00004458          else if (r0_1 == 0xa)
000044d2              r0_2 = 0x100;
0000445c          else if (r0_1 == 8)
000044d8              r0_2 = 0x200;
00004460          else
00004462              r0_2 = 1;
00004462          
00004464          sub_b540(r0_2, arg2, arg3);
0000446c          arg2 = 0xff7ef70c(0x209920);
00004470          uint32_t result = (uint32_t)*(uint8_t*)0x20991e;
00004470          
00004474          if (result < 0x32)  /* "02_V3.0" */
000039de              return result;
0000444c      }
0000444c      
00004476      int32_t var_28 = 0;
00004478      int32_t var_24_1 = 0;
0000447a      int32_t var_20_1 = 0;
0000447c      int32_t var_1c_1 = 0;
0000447e      uint32_t r0_3 = (uint32_t)*(uint8_t*)((char*)arg1 + 1);
00004480      *(uint8_t*)0x20991c = (char)r0_3;
00004484      char r0_4;
00004484      
00004484      if (r0_3 == 3)
00004484      {
000044de          sub_b540(0x20, arg2, arg3);  /* "117" */
000044e2          r0_4 = sub_b810();
00004484      }
00004484      else if (r0_3 == 9)
00004488      {
000044ea          sub_b540(0x400, arg2, arg3);
000044ee          r0_4 = sub_c1dc();
00004488      }
00004488      else if (r0_3 == 0xa)
0000448c      {
000044f8          sub_b540(0x100, arg2, arg3);
000044fc          r0_4 = sub_c060();
0000448c      }
0000448c      else if (r0_3 == 8)
00004490      {
00004506          sub_b540(0x200, arg2, arg3);
0000450a          r0_4 = sub_bec0();
00004490      }
00004490      else
00004490      {
00004494          sub_b540(1, arg2, arg3);
00004498          r0_4 = sub_cd12();
00004490      }
00004490      
0000449e      *(uint8_t*)((char*)var_28)[2] = r0_4;
000044a2      (uint8_t)var_28 = 0x6a;
000044a6      *(uint8_t*)((char*)var_28)[1] = *(uint8_t*)((char*)arg1 + 1);
000044b2      *(uint8_t*)((char*)var_1c_1)[3] = sub_3764(&var_28, 0xf);
000044b6      return sub_6650(&var_28);
00004438  }

000044bc  int32_t data_44bc = 0x20992c
000044c0  int32_t data_44c0 = 0x2dd
000044c4  int32_t data_44c4 = 0x2086e4

00004510    int32_t sub_4510(void* arg1)

00004510  {
00004518      int32_t var_28 = 0;
0000451a      int32_t var_24 = 0;
0000451c      int32_t var_20 = 0;
0000451e      int32_t var_1c = 0;
0000451e      
00004528      if (!sub_281e())
00004528      {
00004556          *(uint8_t*)0x209916 = 0;
00004558          uint32_t r1_1 = (uint32_t)*(uint8_t*)((char*)arg1 + 1);
0000455a          *(uint8_t*)0x20991c = (char)r1_1;
0000455c          uint32_t r0_8 = (uint32_t)*(uint8_t*)((char*)arg1 + 2);
00004562          *(uint8_t*)0x20991d = (char)r0_8;
00004566          int32_t r1_2;
00004566          int32_t r2;
00004566          
00004566          if (r1_1 != 6)
00004566          {
00004568              *(uint8_t*)0x20991e = 0;
0000456c              *(uint8_t*)0x209917 = 0;
00004570              0xff7ef70c(0x209920);
0000457a              r1_2 = 0xff7ef6e4(0x209920, 0x1f4);
0000457e              uint32_t r0_9 = (uint32_t)*(uint8_t*)0x20991c;
0000457e              
00004582              if (r0_9 == 3)
000045b6                  sub_b55a(0x20, r1_2, r2);  /* "117" */
00004582              else if (r0_9 == 9)
000045b6                  sub_b55a(0x400, sub_c1e2(), r2);
00004586              else if (r0_9 == 0xa)
000045b6                  sub_b55a(0x100, sub_c0de(), r2);
0000458a              else if (r0_9 == 8)
000045b6                  sub_b55a(0x200, sub_bf3e(), r2);
0000458e              else
000045b6                  sub_b55a(1, r1_2, r2);
00004566          }
00004566          else
00004566          {
000045be              int32_t entry_r2;
000045be              
000045be              if (r0_8 == 1)
000045be              {
000045ce                  *(uint8_t*)0x20991e = 0;
000045d2                  sub_b55a(1, r1_1, entry_r2);
000045da                  0xff7ef70c(0x209920);
000045e4                  0xff7ef6e4(0x209920, 0x1f4);
000045be              }
000045be              else if (r0_8 == 2)
000045ee                  0xff7ef70c(0x209920);
000045c2              else if (r0_8 == 3)
000045c6              {
00004602                  0xff7ef70c(0x209920);
0000460c                  r1_2 = 0xff7ef6e4(0x209920, 0x1f4);
000045b6                  sub_b55a(1, r1_2, r2);
000045c6              }
000045c6              else if (r0_8 == 4)
000045ca              {
00004614                  sub_b540(1, r1_1, entry_r2);
00004618                  *(uint8_t*)0x20991e = 0;
000045ee                  0xff7ef70c(0x209920);
000045ca              }
00004566          }
000045f4          (uint8_t)var_28 = 0x69;
000045f8          *(uint8_t*)((char*)var_28)[1] = *(uint8_t*)0x20991c;
000045fa          *(uint8_t*)((char*)var_28)[2] = 0;
00004528      }
00004528      else
00004528      {
0000452c          (uint8_t)var_28 = 0x69;
00004530          *(uint8_t*)((char*)var_28)[1] = *(uint8_t*)((char*)arg1 + 1);
00004536          char r0_3;
00004536          
00004536          if ((uint32_t)*(uint8_t*)((char*)arg1 + 1) == 6)
00004550              r0_3 = 2;
00004536          else
00004538              r0_3 = 1;
00004538          
0000453a          *(uint8_t*)((char*)var_28)[2] = r0_3;
00004528      }
00004528      
00004546      *(uint8_t*)((char*)var_1c)[3] = sub_3764(&var_28, 0xf);
0000454a      return sub_6650(&var_28);
00004510  }


0000461c    void* sub_461c(void* arg1)

0000461c  {
0000461c      int32_t r3;
0000461c      int32_t var_c_1 = r3;
0000461c      int32_t r2;
0000461c      int32_t var_10_1 = r2;
0000461c      int32_t r1;
0000461c      int32_t var_14_1 = r1;
0000461c      void* result = arg1;
00004622      sub_15a6(*(uint8_t*)((char*)arg1 + 1));
00004628      result = &data_0;
0000462a      int32_t var_14 = 0;
0000462c      int32_t var_10 = 0;
00004632      int32_t var_c = 0;
00004634      (uint8_t)result = 4;
00004636      *(uint8_t*)((char*)var_c)[3] = 4;
0000463a      sub_6650(&result);
00004644      sub_15a0() == 1 && !sub_53f0();
0000465c      uint32_t r0_6;
0000465c      void* r1_1;
0000465c      
0000465c      if (sub_15a0() == 1)
0000465c      {
00004668          r1_1 = (char*)arg1 + 3;
0000466a          r0_6 = 0;
0000465c      }
0000465c      else
0000465c      {
0000465e          r0_6 = (uint32_t)*(uint8_t*)((char*)arg1 + 2);
00004660          r1_1 = (char*)arg1 + 3;
0000465c      }
0000465c      
00004662      sub_7394(r0_6, r1_1);
00004666      return result;
0000461c  }


0000466e    void* sub_466e(void* arg1)

0000466e  {
0000466e      int32_t r3;
0000466e      int32_t var_14_1 = r3;
0000466e      int32_t r2;
0000466e      int32_t var_18_1 = r2;
0000466e      int32_t r1;
0000466e      int32_t var_1c_1 = r1;
0000466e      void* result = arg1;
00004674      result = &data_0;
00004676      int32_t var_1c = 0;
00004678      int32_t var_18 = 0;
0000467e      int32_t var_14 = 0;
00004680      (uint8_t)result = 0x19;  /* ".33_250117" */
00004684      *(uint8_t*)((char*)result)[1] = *(uint8_t*)((char*)arg1 + 1);
0000468a      char r0_4;
0000468a      
0000468a      if ((uint32_t)*(uint8_t*)((char*)arg1 + 1) == 1)
0000468a      {
000046b6          *(uint8_t*)((char*)result)[2] = 0;
000046b8          r0_4 = sub_1704();
0000468a      }
0000468a      else
0000468a      {
00004690          if ((uint32_t)*(uint8_t*)((char*)arg1 + 3) > 2)
00004692              *(uint8_t*)((char*)arg1 + 3) = 0;
00004692          
00004696          sub_1710(*(uint8_t*)((char*)arg1 + 3));
0000469c          *(uint8_t*)((char*)result)[2] = 0;
0000469e          r0_4 = *(uint8_t*)((char*)arg1 + 3);
0000468a      }
0000468a      
000046a0      *(uint8_t*)((char*)result)[3] = r0_4;
000046ac      *(uint8_t*)((char*)var_14)[3] = sub_3764(&result, 0xf);
000046b0      sub_6650(&result);
000046b4      return result;
0000466e  }


000046c0    uint32_t sub_46c0(void* arg1)

000046c0  {
000046c4      uint32_t result = sub_281e();
000046c4      
000046ca      if (!result)
000046ca      {
000046ce          result = (uint32_t)*(uint8_t*)0x208850;
000046ce          
000046d2          if (result == 3)
000046d2          {
000046d4              uint32_t r0 = (uint32_t)*(uint8_t*)((char*)arg1 + 1);
000046d4              
000046dc              if (r0 == 4 || r0 == 5)
000046ea                  sub_a97e(1);
000046dc              else if (r0 == 6)
000046ea                  sub_a97e(0);
000046ea              
000046f2              return sub_3d60(2, 0);
000046d2          }
000046ca      }
000046ca      
000046f6      return result;
000046c0  }


000046f8    int32_t sub_46f8(int32_t arg1)

000046f8  {
000046f8      int32_t r3;
000046f8      int32_t var_c_1 = r3;
000046f8      int32_t r2;
000046f8      int32_t var_10_1 = r2;
000046f8      int32_t r1;
000046f8      int32_t var_14_1 = r1;
000046f8      int32_t result = arg1;
000046fc      result = 0;
000046fe      int32_t var_14 = 0;
00004700      int32_t var_10 = 0;
00004706      int32_t var_c = 0;
00004708      (uint8_t)result = 0x3c;
00004712      *(uint8_t*)((char*)result)[2] |= 4;
00004714      *(uint8_t*)((char*)result)[1] = 0;
00004720      *(uint8_t*)((char*)var_c)[3] = sub_3764(&result, 0xf);
00004724      sub_6650(&result);
00004728      return result;
000046f8  }


0000472a    uint32_t sub_472a(char* arg1, int32_t arg2, int32_t arg3, int32_t arg4 @ r5, uint32_t arg5 @ r6, int32_t arg6 @ r7)

0000472a  {
0000472a      int32_t lr;
0000472a      int32_t var_4 = lr;
0000472a      uint32_t var_8 = arg5;
0000472a      int32_t var_c = arg4;
0000472a      int32_t r4;
0000472a      int32_t var_10 = r4;
0000472a      int32_t* sp_1 = &var_10;
0000472c      char* r4_1 = arg1;
0000472e      uint32_t result = (uint32_t)*(uint8_t*)arg1;
00004730      bool cond:0 = result > 0x81;
00004730      bool cond:11 = result == 0x81;
00004730      
00004732      while (true)
00004732      {
00004732          if (!cond:11)
00004732          {
00004734              bool z_1;
00004734              
00004734              if (cond:0)
00004734              {
000047d4                  if (result == 0xbf)
000047d4                      goto label_477e;
000047d4                  
000047d6                  if (result > 0xbf)
000047d6                  {
00004810                      if (result == 0xc8)
00004810                      {
000049da                          result = (uint32_t)r4_1[1];
000049da                          
000049de                          if (result == 1)
000049e4                              *(uint8_t*)0x208854 = 1;
000049de                          else
000049e0                              *(uint8_t*)0x208854 = 0;
000049e0                          
000049de                          break;
00004810                      }
00004810                      
00004812                      if (result <= 0xc8)
00004812                      {
0000481a                          int32_t r1_6;
0000481a                          int32_t r3_7;
0000481a                          result =
0000481a                              sub_13f18(result, 0x208850, result - 0xc0, result - 0xc0);
0000481e                          data_0 = r3_7;
0000477e                      label_477e:
0000477e                          *(uint32_t*)sp_1;
0000477e                          sp_1[1];
0000477e                          sp_1[2];
0000477e                          return result;
00004812                      }
00004812                      
00004832                      if (result == 0xf0)
00004832                          goto label_477e;
00004832                      
00004834                      if (result <= 0xf0)
00004834                      {
0000483c                          if (result == 0xc9 || result == 0xcc)
00004838                              goto label_477e;
00004838                          
00004840                          if (result == 0xcd)
00004840                          {
00004a00                              result = sub_406e(r4_1);
00004a04                              break;
00004840                          }
00004840                          
00004844                          if (result == 0xce)
00004844                          {
00004a08                              result = sub_3fda(r4_1);
00004a0c                              break;
00004844                          }
00004844                          
00004854                          result = sub_3fb6(result);
00004854                          break;
00004834                      }
00004834                      
0000484a                      if (result == 0xf1)
0000484a                          goto label_477e;
0000484a                      
0000484e                      if (result == 0xfe)
0000484e                      {
00004866                          result = sub_8af0((uint32_t)r4_1[2] << 8 | (uint32_t)r4_1[1]);
0000486a                          break;
0000484e                      }
0000484e                      
00004852                      if (result != 0xff)
00004852                      {
00004854                          result = sub_3fb6(result);
00004854                          break;
00004852                      }
000047d6                  }
000047d6                  else
000047d6                  {
000047da                      bool c_1 = result >= 0x90;
000047da                      bool v_1 = result - 0x90;
000047dc                      bool n_1 = result - 0x90 < 0;
000047dc                      z_1 = result == 0x90;
000047de                      int32_t r1_3;
000047de                      int32_t r2;
000047de                      uint32_t* r3_3;
000047de                      result = sub_13f18(result, result - 0x90, arg3, result - 0x90);
000047e2                      r4_1 = sp_1[0x21];  /* "17" */
000047e2                      
000047e6                      if (!arg6)
000047e6                      {
00004854                          result = sub_3fb6(result);
00004854                          break;
000047e6                      }
000047e6                      
000047e8                      if (arg6)
000047e8                          break;
000047e8                      
000047ea                      *(uint32_t*)r3_3 = result;
000047ea                      r3_3[1] = r1_3;
000047ea                      r3_3[2] = r2;
000047ea                      r3_3[3] = r3_3;
000047ea                      r3_3[4] = r4_1;
000047ea                      r3_3[5] = arg4;
000047ea                      r3_3[6] = arg6;
000047ec                      result = r3_3[7];
000047ec                      r3_3[9];
000047ec                      r3_3[0xa];
000047ec                      r3_3[0xb];
000047ec                      
000047ee                      if (c_1)
000047ee                      {
000047f0                          if (!v_1)
000047f0                          {
00004866                              result = sub_8af0(result);
0000486a                              break;
000047f0                          }
000047f0                          
000047f2                          if (n_1 != v_1)
000047f2                              goto label_47b4;
000047f2                          
000047f2                          goto label_477e;
000047ee                      }
000047ee                      
00004790                  label_4790:
00004790                      
00004792                      if (result == 0x36)  /* "3.0" */
00004792                      {
000048da                          result = sub_431e(r4_1);
000048de                          break;
00004792                      }
00004792                      
0000479a                      if (result != 0x37 && result != 0x38)  /* ".0" */  /* "0" */
0000479a                      {
00004854                          result = sub_3fb6(result);
00004854                          break;
0000479a                      }
000047d6                  }
00004734              }
00004734              else
00004734              {
00004738                  if (result == 0x2b)
00004738                  {
0000489a                      result = sub_3e2e(r4_1);
0000489e                      break;
00004738                  }
00004738                  
0000473a                  if (result <= 0x2b)
0000473a                  {
0000473e                      if (result == 0x10)  /* "RY02_3.00.33_250117" */
0000473e                      {
00004882                          result = sub_3da0();
00004886                          break;
0000473e                      }
0000473e                      
00004740                      if (result <= 0x10)  /* "RY02_3.00.33_250117" */
00004740                      {
00004748                          *(uint16_t*)(sub_13f18(result, arg2, arg3, result) + 0x30) =
00004748                              (int16_t)arg6;  /* "RY02_V3.0" */
0000474a                          void* r0 = sp_1[0x14];  /* "_3.00.33_250117" */
0000474c                          *(uint32_t*)((char*)sp_1 - 4) = arg6;
0000474c                          *(uint32_t*)((char*)sp_1 - 8) = arg4;
0000474c                          *(uint32_t*)((char*)sp_1 - 0xc) = r4_1;
0000474c                          sp_1 -= 0xc;
0000474e                          *(uint16_t*)((char*)r0 + 0x34) = (int16_t)arg5;  /* "_V3.0" */
00004754                          arg2 = *(uint32_t*)r4_1;
00004754                          arg3 = *(uint32_t*)(r4_1 + 4);
00004754                          arg6 = *(uint32_t*)(r4_1 + 8);
00004754                          r4_1 = &r4_1[0xc];
00004756                          result = arg3 >> 0x13;  /* "2_3.00.33_250117" */
00004758                          arg5 = result << 2;
00004740                      }
00004740                      
0000475c                      if (result == 0x19)  /* ".33_250117" */
0000475c                      {
000048a2                          result = sub_466e(r4_1);
000048a6                          break;
0000475c                      }
0000475c                      
0000475e                      if (result > 0x19)  /* ".33_250117" */
0000475e                      {
00004774                          if (result == 0x21)  /* "17" */
00004774                          {
000048f6                              result = sub_41e4(r4_1);
000048fa                              break;
00004774                          }
00004774                          
0000477c                          if (result == 0x25 || result == 0x26)
00004778                              goto label_477e;
00004778                          
00004854                          result = sub_3fb6(result);
00004854                          break;
0000475e                      }
0000475e                      
00004762                      if (result == 0x14)  /* "_3.00.33_250117" */
00004762                          goto label_477e;
00004762                      
00004764                      cond:0 = result > 0x15;  /* "3.00.33_250117" */
00004764                      cond:11 = result == 0x15;  /* "3.00.33_250117" */
00004764                      
00004766                      if (result == 0x15)  /* "3.00.33_250117" */
00004766                          continue;
00004766                      else
00004766                      {
0000476a                          if (result == 0x16)  /* ".00.33_250117" */
0000476a                          {
000048ca                              result = sub_43ba(r4_1);
000048ce                              break;
0000476a                          }
0000476a                          
0000476e                          if (result != 0x18)  /* "0.33_250117" */
0000476e                          {
00004854                              result = sub_3fb6(result);
00004854                              break;
0000476e                          }
00004766                      }
0000473a                  }
0000473a                  else if (result != 0x43)
00004782                  {
00004784                      if (result > 0x43)
00004784                      {
000047ae                          if (result == 0x6a)
000047ae                          {
000048c2                              result = sub_4438(r4_1, arg2, arg3);
000048c6                              break;
000047ae                          }
000047ae                          
000047b0                          if (result <= 0x6a)
000047b0                          {
000047b2                              z_1 = result == 0x48;
000047b4                          label_47b4:
000047b4                              
000047b4                              if (z_1)
000047b4                              {
000048fe                                  result = sub_416c();
00004902                                  break;
000047b4                              }
000047b4                              
000047b8                              if (result == 0x50)
000047b8                              {
00004914                                  result = sub_357e(0x14, 1, 1, 0x19);
00004914                                      /* "_3.00.33_250117" */  /* ".33_250117" */
00004918                                  break;
000047b8                              }
000047b8                              
000047bc                              if (result == 0x61)
000047bc                              {
00004906                                  result = sub_4130(r4_1);
0000490a                                  break;
000047bc                              }
000047bc                              
000047c0                              if (result == 0x69)
000047c0                              {
000048ba                                  result = sub_4510(r4_1);
000048be                                  break;
000047c0                              }
000047c0                              
00004854                              result = sub_3fb6(result);
00004854                              break;
000047b0                          }
000047b0                          
000047ce                          if (result != 0x72 && result != 0x77 && result != 0x7a)
000047ce                          {
00004854                              result = sub_3fb6(result);
00004854                              break;
000047ce                          }
00004784                      }
00004784                      else if (result != 0x39)
00004788                      {
0000478a                          if (result <= 0x39)
0000478a                          {
0000478e                              if (result != 0x2c)
0000478e                                  goto label_4790;
0000478e                              
000048d2                              result = sub_4370(r4_1);
000048d6                              break;
0000478a                          }
0000478a                          
000047a4                          if (result != 0x3a && result != 0x3b)
000047a4                          {
000047a8                              if (result == 0x3c)
000047a8                              {
0000486e                                  result = sub_46f8(r4_1);
00004872                                  break;
000047a8                              }
000047a8                              
00004854                              result = sub_3fb6(result);
00004854                              break;
000047a4                          }
00004788                      }
00004782                  }
00004734              }
00004732          }
00004732          
000049f8          result = sub_40c0(r4_1);
000049fc          break;
00004732      }
00004732      
00004858      *(uint32_t*)sp_1;
00004858      sp_1[1];
00004858      sp_1[2];
00004858      return result;
0000472a  }

00004878                                                                          20 46 ff f7 21 ff eb e7                           F..!...
00004888                          20 46 ff f7 95 fa e3 e7                                                           F......
000048a8                          20 46 ff f7 66 fb d3 e7 20 46 ff f7 b3 fe cf e7                                   F..f... F......
000048e0  20 46 ff f7 02 fd b7 e7 07 f0 9b fa ff f7 e0 fc b2 e7                                             F................
0000491a                                                                                20 46 fd f7 0b f8                             F....
00004920  9a e7                                                                                            ..
00004926                    20 46 fd f7 13 f8 94 e7 20 46 fd f7 22 f8 90 e7 00 00                                 F...... F..".....

00004938  int32_t data_4938 = 0x209914
0000493c  int32_t data_493c = 0x208850

00004940  20 46 fd f7 a2 f8 87 e7 20 46 fd f7 22 f8 83 e7 20 46 fd f7 31 f8 7f e7 20 46 fd f7 41 f8 7b e7   F...... F.."... F..1... F..A.{.
00004960  20 46 fd f7 51 f8 77 e7 20 46 fd f7                                                               F..Q.w. F..
0000496c  data_496c:
0000496c                                      5c f8 73 e7 20 46 fd f7 5a f8 6f e7 20 46 fd f7 57 f8 6b e7              \.s. F..Z.o. F..W.k.
00004980  20 46 fd f7 55 f8 67 e7 20 46 fd f7 68 f8 63 e7 20 46 fd f7 97 f8 5f e7 20 46 fd f7 ac f8 5b e7   F..U.g. F..h.c. F...._. F....[.
000049a0  20 46 fc f7 ea ff 57 e7 20 46 ff f7 9f fb 53 e7                                                   F....W. F....S.

000049b0    uint32_t sub_49b0(void* arg1 @ r4, int32_t arg2, int32_t arg3, int32_t arg4)

000049b0  {
000049b0      uint32_t r0_1 = (uint32_t)*(uint8_t*)((char*)arg1 + 2);
000049b4      int32_t entry_r1;
000049b4      int32_t entry_r2;
000049b4      int32_t entry_r3;
000049b4      
000049b4      if (r0_1 == 1)
000049b6          sub_5b9a(r0_1, entry_r1, entry_r2, entry_r3);
000049ba      uint32_t result = (uint32_t)*(uint8_t*)((char*)arg1 + 1);
000049be      int32_t r0;
000049be      
000049be      if (result == 1)
000049be      {
000049d0          sub_15a6(2);
000049d6          r0 = 4;
000049be      }
000049be      else
000049be      {
000049c2          if (result != 2)
00004858              return result;
00004858          
000049c6          r0 = 0;
000049be      }
000049be      
000049c8      return sub_729a(r0, 0);
000049b0  }


000049e8    uint32_t sub_49e8(int32_t arg1, void* arg2, void* arg3 @ r4, char arg4 @ r5, char arg5 @ r6, int32_t arg6, int32_t arg7, int32_t arg8)

000049e8  {
000049e8      uint32_t result = (uint32_t)*(uint8_t*)((char*)arg3 + 1);
000049e8      
000049ec      if (result == 1)
000049f2          *(uint8_t*)((char*)arg2 + 3) = arg5;
000049ec      else
000049ee          *(uint8_t*)((char*)arg2 + 3) = arg4;
000049ee      
00004858      return result;
000049e8  }


00004a0e    void sub_4a0e(int32_t arg1, int32_t arg2)

00004a0e  {
00004a10      uint32_t r2 = (uint32_t)*(uint8_t*)0x208850;
00004a18      int32_t r5;
00004a18      int32_t r6;
00004a18      int32_t r7;
00004a18      
00004a18      if (r2 != 1 && arg2 == 0x10)  /* "RY02_3.00.33_250117" */
00004a1a          /* tailcall */
00004a1a          return sub_472a(arg1, arg2, r2, r5, r6, r7);
00004a0e  }

00004a1e                                                                                            1f b5                                ..
00004a20  04 46 0a 46 10 21 68 46 16 f4 77 f7 68 46 04 70 01 f0 0e fe 1f bd                                .F.F.!hF..w.hF.p......

00004a36    void sub_4a36(char arg1, int32_t arg2, int32_t arg3)

00004a36  {
00004a36      int32_t var_18 = arg3;
00004a36      int32_t var_1c = arg2;
00004a38      char r5 = 1;
00004a38      
00004a82      for (int32_t i = 0; i < arg3; i += 0xd)
00004a82      {
00004a46          int32_t var_30 = 0;
00004a48          int32_t var_2c_1 = 0;
00004a4a          int32_t var_28_1 = 0;
00004a4c          int32_t var_24_1 = 0;
00004a52          (uint8_t)var_30 = arg1;
00004a54          *(uint8_t*)((char*)var_30)[1] = r5;
00004a58          int32_t r2 = arg3 - i;
00004a5a          r5 += 1;
00004a5a          
00004a5e          if (r2 >= 0xd)
00004a60              r2 = 0xd;
00004a60          
00004a68          0xff81b898(&*(uint32_t*)((char*)var_30)[2], arg2 + i, r2);
00004a76          *(uint8_t*)((char*)var_24_1)[3] = sub_3764(&var_30, 0xf);
00004a7a          sub_6650(&var_30);
00004a82      }
00004a36  }


00004a88    int32_t sub_4a88(void* arg1)

00004a88  {
00004a90      int32_t var_50 = 0;
00004a92      int32_t var_4c = 0;
00004a94      int32_t var_48 = 0;
00004a96      int32_t var_44 = 0;
00004a9c      void var_40;
00004a9c      0xff81b968(&var_40, 0x34);  /* "_V3.0" */
00004a9c      
00004aac      if (!sub_c000((uint32_t)*(uint8_t*)((char*)arg1 + 1), &var_40))
00004aac      {
00004ae8          (uint8_t)var_50 = 0x39;
00004aec          *(uint8_t*)((char*)var_50)[1] = 0xff;
00004af8          *(uint8_t*)((char*)var_44)[3] = sub_3764(&var_50, 0xf);
00004afc          return sub_6650(&var_50);
00004aac      }
00004aac      
00004ab0      (uint8_t)var_50 = 0x39;
00004ab4      *(uint8_t*)((char*)var_50)[1] = 0;
00004ab8      *(uint8_t*)((char*)var_50)[2] = 5;
00004abc      *(uint8_t*)((char*)var_50)[3] = 0x1e;  /* "50117" */
00004ac8      *(uint8_t*)((char*)var_44)[3] = sub_3764(&var_50, 0xf);
00004acc      sub_6650(&var_50);
00004ad4      char var_3d = *(uint8_t*)((char*)arg1 + 1);
00004ade      return sub_4a36(0x39, &var_3d, 0x31);  /* "Y02_V3.0" */
00004a88  }


00004b02    void* sub_4b02(void* arg1)

00004b02  {
00004b02      int32_t r3;
00004b02      int32_t var_14_1 = r3;
00004b02      int32_t r2;
00004b02      int32_t var_18_1 = r2;
00004b02      int32_t r1;
00004b02      int32_t var_1c_1 = r1;
00004b02      void* result = arg1;
00004b04      char r5 = *(uint8_t*)((char*)arg1 + 1);
00004b06      uint32_t r4 = (uint32_t)*(uint8_t*)((char*)arg1 + 2);
00004b0a      result = &data_0;
00004b0c      int32_t var_1c = 0;
00004b0e      int32_t var_18 = 0;
00004b10      int32_t var_14 = 0;
00004b10      
00004b18      if ((uint32_t)*(uint8_t*)((char*)arg1 + 1) == 1)
00004b18      {
00004b42          (uint8_t)result = 0x38;  /* "0" */
00004b44          *(uint8_t*)((char*)result)[1] = r5;
00004b4c          *(uint8_t*)((char*)result)[2] = sub_16e6();
00004b18      }
00004b18      else
00004b18      {
00004b1c          int32_t r0_1;
00004b1c          
00004b1c          r0_1 = r4 == 1 ? 1 : 0;
00004b1c          
00004b20          sub_16f2(r0_1);
00004b26          (uint8_t)result = 0x38;  /* "0" */
00004b28          *(uint8_t*)((char*)result)[1] = r5;
00004b2a          *(uint8_t*)((char*)result)[2] = (char)r4;
00004b18      }
00004b18      
00004b36      *(uint8_t*)((char*)var_14)[3] = sub_3764(&result, 0xf);
00004b3a      sub_6650(&result);
00004b3e      return result;
00004b02  }


00004b54    int32_t sub_4b54(void* arg1)

00004b54  {
00004b5c      int32_t var_50 = 0;
00004b5e      int32_t var_4c = 0;
00004b60      int32_t var_48 = 0;
00004b62      int32_t var_44 = 0;
00004b68      void var_40;
00004b68      0xff81b968(&var_40, 0x34);  /* "_V3.0" */
00004b68      
00004b78      if (!sub_be60((uint32_t)*(uint8_t*)((char*)arg1 + 1), &var_40))
00004b78      {
00004bb2          (uint8_t)var_50 = 0x37;  /* ".0" */
00004bb6          *(uint8_t*)((char*)var_50)[1] = 0xff;
00004bc2          *(uint8_t*)((char*)var_44)[3] = sub_3764(&var_50, 0xf);
00004bc6          return sub_6650(&var_50);
00004b78      }
00004b78      
00004b7c      (uint8_t)var_50 = 0x37;  /* ".0" */
00004b80      *(uint8_t*)((char*)var_50)[1] = 0;
00004b84      *(uint8_t*)((char*)var_50)[2] = 5;
00004b88      *(uint8_t*)((char*)var_50)[3] = 0x1e;  /* "50117" */
00004b94      *(uint8_t*)((char*)var_44)[3] = sub_3764(&var_50, 0xf);
00004b98      sub_6650(&var_50);
00004ba0      char var_3d = *(uint8_t*)((char*)arg1 + 1);
00004baa      return sub_4a36(0x37, &var_3d, 0x31);  /* "Y02_V3.0" */  /* ".0" */
00004b54  }


00004bcc    int32_t sub_4bcc() __pure

00004bcc  {
00004bcc      return;
00004bcc  }


00004bce    int32_t sub_4bce() __pure

00004bce  {
00004bce      return;
00004bce  }


00004bd0    uint32_t sub_4bd0()

00004bd0  {
00004bd2      uint32_t result = sub_15a0();
00004bd2      
00004bd8      if (result == 1)
00004bd8      {
00004bda          result = sub_53f0();
00004bda          
00004be0          if (!result)
00004be2              result = 0x64;
00004bd8      }
00004bd8      
00004be8      return result;
00004bd0  }


00004bea    void* sub_4bea(void* arg1)

00004bea  {
00004bea      int32_t r3;
00004bea      int32_t var_14_1 = r3;
00004bea      int32_t r2;
00004bea      int32_t var_18_1 = r2;
00004bea      int32_t r1;
00004bea      int32_t var_1c_1 = r1;
00004bea      void* result = arg1;
00004bf0      result = &data_0;
00004bf2      int32_t var_1c = 0;
00004bf4      int32_t var_18 = 0;
00004bf6      int32_t var_14 = 0;
00004bfe      0xff81b898(&result, arg1, 0x10);  /* "RY02_3.00.33_250117" */
00004c06      (uint8_t)result = 0x3b;
00004c06      
00004c0c      if (!(uint32_t)*(uint8_t*)((char*)arg1 + 2))
00004c0c      {
00004c10          uint32_t r1_2 = (uint32_t)*(uint8_t*)((char*)arg1 + 1);
00004c12          uint32_t r0_2 = (uint32_t)*(uint8_t*)0x20878c;
00004c12          
00004c16          if (r1_2 == 1)
00004c20              *(uint8_t*)((char*)result)[3] = (char)r0_2;
00004c16          else if (r1_2 == 2)
00004c1a          {
00004c26              uint32_t r0_3 = (uint32_t)*(uint8_t*)((char*)arg1 + 3);
00004c26              
00004c28              if (!r0_2)
00004c28              {
00004c32                  if (r0_3)
00004c38                      sub_7548();
00004c28              }
00004c28              else if (!r0_3)
00004c46                  sub_7558();
00004c46              
00004c4c              *(uint8_t*)0x20878c = *(uint8_t*)((char*)arg1 + 3);
00004c4e              sub_1598();
00004c1a          }
00004c1a          
00004c52          sub_4bd0();
00004c0c      }
00004c0c      
00004c60      *(uint8_t*)((char*)var_14)[3] = sub_3764(&result, 0xf);
00004c64      sub_6650(&result);
00004c68      return result;
00004bea  }


00004c6a    int32_t sub_4c6a() __pure

00004c6a  {
00004c6a      return;
00004c6a  }


00004c6c    int32_t sub_4c6c(void* arg1)

00004c6c  {
00004c76      char var_38;
00004c76      0xff81b968(&var_38, 0x14);  /* "_3.00.33_250117" */
00004c7c      int32_t var_24 = 0;
00004c7e      int32_t var_20 = 0;
00004c80      int32_t var_1c = 0;
00004c82      int32_t var_18 = 0;
00004c88      (uint8_t)var_24 = 0x18;  /* "0.33_250117" */
00004c8c      *(uint8_t*)((char*)var_24)[1] = *(uint8_t*)((char*)arg1 + 1);
00004c8e      uint32_t r5 = (uint32_t)*(uint8_t*)((char*)arg1 + 1);
00004c8e      
00004c94      if (r5 == 1)
00004c94      {
00004cb2          char var_37;
00004cb2          void* r1_2;
00004cb2          char r2_1;
00004cb2          
00004cb2          if ((uint32_t)var_38 != 0x4f || (uint32_t)var_37 != 0x5f)
00004cb2          {
00004cbc              uint32_t r0_7 = (uint32_t)(0xff81b854(&var_38) - 4);
00004cc0              *(uint8_t*)((char*)var_24)[2] = (char)r0_7;
00004cc8              void var_39;
00004cc8              
00004cc8              if ((uint32_t)*(uint8_t*)(r0_7 + &var_39) == 0x5f)
00004ce2                  *(uint8_t*)((char*)var_24)[2] = (uint8_t)r0_7 - 1;
00004ce2              
00004ce6              r2_1 = *(uint8_t*)((char*)var_24)[2];
00004ce8              r1_2 = &var_38;
00004cb2          }
00004cb2          else
00004cb2          {
00004cd4              r2_1 = 0xff81b854(&var_38) - 7;
00004cd8              *(uint8_t*)((char*)var_24)[2] = r2_1;
00004cda              void var_36;
00004cda              r1_2 = &var_36;
00004cb2          }
00004cb2          
00004d2e          0xff81b898(&*(uint32_t*)((char*)var_24)[3], r1_2, r2_1);
00004c94      }
00004c94      else if (r5 == 2 || r5 == 0x12 || r5 == 0x22 || r5 == 0x32)  /* "02_3.00.33_250117" */
00004c94          /* "7" */  /* "02_V3.0" */
00004ca4      {
00004cec          uint32_t r1_3 = (uint32_t)*(uint8_t*)((char*)arg1 + 2);
00004cec          
00004cf2          if (r1_3 <= 0xc)
00004d5c              sub_5f72((char*)arg1 + 3, r1_3, -0x5b - (char)(r5 >> 4));
00004cf2          else if (!(uint32_t)*(uint8_t*)((char*)arg1 + r1_3 - 9))
00004d04          {
00004d52              0xff81b898(0x208693, (char*)arg1 + 3, r1_3 - 0xc);
00004d5c              sub_5f72(&data_0, 0, 0);
00004d04          }
00004d04          else
00004d04          {
00004d0a              0xff81b964(0x208686, 0x18);  /* "0.33_250117" */
00004d18              *(uint8_t*)0x208686 = -0x5b - (char)(r5 >> 4);
00004d1e              0xff81b898(0x208687, (char*)arg1 + 3, 0xc);
00004d04          }
00004d04          
00004d26          *(uint8_t*)((char*)var_24)[2] = *(uint8_t*)((char*)arg1 + 2);
00004d2e          0xff81b898(&*(uint32_t*)((char*)var_24)[3], (char*)arg1 + 3, 
00004d2e              *(uint8_t*)((char*)arg1 + 2));
00004ca4      }
00004ca4      
00004d3c      *(uint8_t*)((char*)var_18)[3] = sub_3764(&var_24, 0xf);
00004d46      return sub_6650(&var_24);
00004c6c  }


00004d62    int32_t sub_4d62(int32_t arg1)

00004d62  {
00004d70      int32_t result = 0xff81b7f8(0x208680, arg1, 6);
00004d70      
00004d76      if (!result)
00004858          return result;
00004858      
00004d7e      0xff81b898(0x208680, arg1, 6);
00004d88      *(uint8_t*)0x2086c0 = 1;
00004d8a      sub_31aa();
00004d90      sub_13eb4(arg1);
00004d98      return 0xff7dc2ec(1, 0xd0);
00004d62  }


00004d9e    uint32_t sub_4d9e(void* arg1)

00004d9e  {
00004da2      uint32_t result = (uint32_t)*(uint8_t*)((char*)arg1 + 1);
00004da2      
00004da6      if (result == 0x66)
00004da6      {
00004da8          result = (uint32_t)*(uint8_t*)((char*)arg1 + 2);
00004da8          
00004dac          if (result == 0x66)
00004dac          {
00004dae              sub_1554();
00004db2              result = (uint32_t)*(uint8_t*)((char*)arg1 + 3);
00004db2              
00004db6              if (result == 0x66)
00004dbc                  return 0xff81b968(0x2087ac, 0xa4);
00004dac          }
00004da6      }
00004da6      
00004dc0      return result;
00004d9e  }


00004dc2    int32_t sub_4dc2(void* arg1)

00004dc2  {
00004dc6      uint32_t r0 = (uint32_t)*(uint8_t*)((char*)arg1 + 1);
00004dce      uint32_t r5 = (uint32_t)*(uint8_t*)0x20b850;
00004dd4      void* r0_1;
00004dd4      int32_t entry_r2;
00004dd4      int32_t r2;
00004dd4      r0_1 = sub_13f18(r0, 0x20b850, entry_r2, r0);
00004dd8      *(uint32_t*)((char*)r0_1 + 0x60) = 0x20b90c;
00004dde      *(uint32_t*)((char*)r0_1 + 0x64) = r2;
00004de4      0xff81b968(0x20b90c, 0x14);  /* "_3.00.33_250117" */
00004de4      
00004dea      if (r5)
00004dec          sub_7a3a();
00004dec      
00004df2      sub_7a3e((uint32_t)*(uint8_t*)((char*)arg1 + 2));
00004df8      *(uint8_t*)0x20b90c = 1;
00004e00      0xff7ef6e4(0x209924, 0x3e8);
00004e24      sub_377e();
00004ea4      uint32_t r0_3 = (uint32_t)*(uint8_t*)((char*)arg1 + 1);
00004eac      int32_t* r0_6;
00004eac      int32_t var_28;
00004eac      
00004eac      if (r0_3 == 1 || r0_3 == 6)
00004eac      {
00004edc          var_28 = 0x30;  /* "RY02_V3.0" */
00004ede          int32_t var_24_1 = 0x30;  /* "RY02_V3.0" */
00004ee0          int32_t var_20_1 = 0x30;  /* "RY02_V3.0" */
00004ee6          int32_t var_1c_1 = 0x30;  /* "RY02_V3.0" */
00004ee8          (uint8_t)var_28 = 0x77;
00004eec          *(uint8_t*)((char*)var_28)[1] = *(uint8_t*)((char*)arg1 + 1);
00004ef0          int32_t r0_9 = *(uint32_t*)0x20b88c;
00004ef2          *(uint8_t*)((char*)var_28)[3] = (char)r0_9;
00004ef6          (uint8_t)var_24_1 = (char)(r0_9 >> 8);
00004efa          *(uint8_t*)((char*)var_24_1)[1] = (char)(r0_9 >> 0x10);
00004efa              /* "RY02_3.00.33_250117" */
00004efe          *(uint8_t*)((char*)var_24_1)[2] = (char)(r0_9 >> 0x18);  /* "0.33_250117" */
00004f0a          *(uint8_t*)((char*)var_1c_1)[3] = sub_3764(&var_28, 0xf);
00004f0c          r0_6 = &var_28;
00004eac      }
00004eac      else
00004eac      {
00004eae          var_28 = 0x30;  /* "RY02_V3.0" */
00004eb0          int32_t var_24 = 0x30;  /* "RY02_V3.0" */
00004eb2          int32_t var_20 = 0x30;  /* "RY02_V3.0" */
00004eb8          int32_t var_1c = 0x30;  /* "RY02_V3.0" */
00004eba          (uint8_t)var_28 = 0x77;
00004ebc          *(uint8_t*)((char*)var_28)[1] = 0x30;  /* "RY02_V3.0" */
00004ebe          __builtin_strncpy(&*(uint32_t*)((char*)var_28)[3], "0000", 4);
00004ed0          *(uint8_t*)((char*)var_1c)[3] = sub_3764(&var_28, 0xf);
00004ed2          r0_6 = &var_28;
00004eac      }
00004eda      return sub_6650(r0_6);
00004dc2  }

00004e06                    00 00                                                                                ..

00004e08  int32_t data_4e08 = 0x208850
00004e0c  int32_t data_4e0c = 0x208784
00004e10  int32_t data_4e10 = 0x208686
00004e14  int32_t data_4e14 = 0x2087ac
00004e18  int32_t data_4e18 = 0x20b90c
00004e1c  int32_t data_4e1c = 0x20b850
00004e20  int32_t data_4e20 = 0x209924

00004e2a    int32_t sub_4e2a(void* arg1 @ r4, int32_t arg2 @ r5, void* arg3 @ r6, int32_t arg4 @ r7, int32_t arg5, int32_t arg6, int32_t arg7, int32_t arg8)

00004e2a  {
00004e2c      uint32_t r0_1;
00004e2c      
00004e2c      if (arg2)
00004e2c      {
00004e30          *(uint8_t*)((char*)arg3 + 1) = 1;
00004e32          sub_7a6e();
00004e58          *(uint8_t*)((char*)arg3 + 1) = (char)arg4;
00004ea4          r0_1 = (uint32_t)*(uint8_t*)((char*)arg1 + 1);
00004e2c      }
00004e2c      
00004eac      int32_t* r0_4;
00004eac      int32_t arg_0;
00004eac      int32_t arg_4;
00004eac      int32_t arg_8;
00004eac      int32_t arg_c;
00004eac      
00004eac      if (arg2 && (r0_1 == 1 || r0_1 == 6))
00004eac      {
00004edc          arg_0 = arg4;
00004ede          arg_4 = arg4;
00004ee0          arg_8 = arg4;
00004ee6          arg_c = arg4;
00004ee8          (uint8_t)arg_0 = 0x77;
00004eec          *(uint8_t*)((char*)arg_0)[1] = *(uint8_t*)((char*)arg1 + 1);
00004ef0          int32_t r0_7 = *(uint32_t*)0x20b88c;
00004ef2          *(uint8_t*)((char*)arg_0)[3] = (char)r0_7;
00004ef6          (uint8_t)arg_4 = (char)(r0_7 >> 8);
00004efa          *(uint8_t*)((char*)arg_4)[1] = (char)(r0_7 >> 0x10);  /* "RY02_3.00.33_250117" */
00004efe          *(uint8_t*)((char*)arg_4)[2] = (char)(r0_7 >> 0x18);  /* "0.33_250117" */
00004f0a          *(uint8_t*)((char*)arg_c)[3] = sub_3764(&arg_0, 0xf);
00004f0c          r0_4 = &arg_0;
00004eac      }
00004eac      else
00004eac      {
00004eae          arg_0 = arg4;
00004eb0          arg_4 = arg4;
00004eb2          arg_8 = arg4;
00004eb8          arg_c = arg4;
00004eba          (uint8_t)arg_0 = 0x77;
00004ebc          *(uint8_t*)((char*)arg_0)[1] = (char)arg4;
00004ebe          *(uint8_t*)((char*)arg_0)[3] = (char)arg4;
00004ec0          (uint8_t)arg_4 = (char)arg4;
00004ec2          *(uint8_t*)((char*)arg_4)[1] = (char)arg4;
00004ec4          *(uint8_t*)((char*)arg_4)[2] = (char)arg4;
00004ed0          *(uint8_t*)((char*)arg_c)[3] = sub_3764(&arg_0, 0xf);
00004ed2          r0_4 = &arg_0;
00004eac      }
00004eda      return sub_6650(r0_4);
00004e2a  }

00004e38                                                                          00 2d 38 d0 01 20 70 70                          .-8.. pp
00004e40  02 f0 26 fe 08 e0 00 2d 31 d0 f7 48 ea f7 5e dc 01 20 70 70 02 f0 f1 fd                          ..&....-1..H..^.. pp....
00004e5c                                                                                      00 2d 26 d0                              .-&.
00004e60  60 79 23 79 01 04 a0 79 e5 78 00 06 01 43 e0 1c 02 46 18 02 28 43 01 43 60 7a a3 7a 00 04 1b 06  `y#y...y.x...C...F..(C.C`z.z....
00004e80  18 43 53 79 15 79 1a 02 2a 43 10 43 73 68 f2 68 cb 1a d2 18 f2 60 b3 68 32 69 c3 1a d2 18 32 61  .CSy.y..*C.Csh.h.....`.h2i....2a
00004ea0  71 60 b0 60                                                                                      q`.`

00004f10    int32_t sub_4f10(void* arg1)

00004f10  {
00004f28      uint32_t r2_2 = (uint32_t)*(uint8_t*)((char*)arg1 + 3) << 0x10
00004f28          | (uint32_t)*(uint8_t*)((char*)arg1 + 4) << 0x18
00004f28          | (uint32_t)*(uint8_t*)((char*)arg1 + 2) << 8
00004f28          | (uint32_t)*(uint8_t*)((char*)arg1 + 1);
00004f28          /* "RY02_3.00.33_250117" */  /* "0.33_250117" */
00004f30      int32_t var_140;
00004f30      
00004f30      if (!r2_2)
00004f3a          var_140 = 0;
00004f30      else
00004f34          sub_18ac(r2_2, &var_140);
00004f34      
00004f48      int32_t var_150;
00004f48      uint32_t var_138;
00004f48      
00004f48      if (!sub_ba4e(var_140, &var_138))
00004f48      {
00004fc6          var_150 = 0;
00004fc8          int32_t var_14c_2 = 0;
00004fca          int32_t var_148_2 = 0;
00004fce          int32_t var_144_2 = 0;
00004fd0          (uint8_t)var_150 = 0x15;  /* "3.00.33_250117" */
00004fd4          *(uint8_t*)((char*)var_150)[1] = 0xff;
00004fd8          *(uint8_t*)((char*)var_144_2)[3] = 0x14;  /* "_3.00.33_250117" */
00004fdc          return sub_6650(&var_150);
00004f48      }
00004f48      
00004f4c      var_138 = r2_2;
00004f50      var_150 = 0;
00004f52      int32_t var_14c = 0;
00004f54      int32_t var_148 = 0;
00004f58      int32_t var_144 = 0;
00004f5a      (uint8_t)var_150 = 0x15;  /* "3.00.33_250117" */
00004f5c      *(uint8_t*)((char*)var_150)[1] = 0;
00004f60      *(uint8_t*)((char*)var_150)[2] = 0x18;  /* "0.33_250117" */
00004f66      *(uint8_t*)((char*)var_150)[3] = 5;
00004f6a      char r5_1 = 1;
00004f76      *(uint8_t*)((char*)var_144)[3] = sub_3764(&var_150, 0xf);
00004f7a      sub_6650(&var_150);
00004fc0      int32_t result;
00004fc0      
00004fc0      for (int32_t i = 0; i < 0x124; i += 0xd)
00004fc0      {
00004f84          var_150 = 0;
00004f86          int32_t var_14c_1 = 0;
00004f88          int32_t var_148_1 = 0;
00004f8a          int32_t var_144_1 = 0;
00004f90          (uint8_t)var_150 = 0x15;  /* "3.00.33_250117" */
00004f92          *(uint8_t*)((char*)var_150)[1] = r5_1;
00004f96          int32_t r2_3 = 0x124 - i;
00004f98          r5_1 += 1;
00004f98          
00004f9c          if (r2_3 >= 0xd)
00004f9e              r2_3 = 0xd;
00004f9e          
00004fa6          0xff81b898(&*(uint32_t*)((char*)var_150)[2], &var_138 + i, r2_3);
00004fb4          *(uint8_t*)((char*)var_144_1)[3] = sub_3764(&var_150, 0xf);
00004fb8          result = sub_6650(&var_150);
00004fc0      }
00004fc0      
00004fc4      return result;
00004f10  }


00004fe2    int32_t sub_4fe2(void* arg1)

00004fe2  {
00004fea      int32_t var_1b0 = 0;
00004fec      int32_t var_1ac = 0;
00004fee      int32_t var_1a8 = 0;
00004ff0      int32_t var_1a4 = 0;
00004ffc      void* r0_3 =
00004ffc          sub_8fcc((uint32_t)(sub_216a() - (uint16_t)*(uint8_t*)((char*)arg1 + 1)));
00005004      uint32_t var_1a0;
00005004      
00005004      if (!r0_3)
00005012          0xff81b968(&var_1a0, 0x124, 0x124);
00005004      else
00005008          0xff7dc2f8(&var_1a0, r0_3, 0x124);
00005008      
0000501c      if (!(uint32_t)*(uint8_t*)((char*)arg1 + 1))
0000501c      {
00005036          var_1a0 = sub_216a();
0000503e          int32_t r0_10 = sub_12b2a(sub_217a(), 0x3c);
0000503e          
00005046          if ((uint32_t)*(uint8_t*)((char*)arg1 + 4) > r0_10)
00005048              *(uint8_t*)((char*)arg1 + 4) = (char)r0_10;
00005048          
00005052          sub_8d26(&(&var_1a0)[r0_10 * 3 + 1]);
0000501c      }
0000501c      else
00005020          *(uint8_t*)((char*)arg1 + 4) = 0x17;  /* "00.33_250117" */
00005020      
00005028      if (!var_1a0)
00005028      {
0000514c          (uint8_t)var_1b0 = 0x43;
00005150          *(uint8_t*)((char*)var_1b0)[1] = 0xff;
00005158          0xff81b964(&*(uint32_t*)((char*)var_1b0)[2], 0xd);
00005166          *(uint8_t*)((char*)var_1a4)[3] = sub_3764(&var_1b0, 0xf);
0000516a          return sub_6650(&var_1b0);
00005028      }
00005028      
0000502a      uint32_t r4_1 = 0;
0000502c      uint32_t i = (uint32_t)*(uint8_t*)((char*)arg1 + 3);
00005078      char var_78[0x64];
00005078      
00005078      for (uint32_t r2_1 = (uint32_t)*(uint8_t*)((char*)arg1 + 4); r2_1 >= i; 
00005078          i = (uint32_t)((uint8_t)i + 1))
00005078      {
0000505c          void* r1_4 = &(&var_1a0)[i * 3];
0000505e          uint32_t r3_1 = (uint32_t)*(uint16_t*)((char*)r1_4 + 4);
0000505e          
00005062          if (!r3_1)
00005062          {
00005096              if ((uint32_t)*(uint16_t*)((char*)r1_4 + 0xa))
00005096              {
0000506c                  var_78[r4_1] = (char)i;
00005070                  r4_1 = (uint32_t)((uint8_t)r4_1 + 1);
00005096              }
00005062          }
00005062          else if (r3_1 != 0xffff)
00005068          {
0000506c              var_78[r4_1] = (char)i;
00005070              r4_1 = (uint32_t)((uint8_t)r4_1 + 1);
00005068          }
00005078      }
00005078      
0000507c      (uint8_t)var_1b0 = 0x43;
00005080      char r0_15;
00005080      
00005080      r0_15 = !r4_1 ? -1 : -0x10;
00005080      
00005086      *(uint8_t*)((char*)var_1b0)[1] = r0_15;
00005088      *(uint8_t*)((char*)var_1b0)[2] = (char)r4_1;
00005088      
0000508e      if ((uint32_t)*(uint8_t*)((char*)arg1 + 5) == 1)
000050a0          *(uint8_t*)((char*)var_1b0)[3] = 1;
000050a0      
000050ac      *(uint8_t*)((char*)var_1a4)[3] = sub_3764(&var_1b0, 0xf);
000050b0      char result = sub_6650(&var_1b0);
000050b0      
000050b6      if (r4_1)
000050b6      {
000050be          char var_7c;
000050be          sub_21be((uint32_t)(uint16_t)var_1a0, &var_7c);
000050c4          (uint8_t)var_1b0 = 0x43;
000050d0          *(uint8_t*)((char*)var_1b0)[1] = sub_684e((uint32_t)var_7c);
000050dc          char var_7b;
000050dc          *(uint8_t*)((char*)var_1b0)[2] = sub_684e((uint32_t)var_7b);
000050e2          char var_7a;
000050e2          result = sub_684e((uint32_t)var_7a);
000050e8          *(uint8_t*)((char*)var_1b0)[3] = result;
000050ea          *(uint8_t*)((char*)var_1ac)[2] = (char)r4_1;
000050ea          
00005144          for (uint32_t i_1 = 0; i_1 < r4_1; i_1 = (uint32_t)((uint8_t)i_1 + 1))
00005144          {
000050f2              uint32_t r0_27 = (uint32_t)var_78[i_1];
000050f8              (uint8_t)var_1ac = (char)(r0_27 << 2);
000050fc              *(uint8_t*)((char*)var_1ac)[1] = (char)i_1;
00005100              void* r2_2 = &(&var_1a0)[r0_27 * 3];
00005104              uint32_t r0_29 = (uint32_t)*(uint16_t*)((char*)r2_2 + 0xa);
00005104              
00005108              if (!(uint32_t)*(uint8_t*)((char*)arg1 + 5))
0000510e                  r0_29 = (uint32_t)(0xa * (uint16_t)r0_29);
0000510e              
00005114              (uint8_t)var_1a8 = (char)(r0_29 >> 8);
00005116              *(uint8_t*)((char*)var_1ac)[3] = (char)r0_29;
00005118              uint32_t r0_31 = (uint32_t)*(uint16_t*)((char*)r2_2 + 4);
0000511c              *(uint8_t*)((char*)var_1a8)[2] = (char)(r0_31 >> 8);
0000511e              *(uint8_t*)((char*)var_1a8)[1] = (char)r0_31;
00005120              uint32_t r0_32 = (uint32_t)*(uint16_t*)((char*)r2_2 + 8);
00005124              (uint8_t)var_1a4 = (char)(r0_32 >> 8);
0000512a              *(uint8_t*)((char*)var_1a8)[3] = (char)r0_32;
00005136              *(uint8_t*)((char*)var_1a4)[3] = sub_3764(&var_1b0, 0xf);
0000513a              result = sub_6650(&var_1b0);
00005144          }
000050b6      }
000050b6      
00005148      return result;
00004fe2  }


00005170    int32_t sub_5170(int32_t arg1, int32_t arg2, int32_t arg3)

00005170  {
00005170      int32_t r3;
00005170      int32_t var_c = r3;
00005170      int32_t var_10 = arg3;
00005170      int32_t var_14 = arg2;
00005170      int32_t result = arg1;
0000528e      uint32_t i;
0000528e      
0000528e      do
0000528e      {
00005290          uint32_t r0_7 = (uint32_t)*(uint16_t*)0x20992c;
00005290          
00005296          if (r0_7 == (uint32_t)*(uint16_t*)0x20992e)
00005296              break;
00005296          
0000517c          uint32_t r1 = (uint32_t)*(uint8_t*)((r0_7 << 4) + 0x209930);
0000517c          
00005182          if (r1 == 0x3a)
00005182          {
000051fa              result = 0;
000051fc              var_14 = 0;
000051fe              var_10 = 0;
00005200              var_c = 0;
00005206              (uint8_t)result = 0x3a;
00005182          }
00005182          else if (r1 > 0x3a)
00005184          {
000051aa              if (r1 != 0x7a)
000051aa              {
000051ac                  if (r1 > 0x7a)
000051ac                  {
000051c2                      if (r1 == 0x81)
000051ec                          arg3 = sub_4d62((r0_7 << 4) + 0x209931);
000051c2                      else if (r1 == 0xa1)
00005276                          arg3 = sub_1d32((r0_7 << 4) + 0x209930, r1, arg3);
000051c6                      else if (r1 == 0xc6)
000051ca                      {
00005248                          if ((uint32_t)*(uint8_t*)((r0_7 << 4) + 0x209931) == 0x6c)
00005248                          {
00005254                              sub_1554();
00005258                              sub_31e6();
0000525c                              sub_3244();
00005264                              arg3 = sub_6bcc(0x7d0);  /* "17 10:58:10 2022" */
00005248                          }
00005248                          else
0000524e                              arg3 = sub_3d60(0xc6, 1);
000051ca                      }
000051ca                      else if (r1 == 0xff)
000051e4                          arg3 = sub_4d9e((r0_7 << 4) + 0x209930);
000051ac                  }
000051ac                  else if (r1 == 0x3b)
0000520a                      arg3 = sub_4bea((r0_7 << 4) + 0x209930);
000051b0                  else if (r1 == 0x43)
000051d2                      arg3 = sub_4fe2((r0_7 << 4) + 0x209930);
000051b4                  else if (r1 != 0x72 && r1 == 0x77)
000051de                      arg3 = sub_4dc2((r0_7 << 4) + 0x209930);
000051aa              }
00005184          }
00005184          else if (r1 == 0x15)  /* "3.00.33_250117" */
000051d8              arg3 = sub_4f10((r0_7 << 4) + 0x209930);
00005188          else
00005188          {
00005198              if (r1 == 0x18)  /* "0.33_250117" */
000051f2                  arg3 = sub_4c6c((r0_7 << 4) + 0x209930);
00005198              else if (r1 == 0x37)  /* ".0" */
00005216                  arg3 = sub_4b54((r0_7 << 4) + 0x209930);
0000519c              else if (r1 == 0x38)  /* "0" */
0000526a                  arg3 = sub_4b02((r0_7 << 4) + 0x209930);
000051a0              else if (r1 == 0x39)
00005270                  arg3 = sub_4a88((r0_7 << 4) + 0x209930);
00005270              
0000518e              if (r1 == 1)
00005210                  arg3 = sub_3e54((r0_7 << 4) + 0x209930);
0000518e              else if (r1 == 8)
00005192              {
0000521c                  uint32_t r0_4 = (uint32_t)*(uint8_t*)((r0_7 << 4) + 0x209931);
0000521c                  
00005220                  if (!r0_4)
00005238                      arg3 = sub_1530();
00005220                  else if (r0_4 == 1)
0000523e                      arg3 = sub_14ba();
00005192              }
00005188          }
00005188          
0000527a          uint32_t r0_6 = (uint32_t)*(uint16_t*)0x20992c;
0000527e          int16_t i_1;
0000527e          
0000527e          i_1 = r0_6 < 9 ? (uint16_t)r0_6 + 1 : 0;
0000527e          
00005286          i = (uint32_t)i_1;
00005288          *(uint16_t*)0x20992c = (int16_t)i;
0000528e      } while (i != (uint32_t)*(uint16_t*)0x20992e);
0000529a      return result;
00005170  }

00005228  int32_t data_5228 = 0x209924
0000522c  int32_t data_522c = 0x20b850
00005230  int32_t data_5230 = 0x124
00005234  int32_t data_5234 = 0xffff

0000529c    int32_t sub_529c(int32_t arg1)

0000529c  {
0000529c      int32_t r3;
0000529c      int32_t var_14_1 = r3;
0000529c      int32_t r2;
0000529c      int32_t var_18_1 = r2;
0000529c      int32_t r1;
0000529c      int32_t var_1c_1 = r1;
0000529c      int32_t result = arg1;
000052a0      result = 0;
000052a2      int32_t var_1c = 0;
000052a4      int32_t var_18 = 0;
000052a6      int32_t var_14 = 0;
000052ac      (uint8_t)result = 0x73;
000052ae      *(uint8_t*)((char*)result)[1] = (char)arg1;
000052ae      
000052b2      if (arg1 == 0x12)  /* "02_3.00.33_250117" */
000052b2      {
000052cc          int32_t r0 = sub_9178();
000052d2          int32_t r0_1 = sub_932e();
000052d8          int32_t r0_2 = sub_9336();
000052e0          *(uint8_t*)((char*)result)[2] = (char)(r0 >> 0x10);  /* "RY02_3.00.33_250117" */
000052e4          *(uint8_t*)((char*)result)[3] = (char)(r0 >> 8);
000052e6          (uint8_t)var_1c = (char)r0;
000052ea          *(uint8_t*)((char*)var_1c)[1] = (char)(r0_1 >> 0x10);  /* "RY02_3.00.33_250117" */
000052ee          *(uint8_t*)((char*)var_1c)[2] = (char)(r0_1 >> 8);
000052f0          *(uint8_t*)((char*)var_1c)[3] = (char)r0_1;
000052f4          (uint8_t)var_18 = (char)(r0_2 >> 0x10);  /* "RY02_3.00.33_250117" */
000052f8          *(uint8_t*)((char*)var_18)[1] = (char)(r0_2 >> 8);
000052fa          *(uint8_t*)((char*)var_18)[2] = (char)r0_2;
000052b2      }
000052b2      else if (arg1 == 0xc)
000052b8      {
00005304          *(uint8_t*)((char*)result)[2] = sub_26ac();
00005304          
0000530c          if (sub_281e())
00005310              *(uint8_t*)((char*)result)[3] = 1;
000052b8      }
000052b8      else if (arg1 != 0x25 && arg1 != 0x27)
000052c0      {
000052c4          if (arg1 == 0x28)
000052c4          {
00005318              *(uint8_t*)((char*)result)[2] = *(uint8_t*)0x209914;
0000531c              *(uint8_t*)((char*)result)[3] = *(uint8_t*)0x209915;
000052c4          }
000052c4          else if (arg1 == 0x29)
00005320              *(uint8_t*)((char*)result)[2] = 1;
000052c0      }
000052c0      
0000532c      *(uint8_t*)((char*)var_14)[3] = sub_3764(&result, 0xf);
00005330      sub_6650(&result);
00005334      return result;
0000529c  }


00005336    int32_t sub_5336(char arg1, char arg2)

00005336  {
00005338      *(uint8_t*)0x209914 = arg1;
0000533a      *(uint8_t*)0x209915 = arg2;
0000533e      /* tailcall */
0000533e      return sub_529c(0x28);
00005336  }


00005340    void sub_5340(int32_t arg1, int32_t* arg2)

00005340  {
00005346      if (arg1 && arg1 != 0xffffffff)
0000534c          *(uint32_t*)arg2 = arg1 + 0x386d4380;
00005340  }


00005350    int32_t sub_5350() __pure

00005350  {
00005350      return;
00005350  }


00005352    int32_t sub_5352() __pure

00005352  {
00005352      return;
00005352  }


00005354    int32_t sub_5354() __pure

00005354  {
00005354      return;
00005354  }


00005356    int32_t sub_5356(int32_t arg1)

00005356  {
00005356      int32_t r3;
00005356      int32_t var_c_1 = r3;
00005356      int32_t r2;
00005356      int32_t var_10_1 = r2;
00005356      int32_t r1;
00005356      int32_t var_14_1 = r1;
00005356      int32_t result = arg1;
0000535a      result = 0;
0000535c      int32_t var_14 = 0;
0000535e      int32_t var_10 = 0;
00005360      int32_t var_c = 0;
00005366      (uint8_t)result = 2;
00005368      *(uint8_t*)((char*)result)[1] = (char)arg1;
00005374      *(uint8_t*)((char*)var_c)[3] = sub_3764(&result, 0xf);
00005378      sub_6650(&result);
0000537c      return result;
00005356  }


0000537e    char* sub_537e(char* arg1)

0000537e  {
0000537e      int32_t r3;
0000537e      int32_t var_c_1 = r3;
0000537e      int32_t r2;
0000537e      int32_t var_10_1 = r2;
0000537e      int32_t r1;
0000537e      int32_t var_14_1 = r1;
0000537e      char* result = arg1;
00005382      result = &data_0;
00005384      int32_t var_14 = 0;
00005386      int32_t var_10 = 0;
00005388      int32_t var_c = 0;
0000538e      *(uint8_t*)((char*)result)[1] = *(uint8_t*)arg1;
00005392      *(uint8_t*)((char*)result)[2] = 0xaa;
00005396      *(uint8_t*)((char*)result)[3] = arg1[1];
00005398      (uint8_t)var_14 = 0xaa;
0000539c      *(uint8_t*)((char*)var_14)[1] = arg1[2];
0000539e      *(uint8_t*)((char*)var_14)[2] = 0xaa;
000053a2      *(uint8_t*)((char*)var_14)[3] = arg1[3];
000053a4      (uint8_t)var_10 = 0xaa;
000053a8      *(uint8_t*)((char*)var_10)[1] = arg1[4];
000053aa      *(uint8_t*)((char*)var_10)[2] = 0xaa;
000053ae      *(uint8_t*)((char*)var_10)[3] = arg1[5];
000053b0      (uint8_t)var_c = 0xaa;
000053b4      *(uint8_t*)((char*)var_c)[1] = arg1[6];
000053b6      *(uint8_t*)((char*)var_c)[2] = 0xaa;
000053c2      *(uint8_t*)((char*)var_c)[3] = sub_3764(&result, 0xf);
000053c6      sub_6650(&result);
000053ca      return result;
0000537e  }


000053cc    uint32_t sub_53cc(char* arg1)

000053cc  {
000053d4      sub_b658(0x20991b);
000053e4      return sub_3d12(*(uint8_t*)arg1, 0x20991b, 1);
000053cc  }

000053e6                    00 00                                                                                ..

000053e8  int32_t data_53e8 = 0x209914
000053ec  int32_t data_53ec = 0x386d4380

000053f0    uint32_t sub_53f0()

000053f0  {
000053f4      return (uint32_t)*(uint8_t*)0x2099d1;
000053f0  }


000053f6    uint32_t sub_53f6()

000053f6  {
00005400      return sub_729a(0, 0x2710);
000053f6  }


00005402    int32_t sub_5402(int32_t arg1, int32_t arg2, int32_t arg3, int32_t arg4)

00005402  {
00005402      int32_t var_20 = arg2;
0000540e      var_20 = arg3;
00005416      0xff7e1af8(0x23103002, 0x88006f8, 2, arg1, var_20, arg3, arg4);
0000541c      int32_t r1_1;
0000541c      
0000541c      if (!arg2)
00005434          r1_1 = 0x8800730;
0000541c      else
0000541c      {
00005420          if (arg2 != 1)
0000542e              return 0xff7e1af8(0x23103000, 0x8800844, 1, arg2);
0000542e          
00005442          if (!arg3)
00005442          {
00005466              int32_t r4_3 = *(uint32_t*)0x2099e0;
0000546e              *(uint32_t*)0x2099dc = (*(uint32_t*)0x2099dc & 0xfffffffb) | 4;
00005470              *(uint32_t*)0x2099e0 = r4_3;
00005474              *(uint8_t*)0x2099d1 = 1;
0000547e              int32_t r2_2;
0000547e              int32_t r3_5;
0000547e              r2_2 = 0xff7e1af8(0x23103002, 0x880076c, 0);
0000547e              
0000548c              if (sub_76b6(arg1, &var_20, r2_2, r3_5))
000054a0                  0xff7e1af8(0x23103002, 0x88007b8, 1, 0xff7e1e2e(0x23300000, &var_20));
000054a0              
000054b4              return sub_3704(0x2099d8, 0x8293a7, 0x7d0, 0);  /* "17 10:58:10 2022" */
00005442          }
00005442          
00005446          int32_t r6_1 = *(uint32_t*)0x2099e0;
0000544a          *(uint32_t*)0x2099dc &= 0xfffffffb;
0000544c          *(uint32_t*)0x2099e0 = r6_1;
0000544e          *(uint8_t*)0x2099d1 = 0;
00005452          sub_11b0a((uint32_t)*(uint8_t*)0x2099ee, 0xfffffffb, 0x2099d0, 0);
0000545a          r1_1 = 0x88007f8;
0000541c      }
0000541c      
00005462      return 0xff7e1af8(0x23103002, r1_1, 0);
00005402  }


000054b6    void sub_54b6(uint32_t arg1, int32_t arg2, int32_t arg3, int32_t arg4)

000054b6  {
000054c0      if (!arg2)
000054c0      {
000054f8          int16_t var_18;
000054f8          int16_t var_14;
000054f8          int16_t var_10;
000054f8          sub_11a78(0x274, &var_18, arg1, 
000054f8              sub_11a78(0x273, &var_14, arg1, sub_11a78(0x272, &var_10, arg1, arg4)));
00005512          0xff7e1af8(0x23103002, 0x8800878, 3, (uint32_t)var_10, (uint32_t)var_14, 
00005512              (uint32_t)var_18);
00005516          sub_5b12();
00005534          sub_74dc();
000054c0      }
000054c0      else if (arg2 == 1)
000054c4      {
0000552a          0xff7e1af8(0x23103000, 0x88008f8, 1, arg3);
0000552e          sub_5b12();
00005534          sub_74dc();
000054c4      }
000054c4      else if (arg2 == 2)
000054d2          0xff7e1af8(0x23103002, 0x8800938, 0);
000054b6  }


0000553a    int32_t sub_553a(int32_t arg1, char arg2)

0000553a  {
0000553e      *(uint8_t*)0x2099f5 = arg2 - 3;
00005542      *(uint8_t*)0x2099f6 = 1;
00005544      return 0x2099dc;
0000553a  }


00005546    uint32_t sub_5546(int32_t arg1, int32_t arg2, int32_t arg3, int32_t arg4)

00005546  {
0000554c      return sub_119bc(arg1, arg2, arg3, arg4);
00005546  }


0000554e    uint32_t sub_554e()

0000554e  {
0000555a      uint32_t r4 = (uint32_t)(*(uint8_t*)0x20844c + 0xc);
0000555e      char var_20 = 0;
00005560      char var_1c = 0;
00005566      int16_t var_18 = 0x640;
00005568      int16_t var_14 = 0x640;
0000556e      char var_28[0x8];
0000556e      int32_t entry_r2;
0000556e      int32_t entry_r3;
0000556e      sub_114b6(0x200, &var_28, entry_r2, entry_r3);
00005584      uint32_t r3_1;
00005584      
00005584      for (int32_t i = 0; i < 6; )
00005584      {
0000557a          int32_t r6_1 = r4 + i;
0000557c          r3_1 = (uint32_t)var_28[5 - i];
0000557e          i += 1;
00005580          *(uint8_t*)(0x208449 + r6_1) = (char)r3_1;
00005584      }
00005584      
000055b2      int32_t r1_1;
000055b2      int32_t r2_4;
000055b2      int32_t r3_5;
000055b2      r1_1 = sub_11978(0x269, 2, &var_14, 
000055b2          sub_11978(0x268, 2, &var_18, 
000055b2              sub_11978(0x267, 1, &var_1c, sub_11978(0x263, 1, &var_20, r3_1))));
000055b8      uint32_t result = (uint32_t)*(uint8_t*)0x208850;
000055b8      
000055bc      if (result == 1)
000055c4          return result;
000055c4      
000055be      return sub_119aa(result, r1_1, r2_4, r3_5);
0000554e  }


000055c6    int32_t sub_55c6(int32_t arg1, int32_t arg2, int32_t arg3)

000055c6  {
000055c6      int32_t var_18 = arg3;
000055c6      int32_t var_1c = arg2;
000055de      int32_t result;
000055de      int32_t r3_1;
000055de      result = 0xff7e1af8(0x23103002, 0x88005b8, 4, arg1, (uint32_t)*(uint8_t*)0x2099d2, 
000055de          arg2, arg3);
000055de      
000055e6      if (!arg2)
000055e6      {
000055f0          *(uint8_t*)0x2099f5 = 0x14;  /* "_3.00.33_250117" */
000055f4          *(uint8_t*)0x2099f6 = 0;
000055f6          *(uint8_t*)0x2099ed = 0;
000055f6          
0000560a          if (arg3 != 0x113 && arg3 != 0x116)
0000560a          {
00005612              if (arg3 == 0x12a)
00005614                  sub_7420(arg3 - 0x12a);
00005614              
00005624              r3_1 = 0xff7e1af8(0x23103000, 0x880060c, 1, arg3);
0000560a          }
0000560a          
0000562a          int32_t r1 = *(uint32_t*)0x2099e0;
00005632          *(uint32_t*)0x2099dc &= 0xfffffffb;
00005634          *(uint32_t*)0x2099e0 = r1;
00005638          int32_t r1_1 = *(uint32_t*)0x2099e0;
0000563e          *(uint32_t*)0x2099dc &= 0xfffffff7;
00005640          *(uint32_t*)0x2099e0 = r1_1;
00005644          int32_t r1_2 = *(uint32_t*)0x2099e0;
0000564c          *(uint32_t*)0x2099dc &= 0xffffffbf;
0000564e          *(uint32_t*)0x2099e0 = r1_2;
00005652          int32_t r1_3 = *(uint32_t*)0x2099e0;
00005654          int32_t r2 = 0xfffffeff;
00005658          *(uint32_t*)0x2099dc &= 0xfffffeff;
0000565a          *(uint32_t*)0x2099e0 = r1_3;
0000565a          
00005660          if ((uint32_t)*(uint8_t*)0x2099d0)
00005660          {
00005664              *(uint8_t*)0x2099d0 = 0;
00005668              r1_3 = sub_bce(1);
00005660          }
00005660          
00005672          if (!((uint32_t)*(uint8_t*)0x2099ec << 0x1c >> 0x1e))  /* "_250117" */  /* "50117"
00005672                  */
00005680              sub_554e();
00005672          else
00005672          {
00005678              uint32_t r0_24 = (uint32_t)*(uint8_t*)0x2099ec << 0x1c >> 0x1e;
00005678                  /* "_250117" */  /* "50117" */
00005678              
0000567c              if (r0_24 == 2)
00005686                  sub_119bc(r0_24, r1_3, r2, r3_1);
00005672          }
00005672          
0000568a          sub_74bc();
00005692          sub_71ce();
00005696          result = sub_6a3c();
000055e6      }
000055e6      else if (arg2 == 2)
000055ea      {
0000569e          *(uint8_t*)0x2099ed = (char)arg2;
000056ce          char var_2c;
000056ce          void var_28;
000056ce          sub_11aae(arg1, &var_28, &var_2c, 
000056ce              sub_11a78(0x274, 0x2099f3, arg1, 
000056ce                  sub_11a78(0x273, 0x2099f1, arg1, 
000056ce                      sub_11a78(0x272, 0x2099ef, arg1, r3_1))));
000056d6          int32_t r0_26 = 0xff7e1e2e(0x23300000, &var_28);
0000570e          0xff7e1af8(0x23103002, 0x8800648, 6, arg1, 
0000570e              (uint32_t)*(uint8_t*)0x2099f0 << 8 | (uint32_t)*(uint8_t*)0x2099ef, 
0000570e              (uint32_t)*(uint8_t*)0x2099f2 << 8 | (uint32_t)*(uint8_t*)0x2099f1, 
0000570e              (uint32_t)*(uint8_t*)0x2099f4 << 8 | (uint32_t)*(uint8_t*)0x2099f3, r0_26, 
0000570e              (uint32_t)var_2c);
00005716          *(uint8_t*)0x2099ee = (uint8_t)arg1;
00005720          result = sub_71b4();
000055ea      }
000055ea      
00005724      *(uint8_t*)0x2099d2 = (char)arg2;
00005728      return result;
000055c6  }


0000572a    uint8_t sub_572a(int32_t arg1, int32_t arg2)

0000572a  {
00005730      uint32_t r4 = (uint32_t)(uint8_t)arg1;
00005734      uint32_t r0 = r4 << 0x1c;  /* "_250117" */
00005736      uint32_t r6 = r0 >> 0x1e;  /* "50117" */
0000573c      uint32_t r7_1 = r4 << 0x1f >> 0x1f;  /* "0117" */
0000574a      0xff7e1af8(0x23103002, 0x88004d0, 3, r7_1, r6, arg2, r0, arg1, arg2);
0000574a      
0000575c      if ((uint32_t)*(uint8_t*)0x2099ec << 0x1f >> 0x1f != r7_1 && r4 << 0x1f)  /* "0117" */
0000575c      {
00005766          int32_t r1;
00005766          int32_t r2_1;
00005766          int32_t r3_1;
00005766          r1 = 0xff7e1af8(0x23103002, 0x8800518, 0);
00005766          
00005772          if (!sub_1129e(1, r1, r2_1, r3_1))
0000577c              0xff7e1af8(0x23103002, 0x880052c, 0);
0000577c          
00005780          sub_554e();
0000575c      }
0000575c      
0000578c      if ((uint32_t)*(uint8_t*)0x2099ec << 0x1c >> 0x1e != r6)  /* "_250117" */  /* "50117"
0000578c          */
0000578c      {
00005792          if (!(r0 >> 0x1e))  /* "50117" */
00005792          {
0000579c              int32_t r1_1;
0000579c              
0000579c              r1_1 = r4 << 0x1e >= 0 ? 0x8800590 : 0x8800560;  /* "50117" */
0000579c              
000057ae              0xff7e1af8(0x23103002, r1_1, 0);
000057ae              
000057b6              if ((uint32_t)*(uint8_t*)0x2099ed != 2)
000057b8                  *(uint8_t*)0x2099ed;
00005792          }
00005792          else if (r6 == 2)
000057c4              0xff7e1af8(0x23103002, 0x88005a4, 0);
0000578c      }
0000578c      
000057d0      *(uint8_t*)0x2099ec = (char)((uint32_t)*(uint8_t*)0x2099ec >> 1 << 1) | (uint8_t)r7_1;
000057e0      *(uint8_t*)0x2099ec = (*(uint8_t*)0x2099ec & 0xfd) | (char)(r4 << 0x1e >> 0x1f << 1);
000057e0          /* "50117" */  /* "0117" */
00005822      *(uint8_t*)0x2099ec = (*(uint8_t*)0x2099ec & 0xf3) | (char)(r6 << 2);
00005832      *(uint8_t*)0x2099ec = (*(uint8_t*)0x2099ec & 0xcf) | (char)(r4 << 0x1a >> 0x1e << 4);
00005832          /* "33_250117" */  /* "50117" */
0000583e      uint8_t result =
0000583e          (char)((uint32_t)*(uint8_t*)0x2099ec << 0x1a >> 0x1a) | (char)(r4 >> 6 << 6);
0000583e          /* "33_250117" */
00005840      *(uint8_t*)0x2099ec = result;
00005844      return result;
0000572a  }

000057ec  int32_t data_57ec = 0x2099d0
000057f0  int32_t data_57f0 = 0x2710
000057f4  int32_t data_57f4 = 0x88006f8
000057f8  int32_t data_57f8 = 0x23103002
000057fc  int32_t data_57fc = 0x8800844
00005800  int32_t data_5800 = 0x2099dc
00005804  int32_t data_5804 = 0x23300000
00005808  int32_t data_5808 = 0x8293a7
0000580c  int32_t data_580c = 0x272
00005810  int32_t data_5810 = 0x208449
00005814  int32_t data_5814 = 0x208850
00005818  int32_t data_5818 = 0x88005b8

0000581c    uint8_t sub_581c(char arg1, char arg2, int32_t arg3 @ r4, void* arg4 @ r5, int32_t arg5, int32_t arg6, int32_t arg7, int32_t arg8)

0000581c  {
0000581c      Coproc_GetOneWord(0xf, 7, 0xf, 0xf, 7);
00005822      *(uint8_t*)((char*)arg4 + 0x10) = arg1 | arg2;  /* "RY02_3.00.33_250117" */
00005832      *(uint8_t*)((char*)arg4 + 0x10) =
00005832          (*(uint8_t*)((char*)arg4 + 0x10) & 0xcf) | (char)(arg3 << 0x1a >> 0x1e << 4);
00005832          /* "RY02_3.00.33_250117" */  /* "33_250117" */  /* "50117" */
0000583e      uint8_t result = (char)((uint32_t)*(uint8_t*)((char*)arg4 + 0x10) << 0x1a >> 0x1a)
0000583e          | (char)(arg3 >> 6 << 6);  /* "RY02_3.00.33_250117" */  /* "33_250117" */
00005840      *(uint8_t*)((char*)arg4 + 0x10) = result;  /* "RY02_3.00.33_250117" */
00005844      return result;
0000581c  }


00005846    int32_t sub_5846(void* arg1, int32_t arg2, int32_t arg3, int32_t arg4)

00005846  {
00005846      int32_t var_18_1 = arg3;
00005848      int32_t r5 = *(uint32_t*)((char*)arg1 + 4);
00005856      int32_t r1;
00005856      int32_t r2;
00005856      r1 = 0xff7e1af8(0x23103003, 0x880096c, 1, (uint32_t)*(uint16_t*)((char*)arg1 + 2), 
00005856          r5, arg4);
0000585a      uint32_t r0 = (uint32_t)*(uint16_t*)((char*)arg1 + 2);
00005864      void* r1_1;
00005864      void* r2_1;
00005864      int32_t r3_2;
00005864      r1_1 = sub_13f18(r0, r1, r2, r0);
00005868      *(uint32_t*)((char*)r1_1 + 0x50) = r3_2;
00005870      *(uint32_t*)((char*)r2_1 + 0x54) = r5;
00005880      return sub_572a(0, (uint32_t)*(uint16_t*)((char*)r5)[2]);
00005846  }


00005882    int32_t sub_5882(char arg1, char arg2, int16_t arg3, int32_t arg4, int32_t arg5, int32_t arg6, int32_t arg7)

00005882  {
0000588e      return sub_55c6((uint32_t)arg1, (uint32_t)arg2, (uint32_t)arg3);
00005882  }

00005890                                                  68 46 41 88 00 78 02 46 ff f7 4f fe 68 46 04 71                  hFA..x.F..O.hF.q
000058a0  01 a9 90 48 0c f0 e8 f8 68 46 00 79 17 28 ee d3 8d 49 c0 1e 48 76 7c bd                          ...H....hF.y.(...I..Hv|.

000058b8    int32_t sub_58b8(char arg1, char arg2, int16_t arg3, int32_t arg4, int32_t arg5, int32_t arg6, int32_t arg7)

000058b8  {
000058c4      int32_t entry_r3;
000058c4      return sub_54b6((uint32_t)arg1, (uint32_t)arg2, (uint32_t)arg3, entry_r3);
000058b8  }


000058c6    int32_t sub_58c6(char arg1, char arg2, int16_t arg3, int32_t arg4, int32_t arg5, int32_t arg6, int32_t arg7)

000058c6  {
000058d2      int32_t entry_r3;
000058d2      return sub_5402((uint32_t)arg1, (uint32_t)arg2, (uint32_t)arg3, entry_r3);
000058c6  }

000058d4                                                              68 46 00 78 01 21 0c f0 17 fa 7f 49                      hF.x.!.....I
000058e0  00 22 20 31 30 46 dc f7 07 d9 7c bd 68 46 01 94 04 78 01 a9 20 46 0c f0 e5 f9 78 49 01 22 40 31  ." 10F....|.hF...x.. F....xI."@1
00005900  30 46 01 9b dc f7 f8 d8 01 21 20 46 0c f0 09 fa 7c bd 68 46 04 78 71 49 74 4d 23 46 01 22 70 31  0F.......! F....|.hF.xqItM#F."p1
00005920  30 46 dc f7 e9 d8 01 22 29 46 20 46 0c f0 d5 f9 7c bd 03 46 69 49 6a 48 01 22 a0 31 c0 1e dc f7  0F.....")F F....|..FiIjH.".1....
00005940  db d8 7c bd                                                                                      ..|.

00005944    uint32_t sub_5944(int32_t arg1, int32_t arg2, int32_t arg3, int32_t arg4)

00005944  {
00005944      int32_t var_c = arg2;
00005944      int32_t var_10 = arg1;
00005948      uint32_t result = (uint32_t)(uint16_t)var_10;
00005948      
0000594c      if (!result)
00005966          return sub_5846(&var_10, arg2, arg3, arg4);
00005966      
00005950      if (result == 0xe)
0000596e          return sub_5b4a(&var_10);
0000596e      
00005958      if (result != 0x11 && result == 0x19)  /* "Y02_3.00.33_250117" */  /* ".33_250117" */
0000595a          return 0xff7eea3e();
0000595a      
0000595e      return result;
00005944  }


00005970    int32_t sub_5970(int32_t arg1, int32_t* arg2, uint32_t arg3, uint32_t arg4)

00005970  {
0000597a      if (arg1 == 1)
0000597a      {
000059aa          char* r0_2 = *(uint32_t*)arg2;
000059ba          0xff7e1af8(0x23103002, 0x8800a8c, 2, (uint32_t)*(uint8_t*)r0_2, 
000059ba              (uint32_t)*(uint16_t*)(r0_2 + 2), arg4);
0000597a      }
0000597a      else if (arg1 == 0x14)  /* "_3.00.33_250117" */
0000597e      {
00005990          char* r0_1 = *(uint32_t*)arg2;
000059a4          0xff7e1af8(0x23103002, 0x8800a38, 3, (uint32_t)*(uint8_t*)r0_1, 
000059a4              (uint32_t)*(uint16_t*)(r0_1 + 2), (uint32_t)*(uint16_t*)(r0_1 + 4));
0000597e      }
0000597e      else
00005988          0xff7e1af8(0x23103000, 0x8800ac8, 1, arg1, arg3, arg4);
00005988      
0000598e      return 0;
00005970  }


000059c0    int32_t sub_59c0(int32_t arg1, char* arg2, int32_t arg3, uint32_t arg4)

000059c0  {
000059c0      uint32_t var_10 = arg4;
000059c0      
000059cc      if (arg1 == 0xff)
000059cc      {
000059e6          uint32_t r2_2 = (uint32_t)*(uint8_t*)arg2;
000059e6          
000059ea          if (!r2_2)
000059ea          {
000059fa              int32_t r0_2;
000059fa              int32_t r1;
000059fa              int32_t r2_3;
000059fa              r0_2 = 0xff7e1af8(0x23103002, 0x8800af4, 1, (uint32_t)arg2[2]);
000059fe              /* tailcall */
000059fe              return sub_5ad6(0, r0_2, r1, r2_3);
000059ea          }
000059ea          
000059ee          if (r2_2 != 1)
000059ee              /* tailcall */
000059ee              return sub_5ad6(0, 0x23103002, arg2, r2_2);
000059ee          
00005a00          uint32_t r0_4 = (uint32_t)*(uint16_t*)(arg2 + 8);
00005a00          
00005a04          if (r0_4)
00005a04              /* tailcall */
00005a04              return sub_5a06();
00005a04          
00005a12          uint32_t r0_6;
00005a12          int32_t r1_2;
00005a12          int32_t r2_5;
00005a12          r0_6 = sub_661e(r0_4, arg2, r2_2, arg4);
00005a16          /* tailcall */
00005a16          return sub_5ad6(0, r0_6, r1_2, r2_5);
000059cc      }
000059cc      
000059d4      if (arg1 != (uint32_t)*(uint8_t*)0x2099d3)
000059d4      {
00005a88          if (arg1 != (uint32_t)*(uint8_t*)0x2099d4)
00005a88              /* tailcall */
00005a88              return sub_5ad6(0, 0x23103002, arg2, arg1);
00005a88          
00005a8a          uint32_t r2_11 = (uint32_t)arg2[1];
00005a8a          
00005a8e          if (r2_11 != 1)
00005a8e          {
00005a92              if (r2_11 != 2)
00005a92                  /* tailcall */
00005a92                  return sub_5ad6(0, 0x23103002, arg2, r2_11);
00005a92              
00005ab6              uint32_t r1_9 = (uint32_t)arg2[2];
00005ab6              
00005aba              if (r1_9 != 1)
00005aba                  /* tailcall */
00005aba                  return sub_5ad6(0, 0x23103002, r1_9, r2_11);
00005aba              
00005ac0              (uint8_t)var_10 = 0x5a;
00005ac8              0xff7e1af8(0x23103002, 0x8800c5c, 1, 0x5a, var_10);
00005ad2              int32_t r0_21;
00005ad2              int32_t r1_10;
00005ad2              int32_t r2_14;
00005ad2              r0_21 = sub_10bfc(1, 1, &var_10);
00005ad2              /* tailcall */
00005ad2              return sub_5ad6(0, r0_21, r1_10, r2_14);
00005a8e          }
00005a8e          
00005a96          uint32_t r1_7 = (uint32_t)arg2[2];
00005a96          
00005a9e          if (r1_7 != 1 && r1_7 != 2)
00005a9e              /* tailcall */
00005a9e              return sub_5ad6(0, 0x23103002, r1_7, r2_11);
000059d4      }
000059d4      else
000059d4      {
000059d6          uint32_t r2_1 = (uint32_t)arg2[1];
000059d6          
000059da          if (r2_1 != 1)
000059da          {
000059de              if (r2_1 == 2)
000059de              {
00005a4c                  uint32_t r1_4 = (uint32_t)arg2[4];
00005a4c                  
00005a50                  if (r1_4 != 1)
00005a50                      /* tailcall */
00005a50                      return sub_5ad6(0, 0x23103002, r1_4, r2_1);
00005a50                  
00005a56                  var_10 = 0x201;
00005a5c                  0xff7e1af8(0x23103002, 0x8800bdc, 0);
00005a66                  int32_t r0_10;
00005a66                  int32_t r1_5;
00005a66                  int32_t r2_7;
00005a66                  r0_10 = sub_109d8(1, 2, &var_10);
00005a6a                  /* tailcall */
00005a6a                  return sub_5ad6(0, r0_10, r1_5, r2_7);
000059de              }
000059de              
000059e2              if (r2_1 != 3)
000059e2                  /* tailcall */
000059e2                  return sub_5ad6(0, 0x23103002, arg2, r2_1);
000059e2              
00005a6c              uint32_t r2_8 = (uint32_t)arg2[4];
00005a6c              
00005a70              if (r2_8 != 1)
00005a70                  /* tailcall */
00005a70                  return sub_5ad6(0, 0x23103002, arg2, r2_8);
00005a70              
00005a74              var_10 = (uint32_t)*(uint16_t*)(arg2 + 6);
00005a7e              int32_t r0_13;
00005a7e              int32_t r1_6;
00005a7e              int32_t r2_10;
00005a7e              r0_13 = 0xff7e1af8(0x23103002, 0x8800bec, 2, (uint32_t)arg2[5], var_10);
00005a82              /* tailcall */
00005a82              return sub_5ad6(0, r0_13, r1_6, r2_10);
000059da          }
000059da          
00005a18          uint32_t r1_3 = (uint32_t)arg2[4];
00005a18          
00005a28          if (r1_3 != 1 && r1_3 != 2 && r1_3 != 3 && r1_3 != 4)
00005a28              /* tailcall */
00005a28              return sub_5ad6(0, 0x23103002, r1_3, r2_1);
000059d4      }
000059d4      
00005ab0      int32_t r0_18;
00005ab0      int32_t r1_8;
00005ab0      int32_t r2_12;
00005ab0      r0_18 = 0xff7e1af8();
00005ab4      /* tailcall */
00005ab4      return sub_5ad6(0, r0_18, r1_8, r2_12);
000059c0  }


00005a06    int32_t sub_5a06()

00005a06  {
00005ab0      int32_t r0;
00005ab0      int32_t r1;
00005ab0      int32_t r2;
00005ab0      r0 = 0xff7e1af8(0x23103000, 0x8800b20, 0);
00005ab4      int32_t r4;
00005ab4      /* tailcall */
00005ab4      return sub_5ad6(r4, r0, r1, r2);
00005a06  }


00005ad6    int32_t sub_5ad6(int32_t arg1 @ r4, int32_t arg2, int32_t arg3, int32_t arg4) __pure

00005ad6  {
00005ad8      return arg1;
00005ad6  }

00005ada                                                                                00 00                                        ..

00005adc  int32_t data_5adc = 0x880096c
00005ae0  int32_t data_5ae0 = 0x23103003

00005ae4    int32_t sub_5ae4(int32_t arg1, int32_t arg2, int32_t arg3, int32_t arg4, int32_t arg5 @ r4, int32_t arg6)

00005ae4  {
00005aec      int32_t arg_e0 = arg5;
00005afe      /* tailcall */
00005afe      return sub_5b00();
00005ae4  }


00005b00    int32_t sub_5b00()

00005b00  {
00005b06      0xff81b968(0x2099dc, 0x1b);  /* "3_250117" */
00005b0e      *(uint8_t*)0x2099f5 = 0x14;  /* "_3.00.33_250117" */
00005b10      return 0x14;  /* "_3.00.33_250117" */
00005b00  }


00005b12    uint32_t sub_5b12()

00005b12  {
00005b1a      if ((uint32_t)*(uint8_t*)0x2099f6)
00005b26          return 0x2099dc;
00005b26      
00005b1e      *(uint8_t*)0x2099f6 = 1;
00005b22      int32_t entry_r2;
00005b22      int32_t entry_r3;
00005b22      return sub_11964((uint32_t)*(uint8_t*)0x2099ee, 1, entry_r2, entry_r3);
00005b12  }


00005b28    uint32_t sub_5b28(int32_t arg1, int32_t arg2, int32_t arg3, int32_t arg4)

00005b28  {
00005b2e      return sub_119aa(arg1, arg2, arg3, arg4);
00005b28  }


00005b30    uint32_t sub_5b30(int32_t arg1, int32_t arg2, int32_t arg3, int32_t arg4)

00005b30  {
00005b36      return sub_119bc(arg1, arg2, arg3, arg4);
00005b30  }


00005b38    uint32_t sub_5b38()

00005b38  {
00005b3c      uint32_t r1 = (uint32_t)*(uint8_t*)0x2099ed;
00005b3c      
00005b40      if (r1 != 2)
00005b48          return 0x2099dc;
00005b48      
00005b44      int32_t entry_r2;
00005b44      int32_t entry_r3;
00005b44      return sub_11b0a((uint32_t)*(uint8_t*)0x2099ee, r1, entry_r2, entry_r3);
00005b38  }


00005b4a    int32_t sub_5b4a(void* arg1)

00005b4a  {
00005b4c      uint32_t r1 = (uint32_t)*(uint8_t*)((char*)arg1 + 2);
00005b50      int32_t r1_1;
00005b50      int32_t entry_r2;
00005b50      int32_t r2;
00005b50      r1_1 = sub_13f18(arg1, r1, entry_r2, r1);
00005b6a      return 1;
00005b4a  }


00005b6c    uint32_t sub_5b6c(int32_t arg1)

00005b6c  {
00005b70      return sub_5b38();
00005b6c  }


00005b72    uint32_t sub_5b72(int32_t arg1, int32_t arg2, int32_t arg3, int32_t arg4, int32_t arg5)

00005b72  {
00005b76      return sub_119bc(arg1, arg2, arg3, arg4);
00005b72  }


00005b78    uint32_t sub_5b78(int32_t arg1, int32_t arg2, int32_t arg3, int32_t arg4, int32_t arg5)

00005b78  {
00005b78      sub_119aa(arg1, arg2, arg3, arg4);
00005b80      return sub_6684();
00005b78  }


00005b82    int32_t sub_5b82(int32_t arg1)

00005b82  {
00005b86      return sub_747c();
00005b82  }


00005b88    uint32_t sub_5b88(void* arg1, int32_t arg2)

00005b88  {
00005b92      int32_t entry_r3;
00005b92      return sub_119f2(0, (uint32_t)*(uint8_t*)((char*)arg1 + 4), 0, entry_r3);
00005b88  }


00005b94    uint32_t sub_5b94()

00005b94  {
00005b98      return (uint32_t)*(uint8_t*)0x2099f5;
00005b94  }


00005b9a    int32_t sub_5b9a(int32_t arg1, int32_t arg2, int32_t arg3, int32_t arg4)

00005b9a  {
00005b9a      int32_t var_c = arg4;
00005b9a      int32_t var_10 = arg3;
00005ba0      (uint16_t)var_10 = 0xe;
00005ba4      *(uint16_t*)((char*)var_10)[2] = 4;
00005bac      return sub_8e0(&var_10, &var_10, arg3, arg4);
00005b9a  }


00005bae    int32_t sub_5bae()

00005bae  {
00005bb4      if ((uint32_t)*(uint8_t*)0x2099ed == 2)
00005bbc          return 1;
00005bbc      
00005bb8      return 0;
00005bae  }


00005bbe    int32_t sub_5bbe(int32_t arg1, int32_t arg2, int32_t arg3, int32_t arg4)

00005bbe  {
00005bbe      int32_t var_c = arg4;
00005bbe      int32_t var_10 = arg3;
00005bc0      int32_t r0 = sub_5bae();
00005bc0      
00005bc6      if (r0)
00005bcc          return sub_5b9a(r0, arg2, arg3, arg4);
00005bcc      
00005bd2      (uint16_t)var_10 = 0xe;
00005bd6      *(uint16_t*)((char*)var_10)[2] = 5;
00005bde      return sub_8e0(&var_10, &var_10, arg3, arg4);
00005bbe  }


00005be0    int32_t sub_5be0(int32_t arg1, int32_t arg2, int32_t arg3, int32_t arg4)

00005be0  {
00005be0      int32_t var_c = arg4;
00005be0      int32_t var_10 = arg3;
00005be6      (uint16_t)var_10 = 0xe;
00005bea      *(uint16_t*)((char*)var_10)[2] = 6;
00005bf2      return sub_8e0(&var_10, &var_10, arg3, arg4);
00005be0  }


00005bf4    int32_t sub_5bf4(int32_t arg1, int32_t arg2, int32_t arg3, int32_t arg4)

00005bf4  {
00005bf4      int32_t var_c_1 = arg4;
00005bf4      int32_t var_10 = arg3;
00005bfa      (uint16_t)var_10 = 0xe;
00005bfe      *(uint16_t*)((char*)var_10)[2] = 0xa;
00005c00      int32_t var_c = arg1;
00005c08      return sub_8e0(&var_10, 0xa, &var_10, arg4);
00005bf4  }


00005c0a    int32_t sub_5c0a() __pure

00005c0a  {
00005c0a      return;
00005c0a  }


00005c0c    int32_t sub_5c0c() __pure

00005c0c  {
00005c0c      return;
00005c0c  }

00005c0e                                            00 00                                                                ..

00005c10  int32_t data_5c10 = 0x2099dc

00005c14    uint32_t sub_5c14()

00005c14  {
00005c1e      char var_20;
00005c1e      int32_t entry_r2;
00005c1e      int32_t entry_r3;
00005c1e      sub_114b6(0x200, &var_20, entry_r2, entry_r3);
00005c24      char var_1f;
00005c24      uint32_t r0 = (uint32_t)var_1f;
00005c28      uint32_t r7 = r0 >> 4;
00005c2c      uint8_t var_50 = (char)r7;
00005c2e      uint32_t r6_1 = r0 << 0x1c >> 0x1c;  /* "_250117" */
00005c30      uint8_t var_4f = (char)r6_1;
00005c34      uint32_t r0_1 = (uint32_t)var_20;
00005c38      uint32_t r5 = r0_1 >> 4;
00005c3c      uint8_t var_4e = (char)r5;
00005c3e      uint32_t r4_1 = r0_1 << 0x1c >> 0x1c;  /* "_250117" */
00005c40      uint8_t var_4d = (char)r4_1;
00005c46      int32_t var_24 = 0x20885b;
00005c48      0xff81b964(0x20885b, 0x18);  /* "0.33_250117" */
00005c50      int32_t var_40;
00005c50      0xff81b968(&var_40, 0x1c);  /* "_250117" */
00005c58      int32_t r1_1 = *(uint32_t*)0x20867c;
00005c5a      var_40 = *(uint32_t*)0x208678;
00005c5e      int32_t var_3c = r1_1;
00005c62      uint32_t r0_4 = (uint32_t)*(uint8_t*)0x20885a;
00005c66      uint32_t var_4c;
00005c66      uint32_t var_48;
00005c66      uint32_t var_44;
00005c66      
00005c66      if (!r0_4)
00005c66      {
00005caa          uint32_t r0_7 = (uint32_t)*(uint8_t*)0x208686;
00005caa          
00005cb4          if (!(0xa0 & ~r0_7) && (uint32_t)*(uint8_t*)0x208687)
00005cb4          {
00005cb8              void* r3_2 = 0x208687;
00005cb8              
00005cbc              if (r0_7 == 0xa2)
00005ce8                  sub_127d0(var_24, 0x18, &data_601c, r3_2);  /* "0.33_250117" */
00005cbc              else if (r0_7 == 0xa3)
00005cc0              {
00005cd8                  var_50 = r7;
00005cda                  var_4c = r6_1;
00005cdc                  var_48 = r5;
00005cde                  var_44 = r4_1;
00005d60                  sub_127d0(var_24, 0x18, "%s_%01X%01X%01X%01X", r3_2);  /* "0.33_250117" */
00005cc0              }
00005cc0              else if (r0_7 == 0xa4)
00005ce8                  sub_127d0(var_24, 0x18, "O_%s", r3_2);  /* "0.33_250117" */
00005cc4              else
00005cc4              {
00005cc8                  var_50 = r7;
00005cca                  var_4c = r6_1;
00005ccc                  var_48 = r5;
00005cce                  var_44 = r4_1;
00005d60                  sub_127d0(var_24, 0x18, "O_%s_%01X%01X%01X%01X", r3_2);
00005d60                      /* "0.33_250117" */
00005cc4              }
00005cb4          }
00005cb4          else if ((uint32_t)(uint8_t)var_40 != 0xa5
00005cb4              || !(uint32_t)*(uint8_t*)((char*)var_40)[1])
00005cfc          {
00005d54              var_50 = r7;
00005d56              var_4c = r6_1;
00005d58              var_48 = r5;
00005d5a              var_44 = r4_1;
00005d60              sub_127d0(var_24, 0x18, "%s%01X%01X%01X%01X", "R02_");  /* "0.33_250117" */
00005cfc          }
00005cfc          else
00005cfc          {
00005cfe              var_44 = r4_1;
00005d00              var_4c = r6_1;
00005d04              var_50 = r7;
00005d06              var_48 = r5;
00005d10              sub_127d0(var_24, 0x18, "O_%s_%01X%01X%01X%01X", 
00005d10                  &*(uint32_t*)((char*)var_40)[1]);  /* "0.33_250117" */
00005d10              
00005d1c              if (0xff81b854(var_24) <= 0xc)
00005d1c              {
00005d2a                  char var_1e;
00005d2a                  char var_1d;
00005d2a                  char var_1c;
00005d2a                  char var_1b;
00005d2a                  
00005d2a                  if (0xff81b854(var_24) > 0xa)
00005d4a                      sub_127a8(0x208862, "_%02X", 
00005d4a                          sub_12b2a(
00005d4a                              (uint32_t)var_1b + (uint32_t)var_1c + (uint32_t)var_1d
00005d4a                                  + (uint32_t)var_1e, 
00005d4a                              0xff));
00005d1c              }
00005d1c              else
00005ce8                  sub_127d0(var_24, 0x18, "O_%s", &*(uint32_t*)((char*)var_40)[1]);
00005ce8                      /* "0.33_250117" */
00005cfc          }
00005c66      }
00005c66      else if (r0_4 == 2)
00005d4a          sub_127a8(var_24, "O_%s", &var_40);
00005c6a      else if (r0_4 == 3)
00005c6e      {
00005c8e          var_50 = r6_1;
00005c90          var_4c = r5;
00005c92          var_48 = r4_1;
00005c96          sub_127a8(var_24, "%s_%01X%01X%01X%01X", &var_40);
00005c6e      }
00005c6e      else if (r0_4 == 4)
00005d4a          sub_127a8(var_24, &data_601c, &var_40);
00005c72      else
00005c72      {
00005c7a          var_50 = r6_1;
00005c7c          var_4c = r5;
00005c7e          var_48 = r4_1;
00005c96          sub_127a8(var_24, "O_%s_%01X%01X%01X%01X", &var_40);
00005c72      }
00005c72      
00005d6c      uint32_t r2_6 = (uint32_t)(0xff81b854(var_24) + 1);
00005d72      *(uint8_t*)0x20844c = (char)r2_6;
00005d74      *(uint8_t*)0x20844d = 9;
00005d92      sub_11586(0x222, 0x28, var_24, 
00005d92          sub_11978(0x261, 0x1f, 0x208449, 0xff81b898(0x20844e, var_24, r2_6 - 1)));
00005d92          /* "0117" */
00005d9a      *(uint8_t*)0x2099fb = 3;
00005d9c      *(uint8_t*)0x2099fc = 3;
00005da0      *(uint8_t*)0x2099fd = 0xe7;
00005da4      *(uint8_t*)0x2099fe = 0xfe;
00005dae      0xff7e1af8(0x23103002, 0x8800c88, 1, 4, var_50, var_4c, var_48, var_44);
00005db4      *(uint8_t*)0x2099ff = 0xb;
00005db8      *(uint8_t*)0x209a00 = 0xff;
00005dbc      *(uint8_t*)0x209a01 = 0x34;  /* "_V3.0" */
00005dc0      *(uint8_t*)0x209a02 = 0x12;  /* "02_3.00.33_250117" */
00005dc4      *(uint8_t*)0x209a03 = 0xfe;
00005dc6      uint32_t r1_10 = 0xa;
00005dc8      *(uint8_t*)0x209a04 = 0xe7;
00005dc8      
00005dde      for (uint32_t i = 0; i < 6; )
00005dde      {
00005dd2          *(uint8_t*)(0x2099fb + r1_10) = (&var_20)[5 - i];
00005dd8          i = (uint32_t)((uint8_t)i + 1);
00005dda          r1_10 = (uint32_t)((uint8_t)r1_10 + 1);
00005dde      }
00005dde      
00005dee      return sub_11978(0x262, 0x1f, 0x2099fb, &var_20);  /* "0117" */
00005c14  }


00005df0    int32_t sub_5df0()

00005df0  {
00005df8      int16_t var_34 = 0xc41;
00005dfc      char var_68 = 0;
00005dfe      char var_64 = 0;
00005e00      char var_60 = 0;
00005e02      int32_t var_28 = 0;
00005e06      int32_t var_24 = 0;
00005e08      char var_5c = 7;
00005e0c      char var_58 = 0;
00005e10      int16_t var_44 = 0x640;
00005e12      int16_t var_40 = 0x640;
00005e16      char var_54 = 1;
00005e18      int16_t var_3c = 1;
00005e1c      char var_50 = 3;
00005e1e      char var_4c = 0;
00005e22      int32_t var_10 = 0;
00005e24      char var_48 = 0;
00005e28      int16_t var_38 = 1;
00005e2a      int32_t r0 = sub_1448c();
00005e32      void var_20;
00005e32      sub_153c0(&var_20);
00005e3e      int32_t var_30;
00005e3e      
00005e3e      if ((uint32_t)*(uint8_t*)0x2086c0 == 1)
00005e3e      {
00005f6c          int32_t var_2c_1 = *(uint32_t*)0x208684;
00005f6e          var_30 = *(uint32_t*)0x208680;
00005e3e      }
00005e3e      else
00005e3e      {
00005e48          char var_18[0x8];
00005e48          0xff81b898(&var_18, r0 + 8, 6);
00005e48          
00005e60          for (uint32_t i = 0; i < 6; i = (uint32_t)((uint8_t)i + 1))
00005e58              *(uint8_t*)(&var_30 + i) = var_18[5 - i];
00005e3e      }
00005e3e      
00005e6e      if (0xff81b7f8(&var_20, &var_30, 6))
00005e6e      {
00005e72          sub_13eb4(&var_30);
00005e7a          0xff7dc2ec(1, 0xd0);
00005e6e      }
00005e6e      
00005ec6      int32_t r3_6 = sub_11978(0x266, 1, &var_5c, 
00005ec6          sub_11978(0x265, 6, &var_28, 
00005ec6              sub_11978(0x264, 1, &var_60, 
00005ec6                  sub_11978(0x263, 1, &var_64, 
00005ec6                      sub_11586(0x223, 1, &var_68, 
00005ec6                          sub_11586(0x221, 2, &var_34, sub_5c14()))))));
00005f0c      int32_t r3_12 = sub_1149a(0x202, 1, &var_54, 
00005f0c          sub_11978(0x262, 0x1f, 0x2099fb, 
00005f0c              sub_11978(0x261, 0x1f, 0x208449, 
00005f0c                  sub_11978(0x269, 2, &var_40, 
00005f0c                      sub_11978(0x268, 2, &var_44, sub_11978(0x267, 1, &var_58, r3_6))))));  /* "0117" */
00005f58      sub_11c80(0x214, 2, &var_38, 
00005f58          sub_11c80(0x213, 1, &var_48, 
00005f58              sub_11c80(0x212, 1, &var_4c, 
00005f58                  sub_11c80(0x211, 4, &var_10, 
00005f58                      sub_1149a(0x204, 1, &var_50, sub_1149a(0x203, 2, &var_3c, r3_12))))));
00005f64      return sub_11574(0x829921);
00005df0  }


00005f72    uint32_t sub_5f72(int32_t arg1, int32_t arg2, char arg3)

00005f72  {
00005f76      int32_t r4 = arg2;
00005f76      
00005f7a      if (r4)
00005f7a      {
00005f7e          if (r4 > 0x14)  /* "_3.00.33_250117" */
00005f80              r4 = 0x14;  /* "_3.00.33_250117" */
00005f80          
00005f88          0xff81b964(0x208686, 0x18);  /* "0.33_250117" */
00005f92          *(uint8_t*)0x208686 = arg3;
00005f98          0xff81b898(0x208687, arg1, r4);
00005f7a      }
00005f7a      
00005f9c      sub_31aa();
00005fa4      return sub_5c14();
00005f72  }


00005fa6    int32_t sub_5fa6()

00005fa6  {
00005faa      int32_t r1;
00005faa      int32_t r2;
00005faa      int32_t r3;
00005faa      r1 = sub_11652(4);
00005fb0      char r0;
00005fb0      int32_t r1_1;
00005fb0      int32_t r2_1;
00005fb0      int32_t r3_1;
00005fb0      r0 = sub_6360(0x829971, r1, r2, r3);
00005fb8      *(uint8_t*)0x2099f7 = r0;
00005fbc      char r0_1;
00005fbc      int32_t r1_2;
00005fbc      int32_t r2_2;
00005fbc      int32_t r3_2;
00005fbc      r0_1 = sub_6248(0x829971, r1_1, r2_1, r3_1);
00005fc0      *(uint8_t*)0x2099f8 = r0_1;
00005fc4      char r0_2;
00005fc4      int32_t r1_3;
00005fc4      int32_t r2_3;
00005fc4      int32_t r3_3;
00005fc4      r0_2 = sub_612e(0x829971, r1_2, r2_2, r3_2);
00005fc8      *(uint8_t*)0x2099f9 = r0_2;
00005fd0      *(uint8_t*)0x2099fa = sub_657e(0x829971, r1_3, r2_3, r3_3);
00005fd4      sub_116c4(0x829971);
00005fdc      return sub_6730();
00005fa6  }

00005fde                                                                                            00 00                                ..

00005fe0  int32_t data_5fe0 = 0x20885b
00005fe4  int32_t data_5fe4 = 0x208660

00005fe8  data_5fe8:
00005fe8                          4f 5f 25 73 5f 25 30 31 58 25 30 31 58 25 30 31 58 25 30 31 58 00 00 00          O_%s_%01X%01X%01X%01X...
00006000  data_6000:
00006000  4f 5f 25 73 00 00 00 00                                                                          O_%s....
00006008  data_6008:
00006008                          25 73 5f 25 30 31 58 25 30 31 58 25 30 31 58 25 30 31 58 00                      %s_%01X%01X%01X%01X.
0000601c  data_601c:
0000601c                                                                                      25 73 00 00                              %s..
00006020  data_6020:
00006020  5f 25 30 32 58 00 00 00                                                                          _%02X...
00006028  data_6028:
00006028                          52 30 32 5f 00 00 00 00                                                          R02_....
00006030  data_6030:
00006030                                                  25 73 25 30 31 58 25 30 31 58 25 30 31 58 25 30                  %s%01X%01X%01X%0

00006040  char const (* data_6040)[0x5] = data_5831 {"C(t(|"}
00006044  int32_t data_6044 = 0x208449
00006048  int32_t data_6048 = 0x261
0000604c  int32_t data_604c = 0x2099fb
00006050  int32_t data_6050 = 0x8800c88
00006054  int32_t data_6054 = 0x23103002
00006058  int32_t data_6058 = 0xc41
0000605c  int32_t data_605c = 0x829921
00006060  int32_t data_6060 = 0x829971

00006064              70 b5 04 46 0d 46 08 46 15 f4 f2 f3 20 80 65 60 70 bd ff b5 89 b0 00 20 07 90 1f 46      p..F.F.F.... .e`p...... ...F
00006080  14 46 12 9e 13 9d 38 a1 03 a8 ff f7 eb ff 39 a1 05 a8 ff f7 e7 ff 0a 98 69 46 91 c1 04 22 3a 49  .F....8.......9.........iF...":I
000060a0  3a 48 09 9b db f7 28 dd 02 2c 1a d0 04 2c 0e d0 06 2c 11 d0 08 2c 17 d0 33 49 34 48 23 46 01 22  :H....(..,...,...,...,..3I4H#F."
000060c0  30 31 80 1e                                                                                      01..
000060ce                                            04 98 28 60 68 46 80 89 03 e0 06 98 28 60 68 46 80 8a                ..(`hF......(`hF..
000060e0  30 80                                                                                            0.

000060e2    int32_t sub_60e2(int32_t arg1, int32_t arg2, int32_t arg3, int32_t arg4, int32_t arg5) __pure

000060e2  {
000060e6      return arg1;
000060e2  }

000060e8                          00 20 2a 4c 00 90 01 90 e1 78 20 46 0c 30 09 18 03 22 68 46 15 f4 cc f3          . *L.....x F.0..."hF....
00006100  20 46 e1 78 0f 30 09 18 6c 46 03 22 60 1d 15 f4 c3 f3 00 21 07 27 78 1a 62 5c 23 5c 63 54 49 1c   F.x.0..lF."`......!.'x.b\#\cTI.
00006120  c9 b2 22 54 03 29 f6 d3 08 20 2c 60 d8 e7                                                        .."T.)... ,`..

0000612e    uint32_t sub_612e(int32_t arg1, int32_t arg2, int32_t arg3, int32_t arg4)

0000612e  {
0000612e      int32_t var_8 = arg4;
0000612e      int32_t var_c_1 = arg3;
0000612e      int32_t var_10_1 = arg2;
0000612e      
0000614c      if (sub_1166c(&var_8, 0x83db94, 0xfc, *(uint32_t*)0x83dc90, *(uint32_t*)0x83dc94, 
0000614c              *(uint32_t*)0x83dc98))
00006152          return (uint32_t)(uint8_t)var_8;
00006152      
0000615e      0xff7e1af8(0x23103000, 0x8800d0c, 0);
00006164      return 0xff;
0000612e  }

00006166                    00 00                                                                                ..

00006168    int32_t sub_6168(int32_t arg1, void* arg2, int32_t arg3 @ r4, int16_t* arg4, int32_t* arg5)

00006168  {
00006190      int32_t r2 = ((char*)arg2 + 0x31) << 0x10;
00006190          /* "RY02_3.00.33_250117" */  /* "Y02_V3.0" */
00006194      *(uint16_t*)((char*)arg2 + 0x53) = (int16_t)((char*)arg2 + 0x31);  /* "Y02_V3.0" */
00006194      
00006198      if (arg3 && arg3 < 0 == (arg3 >> 0x14) + 2)  /* "_3.00.33_250117" */
00006198      {
000060c4          int32_t r0_5;
000060c4          int32_t r1_4;
000060c4          int32_t r2_1;
000060c4          int32_t r3_2;
000060c4          r0_5 = 0xff7e1af8(arg3, (char*)arg2 + 0x31, r2, 0x10);
000060c4              /* "RY02_3.00.33_250117" */  /* "Y02_V3.0" */
000060ca          int32_t arg_1c = 0x40a;
000060cc          /* tailcall */
000060cc          return sub_60e2(r0_5, r1_4, r2_1, r3_2, arg4);
00006198      }
00006198      
000061a6      if (r2 != 7)
000061a6      {
000061b0          int32_t lr;
000061b0          0xff7e1af8(0x23103000, 0x8800d2c, 1, r2, arg3, lr);
000061b6          return 0x40a;
000061a6      }
000061a6      
000061ba      *(uint32_t*)arg5 = 0x20844e;
000061c2      *(uint16_t*)arg4 = (uint16_t)*(uint8_t*)0x20844c - 1;
000061c4      return 0;
00006168  }


000061c6    int32_t sub_61c6(int32_t arg1, int32_t arg2, int32_t arg3, int32_t arg4, int32_t arg5, char* arg6)

000061c6  {
000061ca      int32_t result = 0;
000061ca      
000061d2      if (!arg6)
000061d2      {
000061f4          0xff7e1af8(0x23103000, 0x8800d68, 0, arg6, arg4);
000061fc          return 0x40d;
000061d2      }
000061d2      
000061d6      if (arg3 == 2)
00006202          sub_6a56(arg6, (uint32_t)(uint8_t)arg5);
000061d6      else if (arg3 == 7)
000061da      {
00006214          0xff7e1af8(0x23103002, 0x8800de0, 0);
00006214          
0000621a          if (arg5 > 0xc)
00006224              0xff7e1af8(0x23103002, 0x8800e00, 0);
000061da      }
000061da      else
000061da      {
000061e0          result = 0x40a;
000061e8          0xff7e1af8(0x23103000, 0x8800d9c, 2, arg3, arg5);
000061da      }
000061da      
0000622a      return result;
000061c6  }

0000622c                                      0e b5 69 46 08 70 01 20 48 70 00 93 1a 48 13 46 02 22 1c 49              ..iF.p. Hp...H.F.".I
00006240  80 1c db f7 59 dc 0e bd                                                                          ....Y...

00006248    uint32_t sub_6248(int32_t arg1, int32_t arg2, int32_t arg3, int32_t arg4)

00006248  {
00006248      int32_t var_10 = arg4;
00006248      int32_t var_14_1 = arg3;
00006248      int32_t var_18_1 = arg2;
00006248      
00006268      if (!sub_1166c(&var_10, 0x83dcac, 0xa8, *(uint32_t*)0x83dd54, *(uint32_t*)0x83dd58, 
00006268          *(uint32_t*)0x83dd5c))
00006268      {
0000627c          0xff7e1af8(0x23103000, 0x8800e68, 0);
00006282          return 0xff;
00006268      }
00006268      
0000626c      *(uint32_t*)0x209a1c = arg1;
00006272      return (uint32_t)(uint8_t)var_10;
00006248  }


00006284    uint32_t sub_6284(int32_t arg1, int32_t arg2)

00006284  {
00006284      int32_t r3;
00006284      int32_t var_c = r3;
00006284      int32_t r2;
00006284      int32_t var_10_1 = r2;
0000629c      return sub_11736((uint32_t)*(uint8_t*)0x2099ee, (uint32_t)*(uint8_t*)0x2099f8, 4, 
0000629c          arg1, arg2, 1);
00006284  }

0000629e                                                                                            00 00                                ..

000062a0  int32_t data_62a0 = 0x8800d2c
000062a4  int32_t data_62a4 = 0x23103000
000062a8  int32_t data_62a8 = 0x40a
000062ac  int32_t data_62ac = 0x20844e
000062b0  int32_t data_62b0 = 0x8800e2c
000062b4  int32_t data_62b4 = 0x83dd2c
000062b8  int32_t data_62b8 = 0x209a1c
000062bc  int32_t data_62bc = 0x2099dc
000062c0  int32_t data_62c0 = 0x2099f8

000062c4    int32_t sub_62c4(int32_t arg1, int32_t arg2, int32_t arg3, int16_t* arg4, int32_t* arg5)

000062c4  {
000062ce      if (arg3 != 7)
000062ce      {
000062d8          0xff7e1af8(0x23103000, 0x8800e84, 1, arg3);
000062de          return 0x40a;
000062ce      }
000062ce      
000062e2      *(uint32_t*)arg5 = 0x20844e;
000062ea      *(uint16_t*)arg4 = (uint16_t)*(uint8_t*)0x20844c - 1;
000062ec      return 0;
000062c4  }


000062ee    int32_t sub_62ee(int32_t arg1, int32_t arg2, int32_t arg3, int32_t arg4, int32_t arg5)

000062ee  {
000062ee      int32_t r3;
000062ee      int32_t var_10 = r3;
000062f2      int32_t result = 0;
000062f2      
000062fa      if (!arg5)
000062fa      {
00006320          0xff7e1af8(0x23103000, 0x8800ebc, 0);
00006328          return 0x40d;
000062fa      }
000062fa      
000062fe      if (arg3 == 2)
0000632a          sub_4a0e(arg5, arg4);
000062fe      else if (arg3 == 7)
0000633a          0xff7e1af8(0x23103002, 0x8800f2c, 0);
00006302      else
00006302      {
0000630a          result = 0x40a;
00006312          0xff7e1af8(0x23103000, 0x8800eec, 2, arg3, arg4);
00006302      }
00006302      
00006340      return result;
000062ee  }

00006342        0e b5 69 46 08 70 01 20 48 70 00 93 13 49 13 48 13 46 02 22 c4 31 80 1c db f7 cd db 0e bd    ..iF.p. Hp...I.H.F.".1........

00006360    uint32_t sub_6360(int32_t arg1, int32_t arg2, int32_t arg3, int32_t arg4)

00006360  {
00006360      int32_t var_10 = arg4;
00006360      int32_t var_14_1 = arg3;
00006360      int32_t var_18_1 = arg2;
00006360      
00006380      if (!sub_1166c(&var_10, 0x83dd70, 0xa8, *(uint32_t*)0x83de18, *(uint32_t*)0x83de1c, 
00006380          *(uint32_t*)0x83de20))
00006380      {
00006394          0xff7e1af8(0x23103000, 0x8800f80, 0);
0000639a          return 0xff;
00006380      }
00006380      
00006384      *(uint32_t*)0x209a20 = arg1;
0000638a      return (uint32_t)(uint8_t)var_10;
00006360  }

0000639c  int32_t data_639c = 0x8800e84
000063a0  int32_t data_63a0 = 0x23103000
000063a4  int32_t data_63a4 = 0x40a
000063a8  int32_t data_63a8 = 0x20844e
000063ac  int32_t data_63ac = 0x83ddf0
000063b0  int32_t data_63b0 = 0x209a20

000063b4    int32_t sub_63b4(int32_t arg1, int32_t arg2)

000063b4  {
000063b6      int32_t result = 1;
000063b6      
000063c2      if (arg1 == 1 || arg1 == 2)
000063c2      {
000063d4          if (arg2 != 1)
000063d6              return 0;
000063d6          
000063da          *(uint8_t*)0x209a28 = 1;
000063c2      }
000063c2      else
000063c2      {
000063c4          result = 0;
000063cc          0xff7e1af8(0x23103300, 0x8800f98, 0);
000063c2      }
000063c2      
000063de      return result;
000063b4  }


000063e0    uint32_t sub_63e0(int32_t arg1, int32_t arg2, int32_t arg3, int32_t arg4)

000063e0  {
000063e0      int32_t var_c = arg4;
000063e0      int32_t var_10_1 = arg3;
000063f0      return sub_11736(arg1, arg2, 2, arg3, arg4, 0);
000063e0  }


000063f2    uint32_t sub_63f2(int32_t arg1, int32_t arg2, int32_t arg3, int32_t arg4)

000063f2  {
000063f2      int32_t var_14 = arg4;
000063f2      int32_t var_18_1 = arg3;
000063f2      
000063fe      if (!(uint32_t)*(uint8_t*)0x209a24)
00006414          return 0;
00006414      
00006402      *(uint8_t*)0x209a24 = 0;
00006410      return sub_116d2(arg1, arg2, 2, arg3, arg4, 0);
000063f2  }

00006416                                                                    ff b5 83 b0 04 46 0c 9e 00 20                        .....F... 
00006420  0d 9d 30 80 68 49 69 48 00 93 02 22 28 31 80 1c 05 9b db f7 61 db 63 4f 05 98 02 21 3f 1f 02 28  ..0.hIiH..."(1......a.cO...!?..(
00006440  0a d0 07 28 20 d0 60 49 03 46 01 22 58 31 5f 48 db f7 52 db 5e 4c 30 e0 68 46 41 70 04 70 01 20  ...( .`I.F."X1_H..R.^L0.hFAp.p. 
00006460  01 90 ba 68 69 46 04 98 90 47 5a 49 04 46 88 42 01 d1 01 20 38 70 53 48 28 60 04 20 52 49 30 80  ...hiF...GZI.F.B... 8pSH(`. RI0.
00006480  01 22 88 31 2b 68 15 e0 68 46 41 70 04 70 01 91 ba 68 69 46 04 98 90 47 4e 49 04 46 88 42 01 d1  .".1+h..hFAp.p...hiF...GNI.F.B..
000064a0  01 20 38 70 47 48 28 60 04 20 30 80 46 49 01 22 2b 68 c8 31 48 48 db f7 1f db 20 46 07 b0 f0 bd  . 8pGH(`. 0.FI."+h.1HH.... F....

000064c0    int32_t sub_64c0(char arg1, int32_t arg2, int32_t arg3, int32_t arg4, void* arg5)

000064c0  {
000064ce      if (arg3 != 7)
000064ce      {
000064dc          0xff7e1af8(0x23103000, 0x88010d0, 2, arg3, arg4);
000064e0          return 0x40a;
000064ce      }
000064ce      
000064ea      if (!arg5)
00006512          return 0x40d;
00006512      
000064f0      char var_23_1 = 3;
000064f2      char var_24 = arg1;
000064f6      char var_20_1 = 1;
000064fa      int16_t var_1e_1 = (int16_t)arg4;
000064fe      void* var_1c_1 = arg5;
00006500      int32_t r2 = *(uint32_t*)0x209a2c;
00006500      
00006504      if (r2)
0000650a          r2(arg2, &var_24);
0000650a      
0000652a      for (uint32_t i = 0; i < arg4; i = (uint32_t)((uint8_t)i + 1))
00006520          0xff7e1af8(0x23103002, 0x88010a4, 1, (uint32_t)*(uint8_t*)((char*)arg5 + i));
00006520      
000064e6      return 0;
000064c0  }

0000652e                                            ff b5 85 b0 01 26 69 46 4e 71 08 71 1d 46 00 93 27 49                .....&iFNq.q.F..'I
00006540  22 48 17 46 13 46 34 46 02 22 48 31 80 1c db f7 d3 da 03 2f 0c d0 00 24 1a 48 00 1f 82 68 00 2a  "H.F.F4F."H1......./...$.H...h.*
00006560  04 d0 00 2c 02 d0 01 a9 06 98 90 47 09 b0 f0 bd e8 07 01 d0 02 96 ef e7 02 20 02 90 ec e7        ...,.......G............. ....

0000657e    uint32_t sub_657e(int32_t arg1, int32_t arg2, int32_t arg3, int32_t arg4)

0000657e  {
0000657e      int32_t var_10 = arg4;
0000657e      int32_t var_14_1 = arg3;
0000657e      int32_t var_18_1 = arg2;
0000657e      
0000659e      if (!sub_1166c(&var_10, 0x83de24, 0xfc, *(uint32_t*)0x83df20, *(uint32_t*)0x83df24, 
0000659e          *(uint32_t*)0x83df28))
0000659e      {
000065ac          0xff7e1af8(0x23103300, 0x8801148, 1, (uint32_t)(uint8_t)var_10);
000065b4          (uint8_t)var_10 = 0xff;
0000659e      }
0000659e      
000065ba      *(uint32_t*)0x209a2c = arg1;
000065c0      return (uint32_t)(uint8_t)var_10;
0000657e  }

000065c2        00 00                                                                                        ..

000065c4  int32_t data_65c4 = 0x209a28
000065c8  int32_t data_65c8 = 0x8800f98
000065cc  int32_t data_65cc = 0x23103300
000065d0  int32_t data_65d0 = 0x40a

000065d4    int32_t sub_65d4(int32_t arg1, int32_t arg2, int32_t arg3)

000065d4  {
000065e0      int32_t r0_2;
000065e0      int32_t r1;
000065e0      r0_2 = syscall(arg3 >> 3 >> 2, arg1 >> 0x14, arg3, 0x10);
000065e0          /* "RY02_3.00.33_250117" */  /* "_3.00.33_250117" */
000065e2      /* tailcall */
000065e2      return sub_65e4(r0_2, r1);
000065d4  }


000065e4    uint32_t sub_65e4(int32_t arg1, int32_t arg2)

000065e4  {
000065e4      int32_t r3;
000065e4      int32_t var_c = r3;
000065e4      int32_t r2;
000065e4      int32_t var_10_1 = r2;
000065fc      return sub_11736((uint32_t)*(uint8_t*)0x2099ee, (uint32_t)*(uint8_t*)0x2099f7, 4, 
000065fc          arg1, arg2, 1);
000065e4  }


000065fe    int32_t sub_65fe(int32_t arg1, int32_t arg2, int32_t arg3, int32_t arg4)

000065fe  {
000065fe      int32_t var_c = arg4;
000065fe      int32_t var_10 = arg3;
000065fe      
00006606      if ((uint32_t)*(uint8_t*)0x209a30)
0000661c          return 0x209a30;
0000661c      
0000660a      *(uint8_t*)0x209a30 = 1;
00006610      (uint16_t)var_10 = 0xe;
00006614      *(uint16_t*)((char*)var_10)[2] = 0xc;
00006618      return sub_8e0(&var_10, &var_10, arg3, arg4);
000065fe  }


0000661e    uint32_t sub_661e(int32_t arg1, int32_t arg2, int32_t arg3, int32_t arg4)

0000661e  {
0000661e      int32_t var_c = arg4;
0000661e      int32_t var_10 = arg3;
00006622      uint32_t result = (uint32_t)*(uint8_t*)0x209a30;
00006622      
00006626      if (!result)
00006626      {
00006632          if ((uint32_t)*(uint16_t*)0x209a32 == (uint32_t)*(uint16_t*)0x209a34)
00006638              result = (uint32_t)*(uint16_t*)0x20a23a;
00006638          
0000663c          if ((uint32_t)*(uint16_t*)0x209a32 != (uint32_t)*(uint16_t*)0x209a34
0000663c              || (uint32_t)*(uint16_t*)0x20a238 != result)
0000663c          {
00006642              (uint16_t)var_10 = 0xe;
00006646              *(uint16_t*)((char*)var_10)[2] = 0xc;
0000664a              return sub_8e0(&var_10, &var_10, arg3, arg4);
0000663c          }
00006626      }
00006626      
0000664e      return result;
0000661e  }


00006650    int32_t sub_6650(int32_t arg1)

00006650  {
00006654      int32_t result = sub_5bae();
00006654      
0000665a      if (!result)
00006682          return result;
00006682      
0000666c      int32_t r1_2;
0000666c      int32_t r2_1;
0000666c      int32_t r3_1;
0000666c      r1_2 = 0xff81b898(((uint32_t)*(uint16_t*)0x209a34 << 4) + 0x209a36, arg1, 0x10);
0000666c          /* "RY02_3.00.33_250117" */
00006670      uint32_t r0_4 = (uint32_t)*(uint16_t*)0x209a34;
00006674      int32_t r0_5;
00006674      
00006674      r0_5 = r0_4 < 0x7f ? r0_4 + 1 : 0;
00006674      
0000667c      *(uint16_t*)0x209a34 = (int16_t)r0_5;
0000667e      return sub_65fe(r0_5, r1_2, r2_1, r3_1);
00006650  }


00006684    uint32_t sub_6684()

00006684  {
0000668a      *(uint8_t*)0x209a30 = 0;
000066d2      uint32_t i;
000066d2      
000066d2      do
000066d2      {
000066d4          uint32_t r0_10 = (uint32_t)*(uint16_t*)0x209a32;
000066d4          
000066da          if (r0_10 == (uint32_t)*(uint16_t*)0x209a34)
000066da              break;
000066da          
000066a0          if (sub_65e4((r0_10 << 4) + 0x209a36, 0x10) != 1)  /* "RY02_3.00.33_250117" */
000066a0          {
000066a6              if ((uint32_t)*(uint8_t*)0x209a31 >= 0x14)  /* "_3.00.33_250117" */
000066b8                  *(uint16_t*)0x209a32 = *(uint16_t*)0x209a34;
000066a6              else
000066a6              {
000066aa                  0xff7ef196(0x14);  /* "_3.00.33_250117" */
000066b2                  *(uint8_t*)0x209a31 += 1;
000066a6              }
000066a6              
000066a6              break;
000066a0          }
000066a0          
000066bc          *(uint8_t*)0x209a31 = 0;
000066be          uint32_t r0_9 = (uint32_t)*(uint16_t*)0x209a32;
000066c2          int16_t i_2;
000066c2          
000066c2          i_2 = r0_9 < 0x7f ? (uint16_t)r0_9 + 1 : 0;
000066c2          
000066ca          i = (uint32_t)i_2;
000066cc          *(uint16_t*)0x209a32 = (int16_t)i;
000066d2      } while (i != (uint32_t)*(uint16_t*)0x209a34);
00006728      uint32_t i_1;
00006728      
00006728      do
00006728      {
000066de          uint32_t r1_3 = (uint32_t)*(uint16_t*)0x20a238;
000066e0          uint32_t r0_11 = (uint32_t)*(uint16_t*)0x20a23a;
000066e0          
000066e4          if (r1_3 == r0_11)
0000670a              return r0_11;
0000670a          
000066f6          if (sub_6284(*(uint32_t*)0x20a288 + r1_3 * 0x14, 
000066f6              (uint32_t)*(uint8_t*)(r1_3 + 0x20a23c)) != 1)  /* "_3.00.33_250117" */
000066f6          {
000066fc              if ((uint32_t)*(uint8_t*)0x209a31 >= 0x14)  /* "_3.00.33_250117" */
000066fc              {
0000670c                  int16_t r0_17 = *(uint16_t*)0x20a23a;
0000670e                  *(uint16_t*)0x20a238 = r0_17;
00006710                  return r0_17;
000066fc              }
000066fc              
00006700              0xff7ef196(0x14);  /* "_3.00.33_250117" */
00006706              r0_11 = (uint32_t)*(uint8_t*)0x209a31 + 1;
00006708              *(uint8_t*)0x209a31 = (char)r0_11;
0000670a              return r0_11;
000066f6          }
000066f6          
00006712          *(uint8_t*)0x209a31 = 0;
00006718          uint32_t r0_20 = (uint32_t)(*(uint16_t*)0x20a238 + 1);
0000671a          *(uint16_t*)0x20a238 = (int16_t)r0_20;
0000671a          
0000671e          if (r0_20 >= 0x4c)
00006720              *(uint16_t*)0x20a238 = 0;
00006720          
00006722          i_1 = (uint32_t)*(uint16_t*)0x20a238;
00006728      } while (i_1 != (uint32_t)*(uint16_t*)0x20a23a);
00006728      
0000672a      return i_1;
00006684  }


0000672c    int32_t sub_672c() __pure

0000672c  {
0000672c      return;
0000672c  }


0000672e    int32_t sub_672e() __pure

0000672e  {
0000672e      return;
0000672e  }


00006730    int32_t sub_6730()

00006730  {
00006738      0xff81b964(0x209a32, 0x804);
00006740      0xff81b968(0x20a238, 0x54);
0000674a      *(uint32_t*)0x20a288 = 0x20a7c0;
0000674c      return 0x20a7c0;
00006730  }


0000674e    int32_t sub_674e(int32_t arg1, void* arg2, int32_t arg3)

0000674e  {
0000674e      int32_t var_18 = arg3;
0000674e      int32_t var_20 = arg1;
00006758      char var_30 = 0xbc;  /* "####" */
0000675a      char var_2f = (char)arg1;
0000675c      int16_t var_2e = (int16_t)arg3;
00006768      int16_t var_2c = sub_6b80(arg2, arg3);
0000676a      uint32_t r0_2 = sub_5b94();
0000676e      uint32_t r5 = r0_2;
0000676e      
00006772      if (r0_2 > 0x14)  /* "_3.00.33_250117" */
00006774          r5 = 0x14;  /* "_3.00.33_250117" */
00006774      
00006786      0xff81b898(*(uint32_t*)0x20a288 + 0x14 * (uint32_t)*(uint16_t*)0x20a23a, &var_30, 6);
00006786          /* "_3.00.33_250117" */
0000678a      int32_t r0_6 = r5 - 6;
0000678a      
0000678e      if (arg3 <= r0_6)
00006792          r0_6 = arg3;
00006792      
00006794      uint32_t r6 = (uint32_t)(uint8_t)r0_6;
000067a6      int32_t r3 = 0xff81b898(
000067a6          *(uint32_t*)0x20a288 + 0x14 * (uint32_t)*(uint16_t*)0x20a23a + 6, arg2, r6);
000067a6          /* "_3.00.33_250117" */
000067ac      uint32_t r2_1 = (uint32_t)*(uint16_t*)0x20a23a;
000067b2      int32_t var_28 = 0x20a23c;
000067b4      *(uint8_t*)(r2_1 + 0x20a23c) = (uint8_t)r6 + 6;
000067b8      uint32_t i = (uint32_t)((uint16_t)arg3 - (uint16_t)r6);
000067bc      int32_t r1_6 = 0;
000067c0      void* var_1c = (char*)arg2 + r6;
000067c6      uint32_t r0_16 = (uint32_t)(*(uint16_t*)0x20a23a + 1);
000067c8      *(uint16_t*)0x20a23a = (int16_t)r0_16;
000067c8      
000067cc      if (r0_16 >= 0x4c)
000067ce          *(uint16_t*)0x20a23a = 0;
000067ce      
00006812      while (i)
00006812      {
000067d4          char r0_17;
000067d4          
000067d4          r0_17 = i <= r5 ? (uint8_t)i : (uint8_t)r5;
000067d4          
000067dc          uint32_t r6_1 = (uint32_t)r0_17;
000067e4          *(uint8_t*)((uint32_t)*(uint16_t*)0x20a23a + var_28) = (char)r6_1;
000067f2          r1_6 = 0xff81b898(*(uint32_t*)0x20a288 + 0x14 * (uint32_t)*(uint16_t*)0x20a23a, 
000067f2              var_1c, r6_1);  /* "_3.00.33_250117" */
000067f8          i = (uint32_t)((uint16_t)i - (uint16_t)r6_1);
000067fe          var_1c += r6_1;
00006804          r0_16 = (uint32_t)(*(uint16_t*)0x20a23a + 1);
00006806          *(uint16_t*)0x20a23a = (int16_t)r0_16;
00006806          
0000680a          if (r0_16 >= 0x4c)
0000680a          {
0000680c              r0_16 = 0;
0000680e              *(uint16_t*)0x20a23a = 0;
0000680a          }
00006812      }
00006812      
0000681a      return sub_65fe(r0_16, r1_6, r2_1, r3);
0000674e  }

0000681c  int32_t data_681c = 0x2099dc
00006820  int32_t data_6820 = 0x2099f7
00006824  int32_t data_6824 = 0x209a30
00006828  int32_t data_6828 = 0x20a238
0000682c  int32_t data_682c = 0x804

00006830    uint32_t sub_6830(int32_t arg1) __pure

00006830  {
00006830      uint32_t r1_2 = arg1 >> 4;
00006830      
00006834      if (r1_2 <= 9)
00006834      {
00006838          uint32_t r0_1 = arg1 << 0x1c >> 0x1c;  /* "_250117" */
00006838          
0000683c          if (r0_1 <= 9)
0000684c              return (uint32_t)((char)(r1_2 << 3) + (char)(r1_2 << 1) + (uint8_t)r0_1);
00006834      }
00006834      
00006840      return 0;
00006830  }


0000684e    uint32_t sub_684e(uint32_t arg1) __pure

0000684e  {
0000684e      uint32_t r1_1 = 0;
0000684e      
00006852      if (arg1 > 0x63)
00006856          return 0;
00006856      
00006862      for (; arg1 > 9; arg1 = (uint32_t)((uint8_t)arg1 - 0xa))
0000685c          r1_1 = (uint32_t)((uint8_t)r1_1 + 1);
0000685c      
0000686a      return (uint32_t)(uint8_t)(r1_1 << 4) | (uint32_t)(uint8_t)arg1;
0000684e  }


0000686c    uint32_t sub_686c(char arg1, char arg2)

0000686c  {
00006872      char var_1a = arg2;
00006876      char var_10 = 0xbc;  /* "####" */
00006878      char var_f = arg1;
0000687c      int16_t var_e = 1;
00006888      int16_t var_c = sub_6b80(&var_1a, 1);
00006890      void var_20;
00006890      0xff7dc2f8(&var_20, &var_10, 6);
0000689e      return sub_6284(&var_20, 7);
0000686c  }


000068a0    uint32_t sub_68a0(uint32_t arg1, int32_t arg2, int32_t arg3)

000068a0  {
000068a8      int32_t var_1c = 0;
000068aa      int32_t var_18 = 0;
000068c4      return sub_686c((uint8_t)arg1, sub_13f18(0, arg2, arg3, arg1));
000068a0  }

000068c6                    07 a8 01 30 00 f0 c2 fa 25 46 06 24 02 ae 07 a9 22 46 b0 1d 14 f4 dd f7 bc 20        ...0....%F.$...."F....... 
000068e0  69 46 08 70 4d 70 4c 80 21 46 b0 1d 00 f0 48 f9 69 46 88 80 06 22 02 a8 d5 f7 fe dc 0c 21 02 a8  iF.pMpL.!F....H.iF...".......!..
00006900  ff f7 c0 fc dd e7                                                                                ......

00006906    uint32_t sub_6906()

00006906  {
0000690c      uint32_t result = (uint32_t)*(uint8_t*)0x20a28d << 0x1f;  /* "0117" */
0000690c      
0000690e      if (!result)
0000690e      {
00006916          result = 0xff7ef6e4(0x20a290, 0x3e8);
00006916          
0000691c          if (result)
0000691c          {
00006924              result = ((uint32_t)*(uint8_t*)0x20a28d | 1) & 1;
00006926              *(uint8_t*)0x20a28d = (char)result;
0000691c          }
0000690e      }
0000690e      
00006928      return result;
00006906  }


0000692a    int32_t sub_692a()

0000692a  {
0000692c      uint32_t r0 = sub_74f0();
0000692c      
0000693a      if (r0 && (r0 == 2 || r0 == 3))
0000693a      {
0000693c          sub_6906();
00006944          sub_729a(0, 0);
0000693a      }
0000693a      
0000694e      *(uint8_t*)0x20a28c = 1;
00006950      return 1;
0000692a  }


00006952    uint32_t sub_6952()

00006952  {
00006960      uint32_t r0 = sub_6b80(0x20a2a0, (uint32_t)*(uint16_t*)0x20a29c);
00006968      uint32_t r0_1 = (uint32_t)*(uint8_t*)0x20a299;
00006968      
0000696a      if (r0 != (uint32_t)*(uint16_t*)0x20a29e)
00006972          return sub_686c((uint8_t)r0_1, 2);
00006972      
00006976      if (r0_1 == 0x31)  /* "Y02_V3.0" */
00006976      {
000069a0          sub_729a(1, 0);
000069aa          sub_6f1a(*(uint8_t*)0x20a299, 0x20a2a0, *(uint16_t*)0x20a29a);
00006976      }
00006976      else if (r0_1 > 0x31)  /* "Y02_V3.0" */
00006978      {
00006992          if (r0_1 == 0x35 || r0_1 == 0x36)  /* "V3.0" */  /* "3.0" */
00006992          {
000069a0              sub_729a(1, 0);
000069aa              sub_6f1a(*(uint8_t*)0x20a299, 0x20a2a0, *(uint16_t*)0x20a29a);
00006992          }
00006992          else if (r0_1 != 0x46)
00006996          {
0000699a              if (r0_1 != 0x61)
000069aa                  sub_6f1a(*(uint8_t*)0x20a299, 0x20a2a0, *(uint16_t*)0x20a29a);
0000699a              else
0000699a              {
000069a0                  sub_729a(1, 0);
000069aa                  sub_6f1a(*(uint8_t*)0x20a299, 0x20a2a0, *(uint16_t*)0x20a29a);
0000699a              }
00006996          }
00006978      }
00006978      else if (r0_1 == 1 || r0_1 == 2)
00006980      {
000069a0          sub_729a(1, 0);
000069aa          sub_6f1a(*(uint8_t*)0x20a299, 0x20a2a0, *(uint16_t*)0x20a29a);
00006980      }
00006980      else if (r0_1 != 0x10)  /* "RY02_3.00.33_250117" */
00006984      {
00006988          if (r0_1 != 0x21)  /* "17" */
000069aa              sub_6f1a(*(uint8_t*)0x20a299, 0x20a2a0, *(uint16_t*)0x20a29a);
00006988          else
00006988          {
000069a0              sub_729a(1, 0);
000069aa              sub_6f1a(*(uint8_t*)0x20a299, 0x20a2a0, *(uint16_t*)0x20a29a);
00006988          }
00006984      }
00006984      
000069ae      sub_692a();
000069ba      return sub_116c();
00006952  }


000069bc    uint32_t sub_69bc()

000069bc  {
000069c6      uint32_t r1 = (uint32_t)*(uint8_t*)0x20a28d;
000069ca      uint32_t r0_1 = r1 << 0x1f >> 0x1f;  /* "0117" */
000069ca      
000069ce      if (!(uint32_t)*(uint8_t*)0x20a28c)
000069ce      {
000069de          uint32_t r0_2 = r0_1 | ((r1 >> 1) + 1) << 0x19 >> 0x18;
000069de              /* "0.33_250117" */  /* ".33_250117" */
000069e0          *(uint8_t*)0x20a28d = (char)r0_2;
000069e2          uint32_t r0_3 = r0_2 >> 1;
000069e2          
000069e8          if (r0_3 == 3)
000069e8          {
00006a12              uint32_t r0_5 = (uint32_t)*(uint8_t*)0x20a299;
00006a12              
00006a16              if (r0_5 == 3)
00006a1a                  sub_686c((uint8_t)r0_5, 2);
00006a1a              
00006a28              return 0xff81b964(0x20a298, 0x50c);
000069e8          }
000069e8          
000069ec          if (r0_3 != 0xf)
00006a0c              return r0_3;
00006a0c          
000069f4          0xff81b964(0x20a298, 0x50c);
000069f4          
000069fe          if (sub_74f0() != 1)
000069fe          {
00006a00              sub_6b40();
00006a08              return sub_729a(2, 0);
000069fe          }
000069fe          
00006a2e          sub_729a(0, 0);
00006a36          r0_1 = (uint32_t)*(uint8_t*)0x20a28d << 0x1f >> 0x1f;  /* "0117" */
000069ce      }
000069ce      else
000069d2          *(uint8_t*)0x20a28c = 0;
000069d2      
00006a38      *(uint8_t*)0x20a28d = (char)r0_1;
00006a3a      return r0_1;
000069bc  }


00006a3c    int32_t sub_6a3c()

00006a3c  {
00006a44      if ((uint32_t)*(uint8_t*)0x20a28d << 0x1f)  /* "0117" */
00006a46          sub_6b40();
00006a46      
00006a54      return 0xff81b964(0x20a298, 0x50c);
00006a3c  }


00006a56    void sub_6a56(char* arg1, int32_t arg2)

00006a56  {
00006a60      *(uint8_t*)0x20a28c = 1;
00006a66      uint32_t r2 = (uint32_t)*(uint8_t*)0x20a298;
00006a66      
00006a70      if (!r2)
00006a70      {
00006a80          if (arg2 < 6 || (uint32_t)*(uint8_t*)arg1 != 0xbc)  /* "####" */
00006abe              return;
00006abe          
00006a82          *(uint8_t*)0x20a298 = 1;
00006a86          *(uint8_t*)0x20a299 = arg1[1];
00006a90          *(uint16_t*)0x20a29c = (int16_t)((uint32_t)arg1[3] << 8) | (uint16_t)arg1[2];
00006a9a          *(uint16_t*)0x20a29e = (int16_t)((uint32_t)arg1[5] << 8) | (uint16_t)arg1[4];
00006aa2          0xff81b898(0x20a2a0, &arg1[6], arg2 - 6);
00006aa8          uint32_t r0 = (uint32_t)((uint16_t)arg2 - 6);
00006aaa          *(uint16_t*)0x20a29a = (int16_t)r0;
00006aae          uint32_t r1_8 = (uint32_t)*(uint16_t*)0x20a29c;
00006aae          
00006ab4          if (r1_8 > 0x504)
00006ab4          {
00006aba              sub_686c(2, 2);
00006abe              return;
00006ab4          }
00006ab4          
00006ac2          if (r0 >= r1_8)
00006ac2          {
00006ac4              sub_6952();
00006ace              0xff81b964(0x20a298, 0x50c);
00006ac2          }
00006ac2          
00006ad2          sub_6906();
00006a70      }
00006a70      else
00006a70      {
00006a74          if (r2 != 1)
00006a74          {
00006afe              0xff81b964(0x20a298, 0x50c);
00006b02              return;
00006a74          }
00006a74          
00006adc          int32_t r3_1 = (uint32_t)*(uint16_t*)0x20a29a + 0x20a2a0;
00006ae2          0xff81b898(r3_1, arg1, arg2, r3_1);
00006aea          uint32_t r0_1 = (uint32_t)(*(uint16_t*)0x20a29a + (uint16_t)arg2);
00006aec          *(uint16_t*)0x20a29a = (int16_t)r0_1;
00006aec          
00006af2          if (r0_1 >= (uint32_t)*(uint16_t*)0x20a29c)
00006af2          {
00006af4              sub_6952();
00006afe              0xff81b964(0x20a298, 0x50c);
00006af2          }
00006a70      }
00006a56  }


00006b04    int32_t sub_6b04()

00006b04  {
00006b04      int32_t r3;
00006b04      int32_t var_c = r3;
00006b04      int32_t r2;
00006b04      int32_t var_10 = r2;
00006b1e      return 0xff7ef684(0x20a290, "m_ble_packet_timer_id", 1, 0x7d0, 1, 0x82a96d);
00006b1e          /* "17 10:58:10 2022" */
00006b04  }


00006b20    void sub_6b20(int32_t arg1)

00006b20  {
00006b24      *(uint32_t*)0x20a294 = arg1;
00006b20  }


00006b28    int32_t sub_6b28()

00006b28  {
00006b2e      return *(uint32_t*)0x20a294;
00006b28  }


00006b30    int32_t sub_6b30() __pure

00006b30  {
00006b30      return;
00006b30  }


00006b32    int32_t sub_6b32()

00006b32  {
00006b3e      return *(uint32_t*)0x20a294 + 0x400;
00006b32  }


00006b40    uint32_t sub_6b40()

00006b40  {
00006b46      uint32_t result = (uint32_t)*(uint8_t*)0x20a28d << 0x1f;  /* "0117" */
00006b46      
00006b48      if (result)
00006b48      {
00006b4c          0xff7ef70c(0x20a290);
00006b54          result = (uint32_t)*(uint8_t*)0x20a28d >> 1 << 1;
00006b56          *(uint8_t*)0x20a28d = (char)result;
00006b48      }
00006b48      
00006b58      return result;
00006b40  }

00006b5a                                                                                00 00                                        ..

00006b5c  int32_t data_6b5c = 0x20a28d
00006b60  int32_t data_6b60 = 0x50c
00006b64  int32_t data_6b64 = 0x82a96d

00006b68  data_6b68:
00006b68                          6d 5f 62 6c 65 5f 70 61 63 6b 65 74 5f 74 69 6d 65 72 5f 69 64 00 00 00          m_ble_packet_timer_id...

00006b80    uint32_t sub_6b80(void* arg1, int32_t arg2)

00006b80  {
00006b84      uint32_t result = 0xffff;
00006b84      
00006b9e      for (int32_t i = 0; i < arg2; i += 1)
00006b98          result = result >> 8 ^ (uint32_t)*(uint16_t*)(0x83df2c +
00006b98              (((uint32_t)(uint8_t)result ^ (uint32_t)*(uint8_t*)((char*)arg1 + i)) << 1));
00006b98      
00006ba0      return result;
00006b80  }


00006ba2    void sub_6ba2(uint32_t arg1, void* arg2, int32_t arg3)

00006ba2  {
00006bbc      for (int32_t i = 0; i < arg3; i += 1)
00006bb6          arg1 = arg1 >> 8 ^ (uint32_t)*(uint16_t*)(0x83df2c
00006bb6              + (((uint32_t)(uint8_t)arg1 ^ (uint32_t)*(uint8_t*)((char*)arg2 + i)) << 1));
00006ba2  }

00006bc0  int32_t data_6bc0 = 0xffff
00006bc4  int32_t data_6bc4 = 0x83df2c

00006bc8    int32_t sub_6bc8() __pure

00006bc8  {
00006bca      return 0x20a7c0;
00006bc8  }


00006bcc    int32_t sub_6bcc(int32_t arg1)

00006bcc  {
00006bd8      return 0xff7ef6e4(0x20a7a4, arg1);
00006bcc  }

00006bda                                                                                10 b5 fa f7 2f fe                            ..../.
00006be0  a7 49 48 60 d3 21 01 20 d5 f7 80 db 10 bd                                                        .IH`.!. ......

00006bee    int32_t sub_6bee(int32_t arg1)

00006bee  {
00006bee      int32_t r3;
00006bee      int32_t var_c = r3;
00006bee      int32_t r2;
00006bee      int32_t var_10 = r2;
00006bf6      *(uint32_t*)0x20a7bc = arg1;
00006c0e      return 0xff7ef684(0x20a7a4, "m_ota_write_flag_id", 1, 0x7d0, 0, 0x82ab8b);
00006c0e          /* "17 10:58:10 2022" */
00006bee  }


00006c10    int32_t sub_6c10()

00006c10  {
00006c1c      (*(uint32_t*)0x20a7bc)(1, 0);
00006c20      return 0;
00006c10  }


00006c22    int32_t sub_6c22(char* arg1, int32_t arg2)

00006c22  {
00006c28      int32_t r3 = *(uint32_t*)0x20a7bc;
00006c2c      int32_t r1;
00006c2c      
00006c2c      if (arg2 == 9)
00006c2c      {
00006c32          uint32_t r1_1 = (uint32_t)*(uint8_t*)arg1;
00006c32          
00006c3a          if (r1_1 == 1 || r1_1 == 4)
00006c3a          {
00006c58              uint32_t r4_2 = (uint32_t)arg1[3] << 0x10 | (uint32_t)arg1[4] << 0x18
00006c58                  | (uint32_t)arg1[2] << 8 | (uint32_t)arg1[1];
00006c58                  /* "RY02_3.00.33_250117" */  /* "0.33_250117" */
00006c5c              *(uint32_t*)0x20a7b4 = 0;
00006c5e              *(uint16_t*)0x20a7ae = 0;
00006c62              *(uint8_t*)0x20a7a8 = *(uint8_t*)arg1;
00006c64              *(uint32_t*)0x20a7b0 = r4_2;
00006c68              *(uint8_t*)0x20a7a9 = 1;
00006c72              *(uint16_t*)0x20a7aa = (int16_t)((uint32_t)arg1[6] << 8) | (uint16_t)arg1[5];
00006c7c              *(uint16_t*)0x20a7ac = (int16_t)((uint32_t)arg1[8] << 8) | (uint16_t)arg1[7];
00006c80              *(uint8_t*)0x20a7a9 = 2;
00006c84              r3(2, 0);
00006c88              return 0;
00006c3a          }
00006c3a          
00006c3c          r1 = 2;
00006c2c      }
00006c2c      else
00006c2e          r1 = 1;
00006c2e      
00006c40      r3(2, r1);
00006c44      return 1;
00006c22  }


00006c8a    uint32_t sub_6c8a()

00006c8a  {
00006c94      if (!(uint32_t)*(uint8_t*)0x20a7a9)
00006caa          return 0xff;
00006caa      
00006ca6      return (uint32_t)sub_12b2a(0x64 * *(uint32_t*)0x20a7b4, *(uint32_t*)0x20a7b0 - 0x50);
00006c8a  }


00006cac    int32_t sub_6cac(char* arg1, int16_t arg2)

00006cac  {
00006cb4      sub_6c8a();
00006cbc      uint32_t r0 = (uint32_t)*(uint8_t*)0x20a7a9;
00006cbc      
00006cc4      if (r0 != 3 && r0 != 2)
00006cc4      {
00006ccc          (*(uint32_t*)0x20a7bc)(3, 3);
00006cce          return 3;
00006cc4      }
00006cc4      
00006cde      uint32_t r0_4 = (uint32_t)*(uint16_t*)0x20a7ae;
00006cde      
00006ce4      if (r0_4 + 1
00006ce4          == (uint32_t)((uint16_t)*(uint8_t*)arg1 + (int16_t)((uint32_t)arg1[1] << 8)))
00006ce4      {
00006cea          uint32_t r4_2 = (uint32_t)(arg2 - 2);
00006cea          
00006cf2          if (r4_2 > 0x600)
00006cf2          {
00006cfa              (*(uint32_t*)0x20a7bc)(3, 1);
00006cfc              return 1;
00006cf2          }
00006cf2          
00006d04          int32_t var_18_1 = 0x20a7c0;
00006d08          int32_t r0_11;
00006d08          
00006d08          if (r0_4)
00006d08          {
00006d10              0xff81b898(0x20a7c0, &arg1[2], r4_2);
00006d14              int32_t r0_5 = *(uint32_t*)0x20a7b4;
00006d18              int32_t r1_5 = r0_5 + r4_2 - 1;
00006d18              
00006d22              if (r1_5 >> 0xc != (r0_5 - 1) >> 0xc)
00006d2a                  sub_3064((r1_5 >> 0xc << 0xc) + 0x84d000);
00006d2a              
00006d30              r0_11 = *(uint32_t*)0x20a7b4;
00006d30              
00006d34              if (r0_11 >= *(uint32_t*)0x20a7b0)
00006d34                  goto label_6d48;
00006d34              
00006d34              goto label_6d3c;
00006d08          }
00006d08          
00006d62          int32_t var_68;
00006d62          0xff81b898(&var_68, &arg1[2], 0x50);
00006d62          
00006d6c          if (var_68 == 0x81bdc3e5)
00006d6c          {
00006d72              uint32_t r0_21;
00006d72              void var_38;
00006d72              
00006d72              if ((uint32_t)*(uint8_t*)0x20a7a8 == 1)
00006d7a                  r0_21 = sub_12a74(&var_38, "RY02_V3.0", 9);
00006d7a              
00006d80              if ((uint32_t)*(uint8_t*)0x20a7a8 != 1 || !r0_21)
00006d80              {
00006d94                  r4_2 -= 0x50;
00006d9a                  0xff81b898(var_18_1, &arg1[0x52]);
00006da0                  sub_3064(0x84d000);
00006da4                  r0_11 = *(uint32_t*)0x20a7b4;
00006d3c              label_6d3c:
00006d3c                  sub_30fc(r0_11 + 0x84d000, var_18_1, (uint16_t)r4_2);
00006d44                  *(uint32_t*)0x20a7b4 += r4_2;
00006d48              label_6d48:
00006d48                  *(uint8_t*)0x20a7a9 = 3;
00006d50                  *(uint16_t*)0x20a7ae += 1;
00006d56                  (*(uint32_t*)0x20a7bc)(3, 0);
00006d58                  return 0;
00006d80              }
00006d6c          }
00006ce4      }
00006ce4      
00006d88      (*(uint32_t*)0x20a7bc)(3, 2);
00006d8a      return 2;
00006cac  }


00006da8    int32_t sub_6da8()

00006da8  {
00006db2      int32_t r2 = *(uint32_t*)0x20a7bc;
00006db2      
00006db6      if ((uint32_t)*(uint8_t*)0x20a7a9 != 3)
00006db6      {
00006dbc          r2(4, 3);
00006dc0          return 3;
00006db6      }
00006db6      
00006dca      if (*(uint32_t*)0x20a7b4 != *(uint32_t*)0x20a7b0 - 0x50)
00006dca      {
00006dd0          r2(4, 1);
00006dd4          return 1;
00006dca      }
00006dca      
00006dd8      *(uint8_t*)0x20a7a9 = 4;
00006dde      r2(4, 0);
00006de2      return 0;
00006da8  }


00006de4    int32_t sub_6de4()

00006de4  {
00006dee      if ((uint32_t)*(uint8_t*)0x20a7a9 != 4)
00006dee      {
00006df6          (*(uint32_t*)0x20a7bc)(4, 3);
00006dfa          return 3;
00006dee      }
00006dee      
00006dfe      *(uint8_t*)0x20a7a9 = 5;
00006e04      int32_t entry_r2;
00006e04      int32_t entry_r3;
00006e04      sub_f6e(0x2793, 0, entry_r2, entry_r3);
00006e08      sub_1e60();
00006e16      sub_14a2();
00006e1a      sub_322e();
00006e22      int32_t r0_3;
00006e22      int32_t r1_1;
00006e22      int32_t r2_1;
00006e22      int32_t r3;
00006e22      r0_3 = sub_6bcc(0x3e8);
00006e26      int32_t r0_4;
00006e26      int32_t r1_2;
00006e26      int32_t r2_2;
00006e26      int32_t r3_1;
00006e26      r0_4 = sub_720c(r0_3, r1_1, r2_1, r3);
00006e2a      sub_5b9a(r0_4, r1_2, r2_2, r3_1);
00006e2e      sub_13ec();
00006e34      return 0;
00006de4  }


00006e36    int32_t sub_6e36()

00006e36  {
00006e42      (*(uint32_t*)0x20a7bc)(7, 0);
00006e46      return 0;
00006e36  }


00006e48    int32_t sub_6e48()

00006e48  {
00006e4e      *(uint8_t*)0x20a7a9 = 0;
00006e50      return 0;
00006e48  }


00006e52    int32_t sub_6e52(char* arg1)

00006e52  {
00006e54      if (arg1)
00006e54      {
00006e5c          *(uint8_t*)arg1 = *(uint8_t*)0x20a7a9;
00006e60          arg1[1] = *(uint8_t*)0x20a7b4;
00006e66          arg1[2] = (char)((uint32_t)*(uint16_t*)0x20a7b4 >> 8);
00006e6c          arg1[3] = (char)(*(uint32_t*)0x20a7b4 >> 0x10);  /* "RY02_3.00.33_250117" */
00006e72          arg1[4] = (char)(*(uint32_t*)0x20a7b4 >> 0x18);  /* "0.33_250117" */
00006e54      }
00006e54      
00006e76      return 0;
00006e52  }


00006e78    int32_t sub_6e78() __pure

00006e78  {
00006e7a      return 0;
00006e78  }

00006e7c  int32_t data_6e7c = 0x20a7c0

00006e80  ac 87 20 00                                                                                      .. .

00006e84  int32_t data_6e84 = 0x82ab8b

00006e88  data_6e88:
00006e88                          6d 5f 6f 74 61 5f 77 72 69 74 65 5f 66 6c 61 67 5f 69 64 00                      m_ota_write_flag_id.

00006e9c  int32_t data_6e9c = 0x84d000
00006ea0  int32_t data_6ea0 = -0x7e423c1b

00006ea4  data_6ea4:
00006ea4              52 59 30 32 5f 56 33 2e                                                                  RY02_V3.

00006eac  char const (* data_6eac)[0xa] = 0x30
00006eb0  int32_t data_6eb0 = 0x2793

00006eb4    int32_t sub_6eb4()

00006eb4  {
00006eba      0xff81b968(0x20b3c4, 0x14);  /* "_3.00.33_250117" */
00006ec2      *(uint32_t*)0x20b3c8 = 0x20adc4;
00006ec4      return 0x20adc4;
00006eb4  }


00006ec6    void sub_6ec6(char arg1, int32_t arg2, int32_t arg3)

00006ec6  {
00006ed8      if ((uint32_t)*(uint16_t*)0x20adc0 == (uint32_t)*(uint16_t*)0x20adc2)
00006ed8      {
00006edc          *(uint16_t*)0x20adc0 = 0;
00006ede          *(uint16_t*)0x20adc2 = 0;
00006ed8      }
00006ed8      
00006ee0      uint32_t r2_1 = (uint32_t)*(uint16_t*)0x20adc0;
00006ee0      
00006eec      if (r2_1 + arg3 + 2 > 0x400)
00006eec          return;
00006eec      
00006eee      *(uint8_t*)(0x20b3d8 + r2_1) = arg1;
00006ef6      uint32_t r0_2 = (uint32_t)(*(uint16_t*)0x20adc0 + 1);
00006ef8      *(uint16_t*)0x20adc0 = (int16_t)r0_2;
00006efa      *(uint8_t*)(0x20b3d8 + r0_2) = (char)arg3;
00006f00      uint32_t r0_5 = (uint32_t)(*(uint16_t*)0x20adc0 + 1);
00006f02      *(uint16_t*)0x20adc0 = (int16_t)r0_5;
00006f06      0xff81b898(0x20b3d8 + r0_5, arg2, arg3);
00006f10      *(uint16_t*)0x20adc0 += (uint16_t)arg3;
00006f14      sub_116c();
00006ec6  }


00006f1a    int32_t sub_6f1a(char arg1, int32_t arg2, int16_t arg3)

00006f1a  {
00006f20      *(uint8_t*)0x20b3c5 = arg1;
00006f24      int32_t result = 0xff81b898(*(uint32_t*)0x20b3c8);
00006f28      *(uint16_t*)0x20b3d0 = arg3;
00006f2a      return result;
00006f1a  }


00006f2c    uint32_t sub_6f2c()

00006f2c  {
00006f42      void* r0_3 = sub_8fcc((uint32_t)(sub_216a() - (uint16_t)**(uint8_t**)0x20b3c8));
00006f4e      uint32_t var_130;
00006f4e      
00006f4e      if (!r0_3)
00006f5c          0xff81b968(&var_130, 0x124, 0x124);
00006f4e      else
00006f52          0xff7dc2f8(&var_130, r0_3, 0x124);
00006f52      
00006f66      if (!(uint32_t)**(uint8_t**)0x20b3c8)
00006f66      {
00006f6e          var_130 = sub_216a();
00006f82          sub_8d26(&(&var_130)[sub_12b2a(sub_217a(), 0x3c) * 3 + 1]);
00006f66      }
00006f66      
00006f8c      char* r0_15 = *(uint32_t*)0x20b3c8;
00006f8c      
00006f8e      if (!var_130)
00006fbc          return sub_686c(0x12, *(uint8_t*)r0_15);  /* "02_3.00.33_250117" */
00006fbc      
00006f94      char var_530 = *(uint8_t*)r0_15;
00006fa0      void var_52f;
00006fa0      void var_12c;
00006fa0      0xff81b898(&var_52f, &var_12c, 0x120);
00006fac      return sub_674e(0x12, &var_530, 0x121);  /* "02_3.00.33_250117" */
00006f2c  }


00006fc2    int32_t sub_6fc2(int16_t arg1)

00006fc2  {
00006fda      void var_70;
00006fda      sub_8fde((uint32_t)(sub_216a() - arg1), &var_70);
00006fe8      char var_470 = **(uint8_t**)0x20b3c8;
00006ff0      void var_46f;
00006ff0      0xff81b898(&var_46f, &var_70, 0x64);
00007004      return sub_674e(0x11, &var_470, 0x65);  /* "Y02_3.00.33_250117" */
00006fc2  }


00007006    int32_t sub_7006(int32_t arg1)

00007006  {
0000700e      int32_t r6 = arg1;
0000700e      
00007012      if (arg1 > 6)
00007014          r6 = 6;
00007014      
0000701c      uint32_t r0_2 = (uint32_t)(sub_216a() - (uint16_t)r6);
00007020      int16_t var_18 = (uint16_t)r0_2;
00007020      
00007024      if (r0_2 < 7)
00007028          var_18 = 7;
00007028      
0000702a      int32_t r4 = 1;
0000702e      int32_t i = 0;
00007032      char var_1c = 0;
000070a2      char var_480[0x74];
000070a2      
000070a2      for (; i <= r6; i += 1)
000070a2      {
00007042          char var_80[0xe];
00007042          sub_8fde((uint32_t)(var_18 + (uint16_t)i), &var_80);
00007048          char var_6d;
00007048          uint32_t r2_1 = (uint32_t)var_6d;
00007048          
0000704c          if (r2_1)
0000704c          {
00007050              var_480[r4] = (uint8_t)r6 - (uint8_t)i;
00007058              var_480[r4 + 1] = (char)(r2_1 << 1) + 4;
0000705c              int16_t var_72;
0000705c              uint32_t r0_9 = (uint32_t)var_72;
00007060              var_480[r4 + 2] = (char)r0_9;
00007066              var_480[r4 + 3] = (char)(r0_9 >> 8);
0000706a              int16_t var_70;
0000706a              uint32_t r0_11 = (uint32_t)var_70;
0000706e              var_480[r4 + 4] = (char)r0_11;
00007072              int32_t r4_5 = r4 + 5;
00007074              var_480[r4_5] = (char)(r0_11 >> 8);
00007076              int32_t r0_13 = 0;
00007076              
0000708e              while (true)
0000708e              {
0000708e                  r4 = r4_5 + 1;
0000708e                  
00007092                  if (r2_1 <= r0_13)
00007092                      break;
00007092                  
0000707e                  void* r1_2 = &var_80[r0_13];
00007082                  var_480[r4] = *(uint8_t*)((char*)r1_2 + 0x14);  /* "_3.00.33_250117" */
00007086                  r4_5 = r4 + 1;
0000708a                  var_480[r4_5] = *(uint8_t*)(&data_3c + r1_2);
0000708c                  r0_13 += 1;
0000708e              }
0000708e              
0000709c              var_1c += 1;
0000704c          }
000070a2      }
000070a2      
000070aa      var_480[0] = var_1c;
000070bc      return sub_674e(0x27, &var_480, (uint32_t)(uint16_t)r4);
00007006  }


000070be    uint32_t sub_70be(int32_t arg1 @ r6, int32_t arg2 @ r7)

000070be  {
000070be      int32_t var_8 = arg1;
000070c0      void* r4 = 0x20b3c4;
000070c2      uint32_t result = (uint32_t)*(uint8_t*)0x20b3c5;
000070c2      
000070c6      if (result)
000070c6      {
000070ca          char* r5_1 = *(uint32_t*)0x20b3c8;
000070ca          
000070d0          if (result == 0x22)  /* "7" */
0000714a              sub_686c((uint8_t)result, 2);
000070d0          else
000070d0          {
000070d2              int32_t entry_r2;
000070d2              
000070d2              if (result > 0x22)  /* "7" */
000070d2              {
000070fc                  if (result != 0x3b)
000070fc                  {
000070fe                      if (result <= 0x3b)
000070fe                      {
00007106                          int32_t r1_5;
00007106                          int32_t r3_3;
00007106                          r1_5 = sub_13f18(result, result - 0x23, entry_r2, result - 0x23);
0000710a                          result = r1_5 - 4;
0000710e                          /* unimplemented  {asrs r1, r0, #0x19} */  /* ".33_250117" */
000070fe                      }
000070fe                      
0000711e                      if (result == 0x41 || result == 0x43 || result == 0x46)
00007142                          sub_7f60(result, r5_1);
0000711e                      else if (result == 0x47)
0000712e                          *(uint8_t*)r5_1;
000070fc                  }
000070d2              }
000070d2              else if (result == 7)
0000717a                  sub_6e36();
000070d6              else
000070d6              {
000070d8                  if (result <= 7)
000070d8                  {
000070dc                      void* r0;
000070dc                      void* r1_2;
000070dc                      r0 = sub_13f18(result, (uint32_t)*(uint16_t*)0x20b3d0, entry_r2, 
000070dc                          result);
000070e0                      *(uint8_t*)(r0 * 2);
000070e2                      r4 = 0x20b38c;
000070e6                      result = (int32_t)*(uint8_t*)(r1_2 * 2);
000070d8                  }
000070d8                  
000070ea                  if (result == 0x11)  /* "Y02_3.00.33_250117" */
00007182                      sub_6fc2((uint16_t)*(uint8_t*)r5_1);
000070ea                  else if (result == 0x12)  /* "02_3.00.33_250117" */
00007188                      sub_6f2c();
000070ee                  else if (result != 0x13 && result == 0x21)  /* "2_3.00.33_250117" */  /* "
000070ee                          17" */
0000714a                      sub_686c((uint8_t)result, 2);
000070d6              }
000070d0          }
000070d0          
0000718c          result = 0;
0000718e          *(uint8_t*)((char*)r4 + 1) = 0;
000070c6      }
000070c6      
00007190      return result;
000070be  }

00007126                    28 78 04 f0 25 fc 2e e0                                                              (x..%...
00007136                                                                    28 78 ff f7 65 ff 26 e0                              (x..e.&.
00007150                                                  28 46 ff f7 5d fd 19 e0 28 46 ff f7 62 fd 15 e0                  (F..]...(F..b...
00007160  28 46 ff f7 a3 fd 11 e0 28 46 ff f7 1d fe 0d e0 28 46 ff f7 37 fe 09 e0                          (F......(F......(F..7...
00007192                                                        00 00                                                        ..

00007194  int32_t data_7194 = 0x20b3c4
00007198  int32_t data_7198 = 0x20adc4
0000719c  int32_t data_719c = 0x124
000071a0  int32_t data_71a0 = 0x400

000071a4    int32_t sub_71a4(int32_t arg1, int32_t arg2, int32_t arg3, int32_t arg4)

000071a4  {
000071aa      *(uint8_t*)0x20b7da = 0;
000071ac      int32_t result = sub_5bbe(arg1, arg2, arg3, arg4);
000071b0      *(uint8_t*)0x20b7d8 = 0;
000071b2      return result;
000071a4  }


000071b4    int32_t sub_71b4()

000071b4  {
000071bc      if ((uint32_t)*(uint8_t*)0x20b7da)
000071bc      {
000071c0          0xff7ef70c(0x20b7dc);
000071c6          *(uint8_t*)0x20b7da = 0;
000071bc      }
000071bc      
000071ca      *(uint8_t*)0x20b7d8 = 2;
000071cc      return 2;
000071b4  }


000071ce    uint32_t sub_71ce()

000071ce  {
000071d2      uint32_t r0 = (uint32_t)*(uint8_t*)0x20b7d9;
000071d2      
000071d6      if (!r0)
000071d6      {
000071e8          *(uint8_t*)0x20b7d8 = 0;
000071ea          return 0;
000071d6      }
000071d6      
000071d8      int32_t entry_r1;
000071d8      int32_t entry_r2;
000071d8      int32_t entry_r3;
000071d8      sub_5be0(r0, entry_r1, entry_r2, entry_r3);
000071de      *(uint8_t*)0x20b7d8 = 1;
000071e4      return sub_7244();
000071ce  }


000071ec    uint32_t sub_71ec(int32_t arg1, int32_t arg2, int32_t arg3, int32_t arg4)

000071ec  {
000071ee      sub_5be0(arg1, arg2, arg3, arg4);
000071f6      *(uint8_t*)0x20b7d8 = 1;
000071f8      *(uint8_t*)0x20b7d9 = 1;
000071fe      return sub_7244();
000071ec  }


00007200    uint32_t sub_7200()

00007200  {
00007202      uint32_t result = (uint32_t)*(uint8_t*)0x20b7d8;
00007202      
00007206      if (result)
0000720a          return result;
0000720a      
00007208      int32_t entry_r1;
00007208      int32_t entry_r2;
00007208      int32_t entry_r3;
00007208      /* tailcall */
00007208      return sub_71ec(result, entry_r1, entry_r2, entry_r3);
00007200  }


0000720c    int32_t sub_720c(int32_t arg1, int32_t arg2, int32_t arg3, int32_t arg4)

0000720c  {
0000720e      sub_5bbe(arg1, arg2, arg3, arg4);
00007216      *(uint8_t*)0x20b7d8 = 0;
00007218      *(uint8_t*)0x20b7d9 = 0;
0000721a      return 0x20b7d8;
0000720c  }

0000721c                                                                                      1c b5 03 21                              ...!
00007220  0e 48 14 f4 a1 f3 00 20 00 90 0d 49 0b 48 01 91 0c 4b 01 22 0c a1 00 1d e8 f7 24 da 1c bd        .H..... ...I.H...K."......$...

0000723e    int32_t sub_723e() __pure

0000723e  {
0000723e      return;
0000723e  }


00007240    int32_t sub_7240() __pure

00007240  {
00007240      return;
00007240  }


00007242    int32_t sub_7242() __pure

00007242  {
00007242      return;
00007242  }


00007244    uint32_t sub_7244()

00007244  {
00007248      uint32_t result = (uint32_t)*(uint8_t*)0x20b7da;
00007248      
0000724c      if (result)
0000724c      {
00007250          0xff7ef70c(0x20b7dc);
00007254          result = 0;
00007256          *(uint8_t*)0x20b7da = 0;
0000724c      }
0000724c      
00007258      return result;
00007244  }

0000725a                                                                                00 00                                        ..

0000725c  int32_t data_725c = 0x20b7d8

00007260  55 b1 82 00 98 3a 00 00 62 61 74 74 65 72 79 5f 73 61 6d 70 6c 65 5f 70 6f 77 65 72 5f 6f 6e 00  U....:..battery_sample_power_on.

00007280    int32_t sub_7280(int32_t arg1, int32_t arg2, int32_t arg3, int32_t arg4)

00007280  {
00007280      int32_t var_c = arg4;
00007280      int32_t var_10 = arg3;
00007286      (uint16_t)var_10 = 0xe;
0000728a      *(uint16_t*)((char*)var_10)[2] = 9;
00007292      return sub_8e0(&var_10, &var_10, arg3, arg4);
00007280  }


00007294    int32_t sub_7294(int32_t arg1)

00007294  {
00007296      *(uint32_t*)0x20b7ec = arg1;
00007298      int32_t entry_r2;
00007298      int32_t entry_r3;
00007298      /* tailcall */
00007298      return sub_7280(arg1, 0x20b7e8, entry_r2, entry_r3);
00007294  }


0000729a    uint32_t sub_729a(int32_t arg1, int32_t arg2)

0000729a  {
0000729a      int32_t r3;
0000729a      int32_t var_18 = r3;
000072a0      int32_t r5 = arg2;
000072a2      uint32_t result = (uint32_t)*(uint8_t*)0x2099ed;
000072a2      
000072a6      if (result == 2)
000072a6      {
000072ae          if ((uint32_t)*(uint8_t*)0x20b7eb)
000072ae          {
000072b4              0xff7ef70c(0x20b7e0);
000072ba              *(uint8_t*)0x20b7eb = 0;
000072ae          }
000072ae          
000072bc          result = (uint32_t)*(uint8_t*)0x20b7e8;
000072bc          
000072c0          if (arg1 == 4)
000072c0          {
000072d6              if (result != 4)
000072d6              {
000072da                  *(uint8_t*)0x20b7e8 = 4;
000072de                  return sub_7294(0x83e12c);
000072d6              }
000072c0          }
000072c0          else if (result != 4)
000072c4          {
000072ca              if ((uint32_t)*(uint8_t*)0x20b7e9 << 0x18 >= 0)  /* "0.33_250117" */
000072ca              {
000072e6                  if (result != arg1)
000072e6                  {
000072ec                      if (!arg1)
00007304                          result = sub_7294(0x83e140);
000072ec                      else if (arg1 == 1)
00007304                          result = sub_7294(0x2087cc);
000072f0                      else if (arg1 == 2)
000072f4                      {
00007314                          result = sub_7294(0x83e144);
00007318                          r5 = 0;
000072f4                      }
000072f4                      else if (arg1 == 3)
000072f8                      {
00007314                          result = sub_7294(0x83e148);
00007318                          r5 = 0;
000072f8                      }
000072f8                      
0000731a                      *(uint8_t*)0x20b7e8 = (char)arg1;
000072e6                  }
000072e6                  
0000731e                  if (!r5)
000072e2                      return result;
000072e2                  
00007322                  *(uint8_t*)0x20b7eb = 1;
00007332                  return sub_3704(0x20b7e0, 0x82b2e5, r5, 0);
000072ca              }
000072ca              
000072cc              result = 0x80;
000072d0              *(uint8_t*)0x20b7e9 = (uint8_t)arg1 | 0x80;
000072c4          }
000072a6      }
000072a6      
000072d2      return result;
0000729a  }


00007334    int32_t j_sub_729a()

00007334  {
00007338      /* tailcall */
00007338      return sub_729a(2, 0);
00007334  }


0000733a    int32_t sub_733a()

0000733a  {
0000733e      uint32_t r0 = (uint32_t)*(uint8_t*)0x20b7e9;
0000733e      
00007342      if (r0 << 0x18 >= 0)  /* "0.33_250117" */
00007358          return 0;
00007358      
00007348      *(uint8_t*)0x20b7e9 = 0;
0000734e      sub_729a(r0 << 0x1c >> 0x1c, 0);  /* "_250117" */
00007354      return 1;
0000733a  }


0000735a    int32_t sub_735a()

0000735a  {
0000735e      *(uint8_t*)0x20b7ea = 0;
00007360      /* tailcall */
00007360      return sub_733a();
0000735a  }


00007362    uint32_t sub_7362()

00007362  {
0000736c      *(uint32_t*)0x20b7e8 = 0;
00007370      *(uint32_t*)0x20b7ec = 0;
00007372      uint32_t result = (uint32_t)*(uint16_t*)0x2087bc;
00007372      
00007378      if (result == 0xa6c5)
00007392          return result;
00007392      
00007380      0xff81b968(0x2087bc, 0x14);  /* "_3.00.33_250117" */
00007386      *(uint16_t*)0x2087bc = 0xa6c5;
0000738e      return 0xff81b898(0x2087cc, 0x83e130, 4);
00007362  }


00007394    int32_t sub_7394(int32_t arg1, char* arg2)

00007394  {
00007394      int32_t var_1c = arg1;
000073a2      int32_t result;
000073a2      
000073a2      if (!arg1)
000073a2      {
000073ee          char r0_3 = 1;
000073f0          *(uint8_t*)0x2087be = 1;
000073f4          *(uint8_t*)0x2087bf = 5;
000073f4          
000073fc          if ((uint32_t)*(uint8_t*)arg2 < 8)
000073fe              r0_3 = 0;
000073fe          
00007400          *(uint8_t*)0x2087cd = r0_3;
00007404          *(uint8_t*)0x2087ce = 0xf;
00007406          result = 0x1e;  /* "50117" */
00007408          *(uint8_t*)0x2087cf = 0x1e;  /* "50117" */
000073a2      }
000073a2      else
000073a2      {
000073ae          result = 0xff81b7f8(0x2087c0, arg2, 0xc);
000073ae          
000073b4          if (result)
000073b4          {
000073bc              0xff81b898(0x2087c0, arg2, 0xc);
000073c4              int32_t r4 = 0;
000073c6              *(uint8_t*)0x2087be = 2;
000073d2              int32_t r1_3;
000073d2              
000073d2              while (true)
000073d2              {
000073d8                  if (!0xff81b7f8((r4 << 4) + 0x83e14c, arg2, 0xc))
000073d8                  {
0000740e                      *(uint8_t*)0x2087bf = 5;
00007418                      r1_3 = (r4 << 4) + 0x83e158;
00007418                      break;
000073d8                  }
000073d8                  
000073da                  r4 += 1;
000073da                  
000073de                  if (r4 >= 5)
000073de                  {
000073e4                      *(uint8_t*)0x2087bf = 1;
000073e8                      r1_3 = 0x83e130;
000073ec                      break;
000073de                  }
000073d2              }
000073d2              
0000741e              return 0xff81b898(0x2087cc, r1_3, 4);
000073b4          }
000073a2      }
000073a2      
0000740a      return result;
00007394  }


00007420    void* sub_7420(int32_t arg1)

00007420  {
0000742a      void* result = 0x2087cc;
0000742e      int32_t r3_2;
0000742e      
0000742e      if ((uint32_t)*(uint8_t*)0x2087be != 1)
00007436          result = sub_13f18(0x2087cc, 3, arg1, (uint32_t)*(uint8_t*)0x2087bf);
00007436      
00007446      if ((uint32_t)*(uint8_t*)((char*)result + 1) == 1)
0000744a          *(uint8_t*)((char*)result + 1) = 0;
0000744a      
0000744c      return result;
00007420  }


0000744e    int32_t sub_744e(int32_t arg1, char arg2, int32_t arg3, void* arg4 @ r4, int32_t arg5, int32_t arg6, int32_t arg7)

0000744e  {
00007450      if (!arg3)
00007450      {
00007462          *(uint8_t*)((char*)arg4 + 0x13) = arg2;  /* "2_3.00.33_250117" */
0000746a          /* tailcall */
0000746a          return sub_7476(arg1, 0x83e138, 4);
00007450      }
00007450      
00007458      0xff81b898(arg1, 0x83e134, 4);
0000745e      *(uint8_t*)((char*)arg4 + 0x13) = 2;  /* "2_3.00.33_250117" */
00007460      return 2;
0000744e  }


0000746c    int32_t sub_746c(int32_t arg1, void* arg2 @ r4)

0000746c  {
0000746e      *(uint8_t*)((char*)arg2 + 0x13) = 4;  /* "2_3.00.33_250117" */
00007474      /* tailcall */
00007474      return sub_7476(arg1, 0x83e13c, 4);
0000746c  }


00007476    int32_t sub_7476(int32_t arg1, int32_t arg2, int32_t arg3)

00007476  {
0000747a      return 0xff81b898();
00007476  }


0000747c    int32_t sub_747c()

0000747c  {
0000747c      int32_t r3;
0000747c      int32_t var_18_1 = r3;
0000747c      int32_t r2;
0000747c      int32_t var_1c_1 = r2;
0000747c      int32_t r1;
0000747c      int32_t var_20 = r1;
00007482      char* r0 = *(uint32_t*)0x20b7ec;
00007486      uint32_t r2_1 = (uint32_t)r0[3];
00007490      uint32_t r1_3 = (uint32_t)r0[2];
000074a4      sub_11c10((uint32_t)*(uint8_t*)0x2099ee, r1_3, r2_1, (uint32_t)*(uint8_t*)r0, 0x1f4, 
000074a4          (uint32_t)((int16_t)(r1_3 << 1) - 2), (uint32_t)((int16_t)(r2_1 << 1) - 2));
000074aa      *(uint8_t*)0x20b7ea = 1;
000074b8      return sub_3704(0x20b7e4, 0x82b30b, 0x1388, 0);
0000747c  }


000074ba    int32_t sub_74ba() __pure

000074ba  {
000074ba      return;
000074ba  }


000074bc    uint32_t sub_74bc()

000074bc  {
000074c2      *(uint8_t*)0x20b7e8 = 2;
000074c4      sub_7568();
000074c8      uint32_t result = (uint32_t)*(uint8_t*)0x20b7eb;
000074c8      
000074cc      if (result)
000074cc      {
000074d2          sub_3730(0x20b7e0);
000074d6          result = 0;
000074d8          *(uint8_t*)0x20b7eb = 0;
000074cc      }
000074cc      
000074da      return result;
000074bc  }


000074dc    uint32_t sub_74dc()

000074dc  {
000074e2      return sub_7568();
000074dc  }


000074e4    uint32_t sub_74e4()

000074e4  {
000074e6      uint32_t result = (uint32_t)*(uint8_t*)0x20b7ea;
000074e6      
000074ea      if (!result)
000074ee          return result;
000074ee      
000074ec      return 1;
000074e4  }


000074f0    uint32_t sub_74f0()

000074f0  {
000074f4      return (uint32_t)*(uint8_t*)0x20b7e8;
000074f0  }


000074f6    int32_t sub_74f6()

000074f6  {
000074fa      uint32_t r0 = (uint32_t)*(uint8_t*)0x20b7e8;
000074fa      
000074fe      if (!r0)
00007514          sub_729a(2, 0);
000074fe      else if (r0 == 1)
00007502      {
00007508          sub_729a(0, 0);
0000750e          return 1;
00007502      }
00007502      
0000751a      return 0;
000074f6  }


0000751c    uint32_t sub_751c()

0000751c  {
0000751e      uint32_t result = (uint32_t)*(uint8_t*)0x20b7e8;
0000751e      
00007522      if (result != 3)
0000752a          return result;
0000752a      
00007528      /* tailcall */
00007528      return sub_729a(0, 0x2710);
0000751c  }


0000752c    uint32_t sub_752c()

0000752c  {
0000752e      uint32_t result = sub_5bae();
0000752e      
00007534      if (result)
00007534      {
00007538          result = (uint32_t)*(uint8_t*)0x20b7e8;
00007538          
0000753c          if (!result)
00007542              return sub_729a(3, 0);
00007534      }
00007534      
00007546      return result;
0000752c  }


00007548    uint32_t sub_7548()

00007548  {
0000754a      uint32_t result = (uint32_t)*(uint8_t*)0x20b7e8;
0000754a      
0000754e      if (!result)
00007556          return result;
00007556      
00007554      /* tailcall */
00007554      return sub_729a(0, 0x927c0);
00007548  }


00007558    uint32_t sub_7558()

00007558  {
0000755a      uint32_t result = (uint32_t)*(uint8_t*)0x20b7e8;
0000755a      
0000755e      if (result == 2)
00007566          return result;
00007566      
00007564      /* tailcall */
00007564      return sub_729a(2, 0);
00007558  }


00007568    uint32_t sub_7568()

00007568  {
0000756a      uint32_t result = sub_733a();
0000756a      
00007570      if (!result)
00007570      {
00007574          result = (uint32_t)*(uint8_t*)0x20b7ea;
00007574          
00007578          if (result)
00007578          {
0000757c              sub_3730(0x20b7e4);
00007580              result = 0;
00007582              *(uint8_t*)0x20b7ea = 0;
00007578          }
00007570      }
00007570      
00007584      return result;
00007568  }

00007586                    00 00                                                                                ..

00007588  int32_t data_7588 = 0x20b7e8
0000758c  int32_t data_758c = 0x2099dc
00007590  int32_t data_7590 = 0x83e12c
00007594  int32_t data_7594 = 0x2087cc
00007598  int32_t data_7598 = 0x82b2e5
0000759c  int32_t data_759c = 0xa6c5
000075a0  int32_t data_75a0 = 0x1388
000075a4  int32_t data_75a4 = 0x82b30b
000075a8  int32_t data_75a8 = 0x2710
000075ac  int32_t data_75ac = 0x927c0

000075b0    int32_t sub_75b0()

000075b0  {
000075b8      if (!*(uint32_t*)0x20b7f4)
000075c6          return 0x20b7f0;
000075c6      
000075bc      *(uint8_t*)0x20b7f0 = 0;
000075c2      return 0xff7ef6e4(0x20b7f4, 0x1388);
000075b0  }


000075c8    uint32_t sub_75c8(int32_t arg1, int32_t arg2, int32_t arg3, int32_t arg4)

000075c8  {
000075c8      int32_t var_c = arg4;
000075c8      int32_t var_10 = arg3;
000075c8      
000075d0      if (!(uint32_t)*(uint8_t*)0x20b7f0)
000075d0      {
000075fe          (uint16_t)var_10 = 0xe;
00007602          *(uint16_t*)((char*)var_10)[2] = 1;
00007606          sub_8e0(&var_10, &var_10, arg3, arg4);
0000760e          return sub_75b0();
000075d0      }
000075d0      
000075e6      uint32_t result = (uint32_t)*(uint8_t*)0x2099f0 << 8 | (uint32_t)*(uint8_t*)0x2099ef;
000075e6      
000075ec      if (result
000075ec              * (((uint32_t)*(uint8_t*)0x2099f2 << 8 | (uint32_t)*(uint8_t*)0x2099f1) + 1) >= 0x64)
000075f8          return result;
000075f8      
000075f4      return 0xff7e1af8(0x23103002, 0x880116c, 0);
000075c8  }

00007610                                                  1c b5 46 49 00 22 28 31 45 48 da f7 6d da 0e 20                  ..FI."(1EH..m.. 
00007620  69 46 08 80 02 20 48 80 68 46 f9 f7 59 f9 1c bd                                                  iF... H.hF..Y...

00007630    int32_t sub_7630() __pure

00007630  {
00007630      return;
00007630  }

00007632                                                        7c b5 3f 48 01 90 39 48 00 24 3e 4b 01 22                    |.?H..9H.$>K."
00007640  3e a1 00 94 00 1d e8 f7 1d d8 35 4d 38 4e 68 68 b6 1e 00 28 05 d1 35 49 00 22 54 31 30 46 da f7  >.........5M8Nhh...(..5I."T10F..
00007660  4b da 3d 48 01 90 2e 48 2e 4b 01 22 33 a1 00 94 08 30 e8 f7 07 d8 a8 68 00 28 05 d1 2b 49 00 22  K.=H...H.K."3....0.....h.(..+I."
00007680  80 31 30 46 da f7 38 da 7c bd                                                                    .10F..8.|.

0000768a    int32_t sub_768a()

0000768a  {
0000768e      int32_t result = *(uint32_t*)0x20b7f8;
0000768e      
00007692      if (!result)
0000769e          return result;
0000769e      
0000769a      return 0xff7ef6e4(0x20b7f8, 0x4e20);
0000768a  }


000076a0    int32_t sub_76a0()

000076a0  {
000076a8      if (!*(uint32_t*)0x20b7f4)
000076b4          return 0x20b7f0;
000076b4      
000076ac      *(uint8_t*)0x20b7f0 = 0;
000076b0      return 0xff7ef70c(0x20b7f4, 0);
000076a0  }


000076b6    int32_t sub_76b6(int32_t arg1, uint32_t arg2, int32_t arg3, int32_t arg4)

000076b6  {
000076b6      int32_t var_18 = arg4;
000076b6      uint32_t var_20 = arg2;
000076be      char* r0;
000076be      int32_t r3;
000076be      r0 = sub_11e70(arg1, arg2, arg3, arg4);
000076be      
000076ca      if (r0 && (uint32_t)*(uint8_t*)r0)
000076ca      {
000076d0          if ((uint32_t)r0[2] << 0x1c >= 0)  /* "_250117" */
000076d0          {
00007702              sub_11aae(arg1, &var_20, &var_18, r3);
00007702              
0000770c              if (!(uint32_t)(uint8_t)var_18)
0000770c              {
00007714                  0xff81b898(arg2, &var_20, 6);
00007718                  return 1;
0000770c              }
000076d0          }
000076d0          else
000076d0          {
000076da              int32_t r0_4 = 0xff7e1e2e(0x23300000);
000076e4              var_20 = (uint32_t)r0[0x16];  /* ".00.33_250117" */
000076ec              0xff7e1af8(0x23103002, 0x8801214, 2, r0_4, var_20, arg3);
000076ec              
000076f4              if (!(uint32_t)r0[0x16])  /* ".00.33_250117" */
000076f4              {
00007714                  0xff81b898(arg2, &r0[0x10], 6);  /* "RY02_3.00.33_250117" */
00007718                  return 1;
000076f4              }
000076d0          }
000076ca      }
000076ca      
0000771c      return 0;
000076b6  }

0000771e                                                                                            00 00                                ..

00007720  int32_t data_7720 = 0x20b7f0
00007724  int32_t data_7724 = 0x1388
00007728  int32_t data_7728 = 0x2099dc
0000772c  int32_t data_772c = 0x880116c
00007730  int32_t data_7730 = 0x23103002

00007734                                                              79 b5 82 00                                              y...

00007738  void* data_7738 = data_4e20

0000773c                                                                                      63 6f 6e 20                              con 
00007740  70 61 72 61 6d 74 65 72 20 75 70 64 61 74 65 20 74 69 6d 65 72 00 00 00 c1 b5 82 00              paramter update timer.......

0000775c  int32_t data_775c = 0x23300000

00007760    void sub_7760(int32_t arg1)

00007760  {
00007764      uint32_t r1 = (uint32_t)*(uint8_t*)0x20b7fc;
0000776a      *(uint32_t*)(0x20b800 + (r1 << 2)) = arg1;
0000776e      *(uint8_t*)0x20b7fc = (uint8_t)r1 + 1;
00007760  }


00007772    uint32_t sub_7772()

00007772  {
00007776      uint32_t r4 = 0;
0000778e      uint32_t result;
0000778e      
0000778e      while (true)
0000778e      {
0000778e          result = (uint32_t)*(uint8_t*)0x20b7fc;
0000778e          
00007792          if (r4 >= result)
00007792              break;
00007792          
00007782          int32_t r0_3 = **(uint32_t**)(0x20b800 + (r4 << 2));
00007782          
00007786          if (r0_3)
00007788              r0_3();
00007788          
0000778c          r4 = (uint32_t)((uint8_t)r4 + 1);
0000778e      }
0000778e      
00007794      return result;
00007772  }


00007796    uint32_t sub_7796()

00007796  {
0000779a      uint32_t r4 = 0;
000077b2      uint32_t result;
000077b2      
000077b2      while (true)
000077b2      {
000077b2          result = (uint32_t)*(uint8_t*)0x20b7fc;
000077b2          
000077b6          if (r4 >= result)
000077b6              break;
000077b6          
000077a6          int32_t r0_3 = *(uint32_t*)(*(uint32_t*)(0x20b800 + (r4 << 2)) + 4);
000077a6          
000077aa          if (r0_3)
000077ac              r0_3();
000077ac          
000077b0          r4 = (uint32_t)((uint8_t)r4 + 1);
000077b2      }
000077b2      
000077b8      return result;
00007796  }


000077ba    uint32_t sub_77ba()

000077ba  {
000077be      uint32_t r4 = 0;
000077d6      uint32_t result;
000077d6      
000077d6      while (true)
000077d6      {
000077d6          result = (uint32_t)*(uint8_t*)0x20b7fc;
000077d6          
000077da          if (r4 >= result)
000077da              break;
000077da          
000077ca          int32_t r0_3 = *(uint32_t*)(*(uint32_t*)(0x20b800 + (r4 << 2)) + 8);
000077ca          
000077ce          if (r0_3)
000077d0              r0_3();
000077d0          
000077d4          r4 = (uint32_t)((uint8_t)r4 + 1);
000077d6      }
000077d6      
000077dc      return result;
000077ba  }


000077de    int32_t sub_77de()

000077de  {
000077e6      if (sub_1b6c() == 4)
000077f2          return 0;
000077f2      
0000780e      for (uint32_t i = 0; i < (uint32_t)*(uint8_t*)0x20b7fc; 
0000780e          i = (uint32_t)((uint8_t)i + 1))
0000780e      {
000077fa          int32_t r0_3 = *(uint32_t*)(*(uint32_t*)(0x20b800 + (i << 2)) + 0xc);
000077fa          
000077fe          if (r0_3)
000077fe          {
00007800              int32_t result = r0_3();
00007800              
00007804              if (!result)
000077f4                  return result;
000077fe          }
0000780e      }
0000780e      
00007812      return 1;
000077de  }


00007814    uint32_t sub_7814()

00007814  {
00007814      int32_t r3;
00007814      int32_t var_18 = r3;
0000781a      *(uint32_t*)0xe000e180 = 1;
0000781e      uint32_t r4 = 0;
0000781e      
0000783c      while (true)
0000783c      {
0000783c          uint32_t result = (uint32_t)*(uint8_t*)0x20b7fc;
0000783c          
00007840          if (r4 >= result)
00007840          {
00007842              *(uint32_t*)0xe000e280 = 1;
00007844              return result;
00007840          }
00007840          
0000782a          int32_t r0_3 = *(uint32_t*)(*(uint32_t*)(0x20b800 + (r4 << 2)) + 0x10);
0000782a              /* "RY02_3.00.33_250117" */
0000782a          
0000782e          if (r0_3)
0000782e          {
00007830              result = r0_3();
00007830              
00007834              if (result)
00007834              {
00007842                  *(uint32_t*)0xe000e280 = 1;
00007844                  return result;
00007834              }
0000782e          }
0000782e          
00007838          r4 = (uint32_t)((uint8_t)r4 + 1);
0000783c      }
00007814  }


00007846    uint32_t sub_7846()

00007846  {
00007848      sub_b328();
0000784c      sub_2804();
00007850      sub_9552();
00007860      return sub_7772();
00007846  }

00007862        00 00                                                                                        ..

00007864  int32_t data_7864 = 0x20b7fc
00007868  int32_t data_7868 = -0x1fff1e80
0000786c  int32_t data_786c = -0x1fff1d80

00007870    uint32_t sub_7870()

00007870  {
00007874      return (uint32_t)*(uint8_t*)0x208469;
00007870  }


00007876    void sub_7876(char arg1)

00007876  {
00007878      *(uint8_t*)0x208469 = arg1;
00007876  }


0000787c    uint32_t sub_787c()

0000787c  {
00007880      return (uint32_t)*(uint8_t*)0x20b840;
0000787c  }


00007882    void sub_7882(char arg1)

00007882  {
00007884      *(uint8_t*)0x20b840 = arg1;
00007882  }


00007888    void sub_7888(char arg1, int32_t arg2)

00007888  {
0000788c      *(uint8_t*)0x20b848 = arg1;
0000788e      *(uint32_t*)0x20b84c = arg2;
00007888  }


00007892    int32_t sub_7892(int32_t arg1)

00007892  {
00007892      int32_t r3;
00007892      int32_t var_18 = r3;
0000789a      *(uint8_t*)0x208469 = 0;
0000789e      sub_7888(0, 0);
000078a8      0xff81b968(0x20b850, 0xbc);  /* "####" */
000078b6      *(uint8_t*)0x20b850 = 2;
000078ba      *(uint8_t*)0x20b892 = (char)arg1;
000078ba      
000078c6      if (arg1 == 4 || arg1 == 7 || arg1 == 8)
000078cc          *(uint8_t*)0x20b880 = 1;
000078cc      
000078d4      *(uint32_t*)0x20b88c = sub_18a0() + 3;
000078d8      *(uint16_t*)0x20b890 = 0x1951;
000078da      *(uint16_t*)0x20b898 = 1;
000078e0      *(uint32_t*)0x20b858 = sub_9178();
000078e6      *(uint32_t*)0x20b86c = sub_9180();
000078ea      *(uint16_t*)0x20b89e = 0;
000078f4      0xff7ef6e4(0x20b844, 0x3e8);
000078fa      char r0_4;
000078fa      
000078fa      if (arg1 == 8)
0000793c          r0_4 = 1;
000078fa      else if (arg1 > 8)
000078fc      {
0000790e          if (arg1 == 9)
00007940              r0_4 = 5;
0000790e          else if (arg1 == 0x16)  /* ".00.33_250117" */
00007948              r0_4 = 6;
00007912          else if (arg1 == 0x18)  /* "0.33_250117" */
00007944              r0_4 = 7;
00007916          else
00007918              r0_4 = 0xa;
000078fc      }
000078fc      else if (arg1 == 3)
00007938          r0_4 = 2;
00007900      else if (arg1 == 4)
00007930          r0_4 = 4;
00007904      else if (arg1 != 7)
00007918          r0_4 = 0xa;
00007908      else
00007934          r0_4 = 3;
00007934      
00007920      int32_t r1_1;
00007920      
00007920      if (!(uint32_t)*(uint8_t*)0x2086e4)
0000794c          r1_1 = 0x46;
00007920      else
00007922          r1_1 = 0x4b;
00007922      
00007924      int32_t r1_2;
00007924      int32_t r2;
00007924      r1_2 = sub_14ca8(r0_4, r1_1);
0000792e      return sub_b55a(1, r1_2, r2);
00007892  }


00007950    int32_t sub_7950()

00007950  {
0000795a      int32_t result = (int32_t)*(uint16_t*)0x20b89e;
0000795a      
0000795e      if (result >= 0x3c)
0000795e      {
00007962          result = (uint32_t)*(uint8_t*)0x208852;
00007962          
00007966          if (result == 1)
00007966          {
00007972              if (*(uint32_t*)0x20b88c < 0x25980600)
00007984                  *(uint32_t*)0x20b88c = sub_18a0() - (uint32_t)*(uint16_t*)0x20b89a
00007984                      - (int32_t)*(uint16_t*)0x20b89e + 3;
00007984              
0000798e              if ((uint32_t)*(uint8_t*)0x20b880)
0000798e              {
00007992                  int32_t r1_3 = (int32_t)*(uint16_t*)0x20b89e;
0000799c                  *(uint16_t*)0x20b8a2 = sub_12b3e((uint32_t)*(uint16_t*)0x20b8a0, r1_3);
000079aa                  *(uint8_t*)0x20b896 = sub_12b2a(0x3c * *(uint32_t*)0x20b8b8, r1_3);
0000798e              }
0000798e              
000079ac              int32_t r1_5 = *(uint32_t*)0x20b87c;
000079ac              
000079b2              if (!r1_5)
000079da                  *(uint8_t*)0x20b893 = 0;
000079b2              else
000079ba                  *(uint8_t*)0x20b893 = sub_12b2a(*(uint32_t*)0x20b878, r1_5);
000079ba              
000079bc              *(uint8_t*)0x20b894 = 0;
000079c0              *(uint8_t*)0x20b895 = 0;
000079c0              
000079c6              if ((uint32_t)*(uint8_t*)0x20b841)
000079c6              {
000079d2                  int32_t r0_16 = sub_12b3e(
000079d2                      (int32_t)*(uint16_t*)0x20b89e - (uint32_t)*(uint16_t*)0x20b89c, 
000079d2                      (uint32_t)*(uint16_t*)0x20b898);
000079d2                  
000079fe                  for (int32_t i = 0; i < r0_16; i += 1)
000079fe                  {
000079e2                      uint32_t r2_1 = (uint32_t)*(uint8_t*)0x20b894;
000079e4                      uint32_t r3_1 = (uint32_t)*(uint8_t*)(i + 0x20b8bc);
000079e4                      
000079ec                      if (r2_1 > r3_1 || !r2_1)
000079ee                          *(uint8_t*)0x20b894 = (char)r3_1;
000079ee                      
000079f2                      uint32_t r2_2 = (uint32_t)*(uint8_t*)(i + 0x20b8bc);
000079f2                      
000079f6                      if ((uint32_t)*(uint8_t*)0x20b895 < r2_2)
000079f8                          *(uint8_t*)0x20b895 = (char)r2_2;
000079fe                  }
000079c6              }
000079c6              
00007a02              return sub_803a();
00007966          }
0000795e      }
0000795e      
00007a06      return result;
00007950  }


00007a08    int32_t sub_7a08()

00007a08  {
00007a10      int32_t r1;
00007a10      int32_t r2;
00007a10      r1 = 0xff7ef70c(0x20b844);
00007a16      sub_b540(1, r1, r2);
00007a1c      sub_7950();
00007a24      sub_7888(0, 0);
00007a2c      sub_14ca8(0, 0);
00007a36      *(uint8_t*)0x20b850 = 0;
00007a38      return 0;
00007a08  }


00007a3a    int32_t sub_7a3a()

00007a3a  {
00007a3c      /* tailcall */
00007a3c      return sub_7a08();
00007a3a  }


00007a3e    int32_t sub_7a3e(int32_t arg1)

00007a3e  {
00007a4a      if ((uint32_t)*(uint8_t*)0x20b850)
00007a4e          sub_7a08();
00007a4e      
00007a54      sub_7892(arg1);
00007a5c      *(uint8_t*)0x208468 = (char)arg1;
00007a60      *(uint8_t*)0x20b841 = 0;
00007a62      return 0;
00007a3e  }


00007a64    int32_t sub_7a64()

00007a64  {
00007a6a      *(uint8_t*)0x20b850 = 1;
00007a6c      return 1;
00007a64  }


00007a6e    int32_t sub_7a6e()

00007a6e  {
00007a74      *(uint8_t*)0x20b850 = 1;
00007a76      return 1;
00007a6e  }


00007a78    int32_t sub_7a78()

00007a78  {
00007a80      *(uint8_t*)0x20b850 = 2;
00007a86      *(uint32_t*)0x20b858 = sub_9178();
00007a88      int32_t result = sub_9180();
00007a8c      *(uint32_t*)0x20b86c = result;
00007a8e      return result;
00007a78  }


00007a90    int32_t j_sub_7a78()

00007a90  {
00007a90      /* tailcall */
00007a90      return sub_7a78();
00007a90  }


00007a92    void* sub_7a92(int32_t* arg1)

00007a92  {
00007a96      int32_t r2 = *(uint32_t*)0x20b84c;
00007a98      *(uint32_t*)arg1 = *(uint32_t*)0x20b848;
00007a98      arg1[1] = r2;
00007a9a      return &arg1[2];
00007a92  }


00007a9c    int32_t sub_7a9c()

00007a9c  {
00007aac      if ((uint32_t)*(uint8_t*)0x20b841)
00007aac          goto label_7ac6;
00007aac      
00007ab4      int32_t result;
00007ab4      
00007ab4      if (sub_cd0c() == 2)
00007ab4      {
00007ac0          *(uint8_t*)0x20b841 = 1;
00007ac4          *(uint16_t*)0x20b89c = *(uint16_t*)0x20b89e;
00007ac6      label_7ac6:
00007ac6          uint32_t r0_4 = sub_cd0c();
00007ace          uint32_t r5_1;
00007ace          
00007ace          if (r0_4 == 2)
00007ace          {
00007ae6              r5_1 = sub_cd12();
00007ae8              *(uint32_t*)0x20b864 = 0;
00007ace          }
00007ace          else if (r0_4 == 3)
00007ad2          {
00007adc              r5_1 = 0;
00007ade              *(uint32_t*)0x20b864 += 1;
00007ad2          }
00007ad2          else
00007ad2          {
00007ad4              r5_1 = 0;
00007ae8              *(uint32_t*)0x20b864 = 0;
00007ad2          }
00007ad2          
00007af0          if (r5_1 - 0x28 <= 0xb4)
00007af0          {
00007af6              *(uint32_t*)0x20b878 += r5_1;
00007afc              *(uint32_t*)0x20b87c += 1;
00007b00              sub_14d44(r5_1);
00007af0          }
00007af0          
00007b0e          int32_t r1_3;
00007b0e          result = sub_12b3e(
00007b0e              (int32_t)*(uint16_t*)0x20b89e - (uint32_t)*(uint16_t*)0x20b89c, 
00007b0e              (uint32_t)*(uint16_t*)0x20b898);
00007b0e          
00007b14          if (!r1_3)
00007b14          {
00007b1c              *(uint8_t*)(*(uint32_t*)0x20b854 + 0x20b8bc) = (char)r5_1;
00007b20              result = *(uint32_t*)0x20b854 + 1;
00007b22              *(uint32_t*)0x20b854 = result;
00007b22              
00007b26              if (result >= 0x50)
00007b26              {
00007b2c                  *(uint16_t*)0x20b898 <<= 1;
00007b30                  *(uint32_t*)0x20b854 = 0x28;
00007b32                  int32_t r0_21 = 0;
00007b48                  int32_t r2_3;
00007b48                  
00007b48                  do
00007b48                  {
00007b40                      *(uint8_t*)(r0_21 + 0x20b8bc) = *(uint8_t*)((r0_21 << 1) + 0x20b8bc);
00007b42                      r2_3 = *(uint32_t*)0x20b854;
00007b44                      r0_21 += 1;
00007b48                  } while (r2_3 > r0_21);
00007b48                  
00007b52                  return 0xff81b964(r2_3 + 0x20b8bc, 0x28);
00007b26              }
00007b14          }
00007ab4      }
00007ab4      else
00007ab4      {
00007ab8          result = *(uint32_t*)0x20b864 + 1;
00007aba          *(uint32_t*)0x20b864 = result;
00007ab4      }
00007ab4      
00007abc      return result;
00007a9c  }


00007b54    int32_t sub_7b54()

00007b54  {
00007b64      int32_t result;
00007b64      
00007b64      if ((uint32_t)*(uint8_t*)0x20b850 == 1)
00007b64      {
00007bcc          result = (uint32_t)*(uint16_t*)0x20b89a + 1;
00007bce          *(uint16_t*)0x20b89a = (int16_t)result;
00007b64      }
00007b64      else
00007b64      {
00007b6a          result = (int32_t)(*(uint16_t*)0x20b89e + 1);
00007b6c          *(uint16_t*)0x20b89e = (int16_t)result;
00007b6c          
00007b70          if (result > 0)
00007b70          {
00007b72              uint32_t r0_3 = sub_14a0c();
00007b78              uint32_t r0_4 = sub_149fc();
00007b7e              sub_91d2(r0_4);
00007b84              sub_91de(r0_3);
00007b84              
00007b90              if ((uint32_t)*(uint8_t*)0x20b880)
00007b90              {
00007b98                  int32_t r5_1 = sub_9178() - *(uint32_t*)0x20b858;
00007b9e                  *(uint32_t*)0x20b858 = sub_9178();
00007b9e                  
00007ba2                  if (r5_1 < 0)
00007ba4                      r5_1 = 0;
00007ba4                  
00007bac                  *(uint32_t*)0x20b8b8 += r5_1;
00007bb0                  int32_t r5_2 = *(uint32_t*)0x20b85c + r5_1;
00007bb2                  *(uint32_t*)0x20b85c = r5_2;
00007bb6                  int32_t r0_13 = *(uint32_t*)0x20b860 + r0_4;
00007bb8                  *(uint32_t*)0x20b860 = r0_13;
00007bb8                  
00007bc6                  if (!sub_12b3e((int32_t)*(uint16_t*)0x20b89e, 0xa))
00007bc6                  {
00007bd6                      if (!r5_2)
00007bd6                      {
00007c12                          *(uint32_t*)0x20b870 = 0;
00007c14                          *(uint16_t*)0x20b874 = 0;
00007bd6                      }
00007bd6                      else
00007bd6                      {
00007be0                          if (!*(uint32_t*)0x20b870 && r5_2 > 0xf)
00007be4                              *(uint32_t*)0x20b85c = r5_2 - 0xa;
00007be4                          
00007bee                          int32_t r0_19 = sub_12b2a(0x3c * *(uint32_t*)0x20b85c, 0xa);
00007bf4                          *(uint32_t*)0x20b85c = 0;
00007bf6                          *(uint32_t*)0x20b870 = r0_19;
00007c00                          uint32_t r0_22 = (uint32_t)sub_12b2a(r0_13, 0xa);
00007c02                          *(uint16_t*)0x20b874 = (int16_t)r0_22;
00007c02                          
00007c08                          if (r0_22 > (uint32_t)*(uint16_t*)0x20b8a4)
00007c0a                              *(uint16_t*)0x20b8a4 = (int16_t)r0_22;
00007c0a                          
00007c0c                          *(uint32_t*)0x20b860 = 0;
00007bd6                      }
00007bd6                      
00007c16                      sub_377e();
00007bc6                  }
00007bc6                  
00007c1e                  uint32_t r0_25 = (uint32_t)(*(uint16_t*)0x20b888 + (uint16_t)r0_4);
00007c20                  *(uint16_t*)0x20b888 = (int16_t)r0_25;
00007c20                  
00007c24                  if (r0_25 >= 0x64)
00007c24                  {
00007c28                      int16_t r0_26;
00007c28                      int16_t r1_4;
00007c28                      r0_26 = sub_12b2a(r0_25, 0x64);
00007c30                      *(uint16_t*)0x20b8a0 += r0_26;
00007c32                      *(uint16_t*)0x20b888 = r1_4;
00007c24                  }
00007b90              }
00007b90              
00007c34              sub_9180();
00007c3c              *(uint32_t*)0x20b86c = sub_9180();
00007c44              *(uint32_t*)0x20b8a8 += r0_3;
00007c46              sub_7a9c();
00007c46              
00007c58              if ((int32_t)*(uint16_t*)0x20b89e >= 0x4d58 || *(uint32_t*)0x20b864 >= 0x78)
00007c5c                  sub_7a08();
00007c5c              
00007c62              char var_28;
00007c62              sub_7a92(&var_28);
00007c66              result = &var_28;
00007c68              uint32_t r1_6 = (uint32_t)var_28;
00007c68              
00007c8a              if (r1_6)
00007c8a              {
00007c8e                  result = (uint32_t)*(uint8_t*)0x208469;
00007c8e                  
00007c92                  if (!result)
00007c92                  {
00007c96                      if (r1_6 == 1)
00007cd8                          result = sub_12b3e((int32_t)*(uint16_t*)0x20b89e, 0x3c);
00007c96                      else if (r1_6 == 2)
00007c9e                      {
00007caa                          bool cond:0_1 = !sub_166c();
00007cac                          uint32_t r0_36 = (uint32_t)*(uint16_t*)0x20b8a0;
00007cac                          
00007cae                          if (cond:0_1)
00007ccc                              result = sub_12b2a(r0_36, 0x3e8);
00007cae                          else
00007cae                          {
00007cb0                              int32_t r0_37;
00007cb0                              int32_t r1_7;
00007cb0                              r0_37 = j_sub_134d8(r0_36);
00007cb8                              int32_t r0_38;
00007cb8                              int32_t r1_8;
00007cb8                              r0_38 = sub_13530(r0_37, r1_7, 0xdad5a40c, 0x3fe3e245);
00007cc0                              int32_t r0_39;
00007cc0                              int32_t r1_9;
00007cc0                              r0_39 = sub_12fdc(r0_38, r1_8, 0, 0x408f4000);
00007cc4                              result = sub_13424(r0_39, r1_9);
00007cae                          }
00007c9e                      }
00007c9e                      else if (r1_6 == 3)
00007ccc                          result = sub_12b2a(*(uint32_t*)0x20b8a8, 0x3e8);
00007ccc                      
00007ce0                      int32_t var_24;
00007ce0                      
00007ce0                      if (var_24 <= result)
00007ce0                      {
00007ce4                          result = 1;
00007ce6                          *(uint8_t*)0x208469 = 1;
00007ce0                      }
00007c92                  }
00007c8a              }
00007b70          }
00007b64      }
00007b64      
00007bd2      return result;
00007b54  }

00007c6c  int32_t data_7c6c = 0x208468
00007c70  int32_t data_7c70 = 0x20b840
00007c74  int32_t data_7c74 = 0x1951
00007c78  int32_t data_7c78 = 0x2086e4
00007c7c  int32_t data_7c7c = 0x208850
00007c80  int32_t data_7c80 = 0x25980600

00007c84    uint32_t sub_7c84(uint32_t arg1, int32_t arg2, void* arg3 @ r4, void* arg4 @ r6, int32_t arg5, int32_t arg6, int32_t arg7, int32_t arg8, int32_t arg9)

00007c84  {
00007c86      uint32_t result = arg1;
00007c86      
00007c8a      if (arg2)
00007c8a      {
00007c8e          result = (uint32_t)*(uint8_t*)0x208469;
00007c8e          
00007c92          if (!result)
00007c92          {
00007c96              if (arg2 == 1)
00007cd8                  result = sub_12b3e((int32_t)*(uint16_t*)((char*)arg3 + 0xe), 0x3c);
00007c96              else if (arg2 == 2)
00007c9e              {
00007caa                  bool cond:0_1 = !sub_166c();
00007cac                  uint32_t r0_1 = (uint32_t)*(uint16_t*)((char*)arg3 + 0x10);
00007cac                      /* "RY02_3.00.33_250117" */
00007cac                  
00007cae                  if (cond:0_1)
00007ccc                      result = sub_12b2a(r0_1, 0x3e8);
00007cae                  else
00007cae                  {
00007cb0                      int32_t r0_2;
00007cb0                      int32_t r1;
00007cb0                      r0_2 = j_sub_134d8(r0_1);
00007cb8                      int32_t r0_3;
00007cb8                      int32_t r1_1;
00007cb8                      r0_3 = sub_13530(r0_2, r1, 0xdad5a40c, 0x3fe3e245);
00007cc0                      int32_t r0_4;
00007cc0                      int32_t r1_2;
00007cc0                      r0_4 = sub_12fdc(r0_3, r1_1, 0, 0x408f4000);
00007cc4                      result = sub_13424(r0_4, r1_2);
00007cae                  }
00007c9e              }
00007c9e              else if (arg2 == 3)
00007ccc                  result = sub_12b2a(*(uint32_t*)((char*)arg4 + 0x58), 0x3e8);
00007ccc              
00007ce0              if (arg5 <= result)
00007ce0              {
00007ce4                  result = 1;
00007ce6                  *(uint8_t*)0x208469 = 1;
00007ce0              }
00007c92          }
00007c8a      }
00007c8a      
00007bd2      return result;
00007c84  }


00007cee    int32_t j_sub_7b54()

00007cee  {
00007cee      /* tailcall */
00007cee      return sub_7b54();
00007cee  }


00007cf0    uint32_t sub_7cf0()

00007cf0  {
00007cf4      return (uint32_t)*(uint8_t*)0x208468;
00007cf0  }


00007cf6    void sub_7cf6(char arg1)

00007cf6  {
00007cf8      *(uint8_t*)0x208468 = arg1;
00007cf6  }


00007cfc    int32_t sub_7cfc()

00007cfc  {
00007cfc      int32_t r3;
00007cfc      int32_t var_c = r3;
00007cfc      int32_t r2;
00007cfc      int32_t var_10 = r2;
00007cfe      sub_8026();
00007d18      return 0xff7ef684(0x20b844, "sports_mode_timer", 1, 0x7d0, 1, 0x82bc9f);
00007d18          /* "17 10:58:10 2022" */
00007cfc  }

00007d1a                                                                                00 00                                        ..

00007d1c  int32_t data_7d1c = 0x208468
00007d20  int32_t data_7d20 = -0x252a5bf4
00007d24  int32_t data_7d24 = 0x3fe3e245
00007d28  int32_t data_7d28 = 0x408f4000
00007d2c  int32_t data_7d2c = 0x82bc9f

00007d30  data_7d30:
00007d30                                                  73 70 6f 72 74 73 5f 6d 6f 64 65 5f 74 69 6d 65                  sports_mode_time
00007d40  72 00 00 00                                                                                      r...

00007d44  int32_t data_7d44 = 0x20b844

00007d48    int32_t sub_7d48(uint32_t arg1, char* arg2)

00007d48  {
00007d54      *(uint8_t*)arg2 = 2;
00007d58      arg2[1] = (char)arg1;
00007d5c      int32_t r0_1;
00007d5c      int32_t r2_2;
00007d5c      int32_t r3_1;
00007d5c      r0_1 = sub_13f18(&arg2[2], &arg2[1], arg1, arg1);
00007d9c      int32_t r1_2;
00007d9c      int32_t r2_3;
00007d9c      int32_t r3_3;
00007d9c      r1_2 = 0xff81b898(r0_1, r2_2, 4, r3_1 & (r2_2 - arg2 + 0x33));  /* "2_V3.0" */
00007dea      /* tailcall */
00007dea      return sub_7d88(*(uint8_t*)arg2 + 4, arg2, r1_2, r2_3, r3_3);
00007d48  }


00007d80    int32_t sub_7d80(char* arg1, void* arg2 @ r5)

00007d80  {
00007d82      *(uint8_t*)arg1 = *(uint8_t*)((char*)arg2 + 0x12);  /* "02_3.00.33_250117" */
00007d86      int32_t r4;
00007d86      /* tailcall */
00007d86      return sub_7df2(arg1, *(uint8_t*)((char*)arg2 + 0x13), r4);  /* "2_3.00.33_250117" */
00007d80  }


00007d88    uint32_t sub_7d88(char arg1, char* arg2 @ r4, int32_t arg3, int32_t arg4, int32_t arg5)

00007d88  {
00007d88      *(uint8_t*)arg2 = arg1;
00007d8c      return (uint32_t)*(uint8_t*)arg2;
00007d88  }


00007d8e    int32_t sub_7d8e(char* arg1, void* arg2 @ r5)

00007d8e  {
00007d90      *(uint8_t*)arg1 = *(uint8_t*)((char*)arg2 + 0x14);  /* "_3.00.33_250117" */
00007d94      int32_t r4;
00007d94      /* tailcall */
00007d94      return sub_7df2(arg1, *(uint8_t*)((char*)arg2 + 0x15), r4);  /* "3.00.33_250117" */
00007d8e  }

00007d96                                                                    29 46 04 22 1c 31                                    )F.".1

00007da2    int32_t sub_7da2(char* arg1, void* arg2 @ r5)

00007da2  {
00007da4      *(uint8_t*)arg1 = *(uint8_t*)((char*)arg2 + 0x16);  /* ".00.33_250117" */
00007da8      int32_t r4;
00007da8      /* tailcall */
00007da8      return sub_7df2(arg1, *(uint8_t*)((char*)arg2 + 0x17), r4);  /* "00.33_250117" */
00007da2  }


00007daa    int32_t sub_7daa(char* arg1, void* arg2 @ r5)

00007daa  {
00007dac      *(uint8_t*)arg1 = *(uint8_t*)((char*)arg2 + 0x18);  /* "0.33_250117" */
00007db0      int32_t r4;
00007db0      /* tailcall */
00007db0      return sub_7df2(arg1, *(uint8_t*)((char*)arg2 + 0x19), r4);  /* ".33_250117" */
00007daa  }


00007db2    int32_t sub_7db2(char* arg1, char* arg2 @ r4, void* arg3 @ r5)

00007db2  {
00007dd8      *(uint8_t*)arg1 = *(uint8_t*)((char*)arg3 + 7);
00007dde      /* tailcall */
00007dde      return sub_7d88((uint32_t)*(uint8_t*)arg2 + 1, arg2);
00007db2  }

00007db6                                                                    29 7a 0e e0 69 7a 0c e0 04 22                        )z..iz..."
00007dc0  29 46 20 31 ea e7 04 22 29 46 24 31 e6 e7 04 22 29 46 28 31 e2 e7                                )F 1...")F$1...")F(1..

00007dd6    int32_t sub_7dd6(char* arg1, char* arg2 @ r4, void* arg3 @ r5)

00007dd6  {
00007dd8      *(uint8_t*)arg1 = *(uint8_t*)((char*)arg3 + 0xa);
00007dde      /* tailcall */
00007dde      return sub_7d88((uint32_t)*(uint8_t*)arg2 + 1, arg2);
00007dd6  }

00007de0  04 21 13 f4 bf f5                                                                                .!....

00007dec    int32_t sub_7dec(char* arg1, void* arg2 @ r5)

00007dec  {
00007dee      *(uint8_t*)arg1 = *(uint8_t*)((char*)arg2 + 0xe);
00007df0      int32_t r4;
00007df0      /* tailcall */
00007df0      return sub_7df2(arg1, *(uint8_t*)((char*)arg2 + 0xf), r4);
00007dec  }


00007df2    int32_t sub_7df2(void* arg1, char arg2, char* arg3 @ r4)

00007df2  {
00007df2      *(uint8_t*)((char*)arg1 + 1) = arg2;
00007df8      /* tailcall */
00007df8      return sub_7d88((uint32_t)*(uint8_t*)arg3 + 2, arg3);
00007df2  }

00007dfa                                                                                04 22 29 46 2c 31                            .")F,1
00007e00  cc e7                                                                                            ..

00007e02    uint32_t sub_7e02(void* arg1, char* arg2)

00007e02  {
00007e0a      *(uint8_t*)arg2 = 2;
00007e10      void* r5 = &arg2[2];
00007e12      arg2[1] = *(uint8_t*)((char*)arg1 + 6);
00007e1a      int32_t var_28;
00007e1a      __builtin_memcpy(&var_28, 
00007e1a          "\x01\x02\x03\x04\x05\x06\x07\x08\x09\x0d\x13\x00\x01\x02\x04\x07\x08\x09\x00\x00", 
00007e1a          0x14);  /* "_3.00.33_250117" */
00007e22      uint32_t r0 = (uint32_t)*(uint8_t*)((char*)arg1 + 6);
00007e2e      char r0_3;
00007e2e      
00007e2e      if (r0 == 4 || r0 == 7 || r0 == 8)
00007e2e      {
00007e6c          for (int32_t i = 0; i < 0xb; )
00007e6c          {
00007e5c              int32_t r0_6;
00007e5c              char* r4_2;
00007e5c              r0_6 = sub_7d48((uint32_t)*(uint8_t*)(&var_28 + i), r5);
00007e62              r5 += r0_6;
00007e64              r0_3 = *(uint8_t*)r4_2 + (uint8_t)r0_6;
00007e66              i += 1;
00007e68              *(uint8_t*)r4_2 = r0_3;
00007e6c          }
00007e2e      }
00007e2e      else
00007e2e      {
00007e4a          for (int32_t i_1 = 0; i_1 < 6; )
00007e4a          {
00007e3a              int32_t var_1c;
00007e3a              int32_t r0_2;
00007e3a              char* r4_1;
00007e3a              r0_2 = sub_7d48((uint32_t)*(uint8_t*)(&var_1c + i_1), r5);
00007e40              r5 += r0_2;
00007e42              r0_3 = *(uint8_t*)r4_1 + (uint8_t)r0_2;
00007e44              i_1 += 1;
00007e46              *(uint8_t*)r4_1 = r0_3;
00007e4a          }
00007e2e      }
00007e2e      
00007e50      return (uint32_t)r0_3;
00007e02  }


00007e70    int32_t sub_7e70(char* arg1)

00007e70  {
00007e76      uint32_t r5 = (uint32_t)*(uint8_t*)arg1;
00007e7a      uint8_t var_2a8 = (char)r5;
00007e82      int32_t var_1c;
00007e82      0xff81b898(&var_1c, &arg1[1], 4);
00007e8a      char var_30;
00007e8a      int32_t r2_1;
00007e8a      
00007e8a      if (r5 - 1 < 0xee)
00007e8a      {
00007ea4          void var_b0;
00007ea4          uint8_t var_2e;
00007ea4          
00007ea4          if (sub_8112(var_1c, &var_b0))
00007ea4          {
00007eaa              var_30 = 0;
00007eae              int16_t var_a0;
00007eae              uint32_t r0_4 = (uint32_t)var_a0;
00007eb2              int16_t var_a4;
00007eb2              int32_t r6_1;
00007eb2              int16_t var_9e;
00007eb2              
00007eb2              if (!r0_4)
00007f1c                  r6_1 = 0;
00007eb2              else
00007ec4                  r6_1 = sub_12b3e((int32_t)var_9e - r0_4 + 1, (uint32_t)var_a4);
00007ed4              uint32_t r7_1 = (uint32_t)sub_12b2a(r6_1 + 0x1f3, 0x1f4);
00007ed8              uint8_t var_2f_1 = (char)r7_1;
00007edc              var_2e = (char)(r7_1 >> 8);
00007ee4              char var_2d_1 = (uint8_t)var_a4;
00007ee6              char var_2c_1 = 1;
00007eea              char var_2b_1 = 0x11;  /* "Y02_3.00.33_250117" */
00007ef2              int32_t result = sub_674e(0x44, &var_30, 6);
00007ef2              
00007f5c              for (int32_t i = 0; i < r7_1; i += 1)
00007f5c              {
00007f24                  var_2a8 = (uint8_t)i + 1;
00007f28                  char var_2a7_1 = 0;
00007f2e                  int32_t r5_1 = r6_1;
00007f2e                  
00007f32                  if (r6_1 > 0x1f4)
00007f34                      r5_1 = 0x1f4;
00007f34                  
00007f48                  void var_2a6;
00007f48                  0xff81b898(&var_2a6, i * 0x1f4 + &var_b0 + 0x30, r5_1);  /* "RY02_V3.0" */
00007f54                  result = sub_674e(0x45, &var_2a8, (uint32_t)((uint16_t)r5_1 + 2));
00007f5c              }
00007f5c              
00007f1a              return result;
00007ea4          }
00007ea4          
00007efc          var_30 = 1;
00007f00          uint8_t var_2f_2 = (char)r5;
00007f08          0xff81b898(&var_2e, &var_1c, 4);
00007f0c          r2_1 = 6;
00007e8a      }
00007e8a      else
00007e8a      {
00007e90          var_30 = 2;
00007e92          uint8_t var_2f = (char)r5;
00007e94          r2_1 = 2;
00007e8a      }
00007e8a      
00007f12      return sub_674e(0x44, &var_30, r2_1);
00007e70  }


00007f60    void sub_7f60(int32_t arg1, char* arg2)

00007f60  {
00007f68      if (arg1 == 0x41)
00007f68      {
00007f80          int32_t var_40 = 0;
00007f82          0xff81b898(&var_40, arg2, 4);
00007f88          uint8_t i_1 = 0;
00007f8a          int32_t r4_1 = 1;
00007fb4          uint32_t i;
00007fb4          
00007fb4          do
00007fb4          {
00007f9c              void var_3c;
00007f9c              
00007f9c              if (!sub_8162(var_40, (uint32_t)i_1, &var_3c))
00007f9c                  break;
00007f9c              
00007fa6              r4_1 += sub_7e02(&var_3c, &(&i_1)[r4_1]);
00007fae              i = (uint32_t)(i_1 + 1);
00007fb0              i_1 = (char)i;
00007fb4          } while (i < 0xa);
00007fbc          sub_674e(0x42, &i_1, (uint32_t)(uint16_t)r4_1);
00007f68      }
00007f68      else if (arg1 == 0x43)
00007f70          sub_7e70(arg2);
00007f60  }

00007fc2        00 00                                                                                        ..

00007fc4  int32_t data_7fc4 = 0x4030201
00007fc8  int32_t data_7fc8 = 0x8070605
00007fcc  int32_t data_7fcc = 0x130d09
00007fd0  int32_t data_7fd0 = 0x7040201
00007fd4  int32_t data_7fd4 = 0x908

00007fd8    int32_t sub_7fd8()

00007fd8  {
00007fe6      for (int32_t i = 0; i < 2; i += 1)
00007fde          sub_8290((uint32_t)(uint8_t)i);
00007fde      
00007fec      *(uint8_t*)0x20b921 = 0;
00007fee      *(uint16_t*)0x20b922 = 0;
00007ff0      *(uint8_t*)0x20b924 = 0;
00007ff2      return 0;
00007fd8  }


00007ff4    int32_t sub_7ff4(int32_t arg1)

00007ff4  {
00007ffc      if ((uint32_t)*(uint8_t*)0x20b924 <= arg1)
00008000          return 0;
00008000      
0000800e      int32_t r0_3 = ((uint32_t)*(uint8_t*)0x20b921 << 0xc) + (uint32_t)*(uint16_t*)0x20b922
0000800e          - (arg1 << 8) - 0xff;
00008010      int32_t r0_4 = r0_3 - 1;
00008010      
00008012      if (r0_3 - 1 < 0)
00008018          r0_4 += 0x2000;
00008018      
0000801e      sub_827e(r0_4, 0x20b88c, 0x80);
00008024      return 1;
00007ff4  }


00008026    int32_t sub_8026()

00008026  {
0000802e      if ((uint32_t)*(uint8_t*)0x20b920)
00008038          return 0x20b920;
00008038      
00008032      *(uint8_t*)0x20b920 = 1;
00008034      return sub_829e();
00008026  }


0000803a    int32_t sub_803a()

0000803a  {
0000804e      sub_30a4(0x20b88c, 
0000804e          ((uint32_t)*(uint8_t*)0x20b921 << 0xc) + (uint32_t)*(uint16_t*)0x20b922
0000804e              + 0x872000, 
0000804e          0x80);
00008058      uint32_t r1_4 = (uint32_t)(*(uint16_t*)0x20b922 + 0x100);
0000805a      *(uint16_t*)0x20b922 = (int16_t)r1_4;
0000805c      uint32_t r0_4 = (uint32_t)*(uint8_t*)0x20b924;
0000805c      
00008060      if (r0_4 < 0xa)
00008064          *(uint8_t*)0x20b924 = (uint8_t)r0_4 + 1;
00008064      
0000806c      if (r1_4 >= 0x1000)
0000806c      {
00008070          *(uint16_t*)0x20b922 = 0;
00008076          int32_t r0_6 = 1 & ~(uint32_t)*(uint8_t*)0x20b921;
00008078          *(uint8_t*)0x20b921 = (char)r0_6;
0000807a          sub_8290(r0_6);
0000806c      }
0000806c      
00008084      return sub_529c(7);
0000803a  }


00008086    int32_t j_sub_7fd8()

00008086  {
00008086      /* tailcall */
00008086      return sub_7fd8();
00008086  }


00008088    int32_t sub_8088(char* arg1, int32_t arg2, int32_t arg3)

00008088  {
00008088      uint32_t r3;
00008088      uint32_t var_18_1 = r3;
0000808e      int32_t result = arg2;
00008094      int32_t r1 = (int32_t)*(uint16_t*)0x20b89e;
00008094      
000080a0      if (r1 <= result && !arg3)
000080a0      {
000080dc          0xff81b898(arg1, 0x20b8bc, *(uint32_t*)0x20b854);
000080e0          return *(uint32_t*)0x20b854;
000080a0      }
000080a0      
000080a2      uint32_t r2 = (uint32_t)*(uint16_t*)0x20b89c;
000080a2      
000080a6      if (!r2)
0000810c          return 0;
0000810c      
000080ae      int32_t result_1 = sub_12b3e(r1 - r2 + 1, (uint32_t)*(uint16_t*)0x20b898);
000080ae      
000080b6      if (result_1 <= 1)
000080b6      {
00008102          result = result_1;
00008108          *(uint8_t*)arg1 = *(uint8_t*)0x20b8bc;
000080b6      }
000080b6      else
000080b6      {
000080ba          int32_t r0_2 = j_sub_139b4(result);
000080cc          int32_t i = 0;
000080ce          var_18_1 = sub_137d8(sub_139fc(result_1), r0_2);
000080ce          
000080fc          for (; i < result; i += 1)
000080f6              arg1[i] =
000080f6                  *(uint8_t*)(0x20b8bc + sub_13938(sub_19964(sub_139fc(i), var_18_1, i)));
000080b6      }
000080b6      
00008110      return result;
00008088  }


00008112    int32_t sub_8112(int32_t arg1, int32_t arg2)

00008112  {
00008112      int32_t var_1c = arg1;
0000811a      uint32_t r1 = (uint32_t)*(uint16_t*)0x20b922;
00008124      int32_t r0_3 = ((uint32_t)*(uint8_t*)0x20b921 << 0xc) - 0x100;
00008126      int32_t r4 = r1 + r0_3;
00008126      
00008128      if (r1 + r0_3 < 0)
0000812a          r4 += 0x2000;
0000812a      
0000812c      int32_t r5 = 0;
0000812c      
00008134      while (true)
00008134      {
00008134          int32_t var_20;
00008134          sub_827e(r4, &var_20, 4);
00008138          int32_t r0_5 = var_20;
00008138          
0000813c          if (r0_5 != 0xffffffff)
0000813c          {
00008140              if (r0_5 == arg1)
00008140                  break;
00008140              
00008150              int32_t r4_1 = r4 - 0xff;
00008152              r4 = r4_1 - 1;
00008152              
00008154              if (r4_1 - 1 < 0)
00008156                  r4 += 0x2000;
00008156              
00008158              r5 += 1;
00008158              
0000815c              if (r5 < 0xa)
0000815c                  continue;
0000813c          }
0000813c          
00008160          return 0;
00008134      }
00008134      
00008148      sub_827e(r4, arg2, 0x80);
0000814e      return 1;
00008112  }


00008162    int32_t sub_8162(int32_t arg1, int32_t arg2, int32_t* arg3)

00008162  {
00008176      int32_t r4_1 = ((uint32_t)*(uint8_t*)0x20b921 << 0xc) + (uint32_t)*(uint16_t*)0x20b922
00008176          - (arg2 << 8) - 0xff;
00008178      int32_t r4_2 = r4_1 - 1;
00008178      
0000817a      if (r4_1 - 1 < 0)
0000817e          r4_2 += 0x2000;
0000817e      
00008186      sub_827e(r4_2, arg3, 4);
0000818a      int32_t r0_3 = *(uint32_t*)arg3;
0000818a      
00008192      if (r0_3 == 0xffffffff || r0_3 <= arg1)
000081a4          return 0;
000081a4      
0000819a      sub_827e(r4_2, arg3, 0x30);  /* "RY02_V3.0" */
000081a0      return 1;
00008162  }


000081a6    uint32_t sub_81a6(char* arg1)

000081a6  {
000081ae      *(uint8_t*)arg1 = 0;
000081b2      uint32_t r1 = (uint32_t)*(uint16_t*)0x20b922;
000081ba      int32_t r0_3 = ((uint32_t)*(uint8_t*)0x20b921 << 0xc) - 0x100;
000081bc      int32_t r5 = r1 + r0_3;
000081bc      
000081be      if (r1 + r0_3 < 0)
000081c2          r5 += 0x2000;
000081c2      
000081c4      int32_t r6 = 0;
000081cc      uint32_t r0_33;
000081cc      
000081cc      while (true)
000081cc      {
000081cc          int32_t var_98;
000081cc          sub_827e(r5, &var_98, 0x30);  /* "RY02_V3.0" */
000081d8          int16_t var_94;
000081d8          
000081d8          if ((uint32_t)var_94 == 0x1951)
000081d8          {
000081e2              char var_a0;
000081e2              sub_1f9e(&var_a0, var_98 - 0x386cd300);
000081ee              arg1[(uint32_t)*(uint8_t*)arg1 * 9 + 6] = 0;
000081fc              arg1[(uint32_t)*(uint8_t*)arg1 * 9 + 7] = var_a0;
0000820a              char var_9f;
0000820a              arg1[(uint32_t)*(uint8_t*)arg1 * 9 + 8] = var_9f;
00008218              char var_9e;
00008218              arg1[(uint32_t)*(uint8_t*)arg1 * 9 + 9] = var_9e;
00008226              char var_9d;
00008226              arg1[(uint32_t)*(uint8_t*)arg1 * 9 + 2] = var_9d;
00008234              char var_9c;
00008234              arg1[(uint32_t)*(uint8_t*)arg1 * 9 + 3] = var_9c;
00008242              char var_9b;
00008242              arg1[(uint32_t)*(uint8_t*)arg1 * 9 + 4] = var_9b;
00008250              char var_92;
00008250              *(uint8_t*)((uint32_t)*(uint8_t*)arg1 * 9 + arg1 + 1) = var_92;
00008256              r0_33 = (uint32_t)(*(uint8_t*)arg1 + 1);
00008258              *(uint8_t*)arg1 = (char)r0_33;
00008258              
0000825c              if (r0_33 >= 0xa)
0000825c                  break;
0000825c              
00008264              int32_t r5_1 = r5 - 0xff;
00008266              r5 = r5_1 - 1;
00008266              
00008268              if (r5_1 - 1 < 0)
0000826c                  r5 += 0x2000;
0000826c              
0000826e              r6 += 1;
0000826e              
00008272              if (r6 < 0xa)
00008272                  continue;
000081d8          }
000081d8          
00008274          return (uint32_t)*(uint8_t*)arg1;
000081cc      }
000081cc      
0000825e      return (uint32_t)(uint8_t)r0_33;
000081a6  }


00008278    uint32_t sub_8278()

00008278  {
0000827c      return (uint32_t)*(uint8_t*)0x20b924;
00008278  }


0000827e    int32_t sub_827e(int32_t arg1, int32_t arg2, int16_t arg3)

0000827e  {
0000828e      return sub_30ca(arg2, arg1 + 0x872000, (uint32_t)arg3);
0000827e  }


00008290    int32_t sub_8290(int32_t arg1)

00008290  {
0000829c      return sub_3064((arg1 << 0xc) + 0x872000);
00008290  }


0000829e    int32_t sub_829e()

0000829e  {
000082a0      int32_t r6 = 0;
000082a6      *(uint8_t*)0x20b924 = 0;
000082a8      int32_t r4 = 0;
000082a8      
000082aa      while (true)
000082aa      {
000082aa          int32_t result = r4 << 0xc;
000082ac          int32_t r7_1 = 0;
000082ae          int32_t r5_1 = 0;
000082b0          int32_t result_1 = result;
000082b0          
000082b6          while (true)
000082b6          {
000082b6              void var_94;
000082b6              sub_827e(result, &var_94, 0x30);  /* "RY02_V3.0" */
000082bc              int16_t result_2;
000082bc              result = (uint32_t)result_2;
000082bc              
000082c2              if (result == 0xffff)
000082c2              {
000082c6                  if (!r6)
000082c6                  {
000082ca                      r6 = 1;
000082cc                      *(uint16_t*)0x20b922 = (int16_t)r7_1;
000082ce                      *(uint8_t*)0x20b921 = (char)r4;
000082c6                  }
000082c6                  
000082c6                  goto label_8300;
000082c2              }
000082c2              
000082d6              if (result == 0x1951)
000082d6              {
000082de                  uint32_t r0_1 = (uint32_t)*(uint8_t*)0x20b924;
000082de                  
000082e2                  if (r0_1 < 0xa)
000082e6                      *(uint8_t*)0x20b924 = (uint8_t)r0_1 + 1;
000082e6                  
000082ee                  result = result_1 + 0x100;
000082f0                  r5_1 += 1;
000082f2                  r7_1 += 0x100;
000082f4                  result_1 = result;
000082f4                  
000082f8                  if (r5_1 < 0x10)  /* "RY02_3.00.33_250117" */
000082f8                      continue;
000082f8                  else
000082f8                  {
000082fc                      if (!r6)
000082fc                          goto label_8306;
000082fc                      
00008300                  label_8300:
00008300                      result = (uint32_t)*(uint8_t*)0x20b924;
00008300                      
00008304                      if (result < 0xa)
00008304                          goto label_8306;
000082f8                  }
000082d6              }
000082d6              else
000082d6              {
000082d8                  r6 = 0;
00008306              label_8306:
00008306                  r4 += 1;
00008306                  
0000830a                  if (r4 < 2)
0000830a                      break;
000082d6              }
000082d6              
0000830e              if (r6)
00008316                  return result;
00008316              
00008310              return sub_7fd8();
000082b6          }
000082aa      }
0000829e  }

00008318  int32_t data_8318 = 0x20b920
0000831c  int32_t data_831c = 0x20b88c
00008320  int32_t data_8320 = 0x872000
00008324  int32_t data_8324 = 0x2000
00008328  int32_t data_8328 = 0x1951
0000832c  int32_t data_832c = -0x386cd300
00008330  int32_t data_8330 = 0xffff

00008334    uint32_t sub_8334()

00008334  {
00008338      uint32_t result = (uint32_t)*(uint8_t*)0x20b960;
00008338      
0000833c      if (result == 1)
0000833c      {
00008342          result = (uint32_t)*(uint8_t*)0x20b92c;
00008342          
00008346          if (result < 2)
00008346          {
0000834e              result = sub_8cc2((uint32_t)sub_8c9c());
0000834e              
00008354              if (!result)
00008354              {
00008356                  result = 2;
00008358                  *(uint8_t*)0x20b960 = 2;
00008354              }
00008346          }
0000833c      }
0000833c      
0000835a      return result;
00008334  }


0000835c    uint32_t sub_835c(int32_t arg1, int32_t arg2, uint32_t arg3)

0000835c  {
0000835e      int32_t r6 = arg1;
00008364      uint32_t r4 = arg3;
00008366      int32_t r5 = arg2;
00008366      
00008368      if (r6 < 0)
0000836a          r6 += 0x5a0;
0000836a      
0000836e      if (r5 < 0)
00008370          r5 = arg2 + 0x5a0;
00008370      
00008372      int32_t r1 = r6 + r5;
00008376      int32_t var_2c = r1;
00008376      
0000837a      if (r1 >= 0x5a0)
00008382          var_2c = r1 - 0x5a0;
00008382      
0000838a      uint32_t var_28 = (uint32_t)sub_8cb4();
0000838a      
00008394      if (var_2c > 0x438)
0000839c          var_28 = (uint32_t)((uint16_t)var_28 + 1);
0000839c      
000083a0      uint32_t r0_7 = (uint32_t)*(uint16_t*)0x20b962;
000083a0      
000083b0      if (!r0_7 || *(uint32_t*)0x20b95c != var_28)
000083b0      {
000083b6          0xff81b968(0x20b95c, 0x64);
000083be          *(uint32_t*)0x20b95c = var_28;
000083c0          *(uint16_t*)0x20b96a = (int16_t)r6;
000083c6          *(uint8_t*)0x20b998 = (char)r5;
000083ca          *(uint8_t*)0x20b970 = 2;
000083ce          *(uint8_t*)0x20b96f = 1;
000083d0          *(uint8_t*)0x20b961 = 1;
000083d2          int16_t r6_1 = (int16_t)r5;
000083d4          *(uint16_t*)0x20b962 = r6_1;
000083d4          
000083d8          if (r5 > 0x37)  /* ".0" */
000083d8          {
000083e4              char r1_4 = sub_12b3e(sub_814(), 0xa) + 0x2d;
000083e8              *(uint8_t*)0x20b998 = r1_4;
000083ea              uint32_t r0_11 = (uint32_t)((uint8_t)r5 - r1_4);
000083ec              *(uint8_t*)0x20b999 = (char)r0_11;
000083f0              *(uint8_t*)0x20b971 = 3;
000083f6              *(uint8_t*)0x20b96f += 1;
000083f6              
000083fa              if (r0_11 > 0x1e)  /* "50117" */
000083fa              {
000083fc                  uint32_t r0_12 = sub_814();
00008412                  *(uint8_t*)0x20b99a = *(uint8_t*)0x20b999 - ((uint8_t)r0_12
00008412                      - (char)(((r0_12 >> 0x1f >> 0x1d) + r0_12) >> 3 << 3) + 0x16);
00008412                      /* ".00.33_250117" */  /* "250117" */  /* "0117" */
00008414                  *(uint8_t*)0x20b999 = (uint8_t)r0_12
00008414                      - (char)(((r0_12 >> 0x1f >> 0x1d) + r0_12) >> 3 << 3) + 0x16;
00008414                      /* ".00.33_250117" */  /* "250117" */  /* "0117" */
00008418                  *(uint8_t*)0x20b972 = 2;
0000841e                  *(uint8_t*)0x20b96f += 1;
000083fa              }
000083d8          }
000083d8          
00008424          *(uint16_t*)0x20b95a = r6_1;
00008426          r4 = 2;
000083b0      }
000083b0      else
000083b0      {
00008430          uint32_t r0_17 = (uint32_t)*(uint16_t*)0x20b96c;
00008430          
0000844a          if (r0_17 != r6)
0000844a          {
0000846a              if (!(uint32_t)*(uint8_t*)0x20b960 || r0_7 < 0x5a
0000846a                  || !(uint32_t)*(uint8_t*)0x20b96f || r0_17 < 0x3c || r0_17 > 0x438)
0000846a              {
00008470                  0xff81b968(0x20b95c, 0x64);
00008476                  *(uint32_t*)0x20b95c = var_28;
00008478                  *(uint16_t*)0x20b96a = (int16_t)r6;
0000847c                  *(uint8_t*)0x20b970 = 2;
00008480                  *(uint8_t*)0x20b96f = 1;
00008482                  *(uint8_t*)0x20b961 = 1;
0000846a              }
0000846a              else
0000846a              {
0000848c                  *(uint16_t*)0x20b95a = 0;
00008492                  *(uint8_t*)0x20b961 += 1;
00008494                  int32_t i = r6 - r0_17;
00008494                  
00008496                  if (r6 - r0_17 < 0)
0000849a                      i += 0x5a0;
0000849a                  
000084a0                  while (i)
000084a0                  {
000084a2                      uint32_t r3_1 = (uint32_t)*(uint8_t*)0x20b96f;
000084a2                      
000084a6                      if (i > 0xff)
000084a6                      {
000084b4                          *(uint8_t*)(r3_1 + 0x20b998) = 0xff;
000084ba                          i -= 0xff;
000084bc                          *(uint8_t*)((uint32_t)*(uint8_t*)0x20b96f + 0x20b970) = 0;
000084a6                      }
000084a6                      else
000084a6                      {
000084a8                          *(uint8_t*)(r3_1 + 0x20b998) = (char)i;
000084ae                          *(uint8_t*)((uint32_t)*(uint8_t*)0x20b96f + 0x20b970) = 0;
000084b0                          i = 0;
000084a6                      }
000084a6                      
000084c2                      *(uint8_t*)0x20b96f += 1;
000084a0                  }
0000846a              }
0000846a              
000084ca              *(uint8_t*)0x20b956 = 0;
000084d0              *(uint16_t*)0x20b958 = 0;
00008592              r4 = 2;
00008592              goto label_8598;
0000844a          }
0000844a          
000084d6          if (r4 != 5)
000084d6          {
000084dc              uint32_t r0_21 = (uint32_t)(*(uint8_t*)0x20b956 + 1);
000084de              *(uint8_t*)0x20b956 = (char)r0_21;
000084de              
000084e2              if (r4 != 0xff)
000084e2                  goto label_8598;
000084e2              
000084fc              if (r0_21 <= (uint32_t)*(uint8_t*)0x20846a)
000084fc              {
0000857e                  uint32_t r0_31 = (uint32_t)*(uint8_t*)0x20b96f;
0000857e                  
00008582                  if (!r0_31)
00008582                  {
00008592                      r4 = 2;
00008592                      goto label_8598;
00008582                  }
00008582                  
00008584                  r4 = (uint32_t)*(uint8_t*)(r0_31 + 0x20b96f);
00008584                  
00008590                  if (r4 == 2 || r4 == 3 || r4 == 4)
00008588                      goto label_85a8;
00008588                  
00008592                  r4 = 2;
00008592                  goto label_8598;
000084fc              }
000084fc              
00008514              uint32_t r1_20 = (uint32_t)
00008514                  *(uint8_t*)(0x83e19c + sub_12b2a((uint32_t)*(uint16_t*)0x20b95a, 0xf))
00008514                  + ((uint32_t)*(uint16_t*)0x20b958 >> 2);
00008514              
00008518              if (r1_20 > 0x32)  /* "02_V3.0" */
00008518              {
00008520                  r4 = 2;
00008522                  uint32_t r0_25 = (uint32_t)*(uint8_t*)0x20b96f;
00008522                  
00008526                  if (r0_25 >= 3)
00008526                  {
00008528                      uint32_t r2_3 = (uint32_t)*(uint8_t*)0x20b96e;
00008528                      
00008530                      if (r2_3 < 3 && r1_20 < 0x46)
00008530                      {
00008534                          uint32_t r1_21 = (uint32_t)*(uint8_t*)(r0_25 + 0x20b96f);
00008534                          
00008538                          if (r1_21 == 4)
00008538                          {
00008546                              if ((uint32_t)*(uint8_t*)(r0_25 + 0x20b997) < 0x1e)  /* "
00008546                                      50117" */
00008548                                  r4 = 4;
00008538                          }
00008538                          else if (r1_21 == 2
00008538                              && (uint32_t)*(uint8_t*)(r0_25 + 0x20b96e) == 3)
00008554                          {
00008556                              r4 = 4;
0000855a                              *(uint8_t*)0x20b96e = (uint8_t)r2_3 + 1;
00008554                          }
00008530                      }
00008526                  }
00008518              }
00008518              else
0000851a                  r4 = 3;
0000851a              
00008560              *(uint8_t*)0x20b956 = 0;
00008562              *(uint16_t*)0x20b958 = 0;
00008564              uint32_t r0_28 = sub_814();
00008578              *(uint8_t*)0x20846a = (uint8_t)r0_28
00008578                  - (char)(((r0_28 >> 0x1f >> 0x1e) + r0_28) >> 2 << 2) + 0xe;
00008578                  /* "50117" */  /* "0117" */
0000857a              goto label_8598;
000084d6          }
000084d6          
000084ec          *(uint16_t*)0x20b95a = 0;
000084f0          *(uint8_t*)0x20b956 = 0;
000084f2          *(uint16_t*)0x20b958 = 0;
00008598      label_8598:
00008598          uint32_t r0_32 = (uint32_t)*(uint8_t*)0x20b96f;
00008598          
000085a2          if ((uint32_t)*(uint8_t*)(r0_32 + 0x20b96f) == r4 || r0_32 >= 0x27)
000085a2          {
000085a8          label_85a8:
000085a8              uint32_t r0_33 = (uint32_t)*(uint8_t*)0x20b96f;
000085ac              int32_t r1_28 = (uint32_t)*(uint8_t*)(r0_33 + 0x20b997) + r5;
000085ac              
000085b0              if (r1_28 <= 0xff)
000085c4                  *(uint8_t*)(r0_33 + 0x20b997) = (char)r1_28;
000085b0              else
000085b0              {
000085b4                  *(uint8_t*)(r0_33 + 0x20b970) = (char)r4;
000085b8                  *(uint8_t*)((uint32_t)*(uint8_t*)0x20b96f + 0x20b998) = (char)r5;
000085be                  *(uint8_t*)0x20b96f += 1;
000085b0              }
000085a2          }
000085a2          else
000085a2          {
000085c8              *(uint8_t*)(r0_32 + 0x20b998) = (char)r5;
000085ce              *(uint8_t*)((uint32_t)*(uint8_t*)0x20b96f + 0x20b970) = (char)r4;
000085d4              *(uint8_t*)0x20b96f += 1;
000085da              *(uint8_t*)0x20b956 = 0;
000085e0              *(uint16_t*)0x20b958 = 0;
000085a2          }
000085a2          
000085e8          *(uint16_t*)0x20b962 += (uint16_t)r5;
000085f0          *(uint16_t*)0x20b95a += (uint16_t)r5;
000083b0      }
000083b0      
000085f6      *(uint16_t*)0x20b96c = (uint16_t)var_2c;
000085fc      *(uint8_t*)0x20b92c = (char)r4;
000085fe      uint32_t result = (uint32_t)*(uint8_t*)0x20b960;
000085fe      
00008602      if (!result)
00008602      {
00008608          result = sub_8cc2((uint32_t)(uint16_t)var_2c);
00008608          
0000860e          if (result)
0000860e          {
00008610              result = 1;
00008612              *(uint8_t*)0x20b960 = 1;
0000860e          }
00008602      }
00008602      
00008616      return result;
0000835c  }


00008618    uint32_t sub_8618(int32_t arg1)

00008618  {
0000861c      uint32_t r1 = (uint32_t)*(uint16_t*)0x20b96c;
0000861e      int32_t r1_1 = r1 - arg1;
0000861e      
00008620      if (r1 - arg1 < 0)
00008624          r1_1 += 0x5a0;
00008624      
0000862a      uint32_t r3 = (uint32_t)(*(uint16_t*)0x20b962 - (uint16_t)r1_1);
0000862c      *(uint16_t*)0x20b962 = (int16_t)r3;
0000862e      uint32_t r2_2 = (uint32_t)(uint16_t)arg1;
00008630      *(uint16_t*)0x20b96c = (int16_t)r2_2;
00008630      
0000863a      if ((uint32_t)*(uint8_t*)0x20b960 && r3 >= 0x5a)
0000863a      {
0000863c          uint32_t r0_1 = (uint32_t)*(uint8_t*)0x20b96f;
0000863c          
0000864c          if (r0_1 && r2_2 >= 0x3c && r2_2 <= 0x438)
0000864c          {
00008658              while (true)
00008658              {
00008658                  r0_1 -= 1;
00008658                  
0000865c                  if (r0_1 <= 0)
0000865c                      break;
0000865c                  
00008662                  uint32_t r3_1 = (uint32_t)*(uint8_t*)(r0_1 + 0x20b998);
00008662                  
00008666                  if (r3_1 >= r1_1)
00008666                  {
0000867a                      if ((uint32_t)*(uint8_t*)(r0_1 + 0x20b998) <= r1_1)
00008686                          *(uint8_t*)0x20b96f -= 1;
0000867a                      else
0000867e                          *(uint8_t*)(r0_1 + 0x20b998) = (uint8_t)r3_1 - (uint8_t)r1_1;
0000867e                      
0000867a                      break;
00008666                  }
00008666                  
0000866a                  r1_1 -= r3_1;
0000866e                  *(uint8_t*)0x20b96f -= 1;
00008658              }
00008658              
0000868a              uint32_t r1_2 = (uint32_t)*(uint8_t*)0x20b96f;
0000868a              
00008692              if ((uint32_t)*(uint8_t*)(r1_2 + 0x20b96f))
00008696                  *(uint8_t*)(r1_2 + 0x20b96f) = 2;
00008696              
0000869c              return sub_8334();
0000864c          }
0000863a      }
0000863a      
00008650      *(uint16_t*)0x20b962 = 0;
00008652      *(uint8_t*)0x20b96f = 0;
00008654      *(uint8_t*)0x20b960 = 0;
00008656      return 0;
00008618  }


0000869e    void sub_869e(uint32_t arg1, int32_t arg2)

0000869e  {
000086b8      if (arg1 < 0x20 && !(uint32_t)*(uint16_t*)0x20b954 && !(uint32_t)*(uint8_t*)0x20b933)
000086b8          /* "117" */
000086b8      {
000086ba          uint32_t r0 = (uint32_t)*(uint8_t*)0x20b92e;
000086ba          
000086be          if (!r0)
000086be          {
000086cc              if (!sub_93d4())
000086cc              {
000086e0                  *(uint8_t*)0x20b92f = 0;
000086e4                  *(uint8_t*)0x20b92c = 1;
000086e6                  *(uint8_t*)0x20b932 = 0;
000086e8                  return;
000086cc              }
000086cc              
000086d2              if ((uint32_t)*(uint16_t*)0x20b942 > 0x96)
000086d2              {
000086d6                  *(uint8_t*)0x20b92c = 1;
000086da                  sub_93dc(7);
000087e2                  *(uint8_t*)0x20b932 = 0;
000086d2              }
000086d2              else if (arg2 - 0x169 >= 0x2cf)
000086f4              {
000086fa                  if (!(uint32_t)*(uint8_t*)0x20b92f)
000086fa                  {
000086fc                      *(uint8_t*)0x20b938 = 0;
000086fe                      *(uint16_t*)0x20b936 = 0;
00008700                      *(uint16_t*)0x20b94a = 0;
00008704                      int32_t r0_7 = sub_8cd4(arg2);
00008708                      *(uint8_t*)0x20b92d = (char)r0_7;
0000870c                      char r0_8;
0000870c                      
0000870c                      r0_8 = r0_7 == 1 ? 0x3c : 0x28;
0000870c                      
00008710                      *(uint8_t*)0x20b930 = r0_8;
000086fa                  }
000086fa                  
00008716                  uint32_t r0_11 = (uint32_t)(*(uint8_t*)0x20b92f + 1);
00008718                  *(uint8_t*)0x20b92f = (char)r0_11;
0000871e                  uint32_t r1_2 = (uint32_t)(*(uint16_t*)0x20b936 + (uint16_t)arg1);
00008720                  *(uint16_t*)0x20b936 = (int16_t)r1_2;
00008720                  
00008724                  if (arg1)
0000872a                      *(uint8_t*)0x20b938 += 1;
0000872a                  
0000874c                  if (r0_11 >= 5 && r1_2 > 6 * r0_11)
0000874c                  {
0000874e                      *(uint8_t*)0x20b92f = 0;
00008750                      *(uint16_t*)0x20b936 = 0;
00008752                      *(uint8_t*)0x20b938 = 0;
0000874c                  }
0000874c                  
0000875e                  if (!sub_12b2a((uint32_t)*(uint8_t*)0x20b92f, 5))
0000875e                  {
0000876a                      if ((uint32_t)*(uint16_t*)0x20b94a > 6)
0000876a                      {
0000876c                          *(uint8_t*)0x20b92f = 0;
0000876e                          *(uint16_t*)0x20b936 = 0;
00008770                          *(uint8_t*)0x20b938 = 0;
0000876a                      }
0000876a                      
00008772                      *(uint16_t*)0x20b94a = 0;
0000875e                  }
0000875e                  
00008774                  uint32_t r0_15 = (uint32_t)*(uint8_t*)0x20b92f;
00008776                  uint32_t r1_4 = (uint32_t)*(uint8_t*)0x20b930;
00008776                  
0000877a                  if (r0_15 == r1_4)
0000877a                  {
0000877c                  label_877c:
0000877c                      sub_93ca();
00008780                      *(uint8_t*)0x20b935 = 0;
00008782                      return;
0000877a                  }
0000877a                  
00008786                  if (r0_15 <= r1_4)
00008782                      return;
00008782                  
0000878e                  if (!sub_93d4())
000087e0                      *(uint8_t*)0x20b92c = 1;
0000878e                  else
0000878e                  {
00008792                      arg1 = (uint32_t)*(uint16_t*)0x20b942;
00008792                      
00008798                      if (arg1 <= (uint32_t)*(uint8_t*)0x20b930 - 5)
00008798                      {
0000879e                          if ((uint32_t)*(uint8_t*)0x20b935)
0000879e                              goto label_877c;
0000879e                          
000087a2                          *(uint8_t*)0x20b92c = 2;
000087a4                          *(uint8_t*)0x20b945 = 0;
000087a6                          uint32_t r7_1 = (uint32_t)*(uint8_t*)0x20b92f;
000087b4                          uint32_t r0_20 = (uint32_t)sub_12b3e(arg2 - r7_1 + 0x5a1, 0x5a0);
000087b6                          *(uint16_t*)0x20b93a = (int16_t)r0_20;
000087ba                          *(uint16_t*)0x20b93c = (int16_t)arg2;
000087bc                          uint32_t r1_8 = (uint32_t)((uint16_t)r7_1 - 1);
000087be                          *(uint16_t*)0x20b93e = (int16_t)r1_8;
000087c0                          *(uint8_t*)0x20b92f = 0;
000087c4                          sub_835c(r0_20, r1_8, 2);
000087ca                          sub_93dc(1);
000087ce                          return;
00008798                      }
00008798                      
000087d2                      *(uint8_t*)0x20b935 = 1;
000087d2                      
000087d6                      if (arg1 <= 0x55)
000087ce                          return;
000087ce                      
000087d8                      *(uint8_t*)0x20b92c = 1;
0000878e                  }
0000878e                  
000087e2                  *(uint8_t*)0x20b932 = 0;
000086f4              }
000086be          }
000086be          else
000086c2              *(uint8_t*)0x20b92e = (char)(r0 - 1);
000086b8      }
000086b8      
000087e4      *(uint8_t*)0x20b92f = 0;
0000869e  }

00008730  int32_t data_8730 = 0x20b95c
00008734  int32_t data_8734 = 0x5a0
00008738  int32_t data_8738 = 0x20846a
0000873c  int32_t data_873c = 0x83e19c
00008740  int32_t data_8740 = 0x2cf

000087dc                                                                                      02 e0                                    ..

000087e8    uint32_t sub_87e8(int32_t arg1, int32_t arg2)

000087e8  {
000087f4      uint32_t r0 = (uint32_t)*(uint16_t*)0x20b93e;
000087f8      uint32_t r0_3;
000087f8      
000087f8      if (arg1 < 0x1e)  /* "50117" */
000087f8      {
00008864          *(uint16_t*)0x20b93e = (uint16_t)r0 + 1;
0000886c          sub_835c((uint32_t)*(uint16_t*)0x20b93c, 1, 0xff);
00008870          *(uint16_t*)0x20b93c = (int16_t)arg2;
00008870          
00008876          if ((uint32_t)*(uint8_t*)0x20b934 < 5)
00008876          {
000088a0              uint32_t result;
000088a0              
000088a0              if ((uint32_t)*(uint16_t*)0x20b942 <= 0x96)
000088a0              {
000088be                  result = (uint32_t)*(uint16_t*)0x20b93e;
000088be                  
000088d4                  if (result >= 0x258 && (uint32_t)*(uint8_t*)0x20b92c >= 2
000088d4                      && result >= 0x384)
000088d4                  {
000088d6                      *(uint8_t*)0x20b92c = 0;
000088da                      *(uint8_t*)0x20b92e = 0x10;  /* "RY02_3.00.33_250117" */
000088dc                      *(uint8_t*)0x20b92f = 0;
000088de                      return 0x10;  /* "RY02_3.00.33_250117" */
000088d4                  }
000088a0              }
000088a0              else
000088a0              {
000088a2                  *(uint8_t*)0x20b92c = 1;
000088a6                  sub_93dc(7);
000088aa                  *(uint8_t*)0x20b932 = 0;
000088ac                  *(uint8_t*)0x20b92f = 0;
000088ae                  *(uint16_t*)0x20b93c = 0;
000088b0                  *(uint16_t*)0x20b93e = 0;
000088b4                  result = sub_8618((uint32_t)*(uint16_t*)0x20b93a);
000088b8                  *(uint16_t*)0x20b93a = 0;
000088ba                  *(uint16_t*)0x20b940 = 0;
000088a0              }
000088a0              
000088bc              return result;
00008876          }
00008876          
00008878          *(uint8_t*)0x20b92c = 1;
0000887a          *(uint8_t*)0x20b932 = 0;
0000887c          *(uint8_t*)0x20b92f = 0;
00008880          uint32_t r0_11 = (uint32_t)*(uint16_t*)0x20b942;
00008884          *(uint16_t*)0x20b93e -= (uint16_t)r0_11;
00008892          r0_3 = (uint32_t)sub_12b3e(arg2 - r0_11 + 0x5a0, 0x5a0);
00008894          *(uint16_t*)0x20b93c = (int16_t)r0_3;
000087f8      }
000087f8      else
000087f8      {
00008810          if ((r0 >= 0x5a && (uint32_t)*(uint8_t*)0x20b960)
00008810              || (arg1 < 0x5a && !(uint32_t)*(uint16_t*)0x20b954))
00008810          {
00008826              *(uint8_t*)0x20b92c = 5;
0000882a              sub_93dc(2);
0000882e              *(uint8_t*)0x20b92f = 0;
00008830              *(uint16_t*)0x20b946 = (int16_t)arg2;
00008832              *(uint8_t*)0x20b945 = 1;
00008834              *(uint16_t*)0x20b948 = 1;
00008838              *(uint16_t*)0x20b94c = (uint16_t)arg2 + 1;
00008838              
0000883e              if ((uint32_t)*(uint16_t*)0x20b954)
00008842                  *(uint16_t*)0x20b948 = 2;
00008842              
00008846              int32_t r0_7 = sub_8cd4(arg2);
0000884c              *(uint8_t*)0x20b92d = (char)r0_7;
0000884c              
00008850              if (r0_7 == 1)
00008850              {
0000885a                  *(uint8_t*)0x20b930 = 0xa;
0000885e                  *(uint8_t*)0x20b944 = 4;
00008860                  return 4;
00008850              }
00008850              
00008854              *(uint8_t*)0x20b930 = 5;
00008856              *(uint8_t*)0x20b944 = 0xa;
00008858              return 5;
00008810          }
00008810          
00008812          *(uint8_t*)0x20b92c = 0;
00008816          sub_93dc(5);
0000881a          *(uint8_t*)0x20b92f = 0;
0000881c          *(uint16_t*)0x20b940 = 0;
0000881e          *(uint16_t*)0x20b93e = 0;
00008820          r0_3 = (uint32_t)*(uint16_t*)0x20b93a;
000087f8      }
000087f8      
0000889a      return sub_8618(r0_3);
000087e8  }


000088e0    uint32_t sub_88e0(int32_t arg1, int32_t arg2)

000088e0  {
000088e6      char r1 = *(uint8_t*)0x20b92f;
000088e6      
000088ee      if (arg1 >= 0x20)  /* "117" */
000088ee      {
000088f6          *(uint8_t*)0x20b945 = *(uint8_t*)0x20b945 + 1 + r1;
000088fc          uint32_t r0_5 = (uint32_t)(*(uint16_t*)0x20b948 + 1);
000088fe          *(uint16_t*)0x20b948 = (int16_t)r0_5;
000088fe          
00008904          if ((uint32_t)*(uint16_t*)0x20b954)
00008904          {
00008906              r0_5 += 1;
00008908              *(uint16_t*)0x20b948 = (int16_t)r0_5;
00008904          }
00008904          
0000890a          *(uint8_t*)0x20b92f = 0;
0000890c          *(uint16_t*)0x20b94c = (int16_t)arg2;
00008910          uint32_t r0_6 = (uint32_t)(uint16_t)r0_5;
00008910          
00008914          if (r0_6 < (uint32_t)*(uint8_t*)0x20b944)
00008928              return r0_6;
00008928          
00008916          *(uint8_t*)0x20b92c = 0;
00008918          *(uint8_t*)0x20b92f = 0;
0000891a          *(uint8_t*)0x20b92e = 0x10;  /* "RY02_3.00.33_250117" */
0000891e          sub_8618((uint32_t)*(uint16_t*)0x20b93c);
00008924          return sub_93dc(5);
000088ee      }
000088ee      
0000892c      *(uint8_t*)0x20b92f = r1 + 1;
0000892c      
00008932      if ((uint32_t)*(uint8_t*)0x20b934 >= 5)
00008932      {
00008936          *(uint8_t*)0x20b92c = 1;
00008938          *(uint8_t*)0x20b932 = 0;
0000893a          *(uint8_t*)0x20b92f = 0;
0000893c          *(uint8_t*)0x20b92e = 0x10;  /* "RY02_3.00.33_250117" */
00008940          sub_93dc(4);
00008946          sub_8618((uint32_t)*(uint16_t*)0x20b93c);
00008932      }
00008932      
0000894c      uint32_t r1_4 = (uint32_t)*(uint8_t*)0x20b930;
00008950      uint32_t r0_11 = (uint32_t)*(uint8_t*)0x20b92f;
00008950      
00008952      if ((uint32_t)*(uint8_t*)0x20b92d == 1)
00008952      {
0000895c          if (r0_11 > r1_4)
0000895c          {
00008964              if (sub_93d4())
00008964                  goto label_8968;
00008964              
00008994              *(uint8_t*)0x20b92c = 1;
00008998              sub_93dc(4);
0000899e              uint32_t r0_19 = sub_8618((uint32_t)*(uint16_t*)0x20b93c);
000089a2              *(uint8_t*)0x20b932 = 0;
000089a4              *(uint8_t*)0x20b92e = 0x10;  /* "RY02_3.00.33_250117" */
000089a6              *(uint8_t*)0x20b92f = 0;
000089a8              return r0_19;
0000895c          }
00008952      }
00008952      else if (r0_11 >= r1_4)
00008956      {
00008968      label_8968:
00008968          sub_93dc(3);
0000896c          uint32_t r6 = (uint32_t)*(uint16_t*)0x20b93c;
00008976          int32_t r1_5 = sub_12b3e(arg2 - r6 + 0x5a0, 0x5a0);
00008980          sub_835c(r6, r1_5, 5);
00008986          *(uint8_t*)0x20b92c = 2;
0000898a          int16_t r0_17 = *(uint16_t*)0x20b93e + (uint16_t)r1_5;
0000898c          *(uint16_t*)0x20b93e = r0_17;
0000898e          *(uint16_t*)0x20b93c = (int16_t)arg2;
00008990          return r0_17;
00008956      }
00008956      
00008958      return r0_11;
000088e0  }


000089aa    uint32_t sub_89aa()

000089aa  {
000089aa      uint32_t r3;
000089aa      uint32_t var_18 = r3;
000089aa      
000089ba      if (sub_8c9c() != *(uint32_t*)0x20b928)
000089ba      {
000089c6          var_18 = (uint32_t)sub_8c9c();
000089ca          uint32_t r4_1 = *(uint32_t*)0x20b950;
000089d0          *(uint16_t*)0x20b958 += (uint16_t)r4_1;
000089d0          
000089d4          if (r4_1 > 1)
000089e6              *(uint16_t*)0x20b942 = 0;
000089d4          else
000089d4          {
000089d6              uint32_t r0_6 = (uint32_t)*(uint16_t*)0x20b942;
000089d6              
000089de              if (r0_6 < 0x5a0)
000089e2                  *(uint16_t*)0x20b942 = (uint16_t)r0_6 + 1;
000089d4          }
000089d4          
000089e8          int32_t r0_8;
000089e8          int32_t r1_1;
000089e8          int32_t r2_1;
000089e8          r0_8 = sub_93d4();
000089e8          
000089ee          if (!r0_8)
000089ee          {
00008a00              uint32_t r0_10 = (uint32_t)*(uint8_t*)0x20b934;
00008a00              
00008a04              if (r0_10 <= 5)
00008a04              {
00008a08                  *(uint8_t*)0x20b934 = (uint8_t)r0_10 + 1;
00008a12                  r1_1 = sub_93ca();
00008a04              }
000089ee          }
000089ee          else
000089ee          {
000089f0              *(uint8_t*)0x20b934 = 0;
000089f6              r1_1 = sub_12b2a((uint32_t)*(uint16_t*)0x20b942, 0x1e);  /* "50117" */
000089f6              
00008a10              if (r1_1 == 0x1d && (uint32_t)*(uint8_t*)0x20b92c != 1)  /* "250117" */
00008a12                  r1_1 = sub_93ca();
000089ee          }
000089ee          
00008a16          uint32_t r0_13 = (uint32_t)*(uint8_t*)0x20b92c;
00008a1a          int32_t r0_14;
00008a1a          int32_t r2_2;
00008a1a          r0_14 = sub_13f18(r0_13, r1_1, r2_1, r0_13, var_18);
00008a1e          int32_t r6_1 = r0_14 << 0x10;  /* "RY02_3.00.33_250117" */
00008a2a          sub_869e(r4_1, var_18);
00008a5e          sub_8334();
00008a62          *(uint16_t*)0x20b954 = (int16_t)r6_1;
00008a64          *(uint32_t*)0x20b950 = r6_1;
00008a6a          *(uint32_t*)0x20b928 = sub_8c9c();
000089ba      }
000089ba      
000089be      return (uint32_t)*(uint8_t*)0x20b92c;
000089aa  }

00008a30                                                  20 46 00 99 ff f7 d8 fe 11 e0 20 46 00 99 ff f7                   F........ F....
00008a40  4f ff 0c e0                                                                                      O...

00008a44    uint32_t sub_8a44(int32_t arg1 @ r4, char* arg2 @ r5, int32_t arg3 @ r6, int32_t* arg4 @ r7, int32_t arg5, int32_t arg6, int32_t arg7, int32_t arg8, int32_t arg9)

00008a44  {
00008a50      if (sub_93d4() && (uint32_t)arg2[6] == 1)
00008a50      {
00008a6e          *(uint8_t*)arg2 = (char)arg3;
00008a72          sub_93dc(6);
00008a76          arg2[3] = (char)arg3;
00008a50      }
00008a50      else if (arg1 >= 5)
00008a54      {
00008a56          sub_93ca();
00008a5c          arg2[6] = 1;
00008a54      }
00008a54      
00008a5e      sub_8334();
00008a62      *(uint16_t*)(arg2 + 0x28) = (int16_t)arg3;
00008a64      *(uint32_t*)(arg2 + 0x24) = arg3;
00008a6a      *(uint32_t*)arg4 = sub_8c9c();
000089be      return (uint32_t)*(uint8_t*)arg2;
00008a44  }


00008a7a    uint32_t sub_8a7a()

00008a7a  {
00008a8a      if ((uint32_t)*(uint8_t*)0x20b960 && (uint32_t)*(uint8_t*)0x20b92c >= 2)
00008a8e          return (uint32_t)*(uint16_t*)0x20b93e;
00008a8e      
00008a92      return 0;
00008a7a  }


00008a94    uint32_t sub_8a94()

00008a94  {
00008a98      return (uint32_t)*(uint16_t*)0x20b942;
00008a94  }


00008a9a    int32_t sub_8a9a()

00008a9a  {
00008aa0      0xff81b968(0x20b92c, 0x30);  /* "RY02_V3.0" */
00008aae      return 0xff81b968(0x20b95c, 0x64);
00008a9a  }


00008ab0    int32_t sub_8ab0(uint32_t arg1, int32_t arg2)

00008ab0  {
00008ab6      *(uint32_t*)0x20b950;
00008ab8      int32_t r0;
00008ab8      int16_t r1;
00008ab8      void* r2;
00008ab8      r0 = sub_13f18(arg1, arg2, 0x20b92c, arg1);
00008ac8      int16_t result = *(uint16_t*)((char*)r2 + 0x28) + r1;
00008aca      *(uint16_t*)((char*)r2 + 0x28) = result;
00008acc      return result;
00008ab0  }


00008ace    int32_t sub_8ace(int32_t arg1, int32_t arg2, void* arg3, int32_t arg4 @ r4, int32_t arg5)

00008ace  {
00008ace      int32_t result = arg4 + arg2;
00008ad0      *(uint32_t*)((char*)arg3 + 0x24) = result;
00008ad2      return result;
00008ace  }


00008ad4    int32_t sub_8ad4(int32_t arg1, int16_t arg2, void* arg3, int32_t arg4)

00008ad4  {
00008ad6      int16_t result = *(uint16_t*)((char*)arg3 + 0x1e) + arg2;  /* "50117" */
00008ad8      *(uint16_t*)((char*)arg3 + 0x1e) = result;  /* "50117" */
00008ada      return result;
00008ad4  }


00008adc    int32_t sub_8adc(int32_t arg1, int32_t arg2, int32_t arg3, int32_t arg4 @ r4)

00008adc  {
00008ade      /* tailcall */
00008ade      return sub_8aec(arg1, arg2, arg3, arg4 + 0x3c);
00008adc  }


00008ae0    int32_t j_sub_8ae6()

00008ae0  {
00008ae2      int32_t entry_r1;
00008ae2      int32_t entry_r2;
00008ae2      /* tailcall */
00008ae2      return sub_8ae6(1, entry_r1, entry_r2);
00008ae0  }


00008ae4    int32_t j_sub_8ae6()

00008ae4  {
00008ae4      int32_t entry_r1;
00008ae4      int32_t entry_r2;
00008ae4      /* tailcall */
00008ae4      return sub_8ae6(0, entry_r1, entry_r2);
00008ae4  }


00008ae6    void sub_8ae6(char arg1, int32_t, void* arg3, int32_t arg4)

00008ae6  {
00008ae6      *(uint8_t*)((char*)arg3 + 7) = arg1;
00008ae6  }


00008aea    int32_t sub_8aea(int32_t arg1, int32_t arg2, int32_t arg3, int32_t arg4 @ r4)

00008aea  {
00008aea      /* tailcall */
00008aea      return sub_8aec(arg1, arg2, arg3, arg4 + 0x1e);  /* "50117" */
00008aea  }


00008aec    int32_t sub_8aec(int32_t, int32_t, void* arg3, int32_t arg4 @ r4, int32_t arg5)

00008aec  {
00008aec      *(uint32_t*)((char*)arg3 + 0x24) = arg4;
00008aec  }


00008af0    int32_t sub_8af0(int32_t arg1)

00008af0  {
00008af2      int32_t i = arg1;
00008af2      
00008afa      if (i > 0x384)
00008afc          i = 0x384;
00008afc      
00008afe      sub_8a9a();
00008b0a      *(uint32_t*)0x20b95c = sub_8cb4();
00008b0c      *(uint16_t*)0x20b962 = (int16_t)i;
00008b10      *(uint8_t*)0x20b961 = 1;
00008b14      *(uint8_t*)0x20b960 = 2;
00008b32      uint32_t r0_3 = (uint32_t)sub_12b3e(sub_12b3e(sub_814(), 0x168) + 0x4b0, 0x5a0);
00008b34      *(uint16_t*)0x20b96a = (int16_t)r0_3;
00008b3e      *(uint16_t*)0x20b96c = sub_12b3e(r0_3 + i, 0x5a0);
00008b3e      
00008be6      while (i)
00008be6      {
00008b48          int32_t r1_3 = sub_12b3e(sub_814(), 0x64);
00008b4e          int32_t i_1;
00008b4e          char r5_1;
00008b4e          
00008b4e          if (r1_3 >= 0x3c)
00008b4e          {
00008b62              if (r1_3 < 0x50)
00008b62              {
00008b64                  r5_1 = 3;
00008b70                  i_1 = sub_12b3e(sub_814(), 0x1e) + 0xf;  /* "50117" */
00008b72                  goto label_8baa;
00008b62              }
00008b62              
00008b76              if (r1_3 < 0x5c)
00008b76              {
00008b78                  r5_1 = 4;
00008b80                  int32_t r1_6 = sub_12b3e(sub_814(), 0x14);  /* "_3.00.33_250117" */
00008b88                  *(uint8_t*)0x20b96e += 1;
00008b8a                  i_1 = r1_6 + 0xa;
00008b8c                  goto label_8baa;
00008b76              }
00008b76              
00008b9a              if (r1_3 < 0x62)
00008b9a              {
00008b9c                  r5_1 = 5;
00008ba8                  i_1 = sub_12b3e(sub_814(), 0x14) + 5;  /* "_3.00.33_250117" */
00008ba8                  goto label_8baa;
00008b9a              }
00008b9a              
00008bb2              r5_1 = 0;
00008bba              int32_t r1_8 = sub_12b3e(sub_814(), 0x1e);  /* "50117" */
00008bc2              *(uint8_t*)0x20b961 += 1;
00008bc4              i_1 = r1_8 + 0x1e;  /* "50117" */
00008b4e          }
00008b4e          else
00008b4e          {
00008b50              r5_1 = 2;
00008b5c              i_1 = sub_12b3e(sub_814(), 0x5a) + 0x1e;  /* "50117" */
00008baa          label_8baa:
00008baa              
00008bac              if (i <= i_1)
00008bac              {
00008bc8                  i_1 = i;
00008bca                  i = 0;
00008bac              }
00008bac              else
00008bae                  i -= i_1;
00008b4e          }
00008b4e          
00008bcc          uint32_t r0_15 = (uint32_t)*(uint8_t*)0x20b96f;
00008bcc          
00008bd0          if (r0_15 >= 0x28)
00008bd0              break;
00008bd0          
00008bd4          *(uint8_t*)(r0_15 + 0x20b970) = r5_1;
00008bdc          *(uint8_t*)((uint32_t)*(uint8_t*)0x20b96f + 0x20b998) = (char)i_1;
00008be2          *(uint8_t*)0x20b96f += 1;
00008be6      }
00008be6      
00008bec      return sub_8e28();
00008af0  }

00008b8e                                            00 00                                                                ..

00008b90  int32_t data_8b90 = 0x5a1
00008b94  int32_t data_8b94 = 0x20b92c

00008bee    uint32_t sub_8bee()

00008bee  {
00008bf2      uint32_t result = (uint32_t)*(uint8_t*)0x20b960;
00008bf2      
00008bf6      if (!result)
00008bfe          return result;
00008bfe      
00008bfc      return (uint32_t)*(uint8_t*)0x20b92c;
00008bee  }


00008c00    int32_t sub_8c00(int32_t arg1)

00008c00  {
00008c0a      if (!(uint32_t)*(uint8_t*)0x20b960)
00008c46          return 0xff81b968(arg1, 0x64);
00008c46      
00008c0e      *(uint16_t*)0x20b968 = 0;
00008c10      *(uint16_t*)0x20b964 = 0;
00008c12      *(uint16_t*)0x20b966 = 0;
00008c12      
00008c18      if ((uint32_t)*(uint8_t*)0x20b961 > 1)
00008c18      {
00008c1a          uint32_t r2_1 = 0;
00008c1c          int32_t r1_2 = 0;
00008c1c          
00008c26          while ((uint32_t)*(uint8_t*)(r1_2 + 0x20b998))
00008c26          {
00008c2a              r1_2 += 1;
00008c2c              r2_1 = (uint32_t)((uint8_t)r2_1 + 1);
00008c2c              
00008c30              if (r1_2 >= 0x28)
00008c30                  break;
00008c26          }
00008c26          
00008c36          if ((uint32_t)*(uint8_t*)0x20b96f != r2_1)
00008c38              *(uint8_t*)0x20b96f = (char)r2_1;
00008c18      }
00008c18      
00008c3a      int32_t i = 0;
00008c3a      
00008c84      for (uint32_t r5 = (uint32_t)*(uint8_t*)0x20b96f; r5 > i; i += 1)
00008c84      {
00008c4a          uint32_t r1_4 = (uint32_t)*(uint8_t*)(i + 0x20b970);
00008c4a          
00008c4e          if (r1_4 == 2)
00008c7e              *(uint16_t*)0x20b966 += (uint16_t)*(uint8_t*)(i + 0x20b998);
00008c4e          else if (r1_4 == 3 || r1_4 == 4)
00008c66              *(uint16_t*)0x20b964 += (uint16_t)*(uint8_t*)(i + 0x20b998);
00008c56          else if (r1_4 == 5)
00008c72              *(uint16_t*)0x20b968 += (uint16_t)*(uint8_t*)(i + 0x20b998);
00008c84      }
00008c84      
00008c90      return 0xff7dc2f8(arg1, 0x20b95c, 0x64);
00008c00  }


00008c92    uint32_t sub_8c92()

00008c92  {
00008c98      return (uint32_t)*(uint8_t*)0x20b960;
00008c92  }


00008c9a    int32_t j_sub_8a9a()

00008c9a  {
00008c9a      /* tailcall */
00008c9a      return sub_8a9a();
00008c9a  }


00008c9c    int32_t sub_8c9c()

00008c9c  {
00008cb2      return sub_12b2a(sub_12b2a(sub_93c2(), 0x3c), 0x5a0);
00008c9c  }


00008cb4    int32_t sub_8cb4()

00008cb4  {
00008cc0      return sub_12b2a(sub_93c2(), &data_15180);
00008cb4  }


00008cc2    int32_t sub_8cc2(int32_t arg1) __pure

00008cc2  {
00008cca      if (arg1 - 0x3c > 0x12c)
00008cd2          return 0;
00008cd2      
00008cce      return 1;
00008cc2  }


00008cd4    int32_t sub_8cd4(int32_t arg1) __pure

00008cd4  {
00008ce0      if (arg1 < 0x564 && arg1 > 0x168)
00008ce8          return 1;
00008ce8      
00008ce4      return 0;
00008cd4  }

00008cea                                00 00                                                                        ..

00008cec  int32_t data_8cec = 0x20b970
00008cf0  void* data_8cf0 = data_15180
00008cf4  int32_t data_8cf4 = 0x564

00008cf8                                                                          10 b5 04 46 18 22 fe 49                          ...F.".I
00008d00  d3 f7 fa da fc 49 40 39 49 68 a1 61 10 bd                                                        .....I@9Ih.a..

00008d0e    void sub_8d0e(int32_t arg1)

00008d0e  {
00008d20      for (int32_t i = 0; i < 5; )
00008d20      {
00008d14          int32_t r2_1 = i << 2;
00008d1a          i += 1;
00008d1c          *(uint32_t*)(0x20ba08 + r2_1) = *(uint32_t*)(r2_1 + 0x20ba0c);
00008d20      }
00008d20      
00008d22      *(uint32_t*)0x20ba1c = arg1;
00008d0e  }


00008d26    int32_t sub_8d26(int16_t* arg1)

00008d26  {
00008d34      *(uint16_t*)arg1 = *(uint16_t*)0x20b9cc - *(uint16_t*)0x20b9d0;
00008d3c      arg1[1] = *(uint16_t*)0x20ba00 - *(uint16_t*)0x20ba04;
00008d44      arg1[4] = (char)*(uint16_t*)0x20b9f8 - (char)*(uint16_t*)0x20b9fc;
00008d52      arg1[2] = sub_12b2a(*(uint32_t*)0x20b9e4 - *(uint32_t*)0x20b9e8, 0x64);
00008d5c      int16_t result = sub_12b2a(*(uint32_t*)0x20b9dc - *(uint32_t*)0x20b9e0, 0xa);
00008d60      arg1[3] = result;
00008d62      return result;
00008d26  }


00008d64    int32_t sub_8d64(int16_t* arg1)

00008d64  {
00008d72      *(uint32_t*)0x20b9cc += (uint32_t)*(uint16_t*)arg1;
00008d7a      *(uint32_t*)0x20ba00 += (uint32_t)arg1[1];
00008d82      *(uint32_t*)0x20b9f8 += (uint32_t)arg1[4];
00008d8c      *(uint32_t*)0x20b9e4 += 0x64 * (uint32_t)arg1[2];
00008d96      int32_t result = *(uint32_t*)0x20b9dc + 0xa * (uint32_t)arg1[3];
00008d98      *(uint32_t*)0x20b9dc = result;
00008d9a      return result;
00008d64  }


00008d9c    int32_t sub_8d9c()

00008d9c  {
00008da4      int32_t r5 = *(uint32_t*)0x20b9cc;
00008da6      *(uint32_t*)0x20b9d0 = r5;
00008daa      *(uint32_t*)0x20ba04 = *(uint32_t*)0x20ba00;
00008db6      *(uint32_t*)0x20b9e0 = 0xa * sub_12b2a(*(uint32_t*)0x20b9dc, 0xa);
00008dc4      *(uint32_t*)0x20b9e8 = 0x64 * sub_12b2a(*(uint32_t*)0x20b9e4, 0x64);
00008dc6      int32_t result = *(uint32_t*)0x20b9f8;
00008dc8      *(uint32_t*)0x20b9d4 = r5;
00008dca      *(uint32_t*)0x20b9fc = result;
00008dcc      return result;
00008d9c  }


00008dce    int32_t sub_8dce()

00008dce  {
00008dd4      void var_20;
00008dd4      sub_8d26(&var_20);
00008de2      void* var_28;
00008de2      uint32_t r2;
00008de2      int32_t r3;
00008de2      
00008de2      if (!sub_217a())
00008de2      {
00008e1c          r2 = sub_216a() - 1;
00008e20          r3 = 0x118;
00008e22          int32_t var_24_1 = 0xc;
00008e24          var_28 = &var_20;
00008de2      }
00008de2      else
00008de2      {
00008df6          int32_t r4_2 = 0xc * sub_12b2a(sub_217a() + 0x3b, 0x3c) - 8;
00008dfc          r2 = sub_216a();
00008dfe          r3 = r4_2;
00008e00          int32_t var_24 = 0xc;
00008e02          var_28 = &var_20;
00008de2      }
00008de2      
00008e0a      sub_3372(0x83e22c, 0x20b9c0, r2, r3, var_28, 0xc);
00008e16      return sub_529c(4);
00008dce  }


00008e28    int32_t sub_8e28()

00008e28  {
00008e2e      int32_t var_68;
00008e2e      sub_8c00(&var_68);
00008e4c      return sub_3372(0x83e238, 0x20b9c4, var_68, 0, &var_68, 0x64);
00008e28  }


00008e4e    uint32_t sub_8e4e()

00008e4e  {
00008e54      uint32_t result = (uint32_t)*(uint8_t*)0x208852;
00008e54      
00008e58      if (result)
00008e58      {
00008e8a          if (sub_12b2a(*(uint32_t*)0x20b9e4 - *(uint32_t*)0x20b9e8, 0x64)
00008e8a              | (*(uint32_t*)0x20b9cc - *(uint32_t*)0x20b9d0)
00008e8a              | (*(uint32_t*)0x20ba00 - *(uint32_t*)0x20ba04)
00008e8a              | sub_12b2a(*(uint32_t*)0x20b9dc - *(uint32_t*)0x20b9e0, 0xa))
00008e8a          {
00008e8e              void var_18;
00008e8e              sub_8d26(&var_18);
00008e92              int32_t r0_7 = sub_217a();
00008e98              int32_t r1_6;
00008e98              
00008e98              if (!r0_7)
00008ea0                  r1_6 = sub_12b2a(sub_183e(), 0x3c);
00008ea0              
00008ea6              if (r0_7 || r1_6)
00008ea6              {
00008eba                  int32_t r4_2 = 0xc * sub_12b2a(sub_217a() + 0x3b, 0x3c) - 8;
00008ed2                  sub_3372(0x83e22c, 0x20b9c0, sub_216a(), r4_2, &var_18, 0xc);
00008ea6              }
00008e8a          }
00008e8a          
00008ed6          result = sub_8c92();
00008ed6          
00008edc          if (result)
00008edc          {
00008ede              sub_8e28();
00008ee2              return sub_8a9a();
00008edc          }
00008e58      }
00008e58      
00008ee8      return result;
00008e4e  }


00008eea    int32_t sub_8eea(int32_t arg1)

00008eea  {
00008ef4      *(uint32_t*)0x20ba00 += arg1;
00008efe      return sub_8ab0(0, arg1);
00008eea  }


00008f00    uint32_t sub_8f00()

00008f00  {
00008f0c      if (*(uint32_t*)0x20b9d4 != *(uint32_t*)0x20b9cc)
00008f0c      {
00008f24          void* r0_5 = sub_12b2a(sub_12b2a(sub_217a(), 0x3c) + 0x17, 0x18) + 0x208704;
00008f24              /* "00.33_250117" */  /* "0.33_250117" */
00008f2a          *(uint8_t*)((char*)r0_5 + 0xc) += 1;
00008f30          *(uint32_t*)0x20b9f8 += 1;
00008f0c      }
00008f0c      
00008f34      int32_t r0_8 = *(uint32_t*)0x20b9cc;
00008f38      *(uint8_t*)0x20b9d8 = (uint8_t)r0_8 - *(uint8_t*)0x20b9d4;
00008f3a      *(uint32_t*)0x20b9d4 = r0_8;
00008f40      *(uint8_t*)0x20b9c8 = sub_89aa();
00008f40      
00008f4e      if (!sub_12b2a(sub_217a(), 0x3c) && !sub_12b2a(sub_217a(), 0x3c))
00008f64          0xff81b968(0x208710, 0x18);  /* "0.33_250117" */
00008f64      
00008f74      if (!sub_12b2a(sub_217a(), 0x3c))
00008f74      {
00008f76          sub_8dce();
00008f7a          sub_8d9c();
00008f74      }
00008f74      
00008f7e      uint32_t result = sub_8c92();
00008f7e      
00008f84      if (result != 2)
00008f8e          return result;
00008f8e      
00008f86      sub_8e28();
00008f8a      return sub_8a9a();
00008f00  }


00008f90    int32_t sub_8f90()

00008f90  {
00008f9e      return *(uint32_t*)0x20b9cc - *(uint32_t*)0x20b9d4 + (uint32_t)*(uint8_t*)0x20b9d8;
00008f90  }


00008fa0    int32_t sub_8fa0()

00008fa0  {
00008fa8      sub_8d0e(*(uint32_t*)0x20b9cc);
00008fae      *(uint32_t*)0x20b9cc = 0;
00008fb0      *(uint32_t*)0x20b9d0 = 0;
00008fb2      *(uint32_t*)0x20b9f0 = 0;
00008fb4      *(uint32_t*)0x20b9f8 = 0;
00008fb6      *(uint32_t*)0x20b9dc = 0;
00008fb8      *(uint32_t*)0x20b9e4 = 0;
00008fba      *(uint32_t*)0x20ba00 = 0;
00008fbc      *(uint32_t*)0x20b9e0 = 0;
00008fbe      *(uint32_t*)0x20b9e8 = 0;
00008fc0      *(uint32_t*)0x20b9fc = 0;
00008fc2      *(uint32_t*)0x20ba04 = 0;
00008fc4      *(uint32_t*)0x20b9d4 = 0;
00008fc6      return 0;
00008fa0  }


00008fc8    int32_t sub_8fc8() __pure

00008fc8  {
00008fca      return 0;
00008fc8  }


00008fcc    void* sub_8fcc(int32_t arg1)

00008fcc  {
00008fdc      return sub_3404(0x83e22c, *(uint32_t*)0x20b9c0, arg1);
00008fcc  }


00008fde    int32_t sub_8fde(int32_t arg1, int32_t arg2)

00008fde  {
00008fea      if (sub_216a() == arg1 && sub_8c92())
00008ffa          return sub_8c00(arg2);
00008ffa      
00009008      void* r0_4 = sub_3404(0x83e238, *(uint32_t*)0x20b9c4, arg1);
00009008      
0000900e      if (!r0_4)
00009022          return 0xff81b968(arg2, 0x64);
00009022      
00009018      return 0xff7dc2f8(arg2, r0_4, 0x64);
00008fde  }


00009024    int32_t sub_9024(int32_t arg1)

00009024  {
00009030      uint32_t r5 = (uint32_t)(sub_216a() - 6);
00009030      
00009034      if (r5 < 7)
00009036          r5 = 7;
00009036      
0000906a      int32_t result;
0000906a      
0000906a      for (int32_t i = 0; i < 7; i += 1)
0000906a      {
00009042          void var_78;
00009042          sub_8fde((uint32_t)((uint16_t)r5 + (uint16_t)i), &var_78);
0000904c          char var_74;
0000904c          void var_72;
0000904c          
0000904c          if (!(uint32_t)var_74)
00009062              result = 0xff81b964((i << 3) + arg1, 8);
0000904c          else
00009056              result = 0xff81b898((i << 3) + arg1, &var_72, 8);
0000906a      }
0000906a      
0000906e      return result;
00009024  }


00009070    uint32_t sub_9070()

00009070  {
0000907e      *(uint32_t*)0x20b9ec = 0x64 * sub_16a0();
00009080      uint32_t result = sub_166c();
00009080      
00009086      if (result == 1)
00009086      {
0000908a          int32_t r0_3;
0000908a          int32_t r1_1;
0000908a          r0_3 = j_sub_134d8(*(uint32_t*)0x20b9ec);
00009092          int32_t r0_4;
00009092          int32_t r1_2;
00009092          r0_4 = sub_13530(r0_3, r1_1, 0x4cc25072, 0x3ff9bfdb);
00009096          result = sub_13490(r0_4, r1_2);
0000909a          *(uint32_t*)0x20b9ec = result;
00009086      }
00009086      
0000909c      return result;
00009070  }


0000909e    void* sub_909e()

0000909e  {
0000909e      int32_t r3;
0000909e      int32_t var_18 = r3;
000090a6      0xff81b968(0x20b9c8, 0x40);
000090aa      sub_9070();
000090ae      uint32_t r0 = sub_216a();
000090bc      void* r0_1 = sub_3404(0x83e22c, *(uint32_t*)0x20b9c0, r0);
000090bc      
000090c4      if (r0_1)
000090c4      {
000090d0          uint32_t r7_1 = (uint32_t)sub_12b2a(sub_217a(), 0x3c);
000090d0          
000090ee          for (uint32_t i = 0; i < r7_1; i = (uint32_t)((uint8_t)i + 1))
000090ee          {
000090da              void* r0_5 = i * 0xc + r0_1;
000090da              
000090e0              if ((uint32_t)*(uint16_t*)((char*)r0_5 + 4) != 0xffff)
000090e4                  sub_8d64((char*)r0_5 + 4);
000090ee          }
000090ee          
000090f0          sub_8d9c();
00009116          void* r0_7 = 0xc * r7_1 + r0_1;
00009116          
0000911c          if ((uint32_t)*(uint16_t*)((char*)r0_7 + 4) != 0xffff)
00009120              sub_8d64((char*)r0_7 + 4);
000090c4      }
000090c4      
00009128      int32_t r5_1 = sub_216a() - 6;
0000912e      0xff81b968(0x20ba08, 0x18);  /* "0.33_250117" */
0000916c      void* result;
0000916c      
0000916c      for (int32_t i_1 = 0; i_1 < 6; )
0000916c      {
0000913e          result = sub_3404(0x83e22c, *(uint32_t*)0x20b9c0, r5_1);
0000913e          
00009144          if (result)
00009144          {
00009146              int32_t r1_4 = 0;
00009146              
0000915e              for (uint32_t j = 0; j < 0x18; j = (uint32_t)((uint8_t)j + 1))  /* "
0000915e                  0.33_250117" */
0000915e              {
00009150                  uint32_t r2_4 = (uint32_t)*(uint16_t*)(j * 0xc + result + 4);
00009150                  
00009154                  if (r2_4 != 0xffff)
00009156                      r1_4 += r2_4;
0000915e              }
0000915e              
00009162              result = i_1 << 2;
00009164              *(uint32_t*)(0x20ba08 + result) = r1_4;
00009144          }
00009144          
00009166          i_1 += 1;
00009168          r5_1 += 1;
0000916c      }
0000916c      
0000916e      return result;
0000909e  }

000090f8  int32_t data_90f8 = 0x20ba08
000090fc  int32_t data_90fc = 0x83e22c
00009100  int32_t data_9100 = 0x208850
00009104  int32_t data_9104 = 0x2086c4
00009108  int32_t data_9108 = 0x4cc25072
0000910c  int32_t data_910c = 0x3ff9bfdb
00009110  int32_t data_9110 = 0xffff

00009170    uint32_t sub_9170()

00009170  {
00009176      return (uint32_t)*(uint8_t*)0x20b9c8;
00009170  }


00009178    int32_t sub_9178()

00009178  {
0000917e      return *(uint32_t*)0x20b9cc;
00009178  }


00009180    int32_t sub_9180()

00009180  {
00009186      return *(uint32_t*)0x20ba00;
00009180  }


00009188    uint32_t sub_9188()

00009188  {
00009190      return (uint32_t)*(uint16_t*)0x20b9f8;
00009188  }


00009192    uint32_t sub_9192()

00009192  {
00009194      uint32_t result = sub_8c92();
00009194      
0000919a      if (!result)
000091a2          return result;
000091a2      
000091a0      return (uint32_t)sub_8a7a();
00009192  }


000091a4    void* sub_91a4(int16_t arg1)

000091a4  {
000091b4      return sub_8fcc((uint32_t)(sub_216a() - arg1));
000091a4  }


000091b6    int32_t sub_91b6(int32_t arg1)

000091b6  {
000091bc      int32_t result = *(uint32_t*)0x20b9cc + arg1;
000091c0      *(uint32_t*)0x20b9cc = result;
000091c0      
000091c4      if (result > 0x1869f)
000091c6          *(uint32_t*)0x20b9cc = 0x1869f;
000091c6      
000091c8      return result;
000091b6  }


000091ca    int32_t sub_91ca()

000091ca  {
000091d0      return *(uint32_t*)0x20b9ec;
000091ca  }


000091d2    int32_t sub_91d2(int32_t arg1)

000091d2  {
000091d8      int32_t result = *(uint32_t*)0x20b9e4 + arg1;
000091da      *(uint32_t*)0x20b9e4 = result;
000091dc      return result;
000091d2  }


000091de    int32_t sub_91de(int32_t arg1)

000091de  {
000091e4      int32_t result = *(uint32_t*)0x20b9dc + arg1;
000091e6      *(uint32_t*)0x20b9dc = result;
000091e8      return result;
000091de  }


000091ea    int32_t sub_91ea()

000091ea  {
000091f2      *(uint8_t*)0x20b9c8 = 0;
000091f8      return sub_8a9a();
000091ea  }


000091fa    int32_t sub_91fa() __pure

000091fa  {
000091fa      return;
000091fa  }


000091fc    int32_t sub_91fc()

000091fc  {
00009200      sub_3262(0x83e22c);
0000920c      return sub_3262(0x83e238);
000091fc  }


0000920e    int32_t sub_920e(int32_t arg1, int32_t* arg2, int32_t arg3, char* arg4)

0000920e  {
0000920e      char* var_18 = arg4;
0000920e      int32_t var_1c = arg3;
0000921c      int32_t r0_1 = sub_12b2a(sub_217a(), 0x3c);
00009220      int32_t r4 = 0;
00009224      *(uint32_t*)(arg4 + 4) = 0;
00009226      arg4[1] = 0;
00009228      uint32_t r0_2 = sub_216a();
00009236      void* r0_3 = sub_3404(0x83e22c, *(uint32_t*)0x20b9c0, r0_2);
00009240      int32_t r0_5 = sub_12b3e(arg3, 0x3c);
00009240      
00009248      if (r0_3)
00009248      {
000092a8          for (int32_t i = 0; i < r0_1; i += 1)
000092a8          {
00009252              void* r1_1 = i * 0xc + r0_3;
00009254              uint32_t r2_1 = (uint32_t)*(uint16_t*)((char*)r1_1 + 4);
00009254              
0000925a              if (r2_1 != 0xffff)
0000925a              {
00009260                  if (!arg1)
00009270                      r4 += r2_1;
00009260                  else if (arg1 == 1)
0000927e                      r4 += (uint32_t)*(uint8_t*)((char*)r1_1 + 0xc);
00009264                  else if (arg1 == 2)
0000927e                      r4 += (uint32_t)*(uint16_t*)((char*)r1_1 + 8);
00009268                  else if (arg1 == 3)
0000927e                      r4 += (uint32_t)*(uint16_t*)((char*)r1_1 + 0xa);
0000925a              }
0000925a              
00009284              int32_t r0_10;
00009284              int32_t r1_3;
00009284              r0_10 = sub_12b3e(i, r0_5);
00009284              
0000928e              if (r1_3 == r0_5 - 1)
0000928e              {
00009294                  if (*(uint32_t*)(arg4 + 4) < r4)
00009294                  {
00009296                      *(uint32_t*)(arg4 + 4) = r4;
00009298                      arg4[1] = (char)r0_10;
00009294                  }
00009294                  
0000929e                  arg2[r0_10] = r4;
000092a0                  r4 = 0;
0000928e              }
000092a8          }
00009248      }
00009248      
000092b2      if (!arg1)
000092ce          r4 += *(uint32_t*)0x20b9cc - *(uint32_t*)0x20b9d0;
000092b2      else if (arg1 == 1)
000092ce          r4 += *(uint32_t*)0x20b9f8 - *(uint32_t*)0x20b9fc;
000092b6      else if (arg1 == 2)
000092ce          r4 += *(uint32_t*)0x20b9e4 - *(uint32_t*)0x20b9e8;
000092ba      else if (arg1 == 3)
000092ce          r4 += *(uint32_t*)0x20b9dc - *(uint32_t*)0x20b9e0;
000092ce      
000092d6      arg2[r0_1] = r4;
000092dc      char r0_19 = sub_12b3e(r0_1, r0_5);
000092e2      *(uint8_t*)arg4 = r0_19 + 1;
000092e2      
000092e8      if (*(uint32_t*)(arg4 + 4) < r4)
000092e8      {
000092ea          *(uint32_t*)(arg4 + 4) = r4;
000092ec          arg4[1] = r0_19;
000092e8      }
000092e8      
000092ee      int32_t result = *(uint32_t*)(arg4 + 4);
000092ee      
000092f2      if (!result)
000092f4          *(uint8_t*)arg4 = (char)result;
000092f4      
000092f8      return result;
0000920e  }

00009306                    43 48 10 b5 40 21 40 38 12 f4 2b f3 40 49 40 48 48 39 fa f7 98 f8 3d 49 3e 48        CH..@!@8..+.@I@HH9....=I>H
00009320  44 39 0c 30 fa f7 92 f8 ff f7 a2 fe 10 bd                                                        D9.0..........

0000932e    int32_t sub_932e()

0000932e  {
00009334      return *(uint32_t*)0x20b9dc;
0000932e  }


00009336    int32_t sub_9336()

00009336  {
00009344      return sub_12b2a(*(uint32_t*)0x20b9e4, 0x64);
00009336  }


00009346    uint32_t sub_9346()

00009346  {
0000934e      return (uint32_t)*(uint8_t*)0x208851 << 0x1f >> 0x1f;  /* "0117" */
00009346  }


00009350    uint8_t sub_9350(int32_t arg1)

00009350  {
0000935a      uint8_t result = (char)(arg1 << 0x1f >> 0x1f);  /* "0117" */
0000935e      *(uint8_t*)0x208851 = (char)((uint32_t)*(uint8_t*)0x208851 >> 1 << 1) | result;
00009360      return result;
00009350  }


00009362    uint32_t sub_9362()

00009362  {
0000936a      return (uint32_t)*(uint8_t*)0x208851 << 0x1e >> 0x1f;  /* "50117" */  /* "0117" */
00009362  }


0000936c    uint8_t sub_936c(int32_t arg1)

0000936c  {
00009376      uint8_t result = (char)(arg1 << 0x1f >> 0x1e);  /* "50117" */  /* "0117" */
0000937a      *(uint8_t*)0x208851 = (*(uint8_t*)0x208851 & 0xfd) | result;
0000937c      return result;
0000936c  }


0000937e    int32_t sub_937e()

0000937e  {
00009388      uint32_t r0 = (uint32_t)*(uint8_t*)0x208851;
00009388      
0000938c      if (*(uint32_t*)0x20b9e4 >= *(uint32_t*)0x20b9ec)
000093a0          *(uint8_t*)0x208851 = (uint8_t)r0 | 2;
0000938c      else if (r0 << 0x1e < 0)  /* "50117" */
00009390      {
00009396          *(uint8_t*)0x208851 = (uint8_t)r0 & 0xfd;
0000939a          return 1;
00009390      }
00009390      
000093a4      return 0;
0000937e  }


000093a6    uint32_t sub_93a6()

000093a6  {
000093ae      return (uint32_t)*(uint8_t*)0x208851 << 0x1d >> 0x1f;  /* "250117" */  /* "0117" */
000093a6  }


000093b0    uint8_t sub_93b0(int32_t arg1)

000093b0  {
000093ba      uint8_t result = (char)(arg1 << 0x1f >> 0x1d);  /* "250117" */  /* "0117" */
000093be      *(uint8_t*)0x208851 = (*(uint8_t*)0x208851 & 0xfb) | result;
000093c0      return result;
000093b0  }


000093c2    int32_t sub_93c2()

000093c2  {
000093c8      return sub_183e();
000093c2  }


000093ca    uint32_t sub_93ca()

000093ca  {
000093d2      return sub_b658(&data_0);
000093ca  }


000093d4    int32_t sub_93d4()

000093d4  {
000093da      return sub_ccfc();
000093d4  }


000093dc    void sub_93dc(uint32_t arg1)

000093dc  {
000093e4      if (arg1 == 1 || arg1 == 7)
000093e6          sub_752c();
000093dc  }


000093ec    int32_t sub_93ec()

000093ec  {
000093f2      *(uint32_t*)0x20b9cc = 0;
000093f4      *(uint32_t*)0x20b9d0 = 0;
000093f6      *(uint32_t*)0x20b9d4 = 0;
000093f8      *(uint8_t*)0x20b9d8 = 0;
000093fa      *(uint32_t*)0x20b9dc = 0;
000093fc      *(uint32_t*)0x20b9e0 = 0;
000093fe      *(uint32_t*)0x20b9e4 = 0;
00009400      *(uint32_t*)0x20b9e8 = 0;
00009406      *(uint32_t*)0x20b9f0 = 0;
00009408      *(uint8_t*)0x20b9f4 = 0;
0000940a      *(uint32_t*)0x20b9f8 = 0;
0000940c      *(uint32_t*)0x20b9fc = 0;
0000940e      *(uint32_t*)0x20ba00 = 0;
00009410      *(uint32_t*)0x20ba04 = 0;
00009412      return 0;
000093ec  }

00009414  int32_t data_9414 = 0x20ba08
00009418  int32_t data_9418 = 0x83e22c
0000941c  int32_t data_941c = 0x1869f
00009420  int32_t data_9420 = 0xffff
00009424  int32_t data_9424 = 0x208850

00009428    int32_t sub_9428()

00009428  {
00009430      sub_f69e(0x16, 0x5a);  /* ".00.33_250117" */
00009442      sub_f6bc(0x16, 1, 1, 1, 0, 0);  /* ".00.33_250117" */
0000944e      sub_fc34(0xc000100, 0x21000000, 1);
00009454      int32_t var_28;
00009454      sub_10464(&var_28);
0000945e      var_28 = sub_104aa(0x16);  /* ".00.33_250117" */
00009462      char var_24 = 0;
00009466      char var_23 = 1;
00009468      char var_22 = 1;
0000946a      char var_21 = 1;
0000946c      char var_20 = 0;
00009470      int32_t var_1c = 1;
00009472      sub_103ac(&var_28);
0000947a      char var_18 = 0x1b;  /* "3_250117" */
0000947e      int32_t var_14 = 3;
00009482      char var_10 = 1;
00009486      sub_f5a8(&var_18);
00009492      sub_10498(sub_104aa(0x16), 1);  /* ".00.33_250117" */
0000949e      sub_1047e(sub_104aa(0x16), 1);  /* ".00.33_250117" */
000094a8      sub_10490(sub_104aa(0x16));  /* ".00.33_250117" */
000094b4      sub_10498(sub_104aa(0x16), 0);  /* ".00.33_250117" */
000094c4      return sub_f790(0x16, 0, 0);  /* ".00.33_250117" */
00009428  }


000094c6    int32_t sub_94c6()

000094c6  {
000094c6      int32_t r3;
000094c6      int32_t var_c = r3;
000094c6      int32_t r2;
000094c6      int32_t var_10 = r2;
000094da      return sub_f6bc(0x16, 0, 1, 1, 0, 0);  /* ".00.33_250117" */
000094c6  }


000094dc    int32_t sub_94dc()

000094dc  {
000094dc      int32_t r3;
000094dc      int32_t var_c = r3;
000094dc      int32_t r2;
000094dc      int32_t var_10 = r2;
000094f0      return sub_f6bc(0x16, 1, 1, 1, 0, 0);  /* ".00.33_250117" */
000094dc  }


000094f2    int32_t sub_94f2() __pure

000094f2  {
000094f4      return 1;
000094f2  }


000094f6    int32_t sub_94f6()

000094f6  {
00009500      sub_1047e(sub_104aa(0x16), 0);  /* ".00.33_250117" */
0000950c      sub_10498(sub_104aa(0x16), 1);  /* ".00.33_250117" */
00009516      sub_10490(sub_104aa(0x16));  /* ".00.33_250117" */
0000951a      sub_a8d4();
00009526      sub_1047e(sub_104aa(0x16), 1);  /* ".00.33_250117" */
0000952c      int32_t result = sub_104aa(0x16);  /* ".00.33_250117" */
00009532      sub_10498(result, 0);
00009536      return result;
000094f6  }


00009538    int32_t sub_9538()

00009538  {
00009542      if (j_sub_f7f6(0x16) != 1)  /* ".00.33_250117" */
00009546          return 0;
00009546      
0000954a      sub_f92e(0x16);  /* ".00.33_250117" */
00009550      return 1;
00009538  }


00009552    int32_t sub_9552()

00009552  {
0000955a      return sub_7760(0x83e244);
00009552  }

0000955c  int32_t data_955c = 0xc000100
00009560  int32_t data_9560 = 0x83e244

00009564    int32_t sub_9564(int32_t arg1, char* arg2, int32_t arg3)

00009564  {
00009564      int32_t var_18 = arg3;
00009564      char* var_1c = arg2;
0000956c      int32_t result = 0;
0000956c      
00009578      if (0xff7ef444(*(uint32_t*)0x2088a8, 0x64))
00009578      {
00009588          if (!sub_b524(0x19, arg1, arg2, arg3))  /* ".33_250117" */
00009594              result = 1;
00009594          
0000958c          0xff7ef46c(*(uint32_t*)0x2088a8);
00009578      }
00009578      
00009592      return result;
00009564  }


00009598    int32_t sub_9598(int32_t arg1, int32_t arg2)

00009598  {
00009598      int32_t var_14 = arg2;
00009598      int32_t var_18 = arg1;
0000959e      int32_t result = 0;
0000959e      
000095aa      if (0xff7ef444(*(uint32_t*)0x2088a8, 0x64))
000095aa      {
000095ba          if (!sub_b458(0x19, arg1, &var_14, 1))  /* ".33_250117" */
000095c6              result = 1;
000095c6          
000095be          0xff7ef46c(*(uint32_t*)0x2088a8);
000095aa      }
000095aa      
000095c4      return result;
00009598  }


000095ca    uint32_t sub_95ca(int32_t arg1, int32_t arg2, int32_t arg3, int32_t arg4)

000095ca  {
000095ca      int32_t var_10 = arg4;
000095d2      var_10 = 0;
000095d2      
000095de      if (0xff7ef444(*(uint32_t*)0x2088a8, 0x64))
000095de      {
000095e6          sub_9564(arg1, &var_10, 1);
000095ec          0xff7ef46c(*(uint32_t*)0x2088a8);
000095de      }
000095de      
000095f4      return (uint32_t)(uint8_t)var_10;
000095ca  }


000095f6    int32_t sub_95f6(int32_t arg1, char* arg2, int32_t arg3)

000095f6  {
000095f6      int32_t var_18 = arg3;
000095f6      char* var_1c = arg2;
000095fe      int32_t result = 0;
000095fe      
0000960a      if (0xff7ef444(*(uint32_t*)0x2088a8, 0x64))
0000960a      {
0000961a          if (!sub_b524(0x1f, arg1, arg2, arg3))  /* "0117" */
00009626              result = 1;
00009626          
0000961e          0xff7ef46c(*(uint32_t*)0x2088a8);
0000960a      }
0000960a      
00009624      return result;
000095f6  }


0000962a    int32_t sub_962a(int32_t arg1, int32_t arg2)

0000962a  {
0000962a      int32_t var_14 = arg2;
0000962a      int32_t var_18 = arg1;
00009630      int32_t result = 0;
00009630      
0000963c      if (0xff7ef444(*(uint32_t*)0x2088a8, 0x64))
0000963c      {
0000964c          if (!sub_b458(0x1f, arg1, &var_14, 1))  /* "0117" */
00009658              result = 1;
00009658          
00009650          0xff7ef46c(*(uint32_t*)0x2088a8);
0000963c      }
0000963c      
00009656      return result;
0000962a  }


0000965c    int32_t sub_965c(int32_t arg1, char* arg2, int32_t arg3)

0000965c  {
0000965c      int32_t var_18 = arg3;
0000965c      char* var_1c = arg2;
00009664      int32_t result = 0;
00009664      
00009670      if (0xff7ef444(*(uint32_t*)0x2088a8, 0x64))
00009670      {
00009680          if (!sub_b524(0x19, arg1, arg2, arg3))  /* ".33_250117" */
0000968c              result = 1;
0000968c          
00009684          0xff7ef46c(*(uint32_t*)0x2088a8);
00009670      }
00009670      
0000968a      return result;
0000965c  }


00009690    int32_t sub_9690(int32_t arg1, int32_t arg2)

00009690  {
00009690      int32_t var_14 = arg2;
00009690      int32_t var_18 = arg1;
00009696      int32_t result = 0;
00009696      
000096a2      if (0xff7ef444(*(uint32_t*)0x2088a8, 0x64))
000096a2      {
000096b2          if (!sub_b458(0x19, arg1, &var_14, 1))  /* ".33_250117" */
000096be              result = 1;
000096be          
000096b6          0xff7ef46c(*(uint32_t*)0x2088a8);
000096a2      }
000096a2      
000096bc      return result;
00009690  }


000096c2    int32_t sub_96c2(int32_t arg1, char* arg2, int32_t arg3)

000096c2  {
000096c2      int32_t var_18 = arg3;
000096c2      char* var_1c = arg2;
000096ca      int32_t result = 0;
000096ca      
000096d6      if (0xff7ef444(*(uint32_t*)0x2088a8, 0x64))
000096d6      {
000096e6          if (!sub_b524(0x20, arg1, arg2, arg3))  /* "117" */
000096f2              result = 1;
000096f2          
000096ea          0xff7ef46c(*(uint32_t*)0x2088a8);
000096d6      }
000096d6      
000096f0      return result;
000096c2  }


000096f6    int32_t sub_96f6(int32_t arg1, int32_t arg2)

000096f6  {
000096f6      int32_t var_14 = arg2;
000096f6      int32_t var_18 = arg1;
000096fc      int32_t result = 0;
000096fc      
00009708      if (0xff7ef444(*(uint32_t*)0x2088a8, 0x64))
00009708      {
00009718          if (!sub_b458(0x20, arg1, &var_14, 1))  /* "117" */
00009724              result = 1;
00009724          
0000971c          0xff7ef46c(*(uint32_t*)0x2088a8);
00009708      }
00009708      
00009722      return result;
000096f6  }


00009728    int32_t sub_9728()

00009728  {
0000972c      /* jump -> *(uint32_t*)0x200120 */
00009728  }


0000972e    int32_t sub_972e(int32_t arg1, int32_t arg2, int32_t arg3, int32_t arg4)

0000972e  {
0000972e      int32_t var_18 = arg4;
00009734      (uint8_t)var_18 = 0;
0000973a      int32_t r0 = sub_962a(0x21, 0x87);  /* "17" */
00009742      *(uint8_t*)0x20ba26 = 0;
00009750      int32_t r4 = sub_95f6(9, &var_18, 1) & r0;
00009750      
0000977a      while ((uint32_t)(uint8_t)var_18)
0000977a      {
00009780          if ((uint32_t)*(uint8_t*)0x20ba26 >= 0xa)
00009780              break;
00009780          
0000975e          int32_t r5_2 = sub_962a(0x21, 0x87) & r4;  /* "17" */
0000976e          r4 = sub_95f6(9, &var_18, 1) & r5_2;
00009772          *(uint8_t*)0x20ba26 += 1;
0000977a      }
0000977a      
00009784      if (!r4)
0000978c          return 0;
0000978c      
00009788      return 1;
0000972e  }


0000978e    int32_t sub_978e(int32_t arg1, int32_t arg2, int32_t arg3, int32_t arg4)

0000978e  {
0000978e      int32_t var_10 = arg4;
00009794      (uint8_t)var_10 = 0;
0000979c      int32_t r0 = sub_962a(0x11, 0x40);  /* "Y02_3.00.33_250117" */
000097b0      int32_t result = sub_95f6(0x11, &var_10, 1) & r0;  /* "Y02_3.00.33_250117" */
000097b0      
000097b4      if ((uint32_t)(uint8_t)var_10 != 0x40)
000097b6          return 0;
000097b6      
000097bc      if (!result)
000097b8          return result;
000097b8      
000097c0      return 1;
0000978e  }


000097c2    int32_t sub_97c2(int32_t arg1, int32_t arg2, int32_t arg3, int32_t arg4)

000097c2  {
000097c2      int32_t var_10 = arg4;
000097c8      (uint8_t)var_10 = 0;
000097d0      int32_t r0 = sub_962a(0x11, 0x80);  /* "Y02_3.00.33_250117" */
000097e4      int32_t result = sub_95f6(0x11, &var_10, 1) & r0;  /* "Y02_3.00.33_250117" */
000097e4      
000097e8      if ((uint32_t)(uint8_t)var_10 != 0x40)
000097ea          return 0;
000097ea      
000097f0      if (!result)
000097ec          return result;
000097ec      
000097f4      return 1;
000097c2  }


000097f6    int32_t sub_97f6()

000097f6  {
000097fc      int32_t r0 = sub_962a(0x1a, 0);  /* "33_250117" */
0000980c      int32_t r4_1 = sub_962a(0x17, 0x40) & r0;  /* "00.33_250117" */
00009818      int32_t r5_2 = sub_962a(0x3d, 0x20) & r4_1;  /* "117" */
00009822      int32_t result = sub_962a(0x3e, 0xc4) & r5_2;
00009822      
00009824      if (!result)
00009828          return result;
00009828      
00009826      return 1;
000097f6  }


0000982a    int32_t sub_982a()

0000982a  {
00009830      int32_t r0 = sub_962a(0x1a, 2);  /* "33_250117" */
0000983e      int32_t result = sub_962a(0x17, 0x40) & r0;  /* "00.33_250117" */
0000983e      
00009840      if (!result)
00009844          return result;
00009844      
00009842      return 1;
0000982a  }


00009846    int32_t sub_9846()

00009846  {
0000984c      int32_t r0 = sub_962a(0x16, 7);  /* ".00.33_250117" */
0000985c      int32_t r4_1 = sub_962a(0x2a, 4) & r0;
00009868      int32_t r5_2 = sub_962a(0x28, 3) & r4_1;
00009874      int32_t r4_3 = sub_962a(0x27, 0) & r5_2;
00009882      int32_t r5_4 = sub_962a(0x19, 4) & r4_3;  /* ".33_250117" */
0000988e      int32_t r4_5 = sub_962a(0xb, 7) & r5_4;
0000989a      int32_t r5_6 = sub_962a(0x21, 7) & r4_5;  /* "17" */
000098a0      sub_962a(0x11, 0x80);  /* "Y02_3.00.33_250117" */
000098a8      sub_962a(0x10, 0xa);  /* "RY02_3.00.33_250117" */
000098b0      sub_962a(0x11, 0x7c);  /* "Y02_3.00.33_250117" */
000098b0      
000098b6      if (!r5_6)
000098be          return 0;
000098be      
000098ba      return 1;
00009846  }


000098c0    int32_t sub_98c0()

000098c0  {
000098c6      sub_962a(0x11, 0x74);  /* "Y02_3.00.33_250117" */
000098ce      sub_962a(0x10, 0xf);  /* "RY02_3.00.33_250117" */
000098da      return sub_962a(0x3e, 0xc8);
000098c0  }


000098dc    int32_t sub_98dc()

000098dc  {
000098e2      sub_962a(0x14, 0xb6);  /* "_3.00.33_250117" */
000098ec      (*(uint32_t*)0x200120)(0x32);  /* "02_V3.0" */
000098f2      sub_962a(0xf, 5);
000098fa      sub_962a(0x5e, 0xc0);
00009902      sub_962a(0x34, 4);  /* "_V3.0" */
0000990a      sub_962a(0x20, 5);  /* "117" */
00009912      sub_962a(0x1a, 2);  /* "33_250117" */
0000991a      sub_962a(0x17, 0x40);  /* "00.33_250117" */
00009922      sub_962a(0x3d, 0x20);  /* "117" */
0000992a      return sub_98c0();
000098dc  }


0000992c    uint32_t sub_992c(int32_t arg1, int32_t arg2, int32_t arg3, int32_t arg4)

0000992c  {
0000992c      int32_t var_c = arg4;
0000992c      int32_t var_10 = arg3;
00009930      uint32_t result = (uint32_t)*(uint8_t*)0x20ba20;
00009930      
00009934      if (result != 0x11)  /* "Y02_3.00.33_250117" */
00009934      {
00009938          if (result == 0x23)
00009964              return sub_972e(result, arg2, arg3, arg4);
00009964          
0000993c          if (result == 0x33)  /* "2_V3.0" */
00009970              return sub_95ca(0x31, arg2, arg3, arg4);  /* "Y02_V3.0" */
00009970          
00009940          if (result == 0x15)  /* "3.00.33_250117" */
00009970              return sub_95ca(0x17, arg2, arg3, arg4);  /* "00.33_250117" */
00009970          
00009948          if (result != 0x28 && result == 0x44)
00009950              return sub_965c(0x37, &var_10, 5);  /* ".0" */
00009934      }
00009934      
00009954      return result;
0000992c  }

00009956                                                                    00 00                                                ..

00009958  int32_t data_9958 = 0x2088a8
0000995c  int32_t data_995c = 0x200120
00009960  int32_t data_9960 = 0x20ba20

00009976    int32_t sub_9976(int32_t arg1, int32_t arg2, int32_t arg3, int32_t arg4)

00009976  {
00009976      int32_t var_18 = arg4;
0000997a      uint32_t r0 = (uint32_t)*(uint8_t*)0x20ba20;
0000997a      
00009982      if (r0 == 0x11 || r0 == 0x28)  /* "Y02_3.00.33_250117" */
00009982      {
00009996          sub_9598(0x22, 0);  /* "7" */
0000999e          sub_9598(0x38, 0);  /* "0" */
000099a6          sub_9598(0x20, 0x37);  /* "117" */  /* ".0" */
000099ae          sub_9598(0x23, 0x90);
000099b6          sub_9598(0x24, 0x40);
000099be          sub_9598(0x2e, 0);
000099c6          sub_9598(0x2e, 0x80);
00009982      }
00009982      else if (r0 == 0x23)
00009986      {
000099cc          int32_t r0_1;
000099cc          int32_t r1;
000099cc          int32_t r2;
000099cc          int32_t r3;
000099cc          r0_1 = sub_98dc();
000099d0          sub_992c(r0_1, r1, r2, r3);
00009986      }
00009986      else if (r0 == 0x44)
0000998a      {
000099da          sub_9690(0x25, 0x10);  /* "RY02_3.00.33_250117" */
000099e2          sub_9690(0x3f, 0);
000099ea          sub_9690(0x25, 0x50);
000099f2          sub_9690(0x2e, 0xdf);
000099fa          sub_9690(0x20, 0x32);  /* "117" */  /* "02_V3.0" */
00009a02          sub_9690(0x23, 0);
00009a0a          sub_9690(0x22, 0);  /* "7" */
0000998a      }
0000998a      else if (r0 == 0x48)
0000998e      {
00009a18          sub_96c2(0x13, &var_18, 1);  /* "2_3.00.33_250117" */
00009a26          int32_t r1_4 = ((uint32_t)(uint8_t)var_18 & 0xef) | 0x20;  /* "117" */
00009a28          (uint8_t)var_18 = (char)r1_4;
00009a2c          sub_96f6(0x13, r1_4);  /* "2_3.00.33_250117" */
00009a36          sub_96c2(0x10, &var_18, 1);  /* "RY02_3.00.33_250117" */
00009a40          int32_t r1_7 = (uint32_t)(uint8_t)var_18 | 0x10;  /* "RY02_3.00.33_250117" */
00009a42          (uint8_t)var_18 = (char)r1_7;
00009a44          sub_96f6(0x10, r1_7);  /* "RY02_3.00.33_250117" */
00009a4e          sub_96c2(0x13, &var_18, 1);  /* "2_3.00.33_250117" */
00009a58          int32_t r1_10 = (uint32_t)(uint8_t)var_18 | 8;
00009a5a          (uint8_t)var_18 = (char)r1_10;
00009a5e          sub_96f6(0x13, r1_10);  /* "2_3.00.33_250117" */
00009a6a          sub_96c2(0x15, &var_18, 1);  /* "3.00.33_250117" */
00009a80          int32_t r1_14 =
00009a80              (((uint32_t)(uint8_t)var_18 | 6 | 8) & 0xbf) << 0x19 >> 0x19 & 0xef;
00009a80              /* ".33_250117" */
00009a82          (uint8_t)var_18 = (char)r1_14;
00009a86          sub_96f6(0x15, r1_14);  /* "3.00.33_250117" */
00009a92          sub_96c2(0x16, &var_18, 1);  /* ".00.33_250117" */
00009a9c          int32_t r1_17 = (uint32_t)(uint8_t)var_18 | 0xa1;
00009a9e          (uint8_t)var_18 = (char)r1_17;
00009aa2          sub_96f6(0x16, r1_17);  /* ".00.33_250117" */
00009aae          sub_96c2(0x14, &var_18, 1);  /* "_3.00.33_250117" */
00009ac4          int32_t r1_22 = (((uint32_t)(uint8_t)var_18 | 1) << 0x1c >> 0x1c | 0x60) & 0xf3;
00009ac4              /* "_250117" */
00009ac6          (uint8_t)var_18 = (char)r1_22;
00009aca          sub_96f6(0x14, r1_22);  /* "_3.00.33_250117" */
00009ad6          sub_96c2(0x12, &var_18, 1);  /* "02_3.00.33_250117" */
00009ae4          int32_t r1_26 = ((uint32_t)(uint8_t)var_18 & 0xfb) | 4;
00009ae6          (uint8_t)var_18 = (char)r1_26;
00009aea          sub_96f6(0x12, r1_26);  /* "02_3.00.33_250117" */
0000998e      }
0000998e      
00009af4      return 0xff7ef196(1);
00009976  }


00009af6    uint32_t sub_9af6(int32_t arg1, int32_t arg2, int32_t arg3, int32_t arg4)

00009af6  {
00009af6      int32_t var_10 = arg4;
00009af6      
00009b06      if (!sub_9564(0x70, 0x20ba20, 1))
00009b06      {
00009b32          (uint8_t)var_10 = 0xb6;
00009b36          sub_962a(0x14, 0xb6);  /* "_3.00.33_250117" */
00009b3c          sub_9728(0x64);
00009b46          sub_95f6(0, 0x20ba20, 1);
00009b46          
00009b4e          if ((uint32_t)*(uint8_t*)0x20ba20 != 0x23)
00009b4e          {
00009b54              (uint8_t)var_10 = 1;
00009b58              sub_96f6(0x3e, 1);
00009b5e              sub_9728(0x19);  /* ".33_250117" */
00009b68              sub_96c2(0xf, 0x20ba20, 1);
00009b72              sub_96c2(0xf, 0x20ba20, 1);
00009b72              
00009b7a              if ((uint32_t)*(uint8_t*)0x20ba20 == 0x48)
00009b7a              {
00009b82                  sub_96c2(0x10, &var_10, 1);  /* "RY02_3.00.33_250117" */
00009b8c                  int32_t r1_2 = (uint32_t)(uint8_t)var_10 | 0x20;  /* "117" */
00009b90                  (uint8_t)var_10 = (char)r1_2;
00009b94                  sub_96f6(0x10, r1_2);  /* "RY02_3.00.33_250117" */
00009b9a                  sub_9728(0x19);  /* ".33_250117" */
00009b7a              }
00009b4e          }
00009b06      }
00009b06      else
00009b06      {
00009b0c          sub_9690(0x21, 0x44);  /* "17" */
00009b12          sub_9728(0x32);  /* "02_V3.0" */
00009b1c          sub_965c(0xf, 0x20ba20, 1);
00009b1c          
00009b24          if ((uint32_t)*(uint8_t*)0x20ba20 != 0x44)
00009b28              *(uint8_t*)0x20ba20 = 0x11;  /* "Y02_3.00.33_250117" */
00009b06      }
00009b06      
00009b2c      return (uint32_t)*(uint8_t*)0x20ba20;
00009af6  }


00009ba0    int32_t sub_9ba0()

00009ba0  {
00009ba4      int32_t r0;
00009ba4      int32_t r1;
00009ba4      int32_t r2;
00009ba4      int32_t r3;
00009ba4      r0 = sub_9728(0x32);  /* "02_V3.0" */
00009ba8      sub_9af6(r0, r1, r2, r3);
00009bae      uint32_t r0_1 = (uint32_t)*(uint8_t*)0x20ba20;
00009bae      
00009bb6      if (r0_1 != 0x48 && r0_1 != 0x44)
00009bb6      {
00009bbe          if (r0_1 == 0x33 || r0_1 == 0x15)  /* "3.00.33_250117" */  /* "2_V3.0" */
00009bcc              return 0;
00009bcc          
00009bc2          if (r0_1 == 0x11)  /* "Y02_3.00.33_250117" */
00009bc2          {
00009bd4          label_9bd4:
00009bd4              int32_t result = sub_9598(0x20, 0);  /* "117" */
00009bd4              
00009bda              if (!result)
00009bce                  return result;
00009bc2          }
00009bc2          else
00009bc2          {
00009bc6              if (r0_1 != 0x23)
00009bc6              {
00009bca                  if (r0_1 == 0x28)
00009bca                      goto label_9bd4;
00009bca                  
00009bcc                  return 0;
00009bc6              }
00009bc6              
00009bde              sub_98dc();
00009bc2          }
00009bb6      }
00009bb6      
00009be4      return 1;
00009ba0  }


00009be6    void sub_9be6(uint32_t arg1)

00009be6  {
00009bee      if (arg1)
00009bee      {
00009bf0          *(uint8_t*)0x20ba23 = 0;
00009bf0          return;
00009bee      }
00009bee      
00009bf8      arg1 = (uint32_t)(*(uint8_t*)0x20ba23 + 1);
00009bfa      *(uint8_t*)0x20ba23 = (char)arg1;
00009bfa      
00009bfe      if (arg1 < 0xa)
00009c00          return;
00009c00      
00009c00      *(uint8_t*)0x20ba23 = 0;
00009c02      int32_t r0_2;
00009c02      int32_t r1;
00009c02      int32_t r2;
00009c02      int32_t r3;
00009c02      r0_2 = sub_9ba0();
00009c06      sub_9976(r0_2, r1, r2, r3);
00009be6  }


00009c0c    uint32_t sub_9c0c()

00009c0c  {
00009c14      uint32_t r4 = 0;
00009c16      uint32_t r0 = (uint32_t)*(uint8_t*)0x20ba20;
00009c26      int32_t var_1e0;
00009c26      uint32_t var_1d8;
00009c26      char var_1d4;
00009c26      void var_1d0;
00009c26      void var_1cf;
00009c26      char r0_17;
00009c26      int32_t r0_22;
00009c26      uint32_t r0_44;
00009c26      void* r1_11;
00009c26      uint32_t r2_3;
00009c26      
00009c26      if (r0 == 0x11 || r0 == 0x28)  /* "Y02_3.00.33_250117" */
00009c26      {
00009c38          var_1d4 = 0;
00009c3a          var_1e0 = 0;
00009c42          int32_t var_1dc_1 = 0;
00009c44          sub_9564(0x2f, &var_1d4, 1);
00009c4e          uint32_t r0_3 = (uint32_t)var_1d4 << 0x1b >> 0x1b;  /* "3_250117" */
00009c50          var_1d4 = (char)r0_3;
00009c50          
00009c52          if (r0_3)
00009c52          {
00009ca8              for (int32_t i = 0; i < (uint32_t)var_1d4; i += 1)
00009ca8              {
00009c5c                  var_1e0 = 0;
00009c5e                  int24_t var_1dc_2 = 0;
00009c66                  sub_9564(0xa7, &var_1e0, 7);
00009c76                  var_1d8 = (uint32_t)*(uint8_t*)((char*)var_1e0)[2] << 8
00009c76                      | (uint32_t)*(uint8_t*)((char*)var_1e0)[1];
00009c82                  var_1d8 = (uint32_t)(uint8_t)var_1dc_2 << 8
00009c82                      | (uint32_t)*(uint8_t*)((char*)var_1e0)[3];
00009c8c                  var_1d8 = (uint32_t)*(uint8_t*)((char*)var_1dc_2)[2] << 8
00009c8c                      | (uint32_t)*(uint8_t*)((char*)var_1dc_2)[1];
00009c9c                  0xff81b898(i * 6 + &var_1d0 + 1, &*(uint32_t*)((char*)var_1e0)[1], 6);
00009ca8              }
00009ca8              
00009cac              r0_17 = var_1d4;
00009dc2          label_9dc2:
00009dc2              r4 = (uint32_t)(6 * r0_17);
00009dc4              r0_44 = (uint32_t)*(uint16_t*)0x20ba44;
00009dc4              
00009dce              if (r0_44 + r4 < 0x1ec)
00009dce              {
00009cda                  r0_22 = r0_44 + 0x20ba48;
00009cdc                  r2_3 = r4;
00009cde                  r1_11 = &var_1cf;
00009e6c              label_9e6c:
00009e6c                  0xff81b898(r0_22, r1_11, r2_3);
00009e74                  *(uint16_t*)0x20ba44 += (uint16_t)r4;
00009dce              }
00009dce              else
00009dce              {
00009cb8              label_9cb8:
00009cb8                  0xff81b898(r0_44 + 0x20ba48, &var_1cf, 0x1ec - r0_44);
00009cbc                  uint32_t r0_19 = (uint32_t)*(uint16_t*)0x20ba44;
00009cd0                  0xff81b898(0x20ba48, &var_1d0 - r0_19 + 0x1ed, r0_19 + r4 - 0x1ec);
00009e74                  *(uint16_t*)0x20ba44 += (r4 - 0x1ec);
00009dce              }
00009c52          }
00009c26      }
00009c26      else if (r0 == 0x23)
00009c2a      {
00009ce4          (uint8_t)var_1e0 = 0;
00009cec          int32_t r0_23 = sub_95f6(0xc, &var_1e0, 1);
00009cf2          uint32_t r0_26;
00009cf2          
00009cf2          if (r0_23)
00009cf2          {
00009cfa              r0_26 = (uint32_t)(uint8_t)var_1e0 << 0x19 >> 0x19;  /* ".33_250117" */
00009cfc              (uint8_t)var_1e0 = (char)r0_26;
00009cf2          }
00009cf2          
00009d00          if (r0_23 && r0_26 > 0x20)  /* "117" */
00009d00          {
00009d04              (uint8_t)var_1e0 = 0x20;  /* "117" */
00009d14          label_9d14:
00009d14              char var_d8[0xc4];
00009d14              0xff81b968(&var_d8, 0xc0);
00009d26              sub_95f6(0x3f, &var_d8, (uint32_t)(6 * (uint8_t)var_1e0));
00009d26              
00009d52              for (int32_t i_1 = 0; i_1 < (uint32_t)(uint8_t)var_1e0; i_1 += 1)
00009d52              {
00009d3a                  int32_t r0_32 = 6 * i_1;
00009d46                  0xff81b898(r0_32 + &var_1d0 + 1, &var_d8[r0_32], 6);
00009d52              }
00009d52              
00009d56              r0_17 = (uint8_t)var_1e0;
00009d58              goto label_9dc2;
00009d00          }
00009d00          
00009d0e          if ((uint32_t)(uint8_t)var_1e0)
00009d0e              goto label_9d14;
00009c2a      }
00009c2a      else if (r0 == 0x44)
00009c2e      {
00009d62          (uint8_t)var_1d8 = 0;
00009d64          var_1e0 = 0;
00009d6c          int32_t var_1dc_3 = 0;
00009d6e          sub_965c(0x2f, &var_1d8, 1);
00009d78          uint32_t r0_38 = (uint32_t)(uint8_t)var_1d8 << 0x1a >> 0x1a;  /* "33_250117" */
00009d7a          (uint8_t)var_1d8 = (char)r0_38;
00009d7a          
00009d7e          if (r0_38 > 0x20)  /* "117" */
00009d7e          {
00009d82              (uint8_t)var_1d8 = 0x20;  /* "117" */
00009d8a          label_9d8a:
00009d8a              
00009db8              for (int32_t i_2 = 0; i_2 < (uint32_t)(uint8_t)var_1d8; i_2 += 1)
00009db8              {
00009d92                  var_1e0 = 0;
00009d94                  int32_t var_1dc_4 = 0;
00009d9c                  sub_965c(0x28, &var_1e0, 6);
00009dac                  0xff81b898(i_2 * 6 + &var_1d0 + 1, &var_1e0, 6);
00009db8              }
00009db8              
00009dbc              r0_17 = (uint8_t)var_1d8;
00009dbc              goto label_9dc2;
00009d7e          }
00009d7e          
00009d88          if (r0_38)
00009d88              goto label_9d8a;
00009c2e      }
00009c2e      else if (r0 == 0x48)
00009c32      {
00009dd6          (uint8_t)var_1d8 = 0;
00009dd8          var_1d4 = 0;
00009dda          char r7_4 = 0;
00009ddc          var_1e0 = 0;
00009dde          int32_t var_1dc_5 = 0;
00009de6          sub_96c2(0x27, &var_1d8, 1);
00009df0          uint32_t r0_47 = (uint32_t)(uint8_t)var_1d8 << 0x1a >> 0x1a;  /* "33_250117" */
00009df2          (uint8_t)var_1d8 = (char)r0_47;
00009df2          
00009df6          if (r0_47 > 0x20)  /* "117" */
00009df6          {
00009dfa              (uint8_t)var_1d8 = 0x20;  /* "117" */
00009e02          label_9e02:
00009e02              
00009e4c              for (int32_t i_3 = 0; i_3 < (uint32_t)(uint8_t)var_1d8; i_3 += 1)
00009e4c              {
00009e0c                  sub_96c2(0x40, &var_1d4, 1);
00009e14                  uint32_t r0_49 = (uint32_t)var_1d4 >> 3;
00009e14                  
00009e1c                  if (r0_49 == 2 || r0_49 == 0x1f)  /* "0117" */
00009e1c                  {
00009e20                      var_1e0 = 0;
00009e22                      int32_t var_1dc_6 = 0;
00009e2a                      sub_96c2(0x41, &var_1e0, 6);
00009e3c                      0xff81b898(i_3 * 6 + &var_1d0 + 1, &var_1e0, 6);
00009e42                      r7_4 += 1;
00009e1c                  }
00009e4c              }
00009e4c              
00009e50              (uint8_t)var_1d8 = r7_4;
00009e56              r0_44 = (uint32_t)*(uint16_t*)0x20ba44;
00009e58              r4 = (uint32_t)(6 * r7_4);
00009e58              
00009e62              if (r0_44 + r4 >= 0x1ec)
00009e62                  goto label_9cb8;
00009e62              
00009e66              r0_22 = r0_44 + 0x20ba48;
00009e68              r2_3 = r4;
00009e6a              r1_11 = &var_1cf;
00009e6a              goto label_9e6c;
00009df6          }
00009df6          
00009e00          if (r0_47)
00009e00              goto label_9e02;
00009c32      }
00009e76      uint32_t result = (uint32_t)*(uint8_t*)0x20ba3b;
00009e76      
00009e7a      if (!result)
00009e84          return result;
00009e84      
00009e7e      return sub_9be6(r4);
00009c0c  }

00009d5a                                                                                00 00                                        ..

00009d5c  int32_t data_9d5c = 0x20ba20

00009e86    uint32_t sub_9e86(int32_t arg1, int32_t arg2)

00009e86  {
00009e86      int32_t r3;
00009e86      int32_t var_10_1 = r3;
00009e86      int32_t r2;
00009e86      int32_t var_14_1 = r2;
00009e86      int32_t var_18 = arg2;
00009e8e      sub_962a(0x2a, 4);
00009e96      sub_962a(0x16, 7);  /* ".00.33_250117" */
00009e9e      sub_962a(0x19, 4);  /* ".33_250117" */
00009ea8      var_18 = 0x230f0800;
00009ea8      int32_t var_14;
00009ea8      __builtin_strncpy(&var_14, "7FPZ", 4);
00009ea8      int32_t var_10 = 0x877869;
00009eb0      sub_962a(0x28, (uint32_t)*(uint8_t*)(&var_18 + arg1));
00009eb8      int32_t r1_1;
00009eb8      
00009eb8      r1_1 = arg1 > 3 ? 3 : 0;
00009eb8      
00009ec0      sub_962a(0x27, r1_1);
00009ec8      return sub_9c0c();
00009e86  }


00009eca    int32_t sub_9eca()

00009eca  {
00009ed2      sub_962a(0x2a, 0);
00009ede      return sub_962a(0x16, 0);  /* ".00.33_250117" */
00009eca  }


00009ee0    int32_t sub_9ee0(int32_t arg1, int32_t arg2, int32_t arg3, int32_t arg4)

00009ee0  {
00009ee0      int32_t var_14 = arg4;
00009ee0      int32_t var_18 = arg3;
00009ee0      int32_t var_1c = arg2;
00009ee0      int32_t result = arg1;
00009ee6      uint32_t r0 = (uint32_t)*(uint8_t*)0x20ba3b;
00009ee8      int32_t r5 = arg2;
00009ee8      
00009eec      if (!r0)
00009eec      {
00009eee          *(uint8_t*)0x20ba3f = (char)r0;
00009ef0          sub_9976(r0, arg2, arg3, arg4);
00009ef6          *(uint8_t*)0x20ba3b = 1;
00009efc          0xff7ef70c(0x20ba28);
00009f08          arg2 = 0xff7ef6e4(0x20ba28, 0x320);
00009eec      }
00009eec      
00009f10      uint32_t r0_1 = (uint32_t)*(uint8_t*)0x20ba20;
00009f10      
00009f14      if (r0_1 == 0x23)
00009f14      {
00009fc2          sub_9e86(arg1, arg2);
00009fc6          return result;
00009f14      }
00009f14      
00009f1c      if (r0_1 == 0x44 && r5)
00009f1c      {
00009f22          (uint8_t)result = 0xe0;
00009f2a          var_1c = 0xc080300;
00009f2a          var_18 = 0x1614110e;
00009f2a          var_14 = 0x1f1a18;
00009f30          sub_9690(0x32, 0xe0);  /* "02_V3.0" */
00009f36          uint32_t r1 = (uint32_t)*(uint8_t*)(&var_1c + arg1);
00009f3c          (uint8_t)result = (char)r1;
00009f3e          sub_9690(0x30, r1);  /* "RY02_V3.0" */
00009f42          uint32_t r1_1 = (uint32_t)*(uint8_t*)(&var_1c + arg1);
00009f48          (uint8_t)result = (char)r1_1;
00009f4a          sub_9690(0x31, r1_1);  /* "Y02_V3.0" */
00009f52          int32_t r1_3 = (uint32_t)*(uint8_t*)(&var_1c + arg1) | 0xe0;
00009f56          (uint8_t)result = (char)r1_3;
00009f58          sub_9690(0x32, r1_3);  /* "02_V3.0" */
00009f62          (uint8_t)result = 0xc;
00009f66          sub_9690(0x33, 0xc);  /* "2_V3.0" */
00009f6e          (uint8_t)result = 0xe;
00009f72          sub_9690(0x33, 0xe);  /* "2_V3.0" */
00009f7e          sub_965c(0x34, &result, 1);  /* "_V3.0" */
00009f88          uint32_t r1_6 = (uint32_t)(uint8_t)result << 0x19 >> 0x19;  /* ".33_250117" */
00009f8a          (uint8_t)result = (char)r1_6;
00009f8e          sub_9690(0x34, r1_6);  /* "_V3.0" */
00009f9a          sub_965c(0x23, &result, 1);
00009fa4          int32_t r1_9 = (uint32_t)(uint8_t)result | 0x40;
00009fa6          (uint8_t)result = (char)r1_9;
00009faa          sub_9690(0x23, r1_9);
00009fb2          sub_9690(0x3f, 0x20);  /* "117" */
00009fba          sub_9690(0x22, 0x10);  /* "RY02_3.00.33_250117" */  /* "7" */
00009f1c      }
00009f1c      
00009fbe      return result;
00009ee0  }


00009fc8    void sub_9fc8(int32_t arg1)

00009fc8  {
00009fd0      if (!(uint32_t)*(uint8_t*)0x20ba3b)
00009fd0          return;
00009fd0      
00009fd6      uint32_t r1_1 = (uint32_t)*(uint8_t*)0x20ba20;
00009fd6      
00009fda      if (r1_1 == 0x23)
00009fda      {
00009ff6          sub_9eca();
00009ffa          return;
00009fda      }
00009fda      
00009fe2      if (r1_1 == 0x44 && arg1)
00009fe2      {
00009fe8          sub_9690(0x23, 0);
00009ff0          sub_9690(0x3f, 0);
00009fe2      }
00009fc8  }


00009ffc    int32_t sub_9ffc()

00009ffc  {
0000a004      if (sub_aa80())
0000a008          return 0;
0000a008      
0000a00e      uint32_t r0_2 = (uint32_t)*(uint8_t*)0x20ba20;
0000a00e      
0000a016      if (r0_2 == 0x23 || r0_2 == 0x44)
0000a018          sub_aa62();
0000a018      
0000a01e      return 1;
00009ffc  }


0000a020    uint32_t sub_a020(int16_t* arg1, int16_t* arg2, uint16_t* arg3)

0000a020  {
0000a020      uint16_t* var_18 = arg3;
0000a020      int16_t* var_1c = arg2;
0000a02a      uint32_t result = (uint32_t)*(uint8_t*)0x20ba20;
0000a03a      int32_t var_1f0;
0000a03a      int24_t var_1ec_1;
0000a03a      char var_1e8;
0000a03a      uint32_t result_1;
0000a03a      uint32_t result_2;
0000a03a      int16_t var_1dc;
0000a03a      void var_1d8;
0000a03a      void var_1d7;
0000a03a      int32_t r0_35;
0000a03a      void* r1_3;
0000a03a      int32_t r2_3;
0000a03a      
0000a03a      if (result == 0x11 || result == 0x28)  /* "Y02_3.00.33_250117" */
0000a03a      {
0000a086          var_1e8 = 0;
0000a088          var_1f0 = 0;
0000a08a          var_1ec_1 = 0;
0000a092          sub_9564(0x2f, &var_1e8, 1);
0000a096          r1_3 = &var_1f0;
0000a09c          uint32_t r0_8 = (uint32_t)var_1e8 << 0x1b >> 0x1b;  /* "3_250117" */
0000a09e          var_1e8 = (char)r0_8;
0000a09e          
0000a0a0          if (!r0_8)
0000a0a0          {
0000a162              r2_3 = 7;
0000a164              r0_35 = 0x67;
0000a218          label_a218:
0000a218              sub_9564(r0_35, r1_3, r2_3);
0000a228              *(uint16_t*)arg1 = (int16_t)((uint32_t)*(uint8_t*)((char*)var_1f0)[2] << 8)
0000a228                  | (uint16_t)*(uint8_t*)((char*)var_1f0)[1];
0000a234              *(uint16_t*)arg2 = (int16_t)((uint32_t)(uint8_t)var_1ec_1 << 8)
0000a234                  | (uint16_t)*(uint8_t*)((char*)var_1f0)[3];
0000a23e              result = (uint32_t)*(uint8_t*)((char*)var_1ec_1)[2] << 8
0000a23e                  | (uint32_t)*(uint8_t*)((char*)var_1ec_1)[1];
0000a15a              *(uint16_t*)arg3 = (int16_t)result;
0000a0a0          }
0000a0a0          else
0000a0a0          {
0000a0fa              for (int32_t i = 0; i < (uint32_t)var_1e8; i += 1)
0000a0fa              {
0000a0a8                  var_1f0 = 0;
0000a0aa                  int24_t var_1ec_2 = 0;
0000a0b2                  sub_9564(0x67, &var_1f0, 7);
0000a0c4                  var_1dc = (int16_t)((uint32_t)*(uint8_t*)((char*)var_1f0)[2] << 8)
0000a0c4                      | (uint16_t)*(uint8_t*)((char*)var_1f0)[1];
0000a0d2                  result_1 = (int32_t)((int16_t)((uint32_t)(uint8_t)var_1ec_2 << 8)
0000a0d2                      | (uint16_t)*(uint8_t*)((char*)var_1f0)[3]);
0000a0de                  result_2 = (int32_t)(
0000a0de                      (int16_t)((uint32_t)*(uint8_t*)((char*)var_1ec_2)[2] << 8)
0000a0de                      | (uint16_t)*(uint8_t*)((char*)var_1ec_2)[1]);
0000a0ee                  0xff81b898(i * 6 + &var_1d8 + 1, &*(uint32_t*)((char*)var_1f0)[1], 6);
0000a0fa              }
0000a0fa              
0000a106              uint32_t r4_1 = (uint32_t)(6 * var_1e8);
0000a108              uint32_t r0_27 = (uint32_t)*(uint16_t*)0x20ba44;
0000a10c              uint32_t r3_1 = r0_27 + r4_1;
0000a112              int32_t r0_30;
0000a112              void* r1_12;
0000a112              uint32_t r2_2;
0000a112              
0000a112              if (r3_1 < 0x1ec)
0000a112              {
0000a13a                  r0_30 = r0_27 + 0x20ba48;
0000a13c                  r2_2 = r4_1;
0000a13e                  r1_12 = &var_1d7;
0000a112              }
0000a112              else
0000a112              {
0000a11c                  0xff81b898(r0_27 + 0x20ba48, &var_1d7, 0x1ec - r0_27, r3_1);
0000a124                  uint32_t r0_29 = (uint32_t)*(uint16_t*)0x20ba44;
0000a128                  r4_1 -= 0x1ec;
0000a12c                  r2_2 = r0_29 + r4_1;
0000a130                  r0_30 = 0x20ba48;
0000a132                  r1_12 = &var_1d8 - r0_29 + 0x1ed;
0000a112              }
0000a112              
0000a140              0xff81b898(r0_30, r1_12, r2_2);
0000a14c              *(uint16_t*)0x20ba44 += (uint16_t)r4_1;
0000a152              *(uint16_t*)arg1 = var_1dc;
0000a156              *(uint16_t*)arg2 = (uint16_t)result_1;
0000a158              result = result_2;
0000a15a              *(uint16_t*)arg3 = (int16_t)result;
0000a0a0          }
0000a03a      }
0000a03a      else if (result == 0x23)
0000a03e      {
0000a040          var_1f0 = 0;
0000a042          var_1ec_1 = 0;
0000a048          var_1e8 = 0x20;  /* "117" */
0000a050          sub_95f6(0xc, &var_1e8, 1);
0000a05a          uint32_t r0_2 = (uint32_t)var_1e8 << 0x19 >> 0x19;  /* ".33_250117" */
0000a05c          var_1e8 = (char)r0_2;
0000a05c          
0000a060          if (r0_2 > 0x20)  /* "117" */
0000a062              var_1e8 = 0x20;  /* "117" */
0000a062          
0000a072          char var_e0[0xc0];
0000a072          sub_95f6(0x3f, &var_e0, (uint32_t)(6 * var_1e8));
0000a072          
0000a07c          if (!(uint32_t)var_1e8)
0000a07c          {
0000a212              r2_3 = 6;
0000a214              r0_35 = 0x3f;
0000a216              r1_3 = &*(uint32_t*)((char*)var_1f0)[1];
0000a216              goto label_a218;
0000a07c          }
0000a07c          
0000a1b0          for (int32_t i_1 = 0; i_1 < (uint32_t)var_1e8; i_1 += 1)
0000a1b0          {
0000a16c              int32_t r0_37 = 6 * i_1;
0000a170              void* r1_14 = &var_e0[r0_37];
0000a17e              result_2 = ((uint32_t)*(uint8_t*)((char*)r1_14 + 1) << 8
0000a17e                  | (uint32_t)var_e0[r0_37]) << 0x10 >> 0x14;
0000a17e                  /* "RY02_3.00.33_250117" */  /* "_3.00.33_250117" */
0000a18c              var_1dc = (int16_t)(((uint32_t)*(uint8_t*)((char*)r1_14 + 3) << 8
0000a18c                  | (uint32_t)*(uint8_t*)((char*)r1_14 + 2)) << 0x10 >> 0x14);
0000a18c                  /* "RY02_3.00.33_250117" */  /* "_3.00.33_250117" */
0000a19a              result_1 = ((uint32_t)*(uint8_t*)((char*)r1_14 + 5) << 8
0000a19a                  | (uint32_t)*(uint8_t*)((char*)r1_14 + 4)) << 0x10 >> 0x14;
0000a19a                  /* "RY02_3.00.33_250117" */  /* "_3.00.33_250117" */
0000a1a4              0xff81b898(r0_37 + &var_1d8 + 1, r1_14, 6);
0000a1b0          }
0000a1b0          
0000a1bc          uint32_t r4_3 = (uint32_t)(6 * var_1e8);
0000a1be          uint32_t r0_43 = (uint32_t)*(uint16_t*)0x20ba44;
0000a1c2          uint32_t r3_7 = r0_43 + r4_3;
0000a1c8          int32_t r0_46;
0000a1c8          void* r1_18;
0000a1c8          uint32_t r2_18;
0000a1c8          
0000a1c8          if (r3_7 < 0x1ec)
0000a1c8          {
0000a1ee              r0_46 = r0_43 + 0x20ba48;
0000a1f0              r2_18 = r4_3;
0000a1f2              r1_18 = &var_1d7;
0000a1c8          }
0000a1c8          else
0000a1c8          {
0000a1d2              0xff81b898(r0_43 + 0x20ba48, &var_1d7, 0x1ec - r0_43, r3_7);
0000a1da              uint32_t r0_45 = (uint32_t)*(uint16_t*)0x20ba44;
0000a1de              r4_3 -= 0x1ec;
0000a1e2              r2_18 = r0_45 + r4_3;
0000a1e6              r0_46 = 0x20ba48;
0000a1e8              r1_18 = &var_1d8 - r0_45 + 0x1ed;
0000a1c8          }
0000a1c8          
0000a1f4          0xff81b898(r0_46, r1_18, r2_18);
0000a200          *(uint16_t*)0x20ba44 += (uint16_t)r4_3;
0000a206          *(uint16_t*)arg1 = (uint16_t)result_2;
0000a20a          *(uint16_t*)arg2 = var_1dc;
0000a20c          result = result_1;
0000a15a          *(uint16_t*)arg3 = (int16_t)result;
0000a03e      }
0000a15e      return result;
0000a020  }


0000a242    uint32_t sub_a242()

0000a242  {
0000a248      return (uint32_t)*(uint8_t*)0x20ba20;
0000a242  }


0000a24a    int32_t sub_a24a()

0000a24a  {
0000a24e      uint32_t r0 = (uint32_t)*(uint8_t*)0x20ba20;
0000a24e      
0000a262      if (r0 != 0x33 && r0 != 0x15 && r0 != 0x11 && r0 != 0x23 && r0 != 0x28)  /* "
0000a262              Y02_3.00.33_250117" */  /* "3.00.33_250117" */  /* "2_V3.0" */
0000a266          return 0;
0000a266      
0000a26a      return 1;
0000a24a  }


0000a26c    int32_t sub_a26c()

0000a26c  {
0000a270      int32_t result = 0xff;
0000a274      uint32_t r0 = (uint32_t)*(uint8_t*)0x20ba20;
0000a278      int32_t r5_7;
0000a278      
0000a278      if (r0 == 0x11)  /* "Y02_3.00.33_250117" */
0000a278      {
0000a2a8          int32_t r0_1 = sub_9598(0x20, 0x37);  /* "117" */  /* ".0" */
0000a2b8          int32_t r4_1 = sub_9598(0x21, 4) & r0_1;  /* "17" */
0000a2c4          int32_t r5_3 = sub_9598(0x3a, 5) & r4_1;
0000a2d0          int32_t r4_3 = sub_9598(0x3b, 0x7f) & r5_3;
0000a2dc          int32_t r5_5 = sub_9598(0x3c, 2) & r4_3;
0000a2e8          int32_t r4_5 = sub_9598(0x38, 0x15) & r5_5;  /* "3.00.33_250117" */  /* "0" */
0000a2f4          r5_7 = sub_9598(0x22, 0) & r4_5;  /* "7" */
0000a3ec          result = sub_9598(0x22, 0x80) & r5_7;  /* "7" */
0000a278      }
0000a278      else if (r0 == 0x28)
0000a27c      {
0000a300          int32_t r0_9 = sub_9598(0x20, 0x47);  /* "117" */
0000a310          int32_t r5_9 = sub_9598(0x23, 0x88) & r0_9;
0000a31c          int32_t r4_8 = sub_9598(0x21, 0x31) & r5_9;  /* "17" */  /* "Y02_V3.0" */
0000a328          int32_t r5_11 = sub_9598(0x22, 0x40) & r4_8;  /* "7" */
0000a334          int32_t r4_10 = sub_9598(0x25, 0) & r5_11;
0000a340          int32_t r5_13 = sub_9598(0x24, 0) & r4_10;
0000a34c          int32_t r4_12 = sub_9598(0x30, 0x2a) & r5_13;  /* "RY02_V3.0" */
0000a358          r5_7 = sub_9598(0x32, 0x1f) & r4_12;  /* "0117" */  /* "02_V3.0" */
0000a3ec          result = sub_9598(0x33, 0) & r5_7;  /* "2_V3.0" */
0000a27c      }
0000a27c      else if (r0 == 0x23)
0000a280      {
0000a370          r5_7 = sub_962a(0x1a, 0);  /* "33_250117" */
0000a3ec          result = sub_9846() & r5_7;
0000a280      }
0000a280      else if (r0 == 0x44)
0000a284      {
0000a37c          int32_t r0_19 = sub_9690(0x25, 0);
0000a38c          int32_t r5_16 = sub_9690(0x20, 2) & r0_19;  /* "117" */
0000a398          int32_t r4_15 = sub_9690(0x20, 0x62) & r5_16;  /* "117" */
0000a3a4          int32_t r5_18 = sub_9690(0x22, 0) & r4_15;  /* "7" */
0000a3b0          int32_t r4_17 = sub_9690(0x3f, 0) & r5_18;
0000a3bc          int32_t r5_20 = sub_9690(0x35, 0x40) & r4_17;  /* "V3.0" */
0000a3c8          int32_t r4_19 = sub_9690(0x34, 0x41) & r5_20;  /* "_V3.0" */
0000a3d4          int32_t r6_2 = sub_9690(0x23, 0x20) & r4_19;  /* "117" */
0000a3e0          r5_7 = sub_9690(0x3f, 0x20) & r6_2;  /* "117" */
0000a3ec          result = sub_9690(0x22, 0x10) & r5_7;  /* "RY02_3.00.33_250117" */  /* "7" */
0000a284      }
0000a3f0      0xff7ef196(1);
0000a3f6      return result;
0000a26c  }

0000a288  int32_t data_a288 = 0x230f0800
0000a28c  int32_t data_a28c = 0x5a504637
0000a290  int32_t data_a290 = 0x877869
0000a294  int32_t data_a294 = 0x20ba38
0000a298  int32_t data_a298 = 0xc080300
0000a29c  int32_t data_a29c = 0x1614110e
0000a2a0  int32_t data_a2a0 = 0x1f1a18

0000a364              00 e0 07 e0                                                                              ....

0000a3f8    int32_t sub_a3f8()

0000a3f8  {
0000a3fc      uint32_t r0 = (uint32_t)*(uint8_t*)0x20ba20;
0000a3fc      
0000a404      if (r0 == 0x11 || r0 == 0x28)  /* "Y02_3.00.33_250117" */
0000a404      {
0000a414          sub_9598(0x22, 0);  /* "7" */
0000a41c          sub_9598(0x38, 0);  /* "0" */
0000a424          sub_9598(0x20, 0);  /* "117" */
0000a404      }
0000a404      else if (r0 == 0x23)
0000a408      {
0000a42a          int32_t r0_1;
0000a42a          int32_t entry_r1;
0000a42a          int32_t r1;
0000a42a          int32_t entry_r2;
0000a42a          int32_t r2;
0000a42a          int32_t entry_r3;
0000a42a          int32_t r3;
0000a42a          r0_1 = sub_97c2(r0, entry_r1, entry_r2, entry_r3);
0000a42e          sub_992c(r0_1, r1, r2, r3);
0000a408      }
0000a408      else if (r0 == 0x44)
0000a438          sub_9690(0x20, 0);  /* "117" */
0000a438      
0000a442      return 0xff7ef196(1);
0000a3f8  }


0000a444    int32_t sub_a444(int32_t arg1, int32_t arg2, int32_t arg3, int32_t arg4)

0000a444  {
0000a444      int32_t var_18 = arg4;
0000a44c      uint32_t r0 = (uint32_t)*(uint8_t*)0x20ba3d;
0000a44c      
0000a454      if (r0)
0000a454      {
0000a456          *(uint8_t*)0x20ba3d = 0;
0000a458          sub_9976(r0, arg2, arg3, arg4);
0000a45c          *(uint8_t*)0x20ba3b = 1;
0000a45e          *(uint8_t*)0x20ba3a = 1;
0000a460          *(uint8_t*)0x20ba40 = 1;
0000a462          *(uint8_t*)0x20ba24 = 1;
0000a464          int32_t r0_1 = sub_183e();
0000a468          *(uint32_t*)0x20ba30 = r0_1;
0000a46a          return r0_1;
0000a454      }
0000a454      
0000a470      if ((uint32_t)*(uint8_t*)0x20ba3e)
0000a470      {
0000a476          0xff81b964(0x20ba3a, 8);
0000a47e          0xff7ef70c(0x20ba28);
0000a484          *(uint16_t*)0x20ba46 = *(uint16_t*)0x20ba44;
0000a486          int32_t r0_4 = sub_a3f8();
0000a48a          *(uint8_t*)0x20ba21 = 0;
0000a48c          *(uint8_t*)0x20ba3a = 0;
0000a48e          return r0_4;
0000a470      }
0000a470      
0000a490      uint32_t r0_5 = (uint32_t)*(uint8_t*)0x20ba3f;
0000a490      
0000a494      if (r0_5)
0000a494      {
0000a496          *(uint8_t*)0x20ba3f = 0;
0000a498          sub_9976(r0_5, arg2, arg3, arg4);
0000a49e          *(uint8_t*)0x20ba3b = 1;
0000a4a2          0xff7ef70c(0x20ba28);
0000a4ae          return 0xff7ef6e4(0x20ba28, 0x320);
0000a494      }
0000a494      
0000a4b4      uint32_t r0_7 = (uint32_t)*(uint8_t*)0x20ba40;
0000a4b4      
0000a4b8      if (!r0_7)
0000a4b8      {
0000a4d8          sub_9c0c();
0000a4e4          return sub_116c();
0000a4b8      }
0000a4b8      
0000a4ba      sub_992c(r0_7, arg2, arg3, arg4);
0000a4be      int32_t r0_6 = sub_a26c();
0000a4be      
0000a4c4      if (!r0_6)
0000a4b2          return r0_6;
0000a4b2      
0000a4c6      *(uint8_t*)0x20ba40 = 0;
0000a4c8      *(uint8_t*)0x20ba3b = 0;
0000a4cc      *(uint8_t*)0x20ba3c = 0;
0000a4ce      *(uint8_t*)0x20ba21 = 0;
0000a4d6      return 0xff7ef70c(0x20ba28);
0000a444  }


0000a4e6    int32_t sub_a4e6()

0000a4e6  {
0000a4f2      if (!(uint32_t)*(uint8_t*)0x20ba3c)
0000a4f2      {
0000a4fc          0xff7ef6e4(0x20ba28, 0x320);
0000a500          *(uint8_t*)0x20ba3c = 1;
0000a4f2      }
0000a4f2      
0000a502      int16_t result = *(uint16_t*)0x20ba44;
0000a504      *(uint16_t*)0x20ba46 = result;
0000a506      *(uint8_t*)0x20ba3d = 1;
0000a508      return result;
0000a4e6  }


0000a50a    uint32_t sub_a50a()

0000a50a  {
0000a512      uint32_t result = (uint32_t)*(uint8_t*)0x20ba3c;
0000a512      
0000a516      if (!result)
0000a516      {
0000a520          result = 0xff7ef6e4(0x20ba28, 0x320);
0000a524          *(uint8_t*)0x20ba3c = 1;
0000a516      }
0000a516      
0000a526      *(uint8_t*)0x20ba3e = 1;
0000a528      return result;
0000a50a  }


0000a52a    void sub_a52a(char* arg1)

0000a52a  {
0000a530      uint32_t r1 = (uint32_t)*(uint8_t*)0x20ba20;
0000a530      
0000a534      if (!(uint32_t)*(uint8_t*)arg1)
0000a534      {
0000a54c          if (r1 == 0x23)
0000a54c          {
0000a560              sub_962a((uint32_t)arg1[1], (uint32_t)arg1[2]);
0000a564              return;
0000a54c          }
0000a54c          
0000a550          if (r1 == 0x44)
0000a556              sub_9690((uint32_t)arg1[1], (uint32_t)arg1[2]);
0000a556          
0000a55a          return;
0000a534      }
0000a534      
0000a536      uint32_t r4 = (uint32_t)arg1[2];
0000a536      
0000a53a      if (r4 > 6)
0000a53c          r4 = 6;
0000a53c      
0000a542      int32_t __saved_r2;
0000a542      
0000a542      if (r1 == 0x23)
0000a56e          sub_95f6((uint32_t)arg1[1] | 0x80, &__saved_r2, r4);
0000a542      else if (r1 == 0x44)
0000a57c          sub_965c((uint32_t)arg1[1] | 0x80, &__saved_r2, r4);
0000a57c      
0000a586      sub_3d12(0xc7, &__saved_r2, r4);
0000a52a  }


0000a58c    int32_t sub_a58c(uint16_t* arg1, uint16_t* arg2, uint16_t* arg3, int32_t arg4)

0000a58c  {
0000a58c      uint16_t* var_1c = arg3;
0000a58c      uint16_t* var_20 = arg2;
0000a58c      uint16_t* var_24 = arg1;
0000a590      uint16_t* r6 = arg1;
0000a598      uint16_t* r4 = arg3;
0000a59a      uint16_t* r5 = arg2;
0000a59a      
0000a59e      if ((uint32_t)*(uint8_t*)0x20ba3b)
0000a59e      {
0000a5a0          sub_9c0c();
0000a5a6          uint32_t r7 = (uint32_t)*(uint16_t*)0x20ba44;
0000a5ba          uint32_t r0_5 = (uint32_t)sub_12b3e(r7 - 6 * arg4 + 0x1ec, 0x1ec);
0000a5ba          
0000a642          while (r0_5 != r7)
0000a642          {
0000a614              *(uint16_t*)r6 = (int16_t)((uint32_t)*(uint8_t*)(r0_5 + 0x20ba49) << 8)
0000a614                  | (uint16_t)*(uint8_t*)(r0_5 + 0x20ba48);
0000a61e              *(uint16_t*)r5 = (int16_t)((uint32_t)*(uint8_t*)(r0_5 + 0x20ba4b) << 8)
0000a61e                  | (uint16_t)*(uint8_t*)(r0_5 + 0x20ba4a);
0000a628              *(uint16_t*)r4 = (int16_t)((uint32_t)*(uint8_t*)(r0_5 + 0x20ba4d) << 8)
0000a628                  | (uint16_t)*(uint8_t*)(r0_5 + 0x20ba4c);
0000a62e              r0_5 = (uint32_t)((uint16_t)r0_5 + 6);
0000a632              r4 = &r4[1];
0000a634              r5 = &r5[1];
0000a636              r6 = &r6[1];
0000a636              
0000a63a              if (r0_5 >= 0x1ec)
0000a63e                  r0_5 = (uint32_t)((uint16_t)r0_5 - 0x1ec);
0000a642          }
0000a642          
0000a644          return 0x14;  /* "_3.00.33_250117" */
0000a59e      }
0000a59e      
0000a5be      uint32_t r0_6 = (uint32_t)*(uint16_t*)0x20ba44;
0000a5c0      int32_t r0_7 = r0_6 - 6;
0000a5c0      
0000a5c2      if (r0_6 - 6 < 0)
0000a5c6          r0_7 += 0x1ec;
0000a5c6      
0000a5d0      uint16_t r1_3 = (int16_t)((uint32_t)*(uint8_t*)(r0_7 + 0x20ba49) << 8)
0000a5d0          | (uint16_t)*(uint8_t*)(r0_7 + 0x20ba48);
0000a5da      uint16_t r1_6 = (int16_t)((uint32_t)*(uint8_t*)(r0_7 + 0x20ba4b) << 8)
0000a5da          | (uint16_t)*(uint8_t*)(r0_7 + 0x20ba4a);
0000a5e2      uint16_t r0_11 = (int16_t)((uint32_t)*(uint8_t*)(r0_7 + 0x20ba4d) << 8)
0000a5e2          | (uint16_t)*(uint8_t*)(r0_7 + 0x20ba4c);
0000a5e8      int32_t r0_12 = 0;
0000a5e8      
0000a5fe      while (r0_12 < arg4)
0000a5fe      {
0000a5ec          *(uint16_t*)r6 = r1_3;
0000a5ee          *(uint16_t*)r5 = r1_6;
0000a5f0          *(uint16_t*)r4 = r0_11;
0000a5f2          r0_12 += 1;
0000a5f4          r4 = &r4[1];
0000a5f6          r5 = &r5[1];
0000a5f8          r6 = &r6[1];
0000a5fe      }
0000a5fe      
0000a600      return 0;
0000a58c  }

0000a648                          6a 49 10 b5 00 20 14 31 08 70 08 46 08 38 e5 f7 59 d8 10 bd                      jI... .1.p.F.8..Y...

0000a65c    uint32_t sub_a65c()

0000a65c  {
0000a660      uint32_t result = (uint32_t)*(uint8_t*)0x20ba24;
0000a660      
0000a664      if (!result)
0000a66e          return result;
0000a66e      
0000a66c      return sub_183e() - *(uint32_t*)0x20ba30;
0000a65c  }


0000a670    uint32_t sub_a670()

0000a670  {
0000a676      uint32_t result = (uint32_t)*(uint8_t*)0x20ba3b;
0000a676      
0000a67a      if (!result)
0000a67a      {
0000a67c          result = sub_a65c();
0000a67c          
0000a682          if (result >= 0x3c)
0000a682          {
0000a686              result = 1;
0000a688              *(uint8_t*)0x20ba27 = 1;
0000a682          }
0000a67a      }
0000a67a      
0000a68a      return result;
0000a670  }


0000a68c    int32_t sub_a68c(int32_t arg1, int32_t arg2, int32_t arg3)

0000a68c  {
0000a68c      int32_t var_10 = arg3;
0000a692      (uint16_t)var_10 = 0;
0000a694      *(uint16_t*)((char*)var_10)[2] = 0;
0000a69e      return sub_13b8(&var_10);
0000a68c  }


0000a6a0    uint32_t sub_a6a0()

0000a6a0  {
0000a6a4      return (uint32_t)*(uint8_t*)0x20ba25;
0000a6a0  }


0000a6a6    uint32_t sub_a6a6()

0000a6a6  {
0000a6ae      uint32_t result = (uint32_t)*(uint8_t*)0x20ba3a;
0000a6ae      
0000a6b2      if (result)
0000a6b2      {
0000a6bc          if ((uint32_t)*(uint8_t*)0x20ba22)
0000a6bc          {
0000a6c0              *(uint8_t*)0x20ba22 = 0;
0000a6c2              int32_t r0_1;
0000a6c2              int32_t r1_1;
0000a6c2              int32_t r2_1;
0000a6c2              int32_t r3_1;
0000a6c2              r0_1 = sub_9ffc();
0000a6c2              
0000a6c8              if (!r0_1)
0000a6d0                  sub_992c(r0_1, r1_1, r2_1, r3_1);
0000a6bc          }
0000a6bc          
0000a6d4          result = (uint32_t)*(uint8_t*)0x20ba3b;
0000a6d4          
0000a6d8          if (!result)
0000a6d8          {
0000a87e              if ((uint32_t)*(uint8_t*)0x20ba27)
0000a87e              {
0000a880                  *(uint8_t*)0x20ba27 = 0;
0000a882                  sub_9ba0();
0000a886                  return sub_a4e6();
0000a87e              }
0000a87e              
0000a890              if (!(uint32_t)*(uint8_t*)0x20ba21)
0000a890              {
0000a894                  result = sub_104aa(0x16);  /* ".00.33_250117" */
0000a89a                  *(uint32_t*)0x40001050;
0000a890              }
0000a890              
0000a8a0              if ((uint32_t)*(uint8_t*)0x20ba21 || *(uint32_t*)0x40001050 & result)
0000a8a0              {
0000a8a2                  *(uint8_t*)0x20ba21 = 0;
0000a8a6                  *(uint8_t*)0x20ba3f = 1;
0000a8aa                  *(uint16_t*)0x20ba46 = *(uint16_t*)0x20ba44;
0000a8ac                  sub_14d64();
0000a8b2                  int32_t r1_14;
0000a8b2                  int32_t r2_7;
0000a8b2                  r1_14 = sub_8eea(1);
0000a8b6                  *(uint8_t*)0x20ba24 = 0;
0000a8ba                  sub_a68c(0, r1_14, r2_7);
0000a8be                  result = (uint32_t)*(uint8_t*)0x20ba3c;
0000a8be                  
0000a8c2                  if (!result)
0000a8c2                  {
0000a8cc                      result = 0xff7ef6e4(0x20ba28, 0x320);
0000a8d0                      *(uint8_t*)0x20ba3c = 1;
0000a8c2                  }
0000a8a0              }
0000a6d8          }
0000a6d8          else
0000a6d8          {
0000a6da              uint32_t r4_1 = (uint32_t)*(uint16_t*)0x20ba46;
0000a6dc              uint32_t r5_1 = (uint32_t)*(uint16_t*)0x20ba44;
0000a6dc              
0000a6e0              if (r4_1 != r5_1)
0000a6e0              {
0000a6e8                  *(uint16_t*)0x20ba46 = (int16_t)r5_1;
0000a6f8                  int32_t r1_3;
0000a6f8                  result = sub_12b3e(sub_12b3e(r5_1 - r4_1 + 0x1ec, 0x1ec), 6);
0000a6f8                  
0000a6fe                  if (!r1_3)
0000a6fe                  {
0000a7da                      while (r4_1 != r5_1)
0000a7da                      {
0000a70e                          uint16_t r1_6 =
0000a70e                              (int16_t)((uint32_t)*(uint8_t*)(r4_1 + 0x20ba49) << 8)
0000a70e                              | (uint16_t)*(uint8_t*)(r4_1 + 0x20ba48);
0000a71a                          uint16_t r1_9 =
0000a71a                              (int16_t)((uint32_t)*(uint8_t*)(r4_1 + 0x20ba4b) << 8)
0000a71a                              | (uint16_t)*(uint8_t*)(r4_1 + 0x20ba4a);
0000a726                          uint16_t r0_7 =
0000a726                              (int16_t)((uint32_t)*(uint8_t*)(r4_1 + 0x20ba4d) << 8)
0000a726                              | (uint16_t)*(uint8_t*)(r4_1 + 0x20ba4c);
0000a72e                          uint32_t r0_8 = (uint32_t)*(uint8_t*)0x20ba20;
0000a732                          int32_t r0_15;
0000a732                          int32_t r1_11;
0000a732                          int32_t r2_5;
0000a732                          
0000a732                          if (r0_8 == 0x44)
0000a732                          {
0000a76a                          label_a76a:
0000a76a                              r2_5 = (int32_t)(0 - r0_7);
0000a76c                              r1_11 = (int32_t)r1_9;
0000a74a                              r0_15 = (int32_t)r1_6;
0000a732                          }
0000a732                          else if (r0_8 == 0x23)
0000a736                          {
0000a774                              r2_5 = (int32_t)r0_7;
0000a778                              r1_11 = (int32_t)r1_6;
0000a77c                              r0_15 = (int32_t)r1_9;
0000a736                          }
0000a736                          else
0000a736                          {
0000a73a                              if (r0_8 == 0x28)
0000a73a                                  goto label_a76a;
0000a73a                              
0000a740                              r2_5 = (int32_t)r0_7;
0000a746                              r1_11 = (int32_t)(0 - r1_9);
0000a74a                              r0_15 = (int32_t)r1_6;
0000a736                          }
0000a736                          
0000a74c                          sub_148e0(r0_15, r1_11, r2_5);
0000a74c                          
0000a75e                          if ((uint32_t)*(uint8_t*)0x20ba25
0000a75e                              && !(uint32_t)*(uint8_t*)0x20ba34)
0000a75e                          {
0000a78a                              if (sub_14a1c() <= 0x7d0)  /* "17 10:58:10 2022" */
0000a78a                              {
0000a7bc                                  uint32_t r0_22 = (uint32_t)(*(uint8_t*)0x20ba36 + 1);
0000a7be                                  *(uint8_t*)0x20ba36 = (char)r0_22;
0000a7be                                  
0000a7c2                                  if (r0_22 > 5)
0000a7c2                                  {
0000a7c4                                      *(uint8_t*)0x20ba36 = 0;
0000a7c6                                      *(uint8_t*)0x20ba35 = 0;
0000a7c2                                  }
0000a78a                              }
0000a78a                              else
0000a78a                              {
0000a790                                  uint32_t r0_19 = (uint32_t)(*(uint8_t*)0x20ba35 + 1);
0000a792                                  *(uint8_t*)0x20ba35 = (char)r0_19;
0000a792                                  
0000a796                                  if (r0_19 > 0xa)
0000a796                                  {
0000a798                                      *(uint8_t*)0x20ba35 = 0;
0000a79c                                      sub_5356(2);
0000a7a6                                      0xff7ef6e4(0x20ba2c, 0xbb8);
0000a7ac                                      *(uint8_t*)0x20ba34 = 1;
0000a796                                  }
0000a796                                  
0000a7b4                                  *(uint8_t*)0x20ba36 = 0;
0000a78a                              }
0000a75e                          }
0000a75e                          
0000a7cc                          r4_1 = (uint32_t)((uint16_t)r4_1 + 6);
0000a7cc                          
0000a7d2                          if (r4_1 >= 0x1ec)
0000a7d6                              r4_1 = (uint32_t)((uint16_t)r4_1 - 0x1ec);
0000a7da                      }
0000a7da                      
0000a7e2                      if (!sub_281e())
0000a7e2                      {
0000a80e                          uint32_t r0_24 = sub_14a2c();
0000a80e                          
0000a814                          if (r0_24)
0000a814                          {
0000a818                              sub_91b6((uint32_t)(uint16_t)r0_24);
0000a818                              
0000a822                              if ((uint32_t)*(uint8_t*)0x20b850 != 2)
0000a822                              {
0000a828                                  sub_91d2(sub_149fc());
0000a830                                  sub_91de(sub_14a0c());
0000a822                              }
0000a822                              
0000a836                              sub_529c(0x12);  /* "02_3.00.33_250117" */
0000a814                          }
0000a814                          
0000a840                          sub_8eea((uint32_t)sub_149ec());
0000a844                          uint32_t r0_31 = sub_15544();
0000a844                          
0000a84a                          if (r0_31)
0000a84e                              sub_8ab0(3, r0_31);
0000a7e2                      }
0000a7e2                      else
0000a7e2                      {
0000a7e4                          sub_14a2c();
0000a7e8                          sub_149ec();
0000a7ec                          sub_15544();
0000a804                          sub_14a0c();
0000a808                          sub_149fc();
0000a7e2                      }
0000a7e2                      
0000a852                      result = sub_14a3c();
0000a852                      
0000a858                      if (result)
0000a858                      {
0000a85a                          result = sub_aa80();
0000a85a                          
0000a860                          if (result)
0000a860                          {
0000a868                              *(uint8_t*)0x20ba40 = 1;
0000a86c                              *(uint8_t*)0x20ba24 = 1;
0000a86e                              result = sub_183e();
0000a872                              *(uint32_t*)0x20ba30 = result;
0000a860                          }
0000a858                      }
0000a6fe                  }
0000a6e0              }
0000a6d8          }
0000a6b2      }
0000a6b2      
0000a15e      return result;
0000a6a6  }

0000a7f2                                                        00 00                                                        ..

0000a7f4  int32_t data_a7f4 = 0x20ba20
0000a7f8  char const (* data_a7f8)[0x4] = data_5f6 {"pM,h"}
0000a7fc  int32_t data_a7fc = 0x7a5
0000a800  int32_t data_a800 = 0xbb8

0000a8d4    int32_t sub_a8d4()

0000a8d4  {
0000a8e0      if (!(uint32_t)*(uint8_t*)0x20ba22)
0000a8e2          *(uint8_t*)0x20ba22 = 1;
0000a8e2      
0000a8e8      if (!(uint32_t)*(uint8_t*)0x20ba21)
0000a8ea          *(uint8_t*)0x20ba21 = 1;
0000a8ea      
0000a8f4      return sub_116c();
0000a8d4  }


0000a8f6    int32_t sub_a8f6()

0000a8f6  {
0000a8f6      int32_t r3;
0000a8f6      int32_t var_14 = r3;
0000a8f6      int32_t r2;
0000a8f6      int32_t var_18 = r2;
0000a8f8      sub_9ba0();
0000a912      0xff7ef684(0x20ba28, "gsensor_read_timer_id", 1, 0x7d0, 1, 0x82e63d);
0000a912          /* "17 10:58:10 2022" */
0000a928      0xff7ef684(0x20ba2c, "gsensor_shake_flag_timer_id", 1, 0x7d0, 0, 0x82e5f9);
0000a928          /* "17 10:58:10 2022" */
0000a92c      sub_14a50();
0000a938      sub_14cc4(*(uint8_t*)0x2086e4, (uint32_t)*(uint8_t*)0x2086e6, 
0000a938          (uint32_t)*(uint8_t*)0x2086e7);
0000a93e      sub_153a4(0);
0000a944      sub_14c90(0xc);
0000a94a      *(uint8_t*)0x20ba3c = 0;
0000a94c      return 0x20ba38;
0000a8f6  }


0000a94e    int32_t sub_a94e(int32_t arg1, int32_t arg2, int32_t arg3, int32_t arg4)

0000a94e  {
0000a954      uint32_t r0 = (uint32_t)*(uint16_t*)((char*)arg1)[2];
0000a954      
0000a958      if (!r0)
0000a97c          return sub_a444(r0, arg2, arg3, arg4);
0000a97c      
0000a976      int32_t lr;
0000a976      return 0xff7e1af8(0x23103002, 0x880135c, 2, 
0000a976          0xff7e1eba(0x23400000, "..\..\..\..\qc_code\app_module\gsensor\lis3dh_spi.c"), 
0000a976          0x7c7, arg1, arg2, lr);
0000a94e  }


0000a97e    void sub_a97e(char arg1)

0000a97e  {
0000a982      *(uint8_t*)0x20ba25 = arg1;
0000a97e  }


0000a986    int32_t sub_a986() __pure

0000a986  {
0000a986      return;
0000a986  }

0000a988  int32_t data_a988 = 0x20b850
0000a98c  int32_t data_a98c = 0x20ba38
0000a990  int32_t data_a990 = 0x40001040
0000a994  int32_t data_a994 = 0x79c
0000a998  int32_t data_a998 = 0x82e63d

0000a99c  data_a99c:
0000a99c                                                                                      67 73 65 6e                              gsen
0000a9a0  73 6f 72 5f 72 65 61 64 5f 74 69 6d 65 72 5f 69 64 00 00 00                                      sor_read_timer_id...

0000a9b4  int32_t data_a9b4 = 0x82e5f9

0000a9b8  data_a9b8:
0000a9b8                                                                          67 73 65 6e 73 6f 72 5f                          gsensor_
0000a9c0  73 68 61 6b 65 5f 66 6c 61 67 5f 74 69 6d 65 72 5f 69 64 00                                      shake_flag_timer_id.

0000a9d4  int32_t data_a9d4 = 0x2086e4

0000a9d8  data_a9d8:
0000a9d8                                                                          2e 2e 5c 2e 2e 5c 2e 2e                          ..\..\..
0000a9e0  5c 2e 2e 5c 71 63 5f 63 6f 64 65 5c 61 70 70 5f 6d 6f 64 75 6c 65 5c 67 73 65 6e 73 6f 72 5c 6c  \..\qc_code\app_module\gsensor\l
0000aa00  69 73 33 64 68 5f 73 70 69 2e 63 00                                                              is3dh_spi.c.

0000aa0c  int32_t data_aa0c = 0x880135c
0000aa10  int32_t data_aa10 = 0x23103002

0000aa14    int32_t sub_aa14()

0000aa14  {
0000aa1a      0xff81b964(0x20bc34, 8);
0000aa22      *(uint8_t*)0x20bc35 = 1;
0000aa26      *(uint8_t*)0x20bc34 = 0;
0000aa28      return 0x20bc34;
0000aa14  }


0000aa2a    void sub_aa2a(char* arg1)

0000aa2a  {
0000aa2e      *(uint8_t*)arg1 = *(uint8_t*)0x20bc34;
0000aa32      arg1[1] = *(uint8_t*)0x20bc35;
0000aa36      arg1[2] = *(uint8_t*)0x20bc36;
0000aa2a  }


0000aa3a    int32_t sub_aa3a(char* arg1)

0000aa3a  {
0000aa3c      int32_t r1 = (int32_t)arg1[1];
0000aa3c      
0000aa44      if (r1 - 1 >= 0xa)
0000aa46          r1 = 5;
0000aa46      
0000aa48      *(uint8_t*)0x20bc35 = (char)r1;
0000aa4c      *(uint8_t*)0x20bc34 = *(uint8_t*)arg1;
0000aa50      *(uint8_t*)0x20bc36 = arg1[2];
0000aa54      return 0;
0000aa3a  }


0000aa56    void sub_aa56(char arg1)

0000aa56  {
0000aa58      *(uint8_t*)0x20bc34 = arg1;
0000aa56  }


0000aa5c    uint32_t sub_aa5c()

0000aa5c  {
0000aa60      return (uint32_t)*(uint8_t*)0x20bc34;
0000aa5c  }


0000aa62    int32_t sub_aa62()

0000aa62  {
0000aa70      if (!(uint32_t)*(uint8_t*)0x20bc34 || (uint32_t)*(uint8_t*)0x20bc3a == 1)
0000aa7e          return 0x20bc34;
0000aa7e      
0000aa74      *(uint8_t*)0x20bc3a = 1;
0000aa7a      return sub_116c();
0000aa62  }


0000aa80    int32_t sub_aa80()

0000aa80  {
0000aa90      if (sub_5bae() && (uint32_t)*(uint8_t*)0x20bc34)
0000aa94          return 0;
0000aa94      
0000aa98      return 1;
0000aa80  }


0000aa9a    int32_t sub_aa9a() __pure

0000aa9a  {
0000aa9a      return;
0000aa9a  }

0000aa9c  int32_t data_aa9c = 0x20bc34

0000aaa0    int32_t sub_aaa0() __pure

0000aaa0  {
0000aaa0      return;
0000aaa0  }


0000aaa2    int32_t sub_aaa2() __pure

0000aaa2  {
0000aaa2      return;
0000aaa2  }


0000aaa4    int32_t sub_aaa4() __pure

0000aaa4  {
0000aaa6      return 0;
0000aaa4  }


0000aaa8    int32_t sub_aaa8() __pure

0000aaa8  {
0000aaaa      return 0;
0000aaa8  }


0000aaac    int32_t sub_aaac() __pure

0000aaac  {
0000aaac      return;
0000aaac  }

0000aaae                                            00 00                                                                ..

0000aab0    uint32_t sub_aab0()

0000aab0  {
0000aab4      return (uint32_t)*(uint8_t*)0x20bc3d;
0000aab0  }


0000aab6    int32_t sub_aab6()

0000aab6  {
0000aab6      int32_t r3;
0000aab6      int32_t var_10 = r3;
0000aabc      (uint8_t)var_10 = 0;
0000aaf6      *(uint8_t*)0x20bc3d = 0;
0000aafa      return 0;
0000aab6  }


0000aafc    int32_t sub_aafc(int32_t arg1)

0000aafc  {
0000ab08      if ((uint32_t)*(uint8_t*)0x20bc48 != arg1)
0000ab08      {
0000ab0e          if ((uint32_t)*(uint8_t*)0x20bc4a)
0000ab0e          {
0000ab12              sub_3730(0x20bc44);
0000ab18              *(uint8_t*)0x20bc4a = 0;
0000ab0e          }
0000ab0e          
0000ab1a          *(uint8_t*)0x20bc48 = (char)arg1;
0000ab08      }
0000ab08      
0000ab1e      *(uint8_t*)0x20bc49 = 1;
0000ab20      return 1;
0000aafc  }


0000ab22    uint32_t sub_ab22(char arg1)

0000ab22  {
0000ab2a      uint32_t result = (uint32_t)*(uint8_t*)0x20bc48;
0000ab2a      
0000ab2e      if (result)
0000ab2e      {
0000ab30          result = (uint32_t)*(uint8_t*)0x20bc4a;
0000ab30          
0000ab34          if (result)
0000ab34          {
0000ab38              sub_3730(0x20bc44);
0000ab3c              result = 0;
0000ab3e              *(uint8_t*)0x20bc4a = 0;
0000ab34          }
0000ab2e      }
0000ab2e      
0000ab40      *(uint8_t*)0x20bc49 = arg1;
0000ab42      return result;
0000ab22  }


0000ab44    int32_t sub_ab44(int32_t arg1)

0000ab44  {
0000ab50      if ((uint32_t)*(uint8_t*)0x20bc48 != arg1)
0000ab50      {
0000ab56          if ((uint32_t)*(uint8_t*)0x20bc4a)
0000ab56          {
0000ab5a              sub_3730(0x20bc44);
0000ab60              *(uint8_t*)0x20bc4a = 0;
0000ab56          }
0000ab56          
0000ab62          *(uint8_t*)0x20bc48 = (char)arg1;
0000ab50      }
0000ab50      
0000ab66      *(uint8_t*)0x20bc49 = 1;
0000ab68      return 1;
0000ab44  }


0000ab6a    uint32_t sub_ab6a()

0000ab6a  {
0000ab70      uint32_t result = (uint32_t)*(uint8_t*)0x20bc48;
0000ab70      
0000ab74      if (result)
0000ab74      {
0000ab7a          if ((uint32_t)*(uint8_t*)0x20bc4a)
0000ab7a          {
0000ab7e              sub_3730(0x20bc44);
0000ab84              *(uint8_t*)0x20bc4a = 0;
0000ab86              *(uint8_t*)0x20bc49;
0000ab7a          }
0000ab7a          
0000aba4          result = 1;
0000aba6          *(uint8_t*)0x20bc4b = 1;
0000ab74      }
0000ab74      
0000aba8      return result;
0000ab6a  }


0000abaa    int32_t sub_abaa()

0000abaa  {
0000abb8      if ((uint32_t)*(uint8_t*)0x20bc48 && (uint32_t)*(uint8_t*)0x20bc4a)
0000abbc          return 1;
0000abbc      
0000abc0      return 0;
0000abaa  }

0000abc2        08 b5 b5 48 69 46 00 1d e4 f7 d2 dd 00 98 00 28 03 d0 b1 49 05 20 1c 31 08 70 08 bd          ...HiF.........(...I. .1.p..

0000abde    uint32_t sub_abde()

0000abde  {
0000abe4      uint32_t result = (uint32_t)*(uint8_t*)0x20bc4b;
0000abe4      
0000abe8      if (!result)
0000abe8      {
0000abf8          int32_t r0 = (int32_t)*(uint16_t*)0x20bc4c;
0000abfc          int32_t r7_2;
0000abfc          
0000abfc          if (!(uint32_t)*(uint8_t*)0x20bc49)
0000abfc          {
0000ac28              int32_t r0_7;
0000ac28              int32_t r1_5;
0000ac28              r0_7 = sub_1351a(r0);
0000ac2e              int32_t r0_8;
0000ac2e              int32_t r1_6;
0000ac2e              r0_8 = sub_13778(r0_7, r1_5, result - 1);
0000ac36              r7_2 = (int32_t)sub_13424(r0_8, r1_6);
0000ac36              
0000ac3e              if (r7_2 + 0xa < 0x15)  /* "3.00.33_250117" */
0000ac3e              {
0000ac4c                  *(uint8_t*)0x20bc4a = 0;
0000ac50                  sub_3730(0x20bc44);
0000ac56                  *(uint16_t*)0x20bc4c = 0;
0000ac5a                  return 4;
0000ac3e              }
0000ac3e              
0000ac42              *(uint16_t*)0x20bc64;
0000ac46              result = 3;
0000abfc          }
0000abfc          else
0000abfc          {
0000abfe              int32_t r0_1;
0000abfe              int32_t r1_2;
0000abfe              r0_1 = sub_1351a(r0);
0000ac04              int32_t r0_2;
0000ac04              int32_t r1_3;
0000ac04              r0_2 = sub_13778(r0_1, r1_2, result - 1);
0000ac0c              r7_2 = (int32_t)sub_13424(r0_2, r1_3);
0000ac0c              
0000ac14              if (r7_2 + 0xa < 0x15)  /* "3.00.33_250117" */
0000ac14              {
0000ac60                  *(uint8_t*)0x20bc4a = 0;
0000ac64                  sub_3730(0x20bc44);
0000ac6a                  *(uint16_t*)0x20bc4c = 0;
0000ac6e                  return 7;
0000ac14              }
0000ac14              
0000ac1c              *(uint16_t*)0x20bc62;
0000ac1e              result = 6;
0000abfc          }
0000abfc          
0000ac24          *(uint16_t*)0x20bc4c = (int16_t)r7_2;
0000abe8      }
0000abe8      
0000ac26      return result;
0000abde  }

0000ac76                                                                    fe b5 88 49 0c 25 1c 31 88 88                        ...I.%.1..
0000ac80  0a 24 0a 30 80 b2 88 80 ca 8a 00 26 0a 32 92 b2 ca 82 00 92 0f 78 4d 5f 0c 5f ca 89 09 8a 3b 00  .$.0.......&.2.......xM_._....;.
0000aca0  09 f0 3a f9 07 e5 05 ac be e5 e5 d0                                                              ..:.........

0000acac    uint32_t sub_acac(int32_t arg1, int32_t arg2, int32_t arg3, int32_t arg4, int32_t arg5 @ r4, int16_t arg6 @ r6, uint32_t arg7, void* arg8, int32_t arg9, int32_t arg10, int32_t arg11, int32_t arg12, int32_t arg13)

0000acac  {
0000acb8      uint32_t r1_8;
0000acb8      void* r2_2;
0000acb8      void* r3_1;
0000acb8      
0000acb8      if (arg1 < 0x3e8)
0000acb8      {
0000acf4          uint32_t r3_3 = (uint32_t)*(uint16_t*)0x20bc62;
0000acf6          r2_2 = arg3 - r3_3;
0000acf8          void* r3_4;
0000acf8          
0000acf8          r3_4 = arg3 - r3_3 < 0 ? 0 - r2_2 : r2_2;
0000acf8          
0000ad00          arg8 = r3_4;
0000ad02          uint32_t r3_5 = (uint32_t)*(uint16_t*)0x20bc64;
0000ad04          arg7 = r3_5;
0000ad06          void* r3_6 = arg2 - r3_5;
0000ad06          
0000ad08          if (arg2 - r3_5 < 0)
0000ad0a              r3_6 = 0 - r3_6;
0000ad0a          
0000ad12          if (arg8 < 0x1e)  /* "50117" */
0000ad12          {
0000ad44              r3_1 = r3_6;
0000ad44              
0000ad4a              if (r3_1 < 0x1e)  /* "50117" */
0000ad4a              {
0000ad84                  r1_8 = (uint32_t)*(uint8_t*)0x20bc48;
0000ad84                  
0000ad88                  if (r1_8)
0000ad88                  {
0000ad8a                      r1_8 = (uint32_t)*(uint8_t*)0x20bc4a;
0000ad8a                      
0000ad8e                      if (r1_8)
0000ad8e                      {
0000ad92                          if (arg1 < 0x64)
0000ad92                          {
0000adac                              uint32_t r0_8 = (uint32_t)*(uint8_t*)0x20bc59;
0000adac                              
0000adb0                              if (r0_8 == 3)
0000adb0                              {
0000adb8                                  *(uint8_t*)0x20bc58 = 3;
0000adbc                                  *(uint16_t*)0x20bc6e = arg6;
0000adc0                                  r3_1 = sub_ab22(1);
0000adc4                                  r1_8 = (uint32_t)*(uint16_t*)0x20bc64;
0000adc4                                  
0000add2                                  for (int32_t i = 0; i < 3; )
0000add2                                  {
0000adca                                      r2_2 = (i << 1) + 0x20bc48;
0000adcc                                      i += 1;
0000adce                                      *(uint16_t*)((char*)r2_2 + 6) = (int16_t)r1_8;
0000add2                                  }
0000add2                                  
0000adf8                                  *(uint16_t*)0x20bc54 = *(uint16_t*)0x20bc68;
0000adb0                              }
0000adb0                              else if (r0_8 == 2)
0000adb4                              {
0000adda                                  *(uint8_t*)0x20bc58 = 2;
0000ade0                                  r3_1 = sub_ab22(0);
0000ade4                                  *(uint16_t*)0x20bc6e = arg6;
0000ade6                                  r1_8 = (uint32_t)*(uint16_t*)0x20bc62;
0000ade6                                  
0000adf4                                  for (int32_t i_1 = 0; i_1 < 3; )
0000adf4                                  {
0000adec                                      r2_2 = (i_1 << 1) + 0x20bc48;
0000adee                                      i_1 += 1;
0000adf0                                      *(uint16_t*)((char*)r2_2 + 6) = (int16_t)r1_8;
0000adf4                                  }
0000adf4                                  
0000adf8                                  *(uint16_t*)0x20bc54 = *(uint16_t*)0x20bc66;
0000adb4                              }
0000ad92                          }
0000ad92                          else
0000ad92                          {
0000ad94                              sub_ab6a();
0000ad9a                              *(uint8_t*)0x20bc58 = 5;
0000ada6                              r1_8 = sub_3704(0x20bc40, 0x82ec27, 0xa, 1);
0000ad92                          }
0000ad8e                      }
0000ad88                  }
0000ad4a              }
0000ad4a              else
0000ad4a              {
0000ad4c                  *(uint8_t*)0x20bc58 = 3;
0000ad5e                  *(uint16_t*)0x20bc6e = arg6;
0000ad62                  r2_2 = sub_ab22(1);
0000ad68                  int32_t i_2 = 0;
0000ad6a                  r1_8 = (uint32_t)*(uint16_t*)0x20bc64;
0000ad6a                  
0000ad78                  do
0000ad78                  {
0000ad70                      r3_1 = (i_2 << 1) + 0x20bc48;
0000ad72                      i_2 += 1;
0000ad74                      *(uint16_t*)((char*)r3_1 + 6) = (int16_t)r1_8;
0000ad78                  } while (i_2 < 3);
0000ad78                  
0000ad7c                  *(uint16_t*)0x20bc54 = *(uint16_t*)0x20bc68;
0000ad4a              }
0000ad12          }
0000ad12          else
0000ad12          {
0000ad16              *(uint8_t*)0x20bc58 = 2;
0000ad26              r2_2 = sub_ab22(0);
0000ad2a              *(uint16_t*)0x20bc6e = arg6;
0000ad2e              int32_t i_3 = 0;
0000ad30              r1_8 = (uint32_t)*(uint16_t*)0x20bc62;
0000ad30              
0000ad3e              do
0000ad3e              {
0000ad36                  r3_1 = (i_3 << 1) + 0x20bc48;
0000ad38                  i_3 += 1;
0000ad3a                  *(uint16_t*)((char*)r3_1 + 6) = (int16_t)r1_8;
0000ad3e              } while (i_3 < 3);
0000ad3e              
0000ad7c              *(uint16_t*)0x20bc54 = *(uint16_t*)0x20bc66;
0000ad12          }
0000acb8      }
0000acb8      else
0000acb8      {
0000acbe          if (!(uint32_t)*(uint8_t*)0x20bc5b)
0000acbe          {
0000acd2              *(uint8_t*)0x20bc58 = 5;
0000acda              /* tailcall */
0000acda              return sub_ae68((uint8_t)arg6, arg1, (int32_t)*(uint16_t*)0x20bc66, 
0000acda                  (int32_t)*(uint16_t*)0x20bc68, arg4, arg7, arg8, arg9);
0000acbe          }
0000acbe          
0000acc4          int32_t r1_1 = 0x12c;
0000acc4          
0000acc8          if (arg1 > 0xbb8)
0000acca              r1_1 = 0x3c;
0000acc8          else if (arg1 > 0x4b0)
0000ace4              r1_1 = 0x96;
0000ace4          
0000ace6          int32_t r0_1;
0000ace6          r0_1 = sub_12b3e(arg1, r1_1);
0000ace6          
0000acec          if (!r1_8)
0000acf2              /* tailcall */
0000acf2              return sub_ae68((uint8_t)arg6, r0_1, arg5, arg5 << 3, r3_1, arg7, arg8, arg9);
0000acb8      }
0000acb8      
0000ae74      *(uint16_t*)0x20bc6a = *(uint16_t*)0x20bc66;
0000ae78      *(uint16_t*)0x20bc6c = *(uint16_t*)0x20bc68;
0000ae7e      uint32_t result = (uint32_t)(*(uint16_t*)0x20bc5e + 0xa);
0000ae80      *(uint16_t*)0x20bc5e = (int16_t)result;
0000ae80      
0000ae84      if (result >= 0x50)
0000ae84      {
0000ae86          uint32_t r0_14 = (uint32_t)*(uint8_t*)0x20bc58;
0000ae86          
0000ae8a          if (r0_14 == 1)
0000ae8a          {
0000aeac              *(uint16_t*)0x20bc68;
0000aeae              *(uint16_t*)0x20bc66;
0000ae8a          }
0000ae8a          else if (r0_14 == 2)
0000ae8e          {
0000aeb8              int32_t r0_18;
0000aeb8              
0000aeb8              if ((uint32_t)*(uint16_t*)0x20bc5c < 0x64)
0000aeba                  r0_18 = sub_b02c();
0000aeba              
0000aec0              if (((uint32_t)*(uint16_t*)0x20bc5c >= 0x64 || !r0_18) && !sub_b0b4())
0000aec0              {
0000aece                  *(uint16_t*)0x20bc68;
0000aed0                  *(uint16_t*)0x20bc66;
0000aec0              }
0000ae8e          }
0000ae8e          else if (r0_14 == 3)
0000ae92          {
0000aeda              int32_t r0_22;
0000aeda              
0000aeda              if ((uint32_t)*(uint16_t*)0x20bc5c < 0x64)
0000aedc                  r0_22 = sub_b070();
0000aedc              
0000aee2              if ((uint32_t)*(uint16_t*)0x20bc5c >= 0x64 || !r0_22)
0000aee2              {
0000aeea                  int32_t r0_24;
0000aeea                  
0000aeea                  if ((uint32_t)*(uint8_t*)0x20bc48)
0000aeec                      r0_24 = sub_b0fc();
0000aeec                  
0000aef2                  if (!(uint32_t)*(uint8_t*)0x20bc48 || !r0_24)
0000aef2                  {
0000aef8                      *(uint16_t*)0x20bc68;
0000aefa                      *(uint16_t*)0x20bc66;
0000aef2                  }
0000aee2              }
0000ae92          }
0000ae92          else if (r0_14 == 6)
0000ae98              /* tailcall */
0000ae98              return sub_af00(0x20bc58, (uint8_t)arg6, r0_14, r1_8, r2_2, r3_1, arg7, arg8, 
0000ae98                  arg9);
0000ae98          
0000af18          sub_3730(0x20bc40);
0000af1e          *(uint8_t*)0x20bc59 = *(uint8_t*)0x20bc58;
0000af20          *(uint8_t*)0x20bc58 = (uint8_t)arg6;
0000af22          *(uint16_t*)0x20bc68;
0000af24          result = (uint32_t)*(uint16_t*)0x20bc66;
0000ae84      }
0000ae84      
0000af2a      return result;
0000acac  }


0000adfc    uint32_t sub_adfc(int32_t arg1, int32_t arg2, int32_t arg3, int32_t arg4, int32_t arg5 @ r5, int16_t arg6 @ r6, int32_t arg7, int32_t arg8, int32_t arg9, int32_t arg10, int32_t arg11, int32_t arg12, int32_t arg13)

0000adfc  {
0000ae00      uint32_t r0 = (uint32_t)*(uint16_t*)0x20bc6a;
0000ae04      int32_t r1;
0000ae04      
0000ae04      if (r0 == arg3)
0000ae08          r1 = arg7;
0000ae08      
0000ae0e      if (r0 != arg3 || r1 > 0x3e8)
0000ae0e      {
0000ae12          r1 = (int32_t)((uint16_t)arg3 - (uint16_t)r0);
0000ae14          arg3 = arg5;
0000ae1c          *(uint16_t*)0x20bc6e = arg6;
0000ae0e      }
0000ae0e      
0000ae74      *(uint16_t*)0x20bc6a = *(uint16_t*)0x20bc66;
0000ae78      *(uint16_t*)0x20bc6c = *(uint16_t*)0x20bc68;
0000ae7e      uint32_t result = (uint32_t)(*(uint16_t*)0x20bc5e + 0xa);
0000ae80      *(uint16_t*)0x20bc5e = (int16_t)result;
0000ae80      
0000ae84      if (result >= 0x50)
0000ae84      {
0000ae86          uint32_t r0_7 = (uint32_t)*(uint8_t*)0x20bc58;
0000ae86          
0000ae8a          if (r0_7 == 1)
0000ae8a          {
0000aeac              *(uint16_t*)0x20bc68;
0000aeae              *(uint16_t*)0x20bc66;
0000ae8a          }
0000ae8a          else if (r0_7 == 2)
0000ae8e          {
0000aeb8              int32_t r0_11;
0000aeb8              
0000aeb8              if ((uint32_t)*(uint16_t*)0x20bc5c < 0x64)
0000aeba                  r0_11 = sub_b02c();
0000aeba              
0000aec0              if (((uint32_t)*(uint16_t*)0x20bc5c >= 0x64 || !r0_11) && !sub_b0b4())
0000aec0              {
0000aece                  *(uint16_t*)0x20bc68;
0000aed0                  *(uint16_t*)0x20bc66;
0000aec0              }
0000ae8e          }
0000ae8e          else if (r0_7 == 3)
0000ae92          {
0000aeda              int32_t r0_15;
0000aeda              
0000aeda              if ((uint32_t)*(uint16_t*)0x20bc5c < 0x64)
0000aedc                  r0_15 = sub_b070();
0000aedc              
0000aee2              if ((uint32_t)*(uint16_t*)0x20bc5c >= 0x64 || !r0_15)
0000aee2              {
0000aeea                  int32_t r0_17;
0000aeea                  
0000aeea                  if ((uint32_t)*(uint8_t*)0x20bc48)
0000aeec                      r0_17 = sub_b0fc();
0000aeec                  
0000aef2                  if (!(uint32_t)*(uint8_t*)0x20bc48 || !r0_17)
0000aef2                  {
0000aef8                      *(uint16_t*)0x20bc68;
0000aefa                      *(uint16_t*)0x20bc66;
0000aef2                  }
0000aee2              }
0000ae92          }
0000ae92          else if (r0_7 == 6)
0000ae98              /* tailcall */
0000ae98              return sub_af00(0x20bc58, (uint8_t)arg6, r0_7, r1, arg3, arg4, arg7, arg8, 
0000ae98                  arg9);
0000ae98          
0000af18          sub_3730(0x20bc40);
0000af1e          *(uint8_t*)0x20bc59 = *(uint8_t*)0x20bc58;
0000af20          *(uint8_t*)0x20bc58 = (uint8_t)arg6;
0000af22          *(uint16_t*)0x20bc68;
0000af24          result = (uint32_t)*(uint16_t*)0x20bc66;
0000ae84      }
0000ae84      
0000af2a      return result;
0000adfc  }


0000ae20    uint32_t sub_ae20(int32_t arg1, int32_t arg2, int32_t arg3 @ r4, int16_t arg4 @ r6, int32_t arg5, int32_t arg6, int32_t arg7, int32_t arg8, int32_t arg9, int32_t arg10, int32_t arg11)

0000ae20  {
0000ae24      uint32_t r0 = (uint32_t)*(uint16_t*)0x20bc6c;
0000ae28      int32_t r2_1;
0000ae28      
0000ae28      if (r0 == arg2)
0000ae2c          r2_1 = arg5;
0000ae2c      
0000ae32      if (r0 != arg2 || r2_1 > 0x3e8)
0000ae32      {
0000ae36          r2_1 = (int32_t)((uint16_t)r0 - (uint16_t)arg2);
0000ae38          arg2 = arg3;
0000ae40          *(uint16_t*)0x20bc6e = arg4;
0000ae32      }
0000ae32      
0000ae74      *(uint16_t*)0x20bc6a = *(uint16_t*)0x20bc66;
0000ae78      *(uint16_t*)0x20bc6c = *(uint16_t*)0x20bc68;
0000ae7e      uint32_t result = (uint32_t)(*(uint16_t*)0x20bc5e + 0xa);
0000ae80      *(uint16_t*)0x20bc5e = (int16_t)result;
0000ae80      
0000ae84      if (result >= 0x50)
0000ae84      {
0000ae86          uint32_t r0_7 = (uint32_t)*(uint8_t*)0x20bc58;
0000ae86          
0000ae8a          if (r0_7 == 1)
0000ae8a          {
0000aeac              *(uint16_t*)0x20bc68;
0000aeae              *(uint16_t*)0x20bc66;
0000ae8a          }
0000ae8a          else if (r0_7 == 2)
0000ae8e          {
0000aeb8              int32_t r0_11;
0000aeb8              
0000aeb8              if ((uint32_t)*(uint16_t*)0x20bc5c < 0x64)
0000aeba                  r0_11 = sub_b02c();
0000aeba              
0000aec0              if (((uint32_t)*(uint16_t*)0x20bc5c >= 0x64 || !r0_11) && !sub_b0b4())
0000aec0              {
0000aece                  *(uint16_t*)0x20bc68;
0000aed0                  *(uint16_t*)0x20bc66;
0000aec0              }
0000ae8e          }
0000ae8e          else if (r0_7 == 3)
0000ae92          {
0000aeda              int32_t r0_15;
0000aeda              
0000aeda              if ((uint32_t)*(uint16_t*)0x20bc5c < 0x64)
0000aedc                  r0_15 = sub_b070();
0000aedc              
0000aee2              if ((uint32_t)*(uint16_t*)0x20bc5c >= 0x64 || !r0_15)
0000aee2              {
0000aeea                  int32_t r0_17;
0000aeea                  
0000aeea                  if ((uint32_t)*(uint8_t*)0x20bc48)
0000aeec                      r0_17 = sub_b0fc();
0000aeec                  
0000aef2                  if (!(uint32_t)*(uint8_t*)0x20bc48 || !r0_17)
0000aef2                  {
0000aef8                      *(uint16_t*)0x20bc68;
0000aefa                      *(uint16_t*)0x20bc66;
0000aef2                  }
0000aee2              }
0000ae92          }
0000ae92          else
0000ae92          {
0000ae96              int32_t entry_r3;
0000ae96              
0000ae96              if (r0_7 == 6)
0000ae98                  /* tailcall */
0000ae98                  return sub_af00(0x20bc58, (uint8_t)arg4, r0_7, arg2, r2_1, entry_r3, 
0000ae98                      arg5, arg6, arg7);
0000ae92          }
0000ae92          
0000af18          sub_3730(0x20bc40);
0000af1e          *(uint8_t*)0x20bc59 = *(uint8_t*)0x20bc58;
0000af20          *(uint8_t*)0x20bc58 = (uint8_t)arg4;
0000af22          *(uint16_t*)0x20bc68;
0000af24          result = (uint32_t)*(uint16_t*)0x20bc66;
0000ae84      }
0000ae84      
0000af2a      return result;
0000ae20  }

0000ae44              00 f0 84 f9 14 48 1c 30 01 89 1e 29 0d d2 82 88 7d 21 c9 00 8a 42 08 d3 1e 21 01 81      .....H.0...)....}!...B...!..
0000ae60  10 22 0e 21 82 5e 41 5e                                                                          .".!.^A^

0000ae68    uint32_t sub_ae68(char arg1 @ r6, int32_t arg2, int32_t arg3, int32_t arg4, int32_t arg5, int32_t arg6, int32_t arg7, int32_t arg8)

0000ae68  {
0000ae74      *(uint16_t*)0x20bc6a = *(uint16_t*)0x20bc66;
0000ae78      *(uint16_t*)0x20bc6c = *(uint16_t*)0x20bc68;
0000ae7e      uint32_t result = (uint32_t)(*(uint16_t*)0x20bc5e + 0xa);
0000ae80      *(uint16_t*)0x20bc5e = (int16_t)result;
0000ae80      
0000ae84      if (result >= 0x50)
0000ae84      {
0000ae86          uint32_t r0_4 = (uint32_t)*(uint8_t*)0x20bc58;
0000ae86          
0000ae8a          if (r0_4 == 1)
0000ae8a          {
0000aeac              *(uint16_t*)0x20bc68;
0000aeae              *(uint16_t*)0x20bc66;
0000ae8a          }
0000ae8a          else if (r0_4 == 2)
0000ae8e          {
0000aeb8              int32_t r0_8;
0000aeb8              
0000aeb8              if ((uint32_t)*(uint16_t*)0x20bc5c < 0x64)
0000aeba                  r0_8 = sub_b02c();
0000aeba              
0000aec0              if (((uint32_t)*(uint16_t*)0x20bc5c >= 0x64 || !r0_8) && !sub_b0b4())
0000aec0              {
0000aece                  *(uint16_t*)0x20bc68;
0000aed0                  *(uint16_t*)0x20bc66;
0000aec0              }
0000ae8e          }
0000ae8e          else if (r0_4 == 3)
0000ae92          {
0000aeda              int32_t r0_12;
0000aeda              
0000aeda              if ((uint32_t)*(uint16_t*)0x20bc5c < 0x64)
0000aedc                  r0_12 = sub_b070();
0000aedc              
0000aee2              if ((uint32_t)*(uint16_t*)0x20bc5c >= 0x64 || !r0_12)
0000aee2              {
0000aeea                  int32_t r0_14;
0000aeea                  
0000aeea                  if ((uint32_t)*(uint8_t*)0x20bc48)
0000aeec                      r0_14 = sub_b0fc();
0000aeec                  
0000aef2                  if (!(uint32_t)*(uint8_t*)0x20bc48 || !r0_14)
0000aef2                  {
0000aef8                      *(uint16_t*)0x20bc68;
0000aefa                      *(uint16_t*)0x20bc66;
0000aef2                  }
0000aee2              }
0000ae92          }
0000ae92          else
0000ae92          {
0000ae96              int32_t entry_r1;
0000ae96              int32_t entry_r2;
0000ae96              int32_t entry_r3;
0000ae96              
0000ae96              if (r0_4 == 6)
0000ae98                  /* tailcall */
0000ae98                  return sub_af00(0x20bc58, arg1, r0_4, entry_r1, entry_r2, entry_r3, arg2, 
0000ae98                      arg3, arg4);
0000ae92          }
0000ae92          
0000af18          sub_3730(0x20bc40);
0000af1e          *(uint8_t*)0x20bc59 = *(uint8_t*)0x20bc58;
0000af20          *(uint8_t*)0x20bc58 = arg1;
0000af22          *(uint16_t*)0x20bc68;
0000af24          result = (uint32_t)*(uint16_t*)0x20bc66;
0000ae84      }
0000ae84      
0000af2a      return result;
0000ae68  }

0000ae9a                                                                                00 00                                        ..

0000ae9c  int32_t data_ae9c = 0x20bc3c
0000aea0  int32_t data_aea0 = 0xbb8
0000aea4  int32_t data_aea4 = 0x82ec27

0000af00    uint32_t sub_af00(char* arg1 @ r4, char arg2 @ r6, int32_t arg3, int32_t arg4, int32_t arg5, int32_t arg6, int32_t arg7, int32_t arg8, int32_t arg9)

0000af00  {
0000af04      if ((uint32_t)*(uint16_t*)(arg1 + 8) < 0xa)
0000af04      {
0000aeac          *(uint16_t*)(arg1 + 0x10);  /* "RY02_3.00.33_250117" */
0000aeae          *(uint16_t*)(arg1 + 0xe);
0000af04      }
0000af04      else
0000af04      {
0000af0a          *(uint16_t*)(arg1 + 0x10);  /* "RY02_3.00.33_250117" */
0000af0c          *(uint16_t*)(arg1 + 0xe);
0000af04      }
0000af04      
0000af18      sub_3730(0x20bc40);
0000af1e      arg1[1] = *(uint8_t*)arg1;
0000af20      *(uint8_t*)arg1 = arg2;
0000af22      *(uint16_t*)(arg1 + 0x10);  /* "RY02_3.00.33_250117" */
0000af2a      return (uint32_t)*(uint16_t*)(arg1 + 0xe);
0000af00  }


0000af2c    char* sub_af2c(char* arg1)

0000af2c  {
0000af2c      int32_t r3;
0000af2c      int32_t var_c_1 = r3;
0000af2c      int32_t r2;
0000af2c      int32_t var_10_1 = r2;
0000af2c      int32_t r1;
0000af2c      int32_t var_14_1 = r1;
0000af2c      char* result = arg1;
0000af30      result = &data_0;
0000af32      int32_t var_14 = 0;
0000af34      int32_t var_10 = 0;
0000af36      int32_t var_c = 0;
0000af3c      (uint8_t)result = 0x80;
0000af40      *(uint8_t*)((char*)result)[1] = 0xaa;
0000af44      *(uint8_t*)((char*)result)[2] = *(uint8_t*)arg1;
0000af46      *(uint8_t*)((char*)result)[3] = 0xaa;
0000af4a      (uint8_t)var_14 = arg1[1];
0000af4c      *(uint8_t*)((char*)var_14)[1] = 0xaa;
0000af50      *(uint8_t*)((char*)var_14)[2] = arg1[2];
0000af52      *(uint8_t*)((char*)var_14)[3] = 0xaa;
0000af56      (uint8_t)var_10 = arg1[3];
0000af58      *(uint8_t*)((char*)var_10)[1] = 0xaa;
0000af5c      *(uint8_t*)((char*)var_10)[2] = arg1[4];
0000af5e      *(uint8_t*)((char*)var_10)[3] = 0xaa;
0000af62      (uint8_t)var_c = arg1[5];
0000af64      *(uint8_t*)((char*)var_c)[1] = 0xaa;
0000af70      *(uint8_t*)((char*)var_c)[3] = sub_3764(&result, 0xf);
0000af74      sub_6650(&result);
0000af78      return result;
0000af2c  }


0000af7a    uint32_t sub_af7a()

0000af7a  {
0000af7a      int32_t r3;
0000af7a      int32_t var_14 = r3;
0000af7a      int32_t r2;
0000af7a      int32_t var_18 = r2;
0000af7a      
0000af84      if (!(uint32_t)*(uint8_t*)0x20bc3c)
0000b024          return 0x20bc3c;
0000b024      
0000af88      *(uint8_t*)0x20bc3c = 0;
0000af8a      var_18 = 0;
0000af92      var_14 = 0;
0000af94      return sub_b1b0();
0000af7a  }


0000b02a    int32_t sub_b02a() __pure

0000b02a  {
0000b02a      return;
0000b02a  }


0000b02c    int32_t sub_b02c()

0000b02c  {
0000b03a      if ((uint32_t)*(uint8_t*)0x20bc48 == 1 && !(uint32_t)*(uint8_t*)0x20bc4b)
0000b03a      {
0000b042          int32_t r0_4 = (int32_t)(*(uint16_t*)0x20bc54 - *(uint16_t*)0x20bc4e);
0000b044          *(uint16_t*)0x20bc4c = (int16_t)r0_4;
0000b048          int16_t r0_5;
0000b048          
0000b048          if (r0_4 > 0)
0000b048          {
0000b04a              r0_5 = 0x78;
0000b056          label_b056:
0000b056              *(uint16_t*)0x20bc4c = r0_5;
0000b062              sub_3704(0x20bc44, 0x82eb8f, 0x1e, 1);  /* "50117" */
0000b068              *(uint8_t*)0x20bc4a = 1;
0000b06a              return 1;
0000b048          }
0000b048          
0000b050          if (r0_4 < 0)
0000b050          {
0000b054              r0_5 = -0x78;
0000b054              goto label_b056;
0000b050          }
0000b03a      }
0000b03a      
0000b06e      return 0;
0000b02c  }


0000b070    int32_t sub_b070()

0000b070  {
0000b07e      if ((uint32_t)*(uint8_t*)0x20bc48 && !(uint32_t)*(uint8_t*)0x20bc4b)
0000b07e      {
0000b086          int32_t r0_4 = (int32_t)(*(uint16_t*)0x20bc54 - *(uint16_t*)0x20bc4e);
0000b088          *(uint16_t*)0x20bc4c = (int16_t)r0_4;
0000b08c          int16_t r0_5;
0000b08c          
0000b08c          if (r0_4 > 0)
0000b08c          {
0000b08e              r0_5 = 0x3c;
0000b09a          label_b09a:
0000b09a              *(uint16_t*)0x20bc4c = r0_5;
0000b0a6              sub_3704(0x20bc44, 0x82eb8f, 0x1e, 1);  /* "50117" */
0000b0ac              *(uint8_t*)0x20bc4a = 1;
0000b0ae              return 1;
0000b08c          }
0000b08c          
0000b094          if (r0_4 < 0)
0000b094          {
0000b098              r0_5 = -0x3c;
0000b098              goto label_b09a;
0000b094          }
0000b07e      }
0000b07e      
0000b0b2      return 0;
0000b070  }


0000b0b4    int32_t sub_b0b4()

0000b0b4  {
0000b0bc      if (!(uint32_t)*(uint8_t*)0x20bc4b)
0000b0bc      {
0000b0c4          int32_t r0_3 = (int32_t)(*(uint16_t*)0x20bc54 - *(uint16_t*)0x20bc4e);
0000b0ca          *(uint16_t*)0x20bc4c = (int16_t)r0_3;
0000b0ca          
0000b0ce          if (r0_3 + 0xa >= 0x15)  /* "3.00.33_250117" */
0000b0ce          {
0000b0d2              if (r0_3 > 0x78)
0000b0d6                  *(uint16_t*)0x20bc4c = 0x78;
0000b0d2              else if (r0_3 < 0xffffff88)
0000b0e2                  *(uint16_t*)0x20bc4c = 0xff88;
0000b0e2              
0000b0ee              sub_3704(0x20bc44, 0x82eb8f, 0x1e, 1);  /* "50117" */
0000b0f4              *(uint8_t*)0x20bc4a = 1;
0000b0f6              return 1;
0000b0ce          }
0000b0bc      }
0000b0bc      
0000b0fa      return 0;
0000b0b4  }


0000b0fc    int32_t sub_b0fc()

0000b0fc  {
0000b104      if (!(uint32_t)*(uint8_t*)0x20bc4b)
0000b104      {
0000b10c          int32_t r0_3 = (int32_t)(*(uint16_t*)0x20bc54 - *(uint16_t*)0x20bc4e);
0000b10e          *(uint16_t*)0x20bc4c = (int16_t)r0_3;
0000b10e          
0000b112          if (r0_3 > 0x3c)
0000b116              *(uint16_t*)0x20bc4c = (int16_t)(r0_3 << 1);
0000b116          
0000b11a          int32_t r0_5 = (int32_t)*(uint16_t*)0x20bc4c;
0000b11a          
0000b122          if (r0_5 + 0xa >= 0x15)  /* "3.00.33_250117" */
0000b122          {
0000b126              if (r0_5 > 0x3c)
0000b12a                  *(uint16_t*)0x20bc4c = 0x3c;
0000b126              else if (r0_5 < 0xffffffc4)
0000b136                  *(uint16_t*)0x20bc4c = 0xffc4;
0000b136              
0000b142              sub_3704(0x20bc44, 0x82eb8f, 0x1e, 1);  /* "50117" */
0000b148              *(uint8_t*)0x20bc4a = 1;
0000b14a              return 1;
0000b122          }
0000b104      }
0000b104      
0000b14e      return 0;
0000b0fc  }


0000b150    uint32_t sub_b150()

0000b150  {
0000b158      uint32_t r1 = (uint32_t)*(uint16_t*)0x20bc6a;
0000b15a      uint32_t r4 = (uint32_t)*(uint16_t*)0x20bc66;
0000b15c      uint32_t r2 = (uint32_t)*(uint16_t*)0x20bc6c;
0000b15e      uint32_t result = (uint32_t)*(uint16_t*)0x20bc68;
0000b15e      
0000b170      if (r1 != r4 || r2 != result || (uint32_t)*(uint16_t*)0x20bc6e > 0x3e8)
0000b170      {
0000b172          uint32_t r1_1 = r4 - r1;
0000b174          result -= r2;
0000b178          int16_t r2_1;
0000b178          
0000b178          r2_1 = r1_1 < 0 ? 0 - (uint16_t)r1_1 : (uint16_t)r1_1;
0000b178          
0000b180          int16_t r4_1 = (uint16_t)result;
0000b180          
0000b182          if (result < 0)
0000b184              r4_1 = 0 - (uint16_t)result;
0000b184          
0000b18c          uint32_t r2_4 = (uint32_t)(r2_1 + r4_1 + *(uint16_t*)0x20bc60);
0000b18e          *(uint16_t*)0x20bc60 = (int16_t)r2_4;
0000b18e          
0000b192          if (r2_4 >= 0xa)
0000b198              result = 9;
0000b170      }
0000b170      
0000b19e      return result;
0000b150  }

0000b1a0  int32_t data_b1a0 = 0x20bc48
0000b1a4  int32_t data_b1a4 = 0x82ec27
0000b1a8  int32_t data_b1a8 = 0x82eb8f

0000b1ac    int32_t sub_b1ac() __pure

0000b1ac  {
0000b1ac      return;
0000b1ac  }


0000b1ae    int32_t sub_b1ae() __pure

0000b1ae  {
0000b1ae      return;
0000b1ae  }


0000b1b0    int32_t sub_b1b0() __pure

0000b1b0  {
0000b1b2      return 0;
0000b1b0  }


0000b1b4    int32_t sub_b1b4() __pure

0000b1b4  {
0000b1b4      return;
0000b1b4  }


0000b1b6    int32_t sub_b1b6() __pure

0000b1b6  {
0000b1b6      return;
0000b1b6  }


0000b1b8    int32_t sub_b1b8() __pure

0000b1b8  {
0000b1b8      return;
0000b1b8  }


0000b1ba    int32_t sub_b1ba() __pure

0000b1ba  {
0000b1ba      return;
0000b1ba  }


0000b1bc    int32_t sub_b1bc() __pure

0000b1bc  {
0000b1bc      return;
0000b1bc  }


0000b1be    int32_t sub_b1be() __pure

0000b1be  {
0000b1be      return;
0000b1be  }


0000b1c0    int32_t sub_b1c0() __pure

0000b1c0  {
0000b1c2      return 0;
0000b1c0  }


0000b1c4    int32_t sub_b1c4()

0000b1c4  {
0000b1cc      sub_f69e(0x14, 5);  /* "_3.00.33_250117" */
0000b1d4      sub_f69e(0x15, 6);  /* "3.00.33_250117" */
0000b1e8      sub_f6bc(0x14, 1, 1, 0, 0, 1);  /* "_3.00.33_250117" */
0000b1f8      sub_f6bc(0x15, 1, 1, 0, 0, 1);  /* "3.00.33_250117" */
0000b200      sub_f8b8(0x14, 1);  /* "_3.00.33_250117" */
0000b208      sub_f8b8(0x15, 1);  /* "3.00.33_250117" */
0000b212      sub_fde8(0x40015000, 0);
0000b21c      sub_fc34(0x8010000, 0x60000001, 1);
0000b222      int32_t var_30;
0000b222      sub_100e0(&var_30);
0000b228      var_30 = 0x2625a00;
0000b22c      int32_t var_2c = 0x493e0;
0000b232      int16_t var_28 = 0x41;
0000b234      int16_t var_26 = 0;
0000b236      int16_t var_22 = 1;
0000b23c      sub_ff44(0x40015000, &var_30);
0000b244      sub_10106(0x40015000, 1);
0000b24a      return 0x40015000;
0000b1c4  }


0000b24c    int32_t sub_b24c()

0000b24c  {
0000b24c      int32_t r3;
0000b24c      int32_t var_c = r3;
0000b24c      int32_t r2;
0000b24c      int32_t var_10 = r2;
0000b252      sub_f69e(0x21, 0x5a);  /* "17" */
0000b268      return sub_f6bc(0x21, 0, 1, 1, 0, 0);  /* "17" */
0000b24c  }


0000b26a    int32_t sub_b26a()

0000b26a  {
0000b26c      sub_b24c();
0000b274      return sub_b1c4();
0000b26a  }


0000b276    uint32_t sub_b276()

0000b276  {
0000b27a      return (uint32_t)*(uint8_t*)0x20846b;
0000b276  }


0000b27c    int32_t sub_b27c() __pure

0000b27c  {
0000b27e      return 0;
0000b27c  }


0000b280    int32_t sub_b280() __pure

0000b280  {
0000b282      return 0;
0000b280  }


0000b284    int32_t sub_b284()

0000b284  {
0000b284      int32_t r3;
0000b284      int32_t var_14 = r3;
0000b284      int32_t r2;
0000b284      int32_t var_18 = r2;
0000b296      sub_f6bc(0x14, 0, 1, 0, 0, 1);  /* "_3.00.33_250117" */
0000b2aa      return sub_f6bc(0x15, 0, 1, 0, 0, 1);  /* "3.00.33_250117" */
0000b284  }


0000b2ac    int32_t sub_b2ac()

0000b2ac  {
0000b2ac      int32_t r3;
0000b2ac      int32_t var_14 = r3;
0000b2ac      int32_t r2;
0000b2ac      int32_t var_18 = r2;
0000b2be      sub_f6bc(0x14, 1, 1, 0, 0, 1);  /* "_3.00.33_250117" */
0000b2d2      return sub_f6bc(0x15, 1, 1, 0, 0, 1);  /* "3.00.33_250117" */
0000b2ac  }


0000b2d4    int32_t sub_b2d4(int32_t arg1, int32_t arg2, int32_t arg3)

0000b2d4  {
0000b2d4      int32_t r3;
0000b2d4      int32_t var_c_1 = r3;
0000b2d4      int32_t var_10 = arg3;
0000b2de      sub_1047e(sub_104aa(0x21), 0);  /* "17" */
0000b2ea      sub_10498(sub_104aa(0x21), 1);  /* "17" */
0000b2f4      sub_10490(sub_104aa(0x21));  /* "17" */
0000b2fc      (uint16_t)var_10 = 3;
0000b300      *(uint16_t*)((char*)var_10)[2] = 0;
0000b302      int32_t var_c = 0;
0000b308      sub_13b8(&var_10);
0000b314      sub_1047e(sub_104aa(0x21), 1);  /* "17" */
0000b31a      int32_t result = sub_104aa(0x21);  /* "17" */
0000b320      sub_10498(result, 0);
0000b324      return result;
0000b2d4  }


0000b326    int32_t sub_b326() __pure

0000b326  {
0000b326      return;
0000b326  }


0000b328    int32_t sub_b328()

0000b328  {
0000b330      return sub_7760(0x83e258);
0000b328  }


0000b332    int32_t sub_b332()

0000b332  {
0000b332      int32_t r2;
0000b332      int32_t var_1c = r2;
0000b332      int32_t r1;
0000b332      int32_t var_20 = r1;
0000b336      sub_100bc(0x40015000);
0000b336      
0000b372      for (int32_t i = 0; i < 9; i += 1)
0000b372      {
0000b34e          sub_f6bc(0x14, 0, 1, 1, 1, 0);  /* "_3.00.33_250117" */
0000b356          (*(uint32_t*)0x200120)(1);
0000b364          sub_f6bc(0x14, 0, 1, 0, 1, 1);  /* "_3.00.33_250117" */
0000b36c          (*(uint32_t*)0x200120)(1);
0000b372      }
0000b372      
0000b380      sub_f6bc(0x15, 0, 1, 1, 1, 0);  /* "3.00.33_250117" */
0000b388      (*(uint32_t*)0x200120)(1);
0000b396      sub_f6bc(0x15, 0, 1, 0, 1, 1);  /* "3.00.33_250117" */
0000b39e      (*(uint32_t*)0x200120)(1);
0000b3a4      return sub_b1c4();
0000b332  }


0000b3a6    uint32_t sub_b3a6(int32_t arg1)

0000b3a6  {
0000b3aa      uint32_t result;
0000b3aa      
0000b3aa      if (!arg1)
0000b3aa      {
0000b3c8          result = 0;
0000b3ca          *(uint8_t*)0x20bc78 = 0;
0000b3cc          *(uint8_t*)0x20bc79 = 0;
0000b3aa      }
0000b3aa      else
0000b3aa      {
0000b3ac          result = (uint32_t)*(uint8_t*)0x20bc79;
0000b3ac          
0000b3b0          if (result < 0xa)
0000b3b6              *(uint8_t*)0x20bc78 += 1;
0000b3b6          
0000b3bc          if ((uint32_t)*(uint8_t*)0x20bc78 == 0x1e)  /* "50117" */
0000b3bc          {
0000b3c0              *(uint8_t*)0x20bc78 = 0x1f;  /* "0117" */
0000b3c4              *(uint8_t*)0x20bc79 = (uint8_t)result + 1;
0000b3c6              /* tailcall */
0000b3c6              return sub_b332();
0000b3bc          }
0000b3aa      }
0000b3aa      
0000b3ce      return result;
0000b3a6  }


0000b3d0    int32_t sub_b3d0(int32_t arg1, char* arg2, int32_t arg3)

0000b3d0  {
0000b3d6      *(uint8_t*)0x20bc7a = (uint8_t)arg1;
0000b3de      *(uint8_t*)0x20bc7b = *(uint8_t*)arg2;
0000b3e2      *(uint8_t*)0x20bc7c = (uint8_t)arg3;
0000b3e6      *(uint8_t*)0x20846b = 0;
0000b3e8      int32_t r4 = 0;
0000b3e8      
0000b40a      while (!sub_b7c0(0x40015000, 4))
0000b40a      {
0000b3f6          (*(uint32_t*)0x20011c)(0xa);
0000b3fa          r4 += 0xa;
0000b3fa          
0000b3fe          if (r4 > 0x1388)
0000b3fe          {
0000b400              *(uint8_t*)0x20846b = 1;
0000b404              return 2;
0000b3fe          }
0000b40a      }
0000b40a      
0000b412      int32_t r4_1 = 0;
0000b412      
0000b430      while (sub_b7c0(0x40015000, 0x20) == 1)  /* "117" */
0000b430      {
0000b41c          (*(uint32_t*)0x20011c)(0xa);
0000b420          r4_1 += 0xa;
0000b420          
0000b424          if (r4_1 > 0x1388)
0000b424          {
0000b426              *(uint8_t*)0x20846b = 1;
0000b42a              return 3;
0000b424          }
0000b430      }
0000b430      
0000b43c      sub_b7ac(0x40015000, arg1);
0000b44a      bool cond:0 = !sub_1015a(0x40015000, arg2, arg3);
0000b44c      *(uint8_t*)0x20846b = 1;
0000b44c      
0000b44e      if (cond:0)
0000b456          return 0;
0000b456      
0000b452      return 1;
0000b3d0  }


0000b458    int32_t sub_b458(int32_t arg1, int32_t arg2, int32_t arg3, int32_t arg4)

0000b458  {
0000b458      int32_t var_18 = arg4;
0000b458      int32_t var_20 = arg2;
0000b458      int32_t var_24 = arg1;
0000b466      char* r0_2 = sub_f458(arg4 + 0xb);
0000b46a      *(uint8_t*)r0_2 = (uint8_t)arg2;
0000b474      0xff81b898(&r0_2[1], arg3, arg4);
0000b480      int32_t result = sub_b3d0(arg1, r0_2, (uint32_t)((uint16_t)arg4 + 1));
0000b486      sub_b3a6(result);
0000b48c      sub_f504();
0000b494      return result;
0000b458  }


0000b496    int32_t sub_b496(int32_t arg1, char* arg2, int32_t arg3, char* arg4, int32_t arg5)

0000b496  {
0000b49e      *(uint8_t*)0x20bc7a = (uint8_t)arg1;
0000b4a6      *(uint8_t*)0x20bc7b = *(uint8_t*)arg2;
0000b4aa      *(uint8_t*)0x20bc7c = (uint8_t)arg3;
0000b4ae      *(uint8_t*)0x20846b = 0;
0000b4b0      int32_t r4 = 0;
0000b4b0      
0000b4d2      while (!sub_b7c0(0x40015000, 4))
0000b4d2      {
0000b4be          (*(uint32_t*)0x20011c)(0xa);
0000b4c2          r4 += 0xa;
0000b4c2          
0000b4c6          if (r4 > 0x1388)
0000b4c6          {
0000b4c8              *(uint8_t*)0x20846b = 1;
0000b4ca              return 2;
0000b4c6          }
0000b4d2      }
0000b4d2      
0000b4da      int32_t r4_1 = 0;
0000b4da      
0000b4f8      while (sub_b7c0(0x40015000, 0x20) == 1)  /* "117" */
0000b4f8      {
0000b4e4          (*(uint32_t*)0x20011c)(0xa);
0000b4e8          r4_1 += 0xa;
0000b4e8          
0000b4ec          if (r4_1 > 0x1388)
0000b4ec          {
0000b4ee              *(uint8_t*)0x20846b = 1;
0000b4f0              return 3;
0000b4ec          }
0000b4f8      }
0000b4f8      
0000b504      sub_b7ac(0x40015000, arg1);
0000b516      bool cond:0_1 = !sub_1022e(0x40015000, arg2, arg3, arg4, arg5);
0000b518      *(uint8_t*)0x20846b = 1;
0000b518      
0000b51a      if (cond:0_1)
0000b520          return 0;
0000b520      
0000b51c      return 1;
0000b496  }


0000b524    int32_t sub_b524(int32_t arg1, int32_t arg2, char* arg3, int32_t arg4)

0000b524  {
0000b524      int32_t var_c = arg4;
0000b524      char* var_10 = arg3;
0000b524      int32_t var_14 = arg2;
0000b524      int32_t var_18 = arg1;
0000b530      int32_t result = sub_b496(arg1, &var_14, 1, arg3, arg4);
0000b536      sub_b3a6(result);
0000b53e      return result;
0000b524  }


0000b540    int32_t sub_b540(int32_t arg1, int32_t arg2, int32_t arg3)

0000b540  {
0000b540      int32_t r3;
0000b540      int32_t var_c_1 = r3;
0000b540      int32_t var_10 = arg3;
0000b546      (uint16_t)var_10 = 3;
0000b54a      *(uint16_t*)((char*)var_10)[2] = 2;
0000b54e      int32_t var_c = arg1;
0000b558      return sub_13b8(&var_10);
0000b540  }


0000b55a    int32_t sub_b55a(int32_t arg1, int32_t arg2, int32_t arg3)

0000b55a  {
0000b55a      int32_t r3;
0000b55a      int32_t var_c_1 = r3;
0000b55a      int32_t var_10 = arg3;
0000b560      (uint16_t)var_10 = 3;
0000b564      *(uint16_t*)((char*)var_10)[2] = 1;
0000b568      int32_t var_c = arg1;
0000b572      return sub_13b8(&var_10);
0000b55a  }


0000b574    int32_t sub_b574(int32_t arg1, int32_t arg2)

0000b574  {
0000b57a      uint32_t r0 = (uint32_t)*(uint16_t*)((char*)arg1)[2];
0000b57a      
0000b57e      if (!r0)
0000b57e      {
0000b5a6          sub_cd4c();
0000b5aa          return 1;
0000b57e      }
0000b57e      
0000b582      if (r0 == 1)
0000b5b4          return sub_cc18((uint32_t)(uint16_t)arg2);
0000b5b4      
0000b586      if (r0 == 2)
0000b5be          return sub_ccbc((uint32_t)(uint16_t)arg2);
0000b5be      
0000b5a4      int32_t lr;
0000b5a4      return 0xff7e1af8(0x23103002, 0x8801374, 2, 
0000b5a4          0xff7e1eba(0x23400000, "..\..\..\..\qc_code\app_module\hr\hr_module.c"), 0x192, 
0000b5a4          arg1, arg2, lr);
0000b574  }


0000b5c0    int32_t sub_b5c0()

0000b5c0  {
0000b5c2      char r0 = sub_ccfc();
0000b5ca      int32_t entry_r1;
0000b5ca      int32_t entry_r2;
0000b5ca      sub_b540(2, entry_r1, entry_r2);
0000b5d2      char* r1 = *(uint32_t*)0x20bc98;
0000b5d2      
0000b5d6      if (r1)
0000b5d8          *(uint8_t*)r1 = r0;
0000b5d8      
0000b5da      char* r1_1 = *(uint32_t*)0x20bc9c;
0000b5da      
0000b5de      if (r1_1)
0000b5e0          *(uint8_t*)r1_1 = r0;
0000b5e0      
0000b5e6      *(uint32_t*)0x20bc94 = 0;
0000b5e8      *(uint32_t*)0x20bc98 = 0;
0000b5ea      *(uint32_t*)0x20bc9c = 0;
0000b5f2      return sub_3730(0x20bc80);
0000b5c0  }

0000b5f4  int32_t data_b5f4 = 0x40015000
0000b5f8  int32_t data_b5f8 = 0x60000001
0000b5fc  int32_t data_b5fc = 0x8010000
0000b600  int32_t data_b600 = 0x2625a00
0000b604  int32_t data_b604 = 0x493e0
0000b608  int32_t data_b608 = 0x20846b
0000b60c  int32_t data_b60c = 0x83e258
0000b610  int32_t data_b610 = 0x200120
0000b614  int32_t data_b614 = 0x20bc78
0000b618  int32_t data_b618 = 0x20011c
0000b61c  int32_t data_b61c = 0x1388

0000b620  data_b620:
0000b620  2e 2e 5c 2e 2e 5c 2e 2e 5c 2e 2e 5c 71 63 5f 63 6f 64 65 5c 61 70 70 5f 6d 6f 64 75 6c 65 5c 68  ..\..\..\..\qc_code\app_module\h
0000b640  72 5c 68 72 5f 6d 6f 64 75 6c 65 2e 63 00 00 00                                                  r\hr_module.c...

0000b650  int32_t data_b650 = 0x8801374
0000b654  int32_t data_b654 = 0x23103002

0000b658    uint32_t sub_b658(char* arg1)

0000b658  {
0000b660      uint32_t r0_1 = (uint32_t)*(uint8_t*)0x20bc94 << 0x1f;  /* "0117" */
0000b660      
0000b662      if (r0_1)
0000b662      {
0000b664          *(uint32_t*)0x20bc9c = arg1;
0000b666          return r0_1;
0000b662      }
0000b662      
0000b66a      char r0_2 = 0;
0000b66e      *(uint32_t*)0x20bc94 = 0;
0000b670      *(uint32_t*)0x20bc98 = 0;
0000b672      *(uint32_t*)0x20bc9c = 0;
0000b678      uint32_t r1 = (uint32_t)*(uint8_t*)0x208850;
0000b678      
0000b67c      if (r1 == 1)
0000b67c      {
0000b6a0          *(uint8_t*)0x20bc87 = 1;
0000b6a0          
0000b6a4          if (arg1)
0000b6a4          {
0000b6a6              *(uint8_t*)arg1 = 0;
0000b6a8              return 0;
0000b6a4          }
0000b67c      }
0000b67c      else
0000b67c      {
0000b680          int32_t entry_r2;
0000b680          sub_b55a(2, r1, entry_r2);
0000b68e          sub_3704(0x20bc80, 0x82f571, 0x9c4, 1);
0000b694          r0_2 = *(uint8_t*)0x20bc94 | 1;
0000b696          *(uint8_t*)0x20bc94 = r0_2;
0000b698          *(uint32_t*)0x20bc98 = arg1;
0000b67c      }
0000b67c      
0000b69a      return r0_2;
0000b658  }


0000b6aa    void sub_b6aa(int32_t arg1, int32_t arg2, int32_t arg3)

0000b6aa  {
0000b6aa      int32_t r3 = arg1 - arg2;
0000b6aa      
0000b6ac      if (arg1 - arg2 < 0)
0000b6ae          r3 = 0 - r3;
0000b6ae      
0000b6c8      if (r3 <= arg3 || !arg2 || !arg1
0000b6c8              || (*(uint32_t*)0x2086a8 == arg2 && *(uint32_t*)0x2086ac == arg1))
0000b6c2          return;
0000b6c2      
0000b6cc      if (arg2 >= arg1)
0000b6cc      {
0000b6d4          *(uint32_t*)0x2086ac = arg2;
0000b6d6          *(uint32_t*)0x2086a8 = arg1;
0000b6d8          arg1 = arg2;
0000b6cc      }
0000b6cc      else
0000b6cc      {
0000b6ce          *(uint32_t*)0x2086a8 = arg2;
0000b6d0          *(uint32_t*)0x2086ac = arg1;
0000b6cc      }
0000b6cc      
0000b6de      *(uint32_t*)0x2086b0 = arg1 - *(uint32_t*)0x2086a8;
0000b6aa  }


0000b6e2    uint32_t sub_b6e2(int32_t arg1, int32_t arg2, int32_t arg3)

0000b6e2  {
0000b6e8      uint32_t result = arg1 - arg2;
0000b6e8      
0000b6ea      if (arg1 - arg2 < 0)
0000b6ec          result = 0 - result;
0000b6ec      
0000b6f0      if (result > arg3)
0000b6f0      {
0000b6fc          if ((uint32_t)*(uint16_t*)0x20869e == arg2)
0000b6fe              result = (uint32_t)*(uint16_t*)0x2086a0;
0000b6fe          
0000b702          if ((uint32_t)*(uint16_t*)0x20869e != arg2 || result != arg1)
0000b702          {
0000b708              int16_t r0_2 = sub_12b3e(arg2 + arg1, 3);
0000b70e              result = (uint32_t)(uint16_t)arg2;
0000b710              int16_t r1 = (int16_t)arg1;
0000b710              
0000b714              if (arg2 >= arg1)
0000b714              {
0000b71c                  *(uint16_t*)0x20869e = r1;
0000b71e                  *(uint16_t*)0x2086a0 = (int16_t)result;
0000b714              }
0000b714              else
0000b714              {
0000b716                  *(uint16_t*)0x20869e = (int16_t)result;
0000b718                  *(uint16_t*)0x2086a0 = r1;
0000b714              }
0000b714              
0000b720              *(uint16_t*)0x2086a2 = r0_2;
0000b702          }
0000b6f0      }
0000b6f0      
0000b722      return result;
0000b6e2  }


0000b724    int32_t sub_b724()

0000b724  {
0000b72c      0xff81b968(0x20bca0, 0x38);  /* "0" */
0000b736      return 0xff81b968(0x20bcd8, 0x38);  /* "0" */
0000b724  }


0000b73c    int32_t sub_b73c()

0000b73c  {
0000b742      return *(uint32_t*)0x20bd04;
0000b73c  }


0000b744    int32_t sub_b744()

0000b744  {
0000b74a      return *(uint32_t*)0x20bccc;
0000b744  }


0000b74c    void* sub_b74c(int32_t* arg1, int32_t arg2, int32_t arg3)

0000b74c  {
0000b756      if (arg2)
0000b756      {
0000b758          int32_t r0 = arg1[0xb];
0000b75a          int32_t r0_1 = r0 - arg2;
0000b75a          
0000b75c          if (r0 - arg2 < 0)
0000b75e              r0_1 = 0 - r0_1;
0000b75e          
0000b764          arg1[0xb] = arg2;
0000b764          
0000b766          if (r0_1 > arg3)
0000b7a6              arg1[0xa] = 0;
0000b766          else
0000b766          {
0000b76c              arg1[arg1[0xa]] = arg2;
0000b770              int32_t r0_5 = arg1[0xa] + 1;
0000b772              arg1[0xa] = r0_5;
0000b772              
0000b776              if (r0_5 >= 0xa)
0000b776              {
0000b778                  int32_t r2 = 0;
0000b778                  
0000b786                  for (int32_t i = 0; i < 0xa; )
0000b786                  {
0000b77e                      int32_t r1_1 = arg1[i];
0000b780                      i += 1;
0000b782                      r2 += r1_1;
0000b786                  }
0000b786                  
0000b78c                  int32_t r0_7 = sub_12b3e(r2, 0xa);
0000b790                  int32_t r1_2 = arg1[0xd];
0000b790                  
0000b794                  if (!r1_2)
0000b7a4                      arg1[0xd] = r0_7;
0000b794                  else if (arg1[0xc] < r0_7)
0000b79c                      arg1[0xc] = r0_7;
0000b79a                  else if (r1_2 > r0_7)
0000b7a4                      arg1[0xd] = r0_7;
0000b7a4                  
0000b7a6                  arg1[0xa] = 0;
0000b776              }
0000b766          }
0000b756      }
0000b756      
0000b7aa      return &arg1[0xc];
0000b74c  }


0000b7ac    void sub_b7ac(void* arg1, int32_t arg2)

0000b7ac  {
0000b7b2      *(uint32_t*)((char*)arg1 + 4) = *(uint32_t*)((char*)arg1 + 4) >> 0xa << 0xa;
0000b7bc      *(uint32_t*)((char*)arg1 + 4) |= arg2 << 0x16 >> 0x16;  /* ".00.33_250117" */
0000b7ac  }


0000b7c0    int32_t sub_b7c0(void* arg1, int32_t arg2)

0000b7c0  {
0000b7c8      if (!(*(uint32_t*)((char*)arg1 + 0x70) & arg2))
0000b7cc          return 0;
0000b7cc      
0000b7ca      return 1;
0000b7c0  }

0000b7ce                                            00 00                                                                ..

0000b7d0  int32_t data_b7d0 = 0x20bc94
0000b7d4  int32_t data_b7d4 = 0x208850
0000b7d8  int32_t data_b7d8 = 0x9c4
0000b7dc  int32_t data_b7dc = 0x82f571
0000b7e0  int32_t data_b7e0 = 0x208660

0000b7e4    uint32_t sub_b7e4(char arg1)

0000b7e4  {
0000b7ec      *(uint8_t*)0x20bd10 = 0;
0000b7fc      uint32_t result = (uint32_t)(sub_12b3e(sub_814(), 3) + arg1 - 2);
0000b7fc      
0000b800      if (result < 0x5c)
0000b802          result = 0x5c;
0000b800      else if (result > 0x64)
0000b80a          result = 0x64;
0000b80a      
0000b80c      *(uint8_t*)0x20bd10 = (char)result;
0000b80e      return result;
0000b7e4  }


0000b810    uint32_t sub_b810()

0000b810  {
0000b814      return (uint32_t)*(uint8_t*)0x20bd10;
0000b810  }


0000b816    void sub_b816(int32_t arg1)

0000b816  {
0000b81a      if (!arg1)
0000b81a          return;
0000b81a      
0000b824      *(uint16_t*)0x20bd1c = sub_216a();
0000b830      *(uint16_t*)0x20bd1e = sub_12b2a(sub_217a(), 0x3c);
0000b832      uint32_t r0_3 = (uint32_t)*(uint8_t*)0x20bd20;
0000b834      char r1_1 = (char)arg1;
0000b834      
0000b838      if (!r0_3)
0000b838      {
0000b850          *(uint8_t*)0x20bd20 = r1_1;
0000b846          *(uint8_t*)0x20bd21 = r1_1;
0000b838      }
0000b838      else
0000b838      {
0000b83c          if (r0_3 < arg1)
0000b83e              *(uint8_t*)0x20bd20 = r1_1;
0000b83e          
0000b844          if ((uint32_t)*(uint8_t*)0x20bd21 > arg1)
0000b846              *(uint8_t*)0x20bd21 = r1_1;
0000b838      }
0000b838      
0000b84a      sub_529c(3);
0000b816  }


0000b854    uint32_t sub_b854()

0000b854  {
0000b85c      uint32_t result = (uint32_t)(*(uint8_t*)0x20bd11 + 1);
0000b85e      *(uint8_t*)0x20bd11 = (char)result;
0000b85e      
0000b862      if (result >= 3)
0000b862      {
0000b866          if (result <= 0xe && !sub_ccfc())
0000b866          {
0000b872              int32_t r1_1;
0000b872              int32_t r2_1;
0000b872              r1_1 = sub_3730(0x20bd14);
0000b878              sub_b540(0x80, r1_1, r2_1);
0000b866          }
0000b866          
0000b87c          uint32_t r0_3 = (uint32_t)*(uint8_t*)0x20bd10;
0000b87c          
0000b880          if (r0_3)
0000b880          {
0000b882              int32_t r1_2;
0000b882              int32_t r2_2;
0000b882              r1_2 = sub_b816(r0_3);
0000b888              sub_b540(0x80, r1_2, r2_2);
0000b890              return sub_3730(0x20bd14);
0000b880          }
0000b880          
0000b896          result = (uint32_t)*(uint8_t*)0x20bd11;
0000b896          
0000b89a          if (result >= 0x41)
0000b8ae              return sub_b7e4(sub_12b3e(sub_814(), 7) + 0x5d);
0000b862      }
0000b862      
0000b894      return result;
0000b854  }


0000b8b0    int32_t sub_b8b0()

0000b8b0  {
0000b8b4      *(uint8_t*)0x20bd10 = 0;
0000b8b6      return 0;
0000b8b0  }


0000b8b8    uint32_t sub_b8b8()

0000b8b8  {
0000b8ba      uint32_t result = sub_15f6();
0000b8ba      
0000b8c0      if (result)
0000b8c0      {
0000b8c4          result = (uint32_t)*(uint8_t*)0x208852;
0000b8c4          
0000b8c8          if (result)
0000b8c8          {
0000b8ca              result = sub_9170();
0000b8ca              
0000b8d0              if (result != 1)
0000b8d0              {
0000b8d2                  result = sub_281e();
0000b8d2                  
0000b8d8                  if (!result)
0000b8d8                  {
0000b8de                      *(uint8_t*)0x20bd11 = 0;
0000b8e0                      *(uint8_t*)0x20bd10 = 0;
0000b8e4                      int32_t entry_r2;
0000b8e4                      sub_b55a(0x80, 0, entry_r2);
0000b8f4                      return sub_3704(0x20bd14, 0x82f805, 0x3e8, 1);
0000b8d8                  }
0000b8d0              }
0000b8c8          }
0000b8c0      }
0000b8c0      
0000b8f8      return result;
0000b8b8  }


0000b8fa    int32_t sub_b8fa() __pure

0000b8fa  {
0000b8fa      return;
0000b8fa  }


0000b8fc    int32_t sub_b8fc(int32_t arg1, int32_t arg2)

0000b8fc  {
0000b90a      void* r0 = sub_3404(0x83e26c, *(uint32_t*)0x20bd18, arg1);
0000b914      0xff81b968(arg2, 0x34);  /* "_V3.0" */
0000b914      
0000b91e      if (!r0)
0000b91e      {
0000b93e          if ((uint32_t)*(uint16_t*)0x20bd1c != arg1)
0000b958              return 0;
0000b958          
0000b948          *(uint8_t*)(((uint32_t)*(uint16_t*)0x20bd1e << 1) + arg2 + 4) =
0000b948              *(uint8_t*)0x20bd20;
0000b952          *(uint8_t*)(((uint32_t)*(uint16_t*)0x20bd1e << 1) + arg2 + 5) =
0000b952              *(uint8_t*)0x20bd21;
0000b91e      }
0000b91e      else
0000b91e      {
0000b926          0xff7dc2f8(arg2, r0, 0x34);  /* "_V3.0" */
0000b926          
0000b96a          for (uint32_t i = 0; i < 0x18; i = (uint32_t)((uint8_t)i + 1))  /* "0.33_250117"
0000b96a              */
0000b96a          {
0000b930              void* r1_3 = (i << 1) + arg2;
0000b930              
0000b936              if ((uint32_t)*(uint8_t*)((char*)r1_3 + 4) == 0xff)
0000b95a                  *(uint8_t*)((char*)r1_3 + 4) = 0;
0000b95a              
0000b960              if ((uint32_t)*(uint8_t*)((char*)r1_3 + 5) == 0xff)
0000b962                  *(uint8_t*)((char*)r1_3 + 5) = 0;
0000b96a          }
0000b96a          
0000b970          if ((uint32_t)*(uint16_t*)0x20bd1c == arg1)
0000b970          {
0000b948              *(uint8_t*)(((uint32_t)*(uint16_t*)0x20bd1e << 1) + arg2 + 4) =
0000b948                  *(uint8_t*)0x20bd20;
0000b952              *(uint8_t*)(((uint32_t)*(uint16_t*)0x20bd1e << 1) + arg2 + 5) =
0000b952                  *(uint8_t*)0x20bd21;
0000b970          }
0000b91e      }
0000b91e      
0000b974      return 1;
0000b8fc  }


0000b976    int32_t sub_b976(int32_t arg1)

0000b976  {
0000b97a      int32_t r4 = arg1;
0000b97c      int32_t r5 = 0;
0000b97e      uint32_t r0 = sub_216a();
0000b97e      
0000b986      if (r4 >= 3)
0000b988          r4 = 2;
0000b988      
0000b98c      char var_e0[0x98];
0000b98c      uint32_t r2;
0000b98c      
0000b98c      if (r4 < 0)
0000b9c2          r2 = 0;
0000b98c      else
0000b98c      {
0000b9ae          int32_t temp0_1;
0000b9ae          
0000b9ae          do
0000b9ae          {
0000b99a              void var_48;
0000b99a              
0000b99a              if (sub_b8fc(r0 - r4, &var_48))
0000b99a              {
0000b99c                  var_e0[r5] = (char)r4;
0000b9a6                  void var_44;
0000b9a6                  0xff81b898(&var_e0[r5 + 1], &var_44, 0x30);  /* "RY02_V3.0" */
0000b9aa                  r5 += 0x31;  /* "Y02_V3.0" */
0000b99a              }
0000b99a              
0000b9ac              temp0_1 = r4;
0000b9ac              r4 -= 1;
0000b9ae          } while (temp0_1 - 1 >= 0);
0000b9ae          
0000b9b2          r2 = !r5 ? 0 : (uint32_t)(uint16_t)r5;
0000b98c      }
0000b98c      
0000b9c0      return sub_674e(0x2a, &var_e0, r2);
0000b976  }


0000b9c6    int32_t sub_b9c6()

0000b9c6  {
0000b9c6      int32_t r3;
0000b9c6      int32_t var_c = r3;
0000b9c6      int32_t r2;
0000b9c6      int32_t var_10 = r2;
0000b9cc      uint32_t r2_1 = (uint32_t)*(uint16_t*)0x20bd1c;
0000b9cc      
0000b9d0      if (!r2_1)
0000b9f2          return 0x20bd1c;
0000b9f2      
0000b9d6      var_c = 2;
0000b9d8      var_10 = 0x20bd20;
0000b9e4      sub_3372(0x83e26c, 0x20bd18, r2_1, ((uint32_t)*(uint16_t*)0x20bd1e << 1) + 4, 
0000b9e4          0x20bd20, 2);
0000b9ee      return 0xff81b964(0x20bd1c, 6);
0000b9c6  }


0000b9f4    int32_t sub_b9f4()

0000b9f4  {
0000b9fc      return sub_3262(0x83e26c);
0000b9f4  }

0000b9fe                                                                                            00 00                                ..

0000ba00  int32_t data_ba00 = 0x20bd10
0000ba04  int32_t data_ba04 = 0x208850
0000ba08  int32_t data_ba08 = 0x82f805
0000ba0c  int32_t data_ba0c = 0x83e26c

0000ba10    int32_t sub_ba10(int32_t arg1, int32_t* arg2, int32_t arg3, int32_t arg4)

0000ba10  {
0000ba10      int32_t var_10 = arg4;
0000ba10      int32_t var_14 = arg3;
0000ba10      int32_t* var_18 = arg2;
0000ba10      
0000ba18      if ((char*)arg2 - 0x28 <= 0xb4)
0000ba18      {
0000ba1c          int16_t r0;
0000ba1c          int32_t r1_1;
0000ba1c          r0 = sub_12b2a(arg1, &data_15180);
0000ba2c          int32_t r3 = sub_12b2a(r1_1, 0x12c) + 4;
0000ba30          (uint8_t)var_10 = (uint8_t)arg2;
0000ba36          var_14 = 1;
0000ba40          sub_3372(0x83e278, 0x20bd28, (uint32_t)r0, r3, &var_10, 1);
0000ba46          sub_529c(1);
0000ba18      }
0000ba18      
0000ba4c      return 0;
0000ba10  }


0000ba4e    int32_t sub_ba4e(int32_t arg1, void* arg2)

0000ba4e  {
0000ba5a      uint32_t r5 = (uint32_t)sub_12b2a(arg1, &data_15180);
0000ba62      0xff81b968(arg2, 0x124);
0000ba70      void* r0_2 = sub_3404(0x83e278, *(uint32_t*)0x20bd28, r5);
0000ba70      
0000ba76      if (!r0_2)
0000ba76      {
0000baa8          0xff81b968(arg2, 0x124);
0000baae          return 0;
0000ba76      }
0000ba76      
0000ba88      for (int32_t i = 0; i < 0x120; )
0000ba88      {
0000ba7e          void* r5_1 = (char*)arg2 + i;
0000ba80          char r3_2 = *(uint8_t*)((char*)r0_2 + i + 4);
0000ba82          i += 1;
0000ba84          *(uint8_t*)((char*)r5_1 + 4) = r3_2;
0000ba88      }
0000ba88      
0000ba9e      for (int32_t i_1 = 0; i_1 < 0x120; i_1 += 1)
0000ba9e      {
0000ba8e          void* r3_3 = (char*)arg2 + i_1;
0000ba8e          
0000ba96          if ((uint32_t)*(uint8_t*)((char*)r3_3 + 4) - 0x28 >= 0xb5)
0000ba98              *(uint8_t*)((char*)r3_3 + 4) = 0;
0000ba9e      }
0000ba9e      
0000baa2      return 1;
0000ba4e  }


0000bab0    uint32_t sub_bab0()

0000bab0  {
0000baba      uint32_t result = (uint32_t)(*(uint16_t*)0x20bd30 + 1);
0000babc      *(uint16_t*)0x20bd30 = (int16_t)result;
0000babc      
0000bac0      if (result > 3)
0000bac0      {
0000bac4          if (result > 0xe)
0000bac4          {
0000bad4              uint32_t r0_2 = sub_cd0c();
0000bad4              
0000bada              if (r0_2 != 2)
0000badc                  result = (uint32_t)*(uint16_t*)0x20bd30;
0000badc              
0000bae0              if (r0_2 == 2 || result >= 0x32)  /* "02_V3.0" */
0000bae0              {
0000bae2                  uint32_t r0_3 = sub_cd12();
0000bae6                  uint32_t r4_1 = r0_3;
0000baea                  int32_t entry_r2;
0000baea                  int32_t entry_r3;
0000baea                  
0000baea                  if (r0_3 >= 0x28)
0000baea                  {
0000bb02                      if (!sub_9170())
0000bb02                      {
0000bb18                          if (r4_1 > 0x78)
0000bb18                          {
0000bb1a                              int32_t r0_7;
0000bb1a                              r0_7 = sub_8f90();
0000bb1a                              
0000bb28                              if (r0_7 < 0x1e && (uint32_t)*(uint8_t*)0x20b850 != 2)  /* "
0000bb28                                  50117" */
0000bb28                              {
0000bb30                                  int32_t r1_4;
0000bb30                                  r1_4 = sub_12b3e(sub_814(), 0xa);
0000bb36                                  r4_1 = r1_4 + 0x5f;
0000bb28                              }
0000bb18                          }
0000bb02                      }
0000bb02                      else if (r4_1 >= 0x64)
0000bb06                      {
0000bb0e                          int32_t r1_2;
0000bb0e                          r1_2 = sub_12b3e(sub_814(), 0xa);
0000bb36                          r4_1 = r1_2 + 0x5a;
0000bb06                      }
0000baea                  }
0000baea                  else
0000baea                  {
0000baf2                      int32_t r1_1;
0000baf2                      r1_1 = sub_12b3e(sub_814(), 0xa);
0000baf8                      r4_1 = r1_1 + 0x28;
0000baea                  }
0000baea                  
0000bb3c                  sub_ba10(*(uint32_t*)0x20bd2c, (uint32_t)(uint8_t)r4_1, entry_r2, 
0000bb3c                      entry_r3);
0000bace                  return sub_bc06();
0000bae0              }
0000bac4          }
0000bac4          else
0000bac4          {
0000bac6              result = sub_ccfc();
0000bac6              
0000bacc              if (!result)
0000bace                  return sub_bc06();
0000bac4          }
0000bac0      }
0000bac0      
0000bad2      return result;
0000bab0  }


0000bb42    uint32_t sub_bb42()

0000bb42  {
0000bb44      uint32_t result = sub_15ac();
0000bb44      
0000bb4a      if (result)
0000bb4a      {
0000bb4c          result = 0x208850;
0000bb4c          
0000bb52          if ((uint32_t)*(uint8_t*)0x208852 == 1)
0000bb52          {
0000bb54              result = (uint32_t)*(uint8_t*)0x208850;
0000bb54              
0000bb58              if (result == 3)
0000bb58              {
0000bb5a                  result = sub_9170();
0000bb5a                  
0000bb60                  if (result != 1)
0000bb60                  {
0000bb62                      result = sub_281e();
0000bb62                      
0000bb68                      if (!result)
0000bb68                      {
0000bb6a                          sub_bbfa();
0000bb6e                          int32_t r0;
0000bb6e                          int32_t r2_1;
0000bb6e                          r0 = sub_183e();
0000bb76                          *(uint32_t*)0x20bd2c = r0;
0000bb7a                          sub_b55a(0x10, 0x20bd2c, r2_1);  /* "RY02_3.00.33_250117" */
0000bb8a                          return sub_3704(0x20bd24, 0x82fa61, 0x3e8, 1);
0000bb68                      }
0000bb60                  }
0000bb58              }
0000bb52          }
0000bb4a      }
0000bb4a      
0000bb8e      return result;
0000bb42  }


0000bb90    int32_t sub_bb90()

0000bb90  {
0000bb92      sub_bbfa();
0000bb98      int32_t entry_r2;
0000bb98      sub_b540(0xffff, 0, entry_r2);
0000bba4      return sub_3730(0x20bd24);
0000bb90  }


0000bba6    uint32_t sub_bba6()

0000bba6  {
0000bba8      uint32_t result = (uint32_t)*(uint8_t*)0x2086f0;
0000bba8      
0000bbb0      if (result == 0xff || !result)
0000bbb0      {
0000bbb2          result = 0x1e;  /* "50117" */
0000bbb4          *(uint8_t*)0x2086f0 = 0x1e;  /* "50117" */
0000bbb0      }
0000bbb0      
0000bbb6      return result;
0000bba6  }


0000bbb8    int32_t sub_bbb8()

0000bbb8  {
0000bbba      sub_bba6();
0000bbbe      sub_c142();
0000bbca      sub_bfa6();
0000bbd6      return sub_c1ea();
0000bbb8  }


0000bbd8    int32_t sub_bbd8()

0000bbd8  {
0000bbde      return sub_b9c6();
0000bbd8  }


0000bbe0    int32_t sub_bbe0()

0000bbe0  {
0000bbe4      sub_3262(0x83e278);
0000bbe8      sub_b9f4();
0000bbec      sub_bf9c();
0000bbf8      return sub_c138();
0000bbe0  }


0000bbfa    int32_t sub_bbfa()

0000bbfa  {
0000bc00      *(uint32_t*)0x20bd2c = 0;
0000bc02      *(uint32_t*)0x20bd30 = 0;
0000bc04      return 0x20bd24;
0000bbfa  }


0000bc06    int32_t sub_bc06()

0000bc06  {
0000bc08      sub_bbfa();
0000bc0e      int32_t entry_r2;
0000bc0e      sub_b540(0x10, 0, entry_r2);  /* "RY02_3.00.33_250117" */
0000bc1a      return sub_3730(0x20bd24);
0000bc06  }

0000bc1c  void* data_bc1c = data_15180
0000bc20  int32_t data_bc20 = 0x20bd28
0000bc24  int32_t data_bc24 = 0x83e278
0000bc28  int32_t data_bc28 = 0x20b850
0000bc2c  int32_t data_bc2c = 0x208850
0000bc30  int32_t data_bc30 = 0x82fa61
0000bc34  int32_t data_bc34 = 0xffff
0000bc38  int32_t data_bc38 = 0x2086e4

0000bc3c    int32_t sub_bc3c(char* arg1, char* arg2)

0000bc3c  {
0000bc40      *(uint8_t*)arg1 = *(uint8_t*)0x20bd34;
0000bc42      char result = *(uint8_t*)0x20bd35;
0000bc44      *(uint8_t*)arg2 = result;
0000bc46      return result;
0000bc3c  }


0000bc48    int32_t sub_bc48()

0000bc48  {
0000bc4e      *(uint32_t*)0x20bd38 = 0;
0000bc50      *(uint32_t*)0x20bd3c = 0;
0000bc54      *(uint32_t*)0x20bd40 = 0;
0000bc56      *(uint32_t*)0x20846c = 0xffffffff;
0000bc58      *(uint8_t*)0x20bd34 = 0;
0000bc5a      *(uint8_t*)0x20bd35 = 0;
0000bc5c      return 0x20bd34;
0000bc48  }


0000bc5e    int32_t sub_bc5e(int32_t arg1, int32_t arg2)

0000bc5e  {
0000bc72      if (*(uint32_t*)0x20bd38 && arg2 == *(uint32_t*)0x20846c)
0000bc72      {
0000bc74          int32_t r5_1 = *(uint32_t*)0x20bd3c;
0000bc7a          sub_12a38(sub_814());
0000bc7e          int32_t r0_3 = *(uint32_t*)0x20bd40;
0000bc82          int32_t r0_13;
0000bc82          
0000bc82          if (arg1 <= r0_3)
0000bc82          {
0000bcb8              int32_t r0_15;
0000bcb8              int32_t r1_4;
0000bcb8              r0_15 = sub_1351a(r0_3 - arg1);
0000bcc0              int32_t r0_16;
0000bcc0              int32_t r1_5;
0000bcc0              r0_16 = sub_13530(r0_15, r1_4, 0xcccccccd, 0x3fdccccc);
0000bcc8              int32_t r5_3 = r5_1 - sub_13424(r0_16, r1_5);
0000bcd8              *(uint32_t*)0x20bd3c =
0000bcd8                  sub_12b3e(*(uint32_t*)0x20bd38 + r5_3 + *(uint32_t*)0x20bd3c, 3);
0000bce4              r0_13 = r5_3 - sub_12b3e(sub_814(), 5);
0000bc82          }
0000bc82          else
0000bc82          {
0000bc86              int32_t r0_5;
0000bc86              int32_t r1;
0000bc86              r0_5 = sub_1351a(arg1 - r0_3);
0000bc8e              int32_t r0_6;
0000bc8e              int32_t r1_1;
0000bc8e              r0_6 = sub_13530(r0_5, r1, 0xcccccccd, 0x3fdccccc);
0000bc96              int32_t r5_2 = sub_13424(r0_6, r1_1) + r5_1;
0000bca6              *(uint32_t*)0x20bd3c =
0000bca6                  sub_12b3e(*(uint32_t*)0x20bd38 + r5_2 + *(uint32_t*)0x20bd3c, 3);
0000bcb2              r0_13 = sub_12b3e(sub_814(), 5) + r5_2;
0000bc82          }
0000bc82          
0000bce6          *(uint32_t*)0x20bd40 = arg1;
0000bce8          return r0_13;
0000bc72      }
0000bc72      
0000bcee      int32_t r6 = 0;
0000bcee      
0000bcf6      while (*(uint32_t*)(0x83e284 + (r6 << 2)) <= arg2)
0000bcf6      {
0000bcf8          r6 += 1;
0000bcf8          
0000bcfc          if (r6 >= 5)
0000bcfc              break;
0000bcf6      }
0000bcf6      
0000bd02      sub_12a38(sub_814());
0000bd0c      int32_t r1_8 = sub_12b3e(sub_814(), 0x15);  /* "3.00.33_250117" */
0000bd1a      int32_t r6_1 = *(uint32_t*)(0x83e298 + (r6 << 2)) + r1_8 + 0x64;
0000bd20      *(uint32_t*)0x20bd38 = r6_1;
0000bd22      int32_t r0_32;
0000bd22      int32_t r1_13;
0000bd22      
0000bd22      if (arg1 >= 0x41)
0000bd22      {
0000bd4c          int32_t r0_35;
0000bd4c          int32_t r1_14;
0000bd4c          r0_35 = sub_1351a(arg1 - 0x41);
0000bd54          int32_t r0_36;
0000bd54          int32_t r1_15;
0000bd54          r0_36 = sub_13530(r0_35, r1_14, 0xcccccccd, 0x3fdccccc);
0000bd5e          uint32_t r0_38;
0000bd5e          int32_t r1_16;
0000bd5e          r0_38 = sub_1351a(r6_1);
0000bd66          r0_32 = sub_12f7c(r0_38, r1_16, r0_36, r1_15);
0000bd22      }
0000bd22      else
0000bd22      {
0000bd28          int32_t r0_28;
0000bd28          int32_t r1_10;
0000bd28          r0_28 = sub_1351a(0x41 - arg1);
0000bd30          int32_t r0_29;
0000bd30          int32_t r1_11;
0000bd30          r0_29 = sub_13530(r0_28, r1_10, 0xcccccccd, 0x3fdccccc);
0000bd3a          int32_t r0_31;
0000bd3a          int32_t r1_12;
0000bd3a          r0_31 = sub_1351a(r6_1);
0000bd42          r0_32 = sub_12f96(r0_31, r1_12, r0_29, r1_11);
0000bd22      }
0000bd22      
0000bd6e      int32_t r0_40 = r6_1 + sub_13424(r0_32, r1_13);
0000bd76      int32_t r0_42 = ((r0_40 >> 0x1f) + r0_40) >> 1;  /* "0117" */
0000bd78      *(uint32_t*)0x20bd40 = arg1;
0000bd7a      *(uint32_t*)0x20bd3c = r0_42;
0000bd7e      *(uint32_t*)0x20846c = arg2;
0000bd80      return r0_42;
0000bc5e  }


0000bd82    int32_t sub_bd82(int32_t arg1, char* arg2, char* arg3)

0000bd82  {
0000bd8a      int32_t r0 = sub_bc5e(arg1, 0x19);  /* ".33_250117" */
0000bd8e      int32_t r4 = r0;
0000bd8e      
0000bd92      if (r0 >= 0x8c)
0000bda0          r4 = 0x8c - sub_12b3e(sub_814(), 5);
0000bda0      
0000bda4      if (r4 <= 0x5a)
0000bdb2          r4 = sub_12b3e(sub_814(), 5) + 0x5a;
0000bdb2      
0000bdb4      uint32_t r0_3 = sub_814();
0000bdd6      int32_t r1_9 = sub_12b3e(0x19 * (r4 - 0x5a), 0x32) + r0_3
0000bdd6          - (((r0_3 >> 0x1f >> 0x1d) + r0_3) >> 3 << 3) + 0x3b;
0000bdd6          /* ".33_250117" */  /* "250117" */  /* "0117" */  /* "02_V3.0" */
0000bdd6      
0000bdda      if (r1_9 >= 0x5a)
0000bde8          r1_9 = 0x5a - sub_12b3e(sub_814(), 5);
0000bde8      
0000bdec      if (r1_9 <= 0x3c)
0000bdf8          r1_9 = sub_12b3e(sub_814(), 5) + 0x3c;
0000bdf8      
0000bdfa      *(uint8_t*)arg2 = (char)r4;
0000bdfe      *(uint8_t*)arg3 = (char)r1_9;
0000be00      *(uint8_t*)0x20bd34 = (char)r4;
0000be02      *(uint8_t*)0x20bd35 = (char)r1_9;
0000be04      return 0x20bd34;
0000bd82  }

0000be06                    00 00                                                                                ..

0000be08  int32_t data_be08 = 0x20bd34
0000be0c  int32_t data_be0c = 0x20846c
0000be10  int32_t data_be10 = -0x33333333
0000be14  int32_t data_be14 = 0x3fdccccc
0000be18  int32_t data_be18 = 0x83e284

0000be1c    int32_t sub_be1c() __pure

0000be1c  {
0000be1c      return;
0000be1c  }


0000be1e    int32_t sub_be1e() __pure

0000be1e  {
0000be20      return 0;
0000be1e  }


0000be22    int32_t sub_be22() __pure

0000be22  {
0000be22      return;
0000be22  }


0000be24    int32_t sub_be24() __pure

0000be24  {
0000be26      return 0;
0000be24  }


0000be28    int32_t sub_be28() __pure

0000be28  {
0000be28      return;
0000be28  }


0000be2a    int32_t sub_be2a() __pure

0000be2a  {
0000be2a      return;
0000be2a  }


0000be2c    int32_t sub_be2c() __pure

0000be2c  {
0000be2c      return;
0000be2c  }

0000be2e                                            00 00                                                                ..

0000be30    void sub_be30(int32_t arg1, int32_t* arg2, int32_t arg3, int32_t arg4)

0000be30  {
0000be30      int32_t var_10 = arg4;
0000be30      int32_t var_14 = arg3;
0000be30      int32_t* var_18 = arg2;
0000be30      
0000be34      if (!arg1)
0000be34          return;
0000be34      
0000be38      (uint8_t)var_10 = (char)arg1;
0000be50      var_14 = 1;
0000be5a      sub_3372(0x83e2b0, 0x20bd4c, sub_216a(), sub_12b2a(sub_217a(), 0x1e) + 4, &var_10, 1);
0000be5a          /* "50117" */
0000be30  }


0000be60    void* sub_be60(int32_t arg1, int32_t* arg2)

0000be60  {
0000be6a      int32_t r2 = sub_216a() - arg1;
0000be74      void* result = sub_3404(0x83e2b0, *(uint32_t*)0x20bd4c, r2);
0000be74      
0000be7a      if (!result)
0000be9e          return result;
0000be9e      
0000be7e      uint32_t i = 0;
0000be80      *(uint32_t*)arg2 = *(uint32_t*)result;
0000be80      
0000be9a      do
0000be9a      {
0000be86          uint32_t r3_2 = (uint32_t)*(uint8_t*)((char*)result + i + 4);
0000be86          
0000be8e          if (r3_2 == 0xff || !r3_2)
0000bea2              *(uint8_t*)((char*)arg2 + i + 4) = 0;
0000be8e          else
0000be92              *(uint8_t*)((char*)arg2 + i + 4) = (char)r3_2;
0000be92          
0000be96          i = (uint32_t)((uint8_t)i + 1);
0000be9a      } while (i < 0x30);  /* "RY02_V3.0" */
0000be9a      
0000be9c      return "RY02_V3.0";
0000be60  }


0000bea6    void sub_bea6(int32_t arg1)

0000bea6  {
0000beaa      if (arg1)
0000bebc          *(uint8_t*)0x20bd44 = (char)(sub_12b3e(sub_814(), 6) + arg1);
0000bea6  }


0000bec0    uint32_t sub_bec0()

0000bec0  {
0000bec6      return (uint32_t)*(uint8_t*)0x20bd44;
0000bec0  }


0000bec8    int32_t sub_bec8()

0000bec8  {
0000becc      int32_t result = 0x20bd45;
0000bed2      uint32_t r1_2 = (uint32_t)(*(uint8_t*)0x20bd46 + 1);
0000bed4      *(uint8_t*)0x20bd46 = (char)r1_2;
0000bed4      
0000bed8      if (r1_2 > 3)
0000bed8      {
0000bee0          int32_t r1_3;
0000bee0          int32_t r2_1;
0000bee0          
0000bee0          if (r1_2 > 0xe)
0000bee0          {
0000befe              uint32_t r2_2 = (uint32_t)*(uint8_t*)0x20bd44;
0000befe              
0000bf02              if (r2_2)
0000bf02              {
0000bf0a                  int32_t entry_r3;
0000bf0a                  
0000bf0a                  if (r2_2 < 0x14 || r2_2 > 0x41)  /* "_3.00.33_250117" */
0000bf1a                      r1_2 = sub_bea6((uint32_t)(sub_12b3e(sub_814(), 0x14) + 0x1e));
0000bf1a                          /* "_3.00.33_250117" */  /* "50117" */
0000bf1a                  
0000bf20                  sub_be30((uint32_t)*(uint8_t*)0x20bd44, r1_2, r2_2, entry_r3);
0000beee                  r1_3 = sub_3730(0x20bd48);
0000bef4                  return sub_b540(0x200, r1_3, r2_1);
0000bf02              }
0000bf02              
0000bf28              if (r1_2 >= 0x32)  /* "02_V3.0" */
0000bf3c                  return sub_bea6((uint32_t)(sub_12b3e(sub_814(), 0x1e) + 0x14));
0000bf3c                      /* "_3.00.33_250117" */  /* "50117" */
0000bee0          }
0000bee0          else
0000bee0          {
0000bee2              result = sub_ccfc();
0000bee2              
0000bee8              if (!result)
0000bee8              {
0000beee                  r1_3 = sub_3730(0x20bd48);
0000bef4                  return sub_b540(0x200, r1_3, r2_1);
0000bee8              }
0000bee0          }
0000bed8      }
0000bed8      
0000bef8      return result;
0000bec8  }


0000bf3e    int32_t sub_bf3e()

0000bf3e  {
0000bf44      *(uint8_t*)0x20bd44 = 0;
0000bf46      return 0;
0000bf3e  }


0000bf48    uint32_t sub_bf48()

0000bf48  {
0000bf4a      uint32_t result = sub_1602();
0000bf4a      
0000bf50      if (result)
0000bf50      {
0000bf54          result = (uint32_t)*(uint8_t*)0x208852;
0000bf54          
0000bf58          if (result)
0000bf58          {
0000bf5a              result = sub_9170();
0000bf5a              
0000bf60              if (result != 1)
0000bf60              {
0000bf62                  result = sub_281e();
0000bf62                  
0000bf68                  if (!result)
0000bf68                  {
0000bf6a                      int32_t r1_1;
0000bf6a                      int32_t r2_1;
0000bf6a                      result = sub_216a();
0000bf6a                      
0000bf70                      if (result)
0000bf70                      {
0000bf76                          sub_b55a(0x200, r1_1, r2_1);
0000bf80                          *(uint8_t*)0x20bd44 = 0;
0000bf82                          sub_c0de();
0000bf8c                          *(uint8_t*)0x20bd46 = 0;
0000bf96                          return sub_3704(0x20bd48, 0x82fe79, 0x3e8, 1);
0000bf70                      }
0000bf68                  }
0000bf60              }
0000bf58          }
0000bf50      }
0000bf50      
0000bf9a      return result;
0000bf48  }


0000bf9c    int32_t sub_bf9c()

0000bf9c  {
0000bfa4      return sub_3262(0x83e2b0);
0000bf9c  }


0000bfa6    int32_t sub_bfa6()

0000bfa6  {
0000bfae      *(uint8_t*)0x20bd45 = 0;
0000bfb0      *(uint8_t*)0x20bd46 = 0;
0000bfba      return sub_344c(0x83e2b0, 0x20bd4c);
0000bfa6  }

0000bfbc  int32_t data_bfbc = 0x20bd4c
0000bfc0  int32_t data_bfc0 = 0x83e2b0
0000bfc4  int32_t data_bfc4 = 0x208850
0000bfc8  int32_t data_bfc8 = 0x82fe79

0000bfcc    void sub_bfcc(int32_t arg1, int32_t* arg2, int32_t arg3, int32_t arg4)

0000bfcc  {
0000bfcc      int32_t var_10 = arg4;
0000bfcc      int32_t var_14 = arg3;
0000bfcc      int32_t* var_18 = arg2;
0000bfcc      
0000bfd0      if (!arg1)
0000bfd0          return;
0000bfd0      
0000bfd4      var_10 = 0;
0000bfd8      (uint8_t)var_10 = (char)arg1;
0000bff0      var_14 = 1;
0000bffa      sub_3372(0x83e2bc, 0x20bd58, sub_216a(), sub_12b2a(sub_217a(), 0x1e) + 4, &var_10, 1);
0000bffa          /* "50117" */
0000bfcc  }


0000c000    void* sub_c000(int32_t arg1, int32_t* arg2)

0000c000  {
0000c00a      int32_t r2 = sub_216a() - arg1;
0000c014      void* result = sub_3404(0x83e2bc, *(uint32_t*)0x20bd58, r2);
0000c014      
0000c01a      if (!result)
0000c03e          return result;
0000c03e      
0000c01e      uint32_t i = 0;
0000c020      *(uint32_t*)arg2 = *(uint32_t*)result;
0000c020      
0000c03a      do
0000c03a      {
0000c026          uint32_t r3_2 = (uint32_t)*(uint8_t*)((char*)result + i + 4);
0000c026          
0000c02e          if (r3_2 == 0xff || !r3_2)
0000c042              *(uint8_t*)((char*)arg2 + i + 4) = 0;
0000c02e          else
0000c032              *(uint8_t*)((char*)arg2 + i + 4) = (char)r3_2;
0000c032          
0000c036          i = (uint32_t)((uint8_t)i + 1);
0000c03a      } while (i < 0x30);  /* "RY02_V3.0" */
0000c03a      
0000c03c      return "RY02_V3.0";
0000c000  }


0000c046    void sub_c046(int32_t arg1)

0000c046  {
0000c04c      if (arg1)
0000c04c      {
0000c050          if (arg1 < 0x14)  /* "_3.00.33_250117" */
0000c052              arg1 = 0x14;  /* "_3.00.33_250117" */
0000c050          else if (arg1 > 0xb4)
0000c05a              arg1 = 0xb4;
0000c04c      }
0000c04c      
0000c05c      *(uint8_t*)0x20bd50 = (char)arg1;
0000c046  }


0000c060    uint32_t sub_c060()

0000c060  {
0000c066      return (uint32_t)*(uint8_t*)0x20bd50;
0000c060  }


0000c068    int32_t sub_c068()

0000c068  {
0000c06c      int32_t result = 0x20bd51;
0000c072      uint32_t r1_2 = (uint32_t)(*(uint8_t*)0x20bd52 + 1);
0000c074      *(uint8_t*)0x20bd52 = (char)r1_2;
0000c074      
0000c078      if (r1_2 > 3)
0000c078      {
0000c080          int32_t r1_3;
0000c080          int32_t r2_1;
0000c080          
0000c080          if (r1_2 > 0xe)
0000c080          {
0000c09e              uint32_t r2_2 = (uint32_t)*(uint8_t*)0x20bd50;
0000c09e              
0000c0a2              if (r2_2)
0000c0a2              {
0000c0aa                  int32_t entry_r3;
0000c0aa                  
0000c0aa                  if (r2_2 < 0x1e || r2_2 > 0x32)  /* "50117" */  /* "02_V3.0" */
0000c0aa                  {
0000c0b2                      char r1_4;
0000c0b2                      r1_4 = sub_12b3e(sub_814(), 0x14);  /* "_3.00.33_250117" */
0000c0ba                      r1_2 = sub_c046((uint32_t)(r1_4 + 0x1e));  /* "50117" */
0000c0aa                  }
0000c0aa                  
0000c0c0                  sub_bfcc((uint32_t)*(uint8_t*)0x20bd50, r1_2, r2_2, entry_r3);
0000c08e                  r1_3 = sub_3730(0x20bd54);
0000c094                  return sub_b540(0x100, r1_3, r2_1);
0000c0a2              }
0000c0a2              
0000c0c8              if (r1_2 >= 0x32)  /* "02_V3.0" */
0000c0dc                  return sub_c046((uint32_t)(sub_12b3e(sub_814(), 0xa) + 0x1b));
0000c0dc                      /* "3_250117" */
0000c080          }
0000c080          else
0000c080          {
0000c082              result = sub_ccfc();
0000c082              
0000c088              if (!result)
0000c088              {
0000c08e                  r1_3 = sub_3730(0x20bd54);
0000c094                  return sub_b540(0x100, r1_3, r2_1);
0000c088              }
0000c080          }
0000c078      }
0000c078      
0000c098      return result;
0000c068  }


0000c0de    int32_t sub_c0de()

0000c0de  {
0000c0e4      *(uint8_t*)0x20bd50 = 0;
0000c0e6      return 0;
0000c0de  }


0000c0e8    uint32_t sub_c0e8()

0000c0e8  {
0000c0ea      uint32_t result = sub_16e6();
0000c0ea      
0000c0f0      if (result)
0000c0f0      {
0000c0f4          result = (uint32_t)*(uint8_t*)0x208852;
0000c0f4          
0000c0f8          if (result)
0000c0f8          {
0000c0fa              result = sub_9170();
0000c0fa              
0000c100              if (result != 1)
0000c100              {
0000c102                  result = sub_281e();
0000c102                  
0000c108                  if (!result)
0000c108                  {
0000c10a                      int32_t r1_1;
0000c10a                      int32_t r2_1;
0000c10a                      result = sub_216a();
0000c10a                      
0000c110                      if (result)
0000c110                      {
0000c116                          sub_b55a(0x100, r1_1, r2_1);
0000c120                          *(uint8_t*)0x20bd50 = 0;
0000c124                          *(uint8_t*)0x20bd52 = 0;
0000c132                          return sub_3704(0x20bd54, 0x830019, 0x3e8, 1);
0000c110                      }
0000c108                  }
0000c100              }
0000c0f8          }
0000c0f0      }
0000c0f0      
0000c136      return result;
0000c0e8  }


0000c138    int32_t sub_c138()

0000c138  {
0000c140      return sub_3262(0x83e2bc);
0000c138  }


0000c142    int32_t sub_c142()

0000c142  {
0000c14a      *(uint8_t*)0x20bd51 = 0;
0000c14c      *(uint8_t*)0x20bd52 = 0;
0000c156      return sub_344c(0x83e2bc, 0x20bd58);
0000c142  }

0000c158  int32_t data_c158 = 0x20bd58
0000c15c  int32_t data_c15c = 0x83e2bc
0000c160  int32_t data_c160 = 0x208850
0000c164  int32_t data_c164 = 0x830019

0000c168    int32_t sub_c168() __pure

0000c168  {
0000c168      return;
0000c168  }


0000c16a    int32_t sub_c16a() __pure

0000c16a  {
0000c16c      return 0;
0000c16a  }


0000c16e    int32_t sub_c16e() __pure

0000c16e  {
0000c16e      return;
0000c16e  }


0000c170    int32_t sub_c170() __pure

0000c170  {
0000c170      return;
0000c170  }


0000c172    int32_t sub_c172() __pure

0000c172  {
0000c174      return 0;
0000c172  }


0000c176    int32_t sub_c176() __pure

0000c176  {
0000c176      return;
0000c176  }


0000c178    int32_t sub_c178() __pure

0000c178  {
0000c178      return;
0000c178  }


0000c17a    int32_t sub_c17a() __pure

0000c17a  {
0000c17a      return;
0000c17a  }


0000c17c    int32_t sub_c17c(int32_t arg1, int32_t arg2 @ r4, int32_t arg3 @ r5, int32_t arg4)

0000c17c  {
0000c17c      int32_t lr;
0000c17c      int32_t var_4 = lr;
0000c17c      int32_t r6;
0000c17c      int32_t var_8 = r6;
0000c17c      
0000c184      if (!(uint32_t)*(uint8_t*)0x20bd5c)
0000c184      {
0000c186          *(uint8_t*)0x20bd5d = (char)arg1;
0000c186          
0000c18a          if (arg1 < 0x5d)
0000c18a          {
0000c18c              arg1 = 0x5d;
0000c18e              *(uint8_t*)0x20bd5d = 0x5d;
0000c18a          }
0000c18a          
0000c19c          *(uint8_t*)0x20bd5d = 0xa * (0x64 - (char)arg1) + 0x46;
0000c184      }
0000c184      
0000c1ae      int32_t r0_7 = sub_19964(
0000c1ae          sub_139fc(sub_12b3e((uint32_t)*(uint8_t*)0x20bd5d - 0x46, 0x46)), 0x42200000, 
0000c1ae          0x20bd5c);
0000c1ba      int32_t r0_10;
0000c1ba      int32_t r2;
0000c1ba      int32_t r3;
0000c1ba      r0_10 = sub_139fc((uint32_t)*(uint16_t*)0x2087a2 - 0x14);  /* "_3.00.33_250117" */
0000c1c8      *(uint8_t*)0x20bd5c =
0000c1c8          sub_13984(sub_198d8(r0_10, r0_7, r2, r3, 0x20bd5c, r6, arg2, arg3));
0000c1d6      char result = sub_12b3e(sub_814(), 0xa) + *(uint8_t*)0x20bd5c;
0000c1d8      *(uint8_t*)0x20bd5c = result;
0000c1da      return result;
0000c17c  }


0000c1dc    uint32_t sub_c1dc()

0000c1dc  {
0000c1e0      return (uint32_t)*(uint8_t*)0x20bd5c;
0000c1dc  }


0000c1e2    int32_t sub_c1e2()

0000c1e2  {
0000c1e6      *(uint8_t*)0x20bd5c = 0;
0000c1e8      return 0;
0000c1e2  }


0000c1ea    int32_t sub_c1ea()

0000c1ea  {
0000c1ec      int32_t result = 0x2087a4;
0000c1ec      
0000c1f2      if ((uint32_t)*(uint8_t*)0x2087a4 == 0xff)
0000c1f2      {
0000c1f6          *(uint8_t*)0x2087a4 = 0;
0000c1fa          result = 0x208784;
0000c1fc          *(uint16_t*)0x2087a2 = 0x46;
0000c1f2      }
0000c1f2      
0000c1fe      return result;
0000c1ea  }

0000c200  int32_t data_c200 = 0x20bd5c
0000c204  int32_t data_c204 = 0x42200000
0000c208  int32_t data_c208 = 0x208784

0000c20c    int32_t sub_c20c(int32_t arg1)

0000c20c  {
0000c210      if (arg1 >= 0x14)  /* "_3.00.33_250117" */
0000c21e          return 0xff7ef196();
0000c21e      
0000c218      return (*(uint32_t*)0x200120)();
0000c20c  }


0000c220    uint32_t sub_c220()

0000c220  {
0000c226      uint32_t result = (uint32_t)*(uint8_t*)0x208472;
0000c22a      void var_48;
0000c22a      int32_t entry_r1;
0000c22a      int32_t entry_r2;
0000c22a      
0000c22a      if (result)
0000c22a      {
0000c22e          if (result == 1)
0000c22e          {
0000c244              sub_f13e(&var_48, entry_r1, entry_r2);
0000c24e              void var_28;
0000c24e              return 0xff7dc2f8(&var_28, &var_48, 0x20);  /* "117" */
0000c22e          }
0000c22e          
0000c236          if (result == 3 || result != 4)
0000c240              return result;
0000c22a      }
0000c22a      
0000c23a      return sub_e13c(&var_48, entry_r1, entry_r2);
0000c220  }


0000c254    uint32_t j_sub_c220()

0000c254  {
0000c254      /* tailcall */
0000c254      return sub_c220();
0000c254  }


0000c256    int32_t sub_c256(int32_t arg1, int32_t arg2)

0000c256  {
0000c256      int32_t var_14 = arg2;
0000c256      int32_t var_18 = arg1;
0000c25c      int32_t result = 1;
0000c25c      
0000c268      if (0xff7ef444(*(uint32_t*)0x2088a8, 0x64))
0000c268      {
0000c278          if (!sub_b458(0x44, arg1, &var_14, 1))
0000c27c              result = 0;
0000c27c          
0000c280          0xff7ef46c(*(uint32_t*)0x2088a8);
0000c268      }
0000c268      
0000c286      return result;
0000c256  }


0000c288    int32_t sub_c288(int32_t arg1, char* arg2, int32_t arg3)

0000c288  {
0000c288      int32_t var_18 = arg3;
0000c288      char* var_1c = arg2;
0000c290      int32_t result = 1;
0000c290      
0000c29c      if (0xff7ef444(*(uint32_t*)0x2088a8, 0x64))
0000c29c      {
0000c2ac          if (!sub_b524(0x44, arg1, arg2, arg3))
0000c2b0              result = 0;
0000c2b0          
0000c2b4          0xff7ef46c(*(uint32_t*)0x2088a8);
0000c29c      }
0000c29c      
0000c2ba      return result;
0000c288  }


0000c2bc    uint32_t sub_c2bc(int32_t arg1, int32_t arg2, int32_t arg3, int32_t arg4)

0000c2bc  {
0000c2bc      int32_t var_8 = arg4;
0000c2c2      (uint8_t)var_8 = 0;
0000c2c8      sub_c288(arg1, &var_8, 1);
0000c2d0      return (uint32_t)(uint8_t)var_8;
0000c2bc  }


0000c2d2    int32_t sub_c2d2()

0000c2d2  {
0000c2f8      for (uint32_t i = 0; i < 3; i = (uint32_t)((uint8_t)i + 1))
0000c2f8      {
0000c2dc          sub_c256(1, 0);
0000c2e2          int32_t r1_1;
0000c2e2          int32_t r2_1;
0000c2e2          int32_t r3_1;
0000c2e2          r1_1 = sub_c20c(5);
0000c2e8          uint32_t r0_1 = sub_c2bc(0, r1_1, r2_1, r3_1);
0000c2ec          *(uint8_t*)0x20bd62 = (char)r0_1;
0000c2ec          
0000c2f0          if (r0_1 == 0x27)
0000c300              return 1;
0000c2f8      }
0000c2f8      
0000c2fc      return 0;
0000c2d2  }


0000c302    uint32_t sub_c302()

0000c302  {
0000c30e      int32_t entry_r1;
0000c30e      int32_t entry_r2;
0000c30e      int32_t entry_r3;
0000c30e      return sub_c2bc(0x40, entry_r1, entry_r2, entry_r3) << 0x19 >> 0x19;
0000c30e          /* ".33_250117" */
0000c302  }


0000c310    int32_t sub_c310(int32_t* arg1, int32_t arg2, int32_t arg3)

0000c310  {
0000c310      int32_t var_1c = arg2;
0000c310      int32_t* var_20 = arg1;
0000c318      int32_t i = 0;
0000c31e      char var_f0;
0000c31e      int32_t r1;
0000c31e      int32_t r2;
0000c31e      int32_t r3;
0000c31e      r1 = 0xff81b968(&var_f0, 0xc8);
0000c324      uint32_t r0_1 = sub_c2bc(0x40, r1, r2, r3);
0000c324      
0000c32e      if (arg2 << 1 > r0_1)
0000c330          return 0;
0000c330      
0000c340      uint32_t i_5 = (uint32_t)((uint16_t)arg2 * sub_12b3e(r0_1 - arg2, arg2));
0000c346      uint32_t r0_8 = (uint32_t)((uint16_t)i_5 + (int16_t)(i_5 << 1));
0000c350      int16_t var_f4;
0000c350      
0000c350      if ((uint32_t)*(uint8_t*)0x20bd61 == 1)
0000c350      {
0000c358          sub_c288(0x41, &var_f4, 3);
0000c360          *(uint8_t*)0x20bd61 = 0;
0000c350      }
0000c350      
0000c36a      sub_c288(0x41, &var_f0, (uint32_t)(uint8_t)r0_8);
0000c36a      
0000c3cc      for (; i < i_5; i += 1)
0000c3cc      {
0000c376          if (!arg3)
0000c376          {
0000c3a2              void* r0_20 = &(&var_f0)[i * 3];
0000c3b6              arg1[i] = (uint32_t)*(uint8_t*)((char*)r0_20 + 1) << 8
0000c3b6                  | (uint32_t)*(uint8_t*)r0_20
0000c3b6                  | (uint32_t)*(uint8_t*)((char*)r0_20 + 2) << 0x1b >> 0xb;  /* "3_250117" */
0000c376          }
0000c376          else
0000c376          {
0000c37c              void* r1_5 = &(&var_f0)[i * 3];
0000c37e              uint32_t r0_14 = (uint32_t)*(uint8_t*)((char*)r1_5 + 2);
0000c382              uint32_t r2_3 = (uint32_t)*(uint8_t*)((char*)r1_5 + 1);
0000c384              uint32_t r1_6 = (uint32_t)*(uint8_t*)r1_5;
0000c384              
0000c386              if (r0_14 << 0x1b >= 0)  /* "3_250117" */
0000c3c6                  arg1[i] = r2_3 << 8 | r1_6 | r0_14 << 0x1b >> 0xb;  /* "3_250117" */
0000c386              else
0000c39a                  arg1[i] = (r2_3 << 8 | r1_6 | r0_14 << 0x1c >> 0xc) - 0x100000;
0000c39a                      /* "_250117" */
0000c376          }
0000c3cc      }
0000c3cc      
0000c3d2      uint32_t i_4 = i_5;
0000c3d6      char var_ee;
0000c3d6      uint32_t r1_12 = (uint32_t)var_ee << 0x19 >> 0x1e;  /* ".33_250117" */  /* "50117" */
0000c3e2      uint32_t r0_35 = (uint32_t)*(uint8_t*)(&(&var_f0)[r0_8] - 1) << 0x19 >> 0x1e;
0000c3e2          /* ".33_250117" */  /* "50117" */
0000c3e2      
0000c3e8      if (r1_12)
0000c3e8      {
0000c3ee          i_4 = (uint32_t)((uint16_t)i_5 - (uint16_t)arg2 + (uint16_t)r1_12);
0000c3ee          
0000c404          for (int32_t i_1 = 0; i_1 < i_4; i_1 += 1)
0000c3fe              arg1[i_1] = arg1[i_1 + arg2 - r1_12];
0000c3fe          
0000c414          for (uint32_t i_2 = i_4; i_2 < i_5; i_2 += 1)
0000c40e              arg1[i_2] = 0;
0000c3e8      }
0000c3e8      
0000c41c      if (r0_35 < arg2 - 1)
0000c41c      {
0000c424          int32_t r0_41 = i_4 + arg2 - r0_35 - 1;
0000c426          uint32_t i_3 = i_4;
0000c428          int32_t var_24_1 = r0_41;
0000c428          
0000c43c          for (; r0_41 > i_3; i_3 += 1)
0000c43c          {
0000c432              sub_c288(0x41, &var_f4, 3);
0000c436              r0_41 = var_24_1;
0000c43c          }
0000c43c          
0000c44c          char var_f2;
0000c44c          arg1[i_3] = (uint32_t)var_f4 | (uint32_t)var_f2 << 0x1b >> 0xb;  /* "3_250117" */
0000c41c      }
0000c41c      
0000c45a      int32_t result;
0000c45a      int32_t r1_22;
0000c45a      int32_t r2_16;
0000c45a      int32_t r3_2;
0000c45a      result =
0000c45a          sub_12b2a((uint32_t)((uint16_t)i_4 + (uint16_t)arg2 - (uint16_t)r0_35 - 1), arg2);
0000c45a      
0000c464      if (r0_1 == 0x40)
0000c464      {
0000c468          uint32_t r0_49 = sub_c2bc(0x3d, r1_22, r2_16, r3_2);
0000c472          sub_c256(0x3d, 0);
0000c478          sub_c20c(5);
0000c480          sub_c256(0x3d, r0_49);
0000c488          *(uint8_t*)0x20bd61 = 1;
0000c464      }
0000c464      
0000c48a      return result;
0000c310  }


0000c48e    uint32_t* sub_c48e(uint32_t* arg1, int32_t arg2, int32_t arg3)

0000c48e  {
0000c48e      int32_t r3;
0000c48e      int32_t var_c_1 = r3;
0000c48e      int32_t var_10 = arg3;
0000c48e      int32_t var_14_1 = arg2;
0000c48e      uint32_t* result = arg1;
0000c494      result = &data_0;
0000c496      int32_t var_14 = 0;
0000c498      var_10 = 0;
0000c49a      int32_t var_c = 0;
0000c4a2      sub_c288(2, &result, 6);
0000c4ac      sub_c288(8, &var_10, 6);
0000c4bc      *(uint32_t*)arg1 =
0000c4bc          (uint32_t)(uint16_t)result | (uint32_t)*(uint8_t*)((char*)result)[2] << 0x10;
0000c4bc          /* "RY02_3.00.33_250117" */
0000c4d0      arg1[1] = (uint32_t)(uint8_t)var_14 << 8 | (uint32_t)*(uint8_t*)((char*)result)[3]
0000c4d0          | (uint32_t)*(uint8_t*)((char*)var_14)[1] << 0x10;  /* "RY02_3.00.33_250117" */
0000c4dc      arg1[2] =
0000c4dc          (uint32_t)(uint16_t)var_10 | (uint32_t)*(uint8_t*)((char*)var_10)[2] << 0x10;
0000c4dc          /* "RY02_3.00.33_250117" */
0000c4ee      arg1[3] = (uint32_t)(uint8_t)var_c << 8 | (uint32_t)*(uint8_t*)((char*)var_10)[3]
0000c4ee          | (uint32_t)*(uint8_t*)((char*)var_c)[1] << 0x10;  /* "RY02_3.00.33_250117" */
0000c4f0      return result;
0000c48e  }


0000c4f2    void sub_c4f2(int32_t arg1)

0000c4f2  {
0000c4f6      *(uint8_t*)0x20bd60 = 0;
0000c4f6      
0000c4fc      if (arg1 < 0xe74)
0000c500          *(uint8_t*)0x20bd60 = 1;
0000c4f2  }


0000c504    int32_t sub_c504()

0000c504  {
0000c50a      sub_c256(0x2a, 0);
0000c512      sub_c256(0x2b, 0);
0000c51a      sub_c256(0x16, 0);  /* ".00.33_250117" */
0000c526      return sub_c256(1, 1);
0000c504  }


0000c528    int32_t sub_c528()

0000c528  {
0000c52e      sub_c256(1, 0);
0000c538      return sub_c20c(5);
0000c528  }

0000c53a                                                                                00 b5 34 48 91 b0                            ..4H..
0000c540  80 78 03 00 07 f0 e8 fc 05 04 08 07 07 04 07 00 68 46 01 f0 f3 fd 72 e6 68 46 02 f0 f0 fd 20 22  .x..............hF....r.hF.... "
0000c560  69 46 08 a8 cf f7 c8 de 69 e6                                                                    iF......i.

0000c56a    int32_t sub_c56a(int32_t arg1)

0000c56a  {
0000c56e      if (!arg1)
0000c588          return sub_3730(0x20bd6c);
0000c588      
0000c57e      return sub_3704(0x20bd6c, 0x8304eb, 0x28, 1);
0000c56a  }


0000c58a    int32_t sub_c58a()

0000c58a  {
0000c590      *(uint8_t*)0x20bd64 = 1;
0000c59a      return sub_116c();
0000c58a  }


0000c59c    int32_t sub_c59c(int32_t arg1)

0000c59c  {
0000c5a0      if (!arg1)
0000c5bc          return sub_3730(0x20bd68);
0000c5bc      
0000c5b2      return sub_3704(0x20bd68, 0x83053b, 0x140, 1);
0000c59c  }


0000c5be    int32_t sub_c5be()

0000c5be  {
0000c5c2      sub_c59c(0);
0000c5c8      sub_c56a(0);
0000c5cc      sub_e226();
0000c5d4      return sub_f23e();
0000c5be  }


0000c5d6    uint32_t sub_c5d6(int32_t arg1, int32_t arg2, int32_t arg3, int32_t arg4)

0000c5d6  {
0000c5d6      int32_t var_18 = arg4;
0000c5de      uint32_t result = sub_c2bc(0x47, arg2, arg3, arg4) >> 6;
0000c5de      
0000c5e0      if (result)
0000c694          return result;
0000c694      
0000c5e6      sub_c256(0x4b, 0x10);  /* "RY02_3.00.33_250117" */
0000c5ee      sub_c256(0x4d, 0x18);  /* "0.33_250117" */
0000c5f6      sub_c256(0x4e, 0x40);
0000c5fe      sub_c256(0x4c, 4);
0000c606      int32_t r1;
0000c606      int32_t r2;
0000c606      int32_t r3;
0000c606      r1 = sub_c256(0x4c, 0);
0000c62e      uint32_t r0_1;
0000c62e      int32_t r1_1;
0000c62e      int32_t r2_1;
0000c62e      int32_t r3_1;
0000c62e      r0_1 = sub_c2bc(0x45, r1, r2, r3);
0000c636      uint32_t r0_2;
0000c636      int32_t r1_2;
0000c636      int32_t r2_2;
0000c636      int32_t r3_2;
0000c636      r0_2 = sub_c2bc(0x46, r1_1, r2_1, r3_1);
0000c63e      uint32_t r0_3;
0000c63e      int32_t r1_3;
0000c63e      int32_t r2_3;
0000c63e      int32_t r3_3;
0000c63e      r0_3 = sub_c2bc(0x47, r1_2, r2_2, r3_2);
0000c646      uint32_t r0_4 = sub_c2bc(0x48, r1_3, r2_3, r3_3);
0000c650      sub_c256(0x4b, 0x20);  /* "117" */
0000c658      sub_c256(0x45, r0_1);
0000c660      sub_c256(0x46, r0_2);
0000c668      sub_c256(0x47, r0_3);
0000c670      sub_c256(0x48, r0_4);
0000c678      sub_c256(0x4b, 0);
0000c680      sub_c256(0x4d, 0x20);  /* "117" */
0000c688      sub_c256(0x4e, 0);
0000c690      return sub_c256(0x4c, 0);
0000c5d6  }

0000c60c  int32_t data_c60c = 0x200120
0000c610  int32_t data_c610 = 0x208470
0000c614  int32_t data_c614 = 0x2088a8
0000c618  int32_t data_c618 = 0x20bd60
0000c61c  int32_t data_c61c = 0xe74
0000c620  int32_t data_c620 = 0x8304eb
0000c624  int32_t data_c624 = 0x65b
0000c628  int32_t data_c628 = 0x83053b

0000c696    int32_t sub_c696()

0000c696  {
0000c69c      *(uint8_t*)0x20bd65 = 1;
0000c6a6      return sub_116c();
0000c696  }


0000c6a8    int32_t sub_c6a8(int32_t arg1)

0000c6a8  {
0000c6ac      if (!arg1)
0000c6c8          return sub_3730(0x20bd70);
0000c6c8      
0000c6be      return sub_3704(0x20bd70, 0x830647, 0x190, 1);
0000c6a8  }


0000c6ca    int32_t sub_c6ca(char arg1)

0000c6ca  {
0000c6d0      *(uint8_t*)0x208472 = arg1;
0000c6d2      sub_c5be();
0000c6d8      sub_c4f2(0xed8);
0000c6dc      int32_t r0;
0000c6dc      int32_t r1;
0000c6dc      int32_t r2;
0000c6dc      int32_t r3;
0000c6dc      r0 = sub_c528();
0000c6e0      sub_c5d6(r0, r1, r2, r3);
0000c6e8      *(uint8_t*)0x20bd63 = 1;
0000c6ea      int32_t r0_1;
0000c6ea      int32_t r2_1;
0000c6ea      r0_1 = sub_187c();
0000c6f2      int32_t r1_2 = 0xea60;
0000c6f2      
0000c6f6      if (r0_1 - *(uint32_t*)0x20bd74 > 0xea60)
0000c6fc          r1_2 = 0xff81b964(0x20c180, 0x14);  /* "_3.00.33_250117" */
0000c6fc      
0000c700      uint32_t r0_3 = (uint32_t)*(uint8_t*)0x208472;
0000c70a      int32_t r0_5 = sub_13f18(r0_3, r1_2, r2_1, r0_3) + 0xe;
0000c70c      *(uint16_t*)(0x20bd60 + r0_5) = (int16_t)r0_5;
0000c71a      sub_17d50(0, 0, 0);
0000c71a      
0000c764      if (sub_e188() == 1)
0000c76e          return 0;
0000c76e      
0000c7ac      return 1;
0000c6ca  }

0000c724              e2 48 96 25 00 90 e2 4b 32 22 28 21 01 95 1e 20 0c f0 7c ff 03 21 06 91 ff 21 f5 31      .H.%...K2"(!... ..|..!...!.1
0000c740  25 22 c8 20 01 91 05 92 d3 4b db 49 03 90 02 90 04 94 c2 33 00 95 0a 46 20 20 0c f0 51 ff 02 f0  %". .....K.I.......3...F  ..Q...
0000c760  42 fd                                                                                            B.
0000c768                          00 f0 ec fb f9 e7                                                                ......
0000c774                                                              ff f7 ad fd 00 28 f9 d0 fe f7 d2 ff                      .....(......
0000c780  01 20 ff f7 91 ff 00 f0 e6 fe 0f e0 ff f7 a1 fd 00 28 ed d0 fe f7 c6 ff 01 20 ff f7 85 ff 00 f0  . ...............(....... ......
0000c7a0  b2 ff 03 e0 03 21 68 46 01 f0 cb f8                                                              .....!hF....

0000c7b0    int32_t sub_c7b0() __pure

0000c7b0  {
0000c7b0      return;
0000c7b0  }


0000c7b2    int32_t sub_c7b2()

0000c7b2  {
0000c7be      int16_t result = sub_cf64(0x20c074, sub_cff2(0x20bf30));
0000c7c6      *(uint16_t*)0x20bd7c = result;
0000c7c8      return result;
0000c7b2  }


0000c7ca    uint32_t sub_c7ca()

0000c7ca  {
0000c7ce      uint32_t i = 0;
0000c7d0      uint32_t var_58 = 0;
0000c7d2      int32_t var_54 = 0;
0000c7d4      int32_t var_50 = 0;
0000c7d8      int32_t var_4c = 0;
0000c7da      void var_48;
0000c7da      sub_f256(&var_48);
0000c7e8      int32_t* var_18 = 0x20bff4;
0000c7ec      uint32_t result = sub_f2a2(0x20bf30);
0000c7ec      
0000c7f2      if (result)
0000c7f2      {
0000c7fe          for (; (uint32_t)*(uint8_t*)0x20bf30 > i; i = (uint32_t)((uint8_t)i + 1))
0000c7fe          {
0000c7fe          }
0000c7fe          
0000c800          uint32_t r0_2 = sub_f250();
0000c80a          *(uint16_t*)0x20bd7c = (int16_t)r0_2;
0000c80e          uint32_t var_28;
0000c80e          sub_1932c(&var_28);
0000c816          int32_t var_1c;
0000c816          int32_t var_4c_1 = var_1c;
0000c81a          var_58 = var_28;
0000c81a          int32_t var_24;
0000c81a          int32_t var_54_1 = var_24;
0000c820          char var_20;
0000c820          *(uint8_t*)0x20bd7a = var_20;
0000c820          
0000c826          if (r0_2 == 1)
0000c826          {
0000c842              sub_a58c(0x20bdb0, 0x20be30, 0x20beb0, (uint32_t)*(uint8_t*)0x20bf30);
0000c856              var_58 = (uint32_t)*(uint8_t*)0x20bf30;
0000c862              char var_43;
0000c862              char var_42;
0000c862              sub_195a0(0x20bfb4, var_18, (uint32_t)var_43, (uint32_t)var_42, var_58, 
0000c862                  0x20bdb0, 0x20be30, 0x20beb0);
0000c868              *(uint8_t*)0x20bc87 = 0;
0000c86c              *(uint8_t*)0x20bc88 = 1;
0000c872              uint32_t r0_7 = (uint32_t)*(uint8_t*)0x20bd7a;
0000c872              
0000c876              if (r0_7)
0000c876              {
0000c87a                  *(uint8_t*)0x20bc88 = 2;
0000c87c                  sub_b7e4((uint8_t)r0_7);
0000c876              }
0000c876              
0000c882              result = (uint32_t)*(uint8_t*)0x208853;
0000c882              
0000c886              if (result)
0000c886              {
0000c888                  int32_t r4_1 = 0;
0000c888                  
0000c8e0                  while (true)
0000c8e0                  {
0000c8e0                      result = (uint32_t)*(uint8_t*)0x20bf30;
0000c8e0                      
0000c8e4                      if (result <= r4_1)
0000c8e4                          break;
0000c8e4                      
0000c88e                      uint32_t r7_2 = (uint32_t)*(uint16_t*)(0x20bfb4 + (r4_1 << 2));
0000c890                      int32_t r0_9 = sub_e844();
0000c896                      (uint8_t)var_58 = (char)r7_2;
0000c89a                      *(uint8_t*)((char*)var_58)[1] = (char)(r7_2 >> 8);
0000c89c                      *(uint8_t*)((char*)var_58)[2] = (char)r0_9;
0000c8a2                      *(uint8_t*)((char*)var_58)[3] = (char)(r0_9 >> 8);
0000c8a4                      int32_t r0_11 = r4_1 << 1;
0000c8a8                      uint32_t r1_4 = (uint32_t)*(uint16_t*)(0x20bdb0 + r0_11);
0000c8aa                      void* var_54_2;
0000c8aa                      (uint8_t)var_54_2 = (char)r1_4;
0000c8ae                      *(uint8_t*)((char*)var_54_2)[1] = (char)(r1_4 >> 8);
0000c8b4                      uint32_t r1_6 = (uint32_t)*(uint16_t*)(0x20be30 + r0_11);
0000c8b6                      *(uint8_t*)((char*)var_54_2)[2] = (char)r1_6;
0000c8ba                      *(uint8_t*)((char*)var_54_2)[3] = (char)(r1_6 >> 8);
0000c8c0                      uint32_t r0_12 = (uint32_t)*(uint16_t*)(0x20beb0 + r0_11);
0000c8c2                      void* var_50_2;
0000c8c2                      (uint8_t)var_50_2 = (char)r0_12;
0000c8c6                      *(uint8_t*)((char*)var_50_2)[1] = (char)(r0_12 >> 8);
0000c8d0                      *(uint8_t*)((char*)var_50_2)[2] = *(uint8_t*)0x20bd78;
0000c8d6                      sub_3d12(0xc5, &var_58, 0xb);
0000c8da                      sub_e844();
0000c8de                      r4_1 += 1;
0000c8e0                  }
0000c886              }
0000c826          }
0000c826          else
0000c826          {
0000c82a              *(uint8_t*)0x20bc87 = 1;
0000c82c              result = 3;
0000c82e              *(uint8_t*)0x20bc88 = 3;
0000c826          }
0000c7f2      }
0000c7f2      
0000c832      return result;
0000c7ca  }


0000c8e8    uint32_t sub_c8e8()

0000c8e8  {
0000c8ec      uint32_t i = 0;
0000c8f2      char var_74;
0000c8f2      0xff81b968(&var_74, 0x28);
0000c8fe      uint32_t result = sub_e26e(0x20bf30);
0000c8fe      
0000c904      if (result)
0000c904      {
0000c910          for (; (uint32_t)*(uint8_t*)0x20bf30 > i; i = (uint32_t)((uint8_t)i + 1))
0000c910          {
0000c910          }
0000c910          
0000c912          uint32_t r0_2 = sub_e236();
0000c91a          *(uint16_t*)0x20bd7c = (int16_t)r0_2;
0000c91e          uint8_t var_4c;
0000c91e          
0000c91e          if (r0_2 == 1)
0000c91e          {
0000c934              sub_a58c(0x20bdb0, 0x20be30, 0x20beb0, (uint32_t)*(uint8_t*)0x20bf30);
0000c934              
0000c962              for (int32_t i_1 = 0; (uint32_t)*(uint8_t*)0x20bf30 > i_1; i_1 += 1)
0000c962              {
0000c946                  int32_t r1_1 = i_1 << 1;
0000c94e                  *(uint16_t*)(0x20bdb0 + r1_1) s>>= 1;
0000c954                  *(uint16_t*)(0x20be30 + r1_1) s>>= 1;
0000c95a                  *(uint16_t*)(0x20beb0 + r1_1) s>>= 1;
0000c962              }
0000c962              
0000c972              sub_17cf8(0x20bf34, (uint32_t)*(uint8_t*)0x20bf30, 0x20bdb0, 0x20be30, 
0000c972                  0x20beb0);
0000c978              sub_17a84(&var_4c);
0000c982              0xff7dc2f8(&var_74, &var_4c, 0x28);
0000c988              char var_6c;
0000c988              uint32_t r0_10 = (uint32_t)var_6c;
0000c990              *(uint16_t*)0x20bd78 = (int16_t)r0_10;
0000c994              *(uint8_t*)0x20bc87 = 0;
0000c998              *(uint8_t*)0x20bc88 = 1;
0000c998              
0000c9a6              if ((uint32_t)var_74 == 2 && r0_10 - 0x28 <= 0xb4)
0000c9a6              {
0000c9aa                  *(uint8_t*)0x20bc88 = 2;
0000c9b0                  char var_54;
0000c9b0                  
0000c9b0                  if ((uint32_t)*(uint16_t*)0x20bc84 << 0x17 < 0)  /* "00.33_250117" */
0000c9b6                      sub_c046((uint32_t)var_54);
0000c9be                  char var_50;
0000c9be                  
0000c9be                  if ((uint32_t)*(uint16_t*)0x20bc84 << 0x16 < 0)  /* ".00.33_250117" */
0000c9c4                      sub_bea6((uint32_t)var_50);
0000c9cc                  *(uint8_t*)0x20bc86 = var_6c;
0000c9a6              }
0000c91e          }
0000c91e          else if (!r0_2)
0000c922          {
0000c9d4              *(uint8_t*)0x20bc91 = 0;
0000c9d8              *(uint8_t*)0x20bc87 = 1;
0000c9dc              *(uint8_t*)0x20bc88 = 3;
0000c922          }
0000c922          
0000c9e0          void var_24;
0000c9e0          sub_15554(&var_24);
0000c9e6          result = (uint32_t)*(uint8_t*)0x208853;
0000c9e6          
0000c9ea          if (result)
0000c9ea          {
0000c9ec              int32_t r6_1 = 0;
0000c9ec              
0000ca46              while (true)
0000ca46              {
0000ca46                  result = (uint32_t)*(uint8_t*)0x20bf30;
0000ca46                  
0000ca4a                  if (result <= r6_1)
0000ca4a                      break;
0000ca4a                  
0000c9f4                  uint32_t r7_1 = (uint32_t)*(uint16_t*)(0x20bf34 + (r6_1 << 2));
0000c9f6                  int32_t r0_22 = sub_e844();
0000c9fc                  var_4c = (char)r7_1;
0000ca00                  uint8_t var_4b_1 = (char)(r7_1 >> 8);
0000ca02                  char var_4a_1 = (char)r0_22;
0000ca08                  uint8_t var_49_1 = (char)(r0_22 >> 8);
0000ca0a                  int32_t r0_24 = r6_1 << 1;
0000ca0e                  uint32_t r1_6 = (uint32_t)*(uint16_t*)(0x20bdb0 + r0_24);
0000ca10                  uint8_t var_48_1 = (char)r1_6;
0000ca14                  char var_47_1 = (char)(r1_6 >> 8);
0000ca1a                  uint32_t r1_8 = (uint32_t)*(uint16_t*)(0x20be30 + r0_24);
0000ca1c                  uint8_t var_46_1 = (char)r1_8;
0000ca20                  char var_45_1 = (char)(r1_8 >> 8);
0000ca26                  uint32_t r0_25 = (uint32_t)*(uint16_t*)(0x20beb0 + r0_24);
0000ca28                  uint8_t var_44_1 = (char)r0_25;
0000ca2c                  char var_43_1 = (char)(r0_25 >> 8);
0000ca36                  char var_42_1 = *(uint8_t*)0x20bd78;
0000ca3c                  sub_3d12(0xc5, &var_4c, 0xb);
0000ca40                  sub_e844();
0000ca44                  r6_1 += 1;
0000ca46              }
0000c9ea          }
0000c904      }
0000c904      
0000ca4e      return result;
0000c8e8  }


0000ca50    uint32_t sub_ca50()

0000ca50  {
0000ca54      uint32_t result = (uint32_t)*(uint8_t*)0x20bd64;
0000ca54      
0000ca58      if (result)
0000ca58      {
0000ca5c          *(uint8_t*)0x20bd64 = 0;
0000ca5e          sub_e772();
0000ca66          int32_t r4_1 = (int32_t)sub_e844();
0000ca6c          *(uint32_t*)0x20bd74 = sub_187c();
0000ca6c          
0000ca78          if (r4_1 + 0x63 < 0x4e83)
0000ca78          {
0000ca8c              for (uint32_t i = 0; i < 9; )
0000ca8c              {
0000ca7e                  int32_t r1_1 = i << 1;
0000ca86                  i = (uint32_t)((uint8_t)i + 1);
0000ca88                  *(uint16_t*)(0x20c180 + r1_1) = *(uint16_t*)(r1_1 + 0x20c182);
0000ca8c              }
0000ca8c              
0000ca8e              *(uint16_t*)0x20c192 = (int16_t)r4_1;
0000cad6              int32_t r6_1 = (int32_t)*(uint16_t*)0x20c180;
0000cae2              int32_t r0_7 = r6_1 + (int32_t)*(uint16_t*)0x20c182
0000cae2                  + (int32_t)*(uint16_t*)0x20c184 + (int32_t)*(uint16_t*)0x20c186;
0000cafa              int32_t r0_12 = sub_12b3e(
0000cafa                  (int32_t)*(uint16_t*)0x20c18e + (int32_t)*(uint16_t*)0x20c190 + r4_1, 3);
0000cafa              
0000cb0e              if (((r0_7 >> 0x1f >> 0x1e) + r0_7) >> 2 > r0_12 + 0xd48
0000cb0e                  && r0_12 > *(uint32_t*)0x208474 && r6_1 && !sub_9170())  /* "50117" */  /* "
0000cb0e                  0117" */
0000cb0e              {
0000cb2c                  char r4_2 = *(uint8_t*)0x208472;
0000cb2e                  sub_e1f8();
0000cb32                  sub_e9b4();
0000cb38                  sub_c6ca(r4_2);
0000cb44                  return 0xff81b964(0x20c180, 0x14);  /* "_3.00.33_250117" */
0000cb0e              }
0000ca78          }
0000ca78          
0000cb18          result = (uint32_t)*(uint8_t*)0x208472;
0000cb18          
0000cb1c          if (!result)
0000cb1c          {
0000cb46              sub_c8e8();
0000cb52              return sub_dfc4(*(uint32_t*)0x20bff4);
0000cb1c          }
0000cb1c          
0000cb20          if (result == 1)
0000cb20          {
0000cb54              sub_c7ca();
0000cb62              return sub_ecd8(*(uint32_t*)0x20c034);
0000cb20          }
0000cb20          
0000cb24          if (result == 2)
0000cb26              return sub_c7b2();
0000ca58      }
0000ca58      
0000cb2a      return result;
0000ca50  }

0000ca94  int32_t data_ca94 = 0x20bd60
0000ca98  int32_t data_ca98 = 0x51a
0000ca9c  int32_t data_ca9c = 0x830647
0000caa0  int32_t data_caa0 = 0x208470
0000caa4  void* data_caa4 = data_ed8
0000caa8  int32_t data_caa8 = 0xea60
0000caac  int32_t data_caac = 0x20c180

0000cab0                                                  50 c3 00 00 e8 f1 02 00 88 13 00 00                              P...........

0000cabc  int32_t data_cabc = 0x20bf30
0000cac0  int32_t data_cac0 = 0x20c074
0000cac4  int32_t data_cac4 = 0x20bc84
0000cac8  int32_t data_cac8 = 0x208850
0000cacc  int32_t data_cacc = 0x4e83

0000cb64    int32_t sub_cb64() __pure

0000cb64  {
0000cb64      return;
0000cb64  }


0000cb66    uint32_t sub_cb66()

0000cb66  {
0000cb68      uint32_t result = 0x20bd60;
0000cb68      
0000cb70      if ((uint32_t)*(uint8_t*)0x20bd65)
0000cb70      {
0000cb74          *(uint8_t*)0x20bd65 = 0;
0000cb7a          result = (uint32_t)*(uint8_t*)0x208472;
0000cb82          uint32_t var_28;
0000cb82          
0000cb82          if (result == 6)
0000cb82          {
0000cbc8              sub_e690();
0000cbcc              var_28 = 0;
0000cbce              int32_t var_24_2 = 0;
0000cbd0              int32_t var_20_2 = 0;
0000cbd2              int32_t var_1c_2 = 0;
0000cbd4              int32_t r0_3;
0000cbd4              int32_t r1_5;
0000cbd4              int32_t r2_2;
0000cbd4              r0_3 = sub_e844();
0000cbd8              int32_t r4_2 = r0_3;
0000cbdc              sub_c48e(&var_28, r1_5, r2_2);
0000cbe4              int32_t r7_2 = var_28 - var_24_2;
0000cbe4              
0000cbec              if (r4_2 < 0 || r4_2 == 0x7fff)
0000cbee                  r4_2 = 1;
0000cbee              
0000cbf6              void* r0_6 = sub_b74c(0x20bcd8, r4_2, 0xc8);
0000cc00              sub_b6e2(*(uint32_t*)r0_6, *(uint32_t*)((char*)r0_6 + 4), 0x7d0);
0000cc00                  /* "17 10:58:10 2022" */
0000cc0a              void* r0_8 = sub_b74c(0x20bca0, r7_2, 0x3e8);
0000cc12              return sub_b6aa(*(uint32_t*)r0_8, *(uint32_t*)((char*)r0_8 + 4), 0x3e8);
0000cb82          }
0000cb82          
0000cb86          if (result == 7)
0000cb86          {
0000cb88              sub_e690();
0000cb8c              var_28 = 0;
0000cb8e              int32_t var_24_1 = 0;
0000cb90              int32_t var_20_1 = 0;
0000cb92              int32_t var_1c_1 = 0;
0000cb94              int32_t r0;
0000cb94              int32_t r1_1;
0000cb94              int32_t r2_1;
0000cb94              r0 = sub_e844();
0000cb98              int32_t r4_1 = r0;
0000cb9c              sub_c48e(&var_28, r1_1, r2_1);
0000cba4              int32_t r7_1 = var_28 - var_24_1;
0000cba4              
0000cbac              if (r4_1 < 0 || r4_1 == 0x7fff)
0000cbae                  r4_1 = 1;
0000cbae              
0000cbb6              sub_b74c(0x20bcd8, r4_1, 0xc8);
0000cbc0              return sub_b74c(0x20bca0, r7_1, 0x3e8);
0000cb86          }
0000cb70      }
0000cb70      
0000cbc6      return result;
0000cb66  }


0000cc18    int32_t sub_cc18(int32_t arg1)

0000cc18  {
0000cc20      uint32_t r0 = (uint32_t)*(uint16_t*)0x20bc84;
0000cc26      int32_t r5_1 = arg1 & 0xa0;
0000cc26      
0000cc2a      if (!r0)
0000cc2a      {
0000cc4e          if (!sub_c2d2())
0000cc4e          {
0000cc60              *(uint8_t*)0x20bc87 = 1;
0000cc64              *(uint8_t*)0x20bc88 = 3;
0000cc66              return 3;
0000cc4e          }
0000cc4e          
0000cc52          char r5_2;
0000cc52          
0000cc52          if (arg1 == 0x40)
0000cc68              r5_2 = 6;
0000cc52          else if (arg1 == 0x800)
0000cc5c              r5_2 = 7;
0000cc5a          else if (r5_1 || arg1 << 0x15 < 0)  /* "3.00.33_250117" */
0000cc74              r5_2 = 1;
0000cc72          else
0000cc72          {
0000cc78              r5_2 = 0;
0000cc82              char r1_2;
0000cc82              
0000cc82              if (!sub_154e8())
0000cc82              {
0000cc9e                  *(uint8_t*)0x208471 = 0x1e;  /* "50117" */
0000cca0                  r1_2 = 0x18;  /* "0.33_250117" */
0000cc82              }
0000cc82              else
0000cc82              {
0000cc84                  r1_2 = 8;
0000cc86                  *(uint8_t*)0x208471 = 8;
0000cc82              }
0000cc82              
0000cc88              *(uint8_t*)0x208470 = r1_2;
0000cc72          }
0000cc72          
0000cc8c          sub_c6ca(r5_2);
0000cc90          *(uint8_t*)0x20bc88 = 1;
0000cc90          
0000cc98          if (arg1 == 1 || arg1 == 0x20)  /* "117" */
0000cca6              *(uint8_t*)0x20bc87 = 0;
0000cc2a      }
0000cc2a      else if (r5_1 && !(r0 & 0xa0))
0000cc32      {
0000cc34          sub_e1f8();
0000cc3a          sub_c6ca(1);
0000cc3a          
0000cc44          if (arg1 == 1 || arg1 == 0x20)  /* "117" */
0000ccac              *(uint8_t*)0x20bc87 = 0;
0000ccac          
0000ccae          *(uint8_t*)0x20bc88 = 1;
0000ccb2          *(uint8_t*)0x20bc91 = 0;
0000cc32      }
0000cc32      
0000ccb6      int16_t result = *(uint16_t*)0x20bc84 | (uint16_t)arg1;
0000ccb8      *(uint16_t*)0x20bc84 = result;
0000ccba      return result;
0000cc18  }


0000ccbc    void sub_ccbc(int32_t arg1)

0000ccbc  {
0000ccc4      if ((uint32_t)*(uint8_t*)0x20bc74)
0000ccc4          return;
0000ccc4      
0000ccca      int32_t r1_2 = (uint32_t)*(uint16_t*)0x20bc84 & ~arg1;
0000cccc      *(uint16_t*)0x20bc84 = (int16_t)r1_2;
0000cccc      
0000ccce      if (!r1_2)
0000ccce      {
0000cce6          sub_e1f8();
0000ccec          *(uint8_t*)0x20bc88 = 0;
0000ccce      }
0000ccce      else if (arg1 & 0xa0 && !(r1_2 & 0xa0))
0000ccd8      {
0000ccda          sub_e1f8();
0000ccda          
0000cce2          if ((uint32_t)*(uint8_t*)0x20bc88 == 2)
0000ccf2              *(uint8_t*)0x20bc88 = 1;
0000ccf2          
0000ccf6          sub_c6ca(0);
0000ccd8      }
0000ccbc  }


0000ccfc    int32_t sub_ccfc()

0000ccfc  {
0000cd02      if (!(uint32_t)*(uint8_t*)0x20bc87)
0000cd0a          return 1;
0000cd0a      
0000cd06      return 0;
0000ccfc  }


0000cd0c    uint32_t sub_cd0c()

0000cd0c  {
0000cd10      return (uint32_t)*(uint8_t*)0x20bc88;
0000cd0c  }


0000cd12    uint32_t sub_cd12()

0000cd12  {
0000cd18      if ((uint32_t)*(uint8_t*)0x20bc88 == 2)
0000cd20          return (uint32_t)*(uint8_t*)0x20bc86;
0000cd20      
0000cd1c      return (uint32_t)*(uint8_t*)0x20bc90;
0000cd12  }


0000cd22    int32_t sub_cd22()

0000cd22  {
0000cd26      *(uint32_t*)0x20bc84 = 0;
0000cd28      *(uint32_t*)0x20bc88 = 0;
0000cd2a      *(uint32_t*)0x20bc8c = 0;
0000cd2c      *(uint32_t*)0x20bc90 = 0;
0000cd2e      return 0x20bc84;
0000cd22  }


0000cd30    int32_t sub_cd30()

0000cd30  {
0000cd34      sub_c6ca(9);
0000cd38      sub_e904();
0000cd40      return sub_e1f8();
0000cd30  }


0000cd42    int32_t sub_cd42()

0000cd42  {
0000cd4a      int32_t entry_r1;
0000cd4a      int32_t entry_r2;
0000cd4a      return sub_b540(0xffff, entry_r1, entry_r2);
0000cd42  }


0000cd4c    int32_t sub_cd4c()

0000cd4c  {
0000cd50      *(uint8_t*)0x20bd64 = 1;
0000cd52      return 1;
0000cd4c  }


0000cd54    uint32_t j_sub_ca50()

0000cd54  {
0000cd54      /* tailcall */
0000cd54      return sub_ca50();
0000cd54  }

0000cd56                                                                    00 00                                                ..

0000cd58  int32_t data_cd58 = 0xd48
0000cd5c  int32_t data_cd5c = 0x20c180
0000cd60  int32_t data_cd60 = 0x20bfb0
0000cd64  int32_t data_cd64 = 0x20bd60

0000cd68    int32_t sub_cd68(int16_t arg1, void* arg2 @ r6, int32_t arg3, int32_t arg4, int32_t arg5, int32_t arg6, int32_t arg7, int32_t arg8)

0000cd68  {
0000cd68      *(uint16_t*)((char*)arg2 + 0x22) = arg1;  /* "7" */
0000cd80      /* undefined */
0000cd68  }

0000cd82        00 00                                                                                        ..

0000cd84    int32_t sub_cd84()

0000cd84  {
0000cd8c      sub_e34e(0);
0000cd96      sub_c256(0x16, 3);  /* ".00.33_250117" */
0000cd9e      sub_c256(0x17, 5);  /* "00.33_250117" */
0000cda6      sub_c256(0x18, 0);  /* "0.33_250117" */
0000cdae      sub_c256(0x19, 0x19);  /* ".33_250117" */
0000cdb6      sub_c256(0x1a, 0);  /* "33_250117" */
0000cdc0      sub_c256(0x1b, 0x5e);  /* "3_250117" */
0000cdc8      sub_c256(0x1c, 8);  /* "_250117" */
0000cdd0      sub_c256(0x1d, 8);  /* "250117" */
0000cdd8      sub_c256(0x1e, 0);  /* "50117" */
0000cde0      sub_c256(0x1f, 0);  /* "0117" */
0000cde8      sub_c256(0x20, 0);  /* "117" */
0000cdf0      sub_c256(0x21, 0);  /* "17" */
0000cdf8      sub_c256(0x23, 0x8f);
0000ce04      sub_c256(0x24, 0x22);  /* "7" */
0000ce0c      sub_c256(0x25, 0x22);  /* "7" */
0000ce14      sub_c256(0x26, 0x40);
0000ce1c      sub_c256(0x27, 0);
0000ce24      sub_c256(0x28, 0);
0000ce2c      sub_c256(0x29, 0);
0000ce34      sub_c256(0x2a, 0x20);  /* "117" */
0000ce3c      sub_c256(0x2b, 0);
0000ce44      sub_c256(0x2c, 0);
0000ce4c      sub_c256(0x2d, 0);
0000ce54      sub_c256(0x2e, 0);
0000ce5c      sub_c256(0x2f, 0);
0000ce64      sub_c256(0x36, 0x18);  /* "0.33_250117" */  /* "3.0" */
0000ce6c      sub_c256(0x4e, 0);
0000ce74      sub_c256(0x6d, 0);
0000ce7c      sub_c256(0xf0, 0x22);  /* "7" */
0000ce84      sub_c256(0xf1, 0x28);
0000ce8c      sub_c256(0xf2, 4);
0000ce94      sub_c256(0xf3, 0x70);
0000ce9c      sub_c256(0xf4, 0x32);  /* "02_V3.0" */
0000cea4      sub_c256(0xf5, 0x89);
0000ceac      sub_c256(0xf6, 0x2b);
0000ceb4      sub_c256(0xf7, 0x85);
0000cebc      sub_c256(0xf8, 0x27);
0000cec4      sub_c256(0xf9, 0);
0000cecc      sub_c256(0xfa, 0x88);
0000ced4      sub_c256(0xfb, 0x40);
0000cedc      sub_c256(0xf6, 0x2b);
0000cee4      sub_c256(0x3d, 0x83);
0000ceec      sub_c256(0x3e, 0x20);  /* "117" */
0000cef4      sub_c256(0x3c, 0x1f);  /* "0117" */
0000cefc      sub_c256(0x37, 0);  /* ".0" */
0000cf04      sub_c256(0x3b, 0);
0000cf0c      sub_c256(0x3b, 0x10);  /* "RY02_3.00.33_250117" */
0000cf14      sub_c256(0x4d, 1);
0000cf1a      sub_c20c(5);
0000cf22      sub_c256(0x4d, 0);
0000cf28      sub_c20c(5);
0000cf2c      sub_e4d0();
0000cf34      *(uint8_t*)0x20bd61 = 1;
0000cf36      return 1;
0000cd84  }


0000cf38    int32_t sub_cf38()

0000cf38  {
0000cf3c      *(uint8_t*)0x20d595 = 0;
0000cf3e      *(uint8_t*)0x20d596 = 0;
0000cf40      *(uint8_t*)0x20d594 = 0;
0000cf42      return 0x20d594;
0000cf38  }


0000cf44    int32_t sub_cf44()

0000cf44  {
0000cf4c      if (!sub_c2d2())
0000cf62          return 1;
0000cf62      
0000cf4e      sub_cf38();
0000cf52      sub_cd84();
0000cf58      sub_c59c(1);
0000cf5e      return 0;
0000cf44  }


0000cf64    uint32_t sub_cf64(int32_t* arg1, int32_t arg2)

0000cf64  {
0000cf64      int32_t* var_1c = arg1;
0000cf6e      uint32_t i = 0;
0000cf70      int32_t r0_1 = (int32_t)sub_e844();
0000cf70      
0000cfde      for (; i < arg2; i = (uint32_t)((uint8_t)i + 1))
0000cfde      {
0000cf7e          int32_t r2_2 = arg1[i];
0000cf7e          
0000cf8c          if (r2_2 > *(uint32_t*)0x83e2d4 && r0_1 > *(uint32_t*)0x208474)
0000cf8c          {
0000cf8e              uint32_t r2_3 = (uint32_t)*(uint8_t*)0x20d595;
0000cf8e              
0000cf92              if (r2_3)
0000cf96                  *(uint8_t*)0x20d595 = (uint8_t)r2_3 - 1;
0000cf96              
0000cf98              uint32_t r2_5 = (uint32_t)*(uint8_t*)0x20d596;
0000cf98              
0000cf9c              if (r2_5 < 5)
0000cfa8                  *(uint8_t*)0x20d596 = (uint8_t)r2_5 + 1;
0000cf9c              else
0000cf9c              {
0000cfa0                  *(uint8_t*)0x20d594 = 1;
0000cfa2                  *(uint8_t*)0x20d596 = 5;
0000cf9c              }
0000cf8c          }
0000cf8c          else if (r2_2 < *(uint32_t*)0x83e2d0 || r0_1 < *(uint32_t*)0x208478)
0000cfb8          {
0000cfba              uint32_t r2_8 = (uint32_t)*(uint8_t*)0x20d596;
0000cfba              
0000cfbe              if (r2_8)
0000cfc2                  *(uint8_t*)0x20d596 = (uint8_t)r2_8 - 1;
0000cfc2              
0000cfc4              uint32_t r2_10 = (uint32_t)*(uint8_t*)0x20d595;
0000cfc4              
0000cfc8              if (r2_10 < 5)
0000cfd4                  *(uint8_t*)0x20d595 = (uint8_t)r2_10 + 1;
0000cfc8              else
0000cfc8              {
0000cfcc                  *(uint8_t*)0x20d594 = 0;
0000cfce                  *(uint8_t*)0x20d595 = 5;
0000cfc8              }
0000cfb8          }
0000cfde      }
0000cfde      
0000cfe4      if (!(uint32_t)*(uint8_t*)0x20d594)
0000cfea          sub_e886(*(uint32_t*)arg1, *(uint32_t*)0x83e2d0);
0000cfea      
0000cff0      return (uint32_t)*(uint8_t*)0x20d594;
0000cf64  }


0000cff2    int32_t sub_cff2(char* arg1)

0000cff2  {
0000cffe      char result = sub_c310(&arg1[0x144], 1, 1);
0000d004      *(uint8_t*)arg1 = result;
0000d006      return result;
0000cff2  }

0000d008  int32_t data_d008 = 0x20bd61
0000d00c  int32_t data_d00c = 0x20d594
0000d010  int32_t data_d010 = 0x83e2d0
0000d014  int32_t data_d014 = 0x83e2d4
0000d018  int32_t data_d018 = 0x208474
0000d01c  int32_t data_d01c = 0x208478

0000d020    uint32_t sub_d020(int32_t arg1, int32_t arg2, int32_t arg3, int32_t arg4)

0000d020  {
0000d020      int32_t var_18 = arg4;
0000d020      int32_t var_20 = arg2;
0000d02a      uint32_t result = (uint32_t)*(uint8_t*)0x208472;
0000d02a      
0000d02e      if (result != 9)
0000d204          return result;
0000d204      
0000d030      sub_c528();
0000d034      int32_t r6_1 = 0;
0000d038      int32_t r5_1 = 0;
0000d038      
0000d03c      if (arg1)
0000d03e          r6_1 = arg2;
0000d03e      
0000d044      if (arg3)
0000d046          r5_1 = arg4;
0000d046      
0000d04a      int32_t r4_1 = 0;
0000d04c      int32_t r7_1 = 0;
0000d04c      
0000d054      if (arg1)
0000d056          r4_1 = 1;
0000d056      
0000d05c      if (arg3)
0000d05e          r7_1 = 4;
0000d05e      
0000d062      sub_e34e(0);
0000d06a      sub_c256(0x16, 0xf);  /* ".00.33_250117" */
0000d072      sub_c256(0x17, 0x55);  /* "00.33_250117" */
0000d07a      sub_c256(0x18, 0x40);  /* "0.33_250117" */
0000d082      sub_c256(0x19, 1);  /* ".33_250117" */
0000d08a      sub_c256(0x1a, 0);  /* "33_250117" */
0000d092      sub_c256(0x1b, 0x5e);  /* "3_250117" */
0000d09a      sub_c256(0x1c, 8);  /* "_250117" */
0000d0a2      sub_c256(0x1d, 8);  /* "250117" */
0000d0aa      sub_c256(0x1e, 8);  /* "50117" */
0000d0b2      sub_c256(0x1f, 8);  /* "0117" */
0000d0ba      sub_c256(0x20, 0);  /* "117" */
0000d0c2      sub_c256(0x21, 0);  /* "17" */
0000d0ca      sub_c256(0x23, 0xff);
0000d0d2      sub_c256(0x24, 0xee);
0000d0da      sub_c256(0x25, 0xee);
0000d0e2      sub_c256(0x26, 0);
0000d0ea      sub_c256(0x27, r6_1);
0000d0f2      sub_c256(0x28, r5_1);
0000d0fa      sub_c256(0x29, 0);
0000d102      sub_c256(0x2a, r4_1);
0000d10a      sub_c256(0x2b, r7_1 << 4);
0000d112      sub_c256(0x2c, 0);
0000d11a      sub_c256(0x2d, 0);
0000d122      sub_c256(0x2e, 0);
0000d12e      sub_c256(0x2f, 0);
0000d136      sub_c256(0x36, 0x18);  /* "0.33_250117" */  /* "3.0" */
0000d13e      sub_c256(0x4e, 0);
0000d146      sub_c256(0x6d, 0);
0000d14e      sub_c256(0xf0, 0x22);  /* "7" */
0000d156      sub_c256(0xf1, 0x28);
0000d15e      sub_c256(0xf2, 4);
0000d166      sub_c256(0xf3, 0x70);
0000d16e      sub_c256(0xf4, 0x32);  /* "02_V3.0" */
0000d176      sub_c256(0xf5, 0x89);
0000d17e      sub_c256(0xf6, 0x2b);
0000d186      sub_c256(0xf7, 0x85);
0000d18e      sub_c256(0xf8, 0x27);
0000d196      sub_c256(0xf9, 0);
0000d19e      sub_c256(0xfa, 0x88);
0000d1a6      sub_c256(0xfb, 0x40);
0000d1ae      sub_c256(0xf6, 0x2b);
0000d1b6      sub_c256(0x3d, 0);
0000d1be      sub_c256(0x3e, 0x20);  /* "117" */
0000d1c6      sub_c256(0x3c, 0x1f);  /* "0117" */
0000d1ce      sub_c256(0x37, 0);  /* ".0" */
0000d1d6      sub_c256(0x3b, 0);
0000d1de      sub_c256(0x3b, 0x10);  /* "RY02_3.00.33_250117" */
0000d1e6      sub_c256(0x4d, 1);
0000d1ec      sub_c20c(5);
0000d1f4      sub_c256(0x4d, 0);
0000d1fa      sub_c20c(5);
0000d1fe      return sub_e4d0();
0000d020  }


0000d206    int32_t sub_d206()

0000d206  {
0000d206      int32_t r3;
0000d206      int32_t var_18 = r3;
0000d218      sub_c256(0x16, 0xf);  /* ".00.33_250117" */
0000d220      sub_c256(0x17, 0xff);  /* "00.33_250117" */
0000d228      sub_c256(0x18, 0);  /* "0.33_250117" */
0000d230      sub_c256(0x19, 5);  /* ".33_250117" */
0000d238      sub_c256(0x1a, 0);  /* "33_250117" */
0000d240      sub_c256(0x1b, 0x5e);  /* "3_250117" */
0000d248      sub_c256(0x1c, 0x20);  /* "_250117" */  /* "117" */
0000d250      sub_c256(0x1d, 0x20);  /* "250117" */  /* "117" */
0000d258      sub_c256(0x1e, 0x20);  /* "50117" */  /* "117" */
0000d260      sub_c256(0x1f, 0x20);  /* "0117" */  /* "117" */
0000d26a      sub_c256(0x20, 0);  /* "117" */
0000d272      sub_c256(0x21, 0);  /* "17" */
0000d27c      sub_c256(0x23, 0xff);
0000d286      sub_c256(0x24, 0x55);
0000d28e      sub_c256(0x25, 0x55);
0000d296      sub_c256(0x26, 0);
0000d29e      sub_c256(0x27, 0x20);  /* "117" */
0000d2a6      sub_c256(0x28, 0x20);  /* "117" */
0000d2ae      sub_c256(0x29, 0x20);  /* "117" */
0000d2b6      sub_c256(0x2a, 1);
0000d2be      sub_c256(0x2b, 0x42);
0000d2c6      sub_c256(0x2c, 0);
0000d2ce      sub_c256(0x2d, 0);
0000d2d6      sub_c256(0x2e, 0);
0000d2de      sub_c256(0x2f, 0);
0000d2e6      sub_c256(0x36, 0x18);  /* "0.33_250117" */  /* "3.0" */
0000d2ee      sub_c256(0x4e, 0);
0000d2f6      sub_c256(0x6d, 0);
0000d2fe      sub_c256(0xf0, 0x22);  /* "7" */
0000d306      sub_c256(0xf1, 0x28);
0000d30e      sub_c256(0xf2, 4);
0000d316      sub_c256(0xf3, 0x70);
0000d31e      sub_c256(0xf4, 0x32);  /* "02_V3.0" */
0000d326      sub_c256(0xf5, 0x89);
0000d32e      sub_c256(0xf6, 0x2b);
0000d336      sub_c256(0xf7, 0x85);
0000d33e      sub_c256(0xf8, 0x27);
0000d346      sub_c256(0xf9, 0);
0000d34e      sub_c256(0xfa, 0x88);
0000d356      sub_c256(0xfb, 0x40);
0000d35e      sub_c256(0xf6, 0x2b);
0000d366      sub_c256(0x3d, 0);
0000d36e      sub_c256(0x3e, 0x20);  /* "117" */
0000d376      sub_c256(0x3c, 0x1f);  /* "0117" */
0000d37e      sub_c256(0x37, 0);  /* ".0" */
0000d386      sub_c256(0x3b, 0);
0000d38e      sub_c256(0x3b, 0x10);  /* "RY02_3.00.33_250117" */
0000d396      sub_c256(0x4d, 1);
0000d39c      sub_c20c(5);
0000d3a4      sub_c256(0x4d, 0);
0000d3ae      return sub_c20c(5);
0000d206  }


0000d3b0    int32_t sub_d3b0()

0000d3b0  {
0000d3b8      sub_c256(0x16, 0xf);  /* ".00.33_250117" */
0000d3c0      sub_c256(0x17, 0xff);  /* "00.33_250117" */
0000d3c8      sub_c256(0x18, 0);  /* "0.33_250117" */
0000d3d0      sub_c256(0x19, 5);  /* ".33_250117" */
0000d3d8      sub_c256(0x1a, 0);  /* "33_250117" */
0000d3e2      sub_c256(0x1b, 0x5e);  /* "3_250117" */
0000d3ea      sub_c256(0x1c, 0x40);  /* "_250117" */
0000d3f2      sub_c256(0x1d, 0x40);  /* "250117" */
0000d3fa      sub_c256(0x1e, 0x40);  /* "50117" */
0000d402      sub_c256(0x1f, 0x40);  /* "0117" */
0000d40c      sub_c256(0x20, 0);  /* "117" */
0000d414      sub_c256(0x21, 0);  /* "17" */
0000d41c      sub_c256(0x23, 0xff);
0000d42c      sub_c256(0x24, 0x55);
0000d434      sub_c256(0x25, 0x55);
0000d43c      sub_c256(0x26, 0);
0000d444      sub_c256(0x27, 0x40);
0000d44c      sub_c256(0x28, 0x40);
0000d454      sub_c256(0x29, 0x40);
0000d45c      sub_c256(0x2a, 1);
0000d464      sub_c256(0x2b, 0x42);
0000d46c      sub_c256(0x2c, 0);
0000d474      sub_c256(0x2d, 0);
0000d47c      sub_c256(0x2e, 0);
0000d484      sub_c256(0x2f, 0);
0000d48c      sub_c256(0x36, 0x18);  /* "0.33_250117" */  /* "3.0" */
0000d494      sub_c256(0x4e, 0);
0000d49c      sub_c256(0x6d, 0);
0000d4a4      sub_c256(0xf0, 0x22);  /* "7" */
0000d4ac      sub_c256(0xf1, 0x28);
0000d4b4      sub_c256(0xf2, 4);
0000d4bc      sub_c256(0xf3, 0x70);
0000d4c4      sub_c256(0xf4, 0x32);  /* "02_V3.0" */
0000d4cc      sub_c256(0xf5, 0x89);
0000d4d4      sub_c256(0xf6, 0x2b);
0000d4dc      sub_c256(0xf7, 0x85);
0000d4e4      sub_c256(0xf8, 0x27);
0000d4ec      sub_c256(0xf9, 0);
0000d4f4      sub_c256(0xfa, 0x88);
0000d4fc      sub_c256(0xfb, 0x40);
0000d504      sub_c256(0xf6, 0x2b);
0000d50c      sub_c256(0x3d, 0);
0000d514      sub_c256(0x3e, 0x20);  /* "117" */
0000d51c      sub_c256(0x3c, 0x1f);  /* "0117" */
0000d524      sub_c256(0x37, 0);  /* ".0" */
0000d52c      sub_c256(0x3b, 0);
0000d534      sub_c256(0x3b, 0x10);  /* "RY02_3.00.33_250117" */
0000d53c      sub_c256(0x4d, 1);
0000d542      sub_c20c(5);
0000d54a      sub_c256(0x4d, 0);
0000d554      return sub_c20c(5);
0000d3b0  }

0000d424  int32_t data_d424 = 0x208472

0000d556    int32_t sub_d556()

0000d556  {
0000d562      sub_e34e(0);
0000d56a      sub_c256(0x16, 0xf);  /* ".00.33_250117" */
0000d572      sub_c256(0x17, 0xf5);  /* "00.33_250117" */
0000d57a      sub_c256(0x18, 0);  /* "0.33_250117" */
0000d582      sub_c256(0x19, 5);  /* ".33_250117" */
0000d58a      sub_c256(0x1a, 0);  /* "33_250117" */
0000d592      sub_c256(0x1b, 0x5e);  /* "3_250117" */
0000d59a      sub_c256(0x1c, 6);  /* "_250117" */
0000d5a2      sub_c256(0x1d, 6);  /* "250117" */
0000d5aa      sub_c256(0x1e, 0x40);  /* "50117" */
0000d5b2      sub_c256(0x1f, 0x40);  /* "0117" */
0000d5bc      sub_c256(0x20, 0);  /* "117" */
0000d5c4      sub_c256(0x21, 0);  /* "17" */
0000d5ce      sub_c256(0x23, 0xbf);
0000d5d8      sub_c256(0x24, 0x55);
0000d5e0      sub_c256(0x25, 0x55);
0000d5e8      sub_c256(0x26, 6);
0000d5f0      sub_c256(0x27, 0);
0000d5f8      sub_c256(0x28, 0x40);
0000d600      sub_c256(0x29, 0x40);
0000d608      sub_c256(0x2a, 0x20);  /* "117" */
0000d610      sub_c256(0x2b, 0x14);  /* "_3.00.33_250117" */
0000d618      sub_c256(0x2c, 0);
0000d620      sub_c256(0x2d, 0);
0000d628      sub_c256(0x2e, 0);
0000d630      sub_c256(0x2f, 0);
0000d638      sub_c256(0x36, 0x18);  /* "0.33_250117" */  /* "3.0" */
0000d640      sub_c256(0x4e, 0);
0000d648      sub_c256(0x6d, 0);
0000d650      sub_c256(0xf0, 0x22);  /* "7" */
0000d658      sub_c256(0xf1, 0x28);
0000d660      sub_c256(0xf2, 4);
0000d668      sub_c256(0xf3, 0x70);
0000d670      sub_c256(0xf4, 0x32);  /* "02_V3.0" */
0000d678      sub_c256(0xf5, 0x89);
0000d680      sub_c256(0xf6, 0x2b);
0000d688      sub_c256(0xf7, 0x85);
0000d690      sub_c256(0xf8, 0x27);
0000d698      sub_c256(0xf9, 0);
0000d6a0      sub_c256(0xfa, 0x88);
0000d6a8      sub_c256(0xfb, 0x40);
0000d6b0      sub_c256(0xf6, 0x2b);
0000d6b8      sub_c256(0x3d, 0x83);
0000d6c0      sub_c256(0x3e, 0x20);  /* "117" */
0000d6c8      sub_c256(0x3c, 0x1f);  /* "0117" */
0000d6d0      sub_c256(0x37, 0);  /* ".0" */
0000d6d8      sub_c256(0x3b, 0);
0000d6e0      sub_c256(0x3b, 0x10);  /* "RY02_3.00.33_250117" */
0000d6e8      sub_c256(0x4d, 1);
0000d6ee      sub_c20c(5);
0000d6f6      sub_c256(0x4d, 0);
0000d6fc      sub_c20c(5);
0000d704      return sub_e4d0();
0000d556  }


0000d706    int32_t sub_d706()

0000d706  {
0000d712      sub_e34e(0);
0000d71a      sub_c256(0x16, 0xf);  /* ".00.33_250117" */
0000d722      sub_c256(0x17, 0xf5);  /* "00.33_250117" */
0000d72a      sub_c256(0x18, 0);  /* "0.33_250117" */
0000d732      sub_c256(0x19, 5);  /* ".33_250117" */
0000d73a      sub_c256(0x1a, 0);  /* "33_250117" */
0000d744      sub_c256(0x1b, 0x5e);  /* "3_250117" */
0000d74c      sub_c256(0x1c, 6);  /* "_250117" */
0000d754      sub_c256(0x1d, 6);  /* "250117" */
0000d75c      sub_c256(0x1e, 0x40);  /* "50117" */
0000d764      sub_c256(0x1f, 0x40);  /* "0117" */
0000d76e      sub_c256(0x20, 0);  /* "117" */
0000d776      sub_c256(0x21, 0);  /* "17" */
0000d780      sub_c256(0x23, 0xbf);
0000d78a      sub_c256(0x24, 0x55);
0000d792      sub_c256(0x25, 0x55);
0000d79a      sub_c256(0x26, 6);
0000d7a2      sub_c256(0x27, 0);
0000d7aa      sub_c256(0x28, 0xf0);
0000d7b2      sub_c256(0x29, 0xf0);
0000d7ba      sub_c256(0x2a, 0x20);  /* "117" */
0000d7c2      sub_c256(0x2b, 0x14);  /* "_3.00.33_250117" */
0000d7ca      sub_c256(0x2c, 0);
0000d7d2      sub_c256(0x2d, 0);
0000d7da      sub_c256(0x2e, 0);
0000d7e2      sub_c256(0x2f, 0);
0000d7ea      sub_c256(0x36, 0x18);  /* "0.33_250117" */  /* "3.0" */
0000d7f2      sub_c256(0x4e, 0);
0000d7fa      sub_c256(0x6d, 0);
0000d802      sub_c256(0xf0, 0x22);  /* "7" */
0000d80a      sub_c256(0xf1, 0x28);
0000d812      sub_c256(0xf2, 4);
0000d81a      sub_c256(0xf3, 0x70);
0000d822      sub_c256(0xf4, 0x32);  /* "02_V3.0" */
0000d82a      sub_c256(0xf5, 0x89);
0000d832      sub_c256(0xf6, 0x2b);
0000d83a      sub_c256(0xf7, 0x85);
0000d842      sub_c256(0xf8, 0x27);
0000d84a      sub_c256(0xf9, 0);
0000d852      sub_c256(0xfa, 0x88);
0000d85a      sub_c256(0xfb, 0x40);
0000d862      sub_c256(0xf6, 0x2b);
0000d86a      sub_c256(0x3d, 0x83);
0000d872      sub_c256(0x3e, 0x20);  /* "117" */
0000d87a      sub_c256(0x3c, 0x1f);  /* "0117" */
0000d882      sub_c256(0x37, 0);  /* ".0" */
0000d88a      sub_c256(0x3b, 0);
0000d892      sub_c256(0x3b, 0x10);  /* "RY02_3.00.33_250117" */
0000d89a      sub_c256(0x4d, 1);
0000d8a0      sub_c20c(5);
0000d8a8      sub_c256(0x4d, 0);
0000d8ae      sub_c20c(5);
0000d8b6      return sub_e4d0();
0000d706  }


0000d8b8    int32_t sub_d8b8() __pure

0000d8b8  {
0000d8b8      return;
0000d8b8  }


0000d8ba    int32_t sub_d8ba(uint32_t* arg1, int32_t arg2, int32_t arg3)

0000d8ba  {
0000d8ba      int32_t r3;
0000d8ba      int32_t var_14_1 = r3;
0000d8ba      int32_t var_18 = arg3;
0000d8ba      int32_t var_1c_1 = arg2;
0000d8ba      uint32_t* var_20 = arg1;
0000d8c0      var_20 = &data_0;
0000d8c2      int16_t var_1c = 0;
0000d8c4      var_18 = 0;
0000d8c6      int16_t var_14 = 0;
0000d8ce      sub_c288(2, &var_20, 6);
0000d8d8      sub_c288(8, &var_18, 6);
0000d8f4      uint32_t r0_5 = (uint32_t)(uint8_t)var_1c << 8
0000d8f4          | (uint32_t)*(uint8_t*)((char*)var_20)[3]
0000d8f4          | (uint32_t)*(uint8_t*)((char*)var_1c)[1] << 0x10;  /* "RY02_3.00.33_250117" */
0000d8fa      uint32_t r1_6 =
0000d8fa          (uint32_t)(uint16_t)var_18 | (uint32_t)*(uint8_t*)((char*)var_18)[2] << 0x10;
0000d8fa          /* "RY02_3.00.33_250117" */
0000d902      uint32_t r3_5 =
0000d902          (uint32_t)(uint8_t)var_14 << 8 | (uint32_t)*(uint8_t*)((char*)var_18)[3];
0000d908      *(uint32_t*)arg1 =
0000d908          (uint32_t)(uint16_t)var_20 | (uint32_t)*(uint8_t*)((char*)var_20)[2] << 0x10;
0000d908          /* "RY02_3.00.33_250117" */
0000d90e      arg1[1] = r0_5;
0000d90e      arg1[2] = r1_6;
0000d90e      arg1[3] = r3_5 | (uint32_t)*(uint8_t*)((char*)var_14)[1] << 0x10;
0000d90e          /* "RY02_3.00.33_250117" */
0000d914      return 1;
0000d8ba  }


0000d916    int32_t sub_d916()

0000d916  {
0000d938      for (uint32_t i = 0; i < 0xa; i = (uint32_t)((uint8_t)i + 1))
0000d938      {
0000d91e          sub_c256(1, 0);
0000d924          int32_t r1_1;
0000d924          int32_t r2_1;
0000d924          int32_t r3_1;
0000d924          r1_1 = sub_c20c(5);
0000d924          
0000d930          if (sub_c2bc(0, r1_1, r2_1, r3_1) == 0x27)
0000d940              return 1;
0000d938      }
0000d938      
0000d93c      return 0;
0000d916  }


0000d942    int32_t* sub_d942(int32_t* arg1, int32_t arg2)

0000d942  {
0000d964      int32_t var_94;
0000d964      __builtin_memset(&var_94, 0, 0x78);
0000d968      int32_t r6 = 0;
0000d96c      uint32_t var_98 = 0;
0000d986      int32_t r5 = 0;
0000d988      int32_t r4 = 0;
0000d98a      uint32_t i = 0;
0000d98e      int32_t r0 = sub_d916();
0000d98e      
0000d994      if (r0)
0000d994      {
0000d99a          if (arg2 == 1)
0000d9a2              sub_d3b0();
0000d99a          else if (arg2 == 2)
0000d9a8              sub_d206();
0000d9a8          
0000d9ae          sub_c20c(0x64);
0000d994      }
0000d994      
0000d9b6      int32_t* result;
0000d9b6      
0000d9b6      if (!r0 || arg2 == 3)
0000d9b6      {
0000d9fa          int32_t* result_1;
0000d9fa          result = result_1;
0000d9fc          *(uint32_t*)arg1 = result;
0000d9fc          int32_t var_24;
0000d9fc          arg1[1] = var_24;
0000d9fc          int32_t var_20;
0000d9fc          arg1[2] = var_20;
0000d9b6      }
0000d9b6      else
0000d9b6      {
0000d9ea          int32_t var_90;
0000d9ea          int32_t var_8c;
0000d9ea          int32_t var_88;
0000d9ea          int32_t var_78;
0000d9ea          int32_t var_68;
0000d9ea          
0000d9ea          do
0000d9ea          {
0000d9ba              int32_t r1;
0000d9ba              int32_t r2_1;
0000d9ba              r1 = sub_c20c(0x28);
0000d9c0              sub_d8ba(&var_98, r1, r2_1);
0000d9c6              uint32_t r0_4 = var_98;
0000d9d8              (&var_88)[i] = var_94 - r0_4;
0000d9dc              (&var_68)[i] = var_8c - r0_4;
0000d9e4              i = (uint32_t)((uint8_t)i + 1);
0000d9e6              (&var_78)[i] = var_90 - r0_4;
0000d9ea          } while (i < 4);
0000d9ea          
0000da64          for (uint32_t i_1 = 0; i_1 < 3; i_1 = (uint32_t)((uint8_t)i_1 + 1))
0000da64          {
0000d9ee              uint32_t j = 0;
0000d9f2              int32_t r0_6 = 3 - i_1;
0000d9f4              int32_t var_28 = r0_6;
0000d9f4              
0000da5c              for (; r0_6 > j; j = (uint32_t)((uint8_t)j + 1))
0000da5c              {
0000da06                  int32_t r3_3 = (&var_88)[j];
0000da08                  void* r7_1 = &(&var_88)[j];
0000da0c                  int32_t r7_2 = *(uint32_t*)((char*)r7_1 + 4);
0000da0c                  
0000da10                  if (r3_3 >= r7_2)
0000da10                  {
0000da16                      (&var_88)[j] = r7_2;
0000da1c                      *(uint32_t*)((char*)r7_1 + 4) = r3_3;
0000da10                  }
0000da10                  
0000da20                  int32_t r3_5 = (&var_78)[j];
0000da22                  void* r7_4 = &(&var_78)[j];
0000da26                  int32_t r7_5 = *(uint32_t*)((char*)r7_4 + 4);
0000da26                  
0000da2a                  if (r3_5 >= r7_5)
0000da2a                  {
0000da30                      (&var_78)[j] = r7_5;
0000da36                      *(uint32_t*)((char*)r7_4 + 4) = r3_5;
0000da2a                  }
0000da2a                  
0000da3a                  int32_t r3_7 = (&var_68)[j];
0000da3c                  void* r7_7 = &(&var_68)[j];
0000da40                  int32_t r7_8 = *(uint32_t*)((char*)r7_7 + 4);
0000da40                  
0000da44                  if (r3_7 >= r7_8)
0000da44                  {
0000da4c                      (&var_68)[j] = r7_8;
0000da52                      *(uint32_t*)((char*)r7_7 + 4) = r3_7;
0000da44                  }
0000da44                  
0000da56                  r0_6 = var_28;
0000da5c              }
0000da64          }
0000da64          
0000da6a          if (arg2 == 1)
0000da6a          {
0000da70              sub_c256(0x2a, 0);
0000da78              sub_c256(0x2b, 0);
0000da7e              sub_c20c(0x64);
0000dab6              int32_t var_58;
0000dab6              int32_t var_48;
0000dab6              int32_t var_38;
0000dab6              
0000dab6              for (uint32_t i_2 = 0; i_2 < 4; )
0000dab6              {
0000da86                  int32_t r1_9;
0000da86                  int32_t r2_5;
0000da86                  r1_9 = sub_c20c(0x28);
0000da8c                  sub_d8ba(&var_98, r1_9, r2_5);
0000da92                  uint32_t r0_11 = var_98;
0000daa4                  (&var_58)[i_2] = var_94 - r0_11;
0000daa8                  (&var_38)[i_2] = var_8c - r0_11;
0000dab0                  i_2 = (uint32_t)((uint8_t)i_2 + 1);
0000dab2                  (&var_48)[i_2] = var_90 - r0_11;
0000dab6              }
0000dab6              
0000db26              for (uint32_t i_3 = 0; i_3 < 3; i_3 = (uint32_t)((uint8_t)i_3 + 1))
0000db26              {
0000daba                  uint32_t j_1 = 0;
0000dabe                  int32_t r0_13 = 3 - i_3;
0000dac0                  int32_t var_28_1 = r0_13;
0000dac0                  
0000db1e                  for (; r0_13 > j_1; j_1 = (uint32_t)((uint8_t)j_1 + 1))
0000db1e                  {
0000dac8                      int32_t r3_10 = (&var_58)[j_1];
0000daca                      void* r7_10 = &(&var_58)[j_1];
0000dace                      int32_t r7_11 = *(uint32_t*)((char*)r7_10 + 4);
0000dace                      
0000dad2                      if (r3_10 >= r7_11)
0000dad2                      {
0000dad8                          (&var_58)[j_1] = r7_11;
0000dade                          *(uint32_t*)((char*)r7_10 + 4) = r3_10;
0000dad2                      }
0000dad2                      
0000dae2                      int32_t r3_12 = (&var_48)[j_1];
0000dae4                      void* r7_13 = &(&var_48)[j_1];
0000dae8                      int32_t r7_14 = *(uint32_t*)((char*)r7_13 + 4);
0000dae8                      
0000daec                      if (r3_12 >= r7_14)
0000daec                      {
0000daf2                          (&var_48)[j_1] = r7_14;
0000daf8                          *(uint32_t*)((char*)r7_13 + 4) = r3_12;
0000daec                      }
0000daec                      
0000dafc                      int32_t r3_14 = (&var_38)[j_1];
0000dafe                      void* r7_16 = &(&var_38)[j_1];
0000db02                      int32_t r7_17 = *(uint32_t*)((char*)r7_16 + 4);
0000db02                      
0000db06                      if (r3_14 >= r7_17)
0000db06                      {
0000db0e                          (&var_38)[j_1] = r7_17;
0000db14                          *(uint32_t*)((char*)r7_16 + 4) = r3_14;
0000db06                      }
0000db06                      
0000db18                      r0_13 = var_28_1;
0000db1e                  }
0000db26              }
0000da6a          }
0000da6a          
0000db2c          int32_t var_84;
0000db2c          int32_t var_80;
0000db2c          int32_t var_74;
0000db2c          int32_t var_70;
0000db2c          int32_t var_64;
0000db2c          int32_t var_60;
0000db2c          
0000db2c          if (arg2 == 1)
0000db2c          {
0000db3a              int32_t r0_18 = var_84 + var_80;
0000db3e              int32_t var_54;
0000db3e              int32_t var_50;
0000db3e              int32_t r1_19 = var_54 + var_50;
0000db4c              r6 = (((r0_18 >> 0x1f) + r0_18) >> 1) - (((r1_19 >> 0x1f) + r1_19) >> 1);
0000db4c                  /* "0117" */
0000db54              int32_t r0_22 = var_74 + var_70;
0000db58              int32_t var_44;
0000db58              int32_t var_40;
0000db58              int32_t r1_24 = var_44 + var_40;
0000db66              r5 = (((r0_22 >> 0x1f) + r0_22) >> 1) - (((r1_24 >> 0x1f) + r1_24) >> 1);
0000db66                  /* "0117" */
0000db6e              int32_t r0_26 = var_64 + var_60;
0000db72              int32_t var_34;
0000db72              int32_t var_30;
0000db72              int32_t r1_29 = var_34 + var_30;
0000db80              r4 = (((r0_26 >> 0x1f) + r0_26) >> 1) - (((r1_29 >> 0x1f) + r1_29) >> 1);
0000db80                  /* "0117" */
0000db2c          }
0000db2c          else if (arg2 == 2)
0000db30          {
0000db88              int32_t r0_30 = var_84 + var_80;
0000db8e              r6 = ((r0_30 >> 0x1f) + r0_30) >> 1;  /* "0117" */
0000db94              int32_t r0_33 = var_74 + var_70;
0000db9a              r5 = ((r0_33 >> 0x1f) + r0_33) >> 1;  /* "0117" */
0000dba0              int32_t r0_36 = var_64 + var_60;
0000dba6              r4 = ((r0_36 >> 0x1f) + r0_36) >> 1;  /* "0117" */
0000db30          }
0000db30          
0000dbaa          if (r6 < 0)
0000dbac              r6 = 0;
0000dbac          
0000dbb0          if (r5 < 0)
0000dbb2              r5 = 0;
0000dbb2          
0000dbb6          if (r4 < 0)
0000dbb8              r4 = 0;
0000dbb8          
0000dbbc          *(uint32_t*)0x20d598 = r6;
0000dbbe          *(uint32_t*)0x20d59c = r5;
0000dbc0          *(uint32_t*)0x20d5a0 = r4;
0000dbc2          result = arg1;
0000dbc4          *(uint32_t*)result = r6;
0000dbc6          result[1] = r5;
0000dbc8          result[2] = r4;
0000d9b6      }
0000d9b6      
0000da00      return result;
0000d942  }


0000dbcc    int32_t sub_dbcc(int32_t* arg1, int32_t* arg2, int32_t* arg3)

0000dbcc  {
0000dbd2      int32_t r3 = *(uint32_t*)0x20d598;
0000dbd2      
0000dbdc      if (r3 < 0x1770 && *(uint32_t*)0x20d5a0 < 0x1770)
0000dbdc      {
0000dbde          *(uint32_t*)arg1 = r3;
0000dbe2          *(uint32_t*)arg2 = *(uint32_t*)0x20d5a0;
0000dbe6          *(uint32_t*)arg3 = *(uint32_t*)0x20d59c;
0000dbea          return 1;
0000dbdc      }
0000dbdc      
0000dbec      *(uint32_t*)arg1 = r3;
0000dbf0      *(uint32_t*)arg2 = *(uint32_t*)0x20d5a0;
0000dbf4      *(uint32_t*)arg3 = *(uint32_t*)0x20d59c;
0000dbf8      return 0;
0000dbcc  }

0000dbfa                                                                                00 00                                        ..

0000dbfc  int32_t data_dbfc = 0x20d598
0000dc00  int32_t data_dc00 = 0x1770

0000dc04    int32_t sub_dc04()

0000dc04  {
0000dc10      sub_e34e(0);
0000dc18      sub_c256(0x16, 0xf);  /* ".00.33_250117" */
0000dc20      sub_c256(0x17, 0xf5);  /* "00.33_250117" */
0000dc28      sub_c256(0x18, 0);  /* "0.33_250117" */
0000dc30      sub_c256(0x19, 5);  /* ".33_250117" */
0000dc38      sub_c256(0x1a, 0);  /* "33_250117" */
0000dc42      sub_c256(0x1b, 0x5e);  /* "3_250117" */
0000dc4a      sub_c256(0x1c, 6);  /* "_250117" */
0000dc52      sub_c256(0x1d, 6);  /* "250117" */
0000dc5a      sub_c256(0x1e, 0x40);  /* "50117" */
0000dc62      sub_c256(0x1f, 0x40);  /* "0117" */
0000dc6c      sub_c256(0x20, 0);  /* "117" */
0000dc74      sub_c256(0x21, 0);  /* "17" */
0000dc7e      sub_c256(0x23, 0xaf);
0000dc88      sub_c256(0x24, 0x55);
0000dc90      sub_c256(0x25, 0x55);
0000dc98      sub_c256(0x26, 6);
0000dca0      sub_c256(0x27, 0);
0000dca8      sub_c256(0x28, 0);
0000dcb0      sub_c256(0x29, 0);
0000dcb8      sub_c256(0x2a, 0x20);  /* "117" */
0000dcc0      sub_c256(0x2b, 0x10);  /* "RY02_3.00.33_250117" */
0000dcc8      sub_c256(0x2c, 0);
0000dcd0      sub_c256(0x2d, 0);
0000dcd8      sub_c256(0x2e, 0);
0000dce0      sub_c256(0x2f, 0);
0000dce8      sub_c256(0x36, 0x18);  /* "0.33_250117" */  /* "3.0" */
0000dcf0      sub_c256(0x4e, 0);
0000dcf8      sub_c256(0x6d, 0);
0000dd00      sub_c256(0xf0, 0x22);  /* "7" */
0000dd08      sub_c256(0xf1, 0x28);
0000dd10      sub_c256(0xf2, 4);
0000dd18      sub_c256(0xf3, 0x70);
0000dd20      sub_c256(0xf4, 0x32);  /* "02_V3.0" */
0000dd28      sub_c256(0xf5, 0x89);
0000dd30      sub_c256(0xf6, 0x2b);
0000dd38      sub_c256(0xf7, 0x85);
0000dd40      sub_c256(0xf8, 0x27);
0000dd48      sub_c256(0xf9, 0);
0000dd50      sub_c256(0xfa, 0x88);
0000dd58      sub_c256(0xfb, 0x40);
0000dd60      sub_c256(0xf6, 0x2b);
0000dd68      sub_c256(0x3d, 0x83);
0000dd70      sub_c256(0x3e, 0x20);  /* "117" */
0000dd78      sub_c256(0x3c, 0x1f);  /* "0117" */
0000dd80      sub_c256(0x37, 0);  /* ".0" */
0000dd88      sub_c256(0x3b, 0);
0000dd90      sub_c256(0x3b, 0x10);  /* "RY02_3.00.33_250117" */
0000dd98      sub_c256(0x4d, 1);
0000dd9e      sub_c20c(5);
0000dda6      sub_c256(0x4d, 0);
0000ddac      sub_c20c(5);
0000ddb0      sub_e4d0();
0000ddb8      *(uint8_t*)0x20bd61 = 1;
0000ddba      return 1;
0000dc04  }


0000ddbc    void sub_ddbc(char* arg1)

0000ddbc  {
0000ddbe      *(uint8_t*)arg1 = 0xf;
0000ddc2      arg1[6] = 0;
0000ddc4      arg1[7] = 0;
0000ddc8      arg1[8] = 5;
0000ddcc      *(uint16_t*)(arg1 + 4) = 0x40;
0000ddce      arg1[0xc] = 0;
0000ddd0      arg1[2] = 0;
0000ddd2      arg1[3] = 0;
0000dddc      uint32_t r1 = (uint32_t)*(uint8_t*)0x208471;
0000dddc      
0000ddde      if ((uint32_t)*(uint8_t*)0x20bd60 == 1)
0000dde0          r1 u>>= 1;
0000dde0      
0000dde2      arg1[0xd] = (char)r1;
0000ddbc  }


0000dde6    void sub_dde6(char* arg1)

0000dde6  {
0000dde8      *(uint8_t*)arg1 = 2;
0000ddea      arg1[0xc] = 2;
0000ddee      arg1[2] = 0;
0000dde6  }


0000ddf2    int32_t sub_ddf2()

0000ddf2  {
0000ddf8      sub_c256(0x18, 0);  /* "0.33_250117" */
0000de00      sub_c256(0x19, 5);  /* ".33_250117" */
0000de08      sub_c256(0x3d, 0x83);
0000de10      sub_c256(0x36, 0);  /* "3.0" */
0000de18      sub_c256(0x4d, 1);
0000de1e      sub_c20c(5);
0000de26      sub_c256(0x4d, 0);
0000de2c      sub_c20c(5);
0000de30      sub_e4d0();
0000de38      *(uint8_t*)0x20bd61 = 1;
0000de3a      return 1;
0000ddf2  }


0000de3c    uint32_t sub_de3c()

0000de3c  {
0000de44      if ((uint32_t)*(uint8_t*)0x20d5b8 << 0x1f)  /* "0117" */
0000de4a          sub_c256(0x28, (uint32_t)*(uint8_t*)0x20d5bc);
0000de4a      
0000de52      if ((uint32_t)*(uint8_t*)0x20d5b8 << 0x1e < 0)  /* "50117" */
0000de58          sub_c256(0x2e, (uint32_t)*(uint8_t*)0x20d5be);
0000de58      
0000de60      if ((uint32_t)*(uint8_t*)0x20d5b8 << 0x1d < 0)  /* "250117" */
0000de66          sub_c256(0x2f, (uint32_t)*(uint8_t*)0x20d5bf);
0000de66      
0000de6c      uint32_t result = (uint32_t)*(uint8_t*)0x20d5b8 << 0x1c;  /* "_250117" */
0000de6c      
0000de6e      if (result >= 0)
0000de80          return result;
0000de80      
0000de74      sub_c256(0x1e, (uint32_t)*(uint8_t*)0x20d5c0);  /* "50117" */
0000de7c      return sub_c256(0x1f, (uint32_t)*(uint8_t*)0x20d5c0);  /* "0117" */
0000de3c  }


0000de82    int32_t sub_de82()

0000de82  {
0000de86      sub_e34e(0);
0000de8e      sub_c256(0x18, 0x40);  /* "0.33_250117" */
0000de96      sub_c256(0x19, 1);  /* ".33_250117" */
0000de9e      sub_c256(0x3d, 0);
0000dea6      sub_c256(0x36, 8);  /* "3.0" */
0000deae      sub_c256(0x4d, 1);
0000deb4      sub_c20c(5);
0000debc      sub_c256(0x4d, 0);
0000dec6      return sub_c20c(5);
0000de82  }


0000dec8    int32_t sub_dec8()

0000dec8  {
0000ded0      sub_c256(0x18, 0);  /* "0.33_250117" */
0000ded8      sub_c256(0x19, 0x19);  /* ".33_250117" */
0000dee2      sub_c256(0x20, 0);  /* "117" */
0000deea      sub_c256(0x21, 0);  /* "17" */
0000def2      sub_c256(0x23, 0x8f);
0000defa      sub_c256(0x26, 6);
0000df02      sub_c256(0x27, 0);
0000df0a      sub_c256(0x28, 0);
0000df12      sub_c256(0x29, 0);
0000df1a      sub_c256(0x2c, 0);
0000df22      sub_c256(0x2d, 0);
0000df2a      sub_c256(0x2e, 0);
0000df32      sub_c256(0x2f, 0);
0000df3a      sub_c256(0x4d, 1);
0000df40      sub_c20c(5);
0000df48      sub_c256(0x4d, 0);
0000df4e      sub_c20c(5);
0000df54      *(uint16_t*)0x20d5bc = 0;
0000df56      sub_e4d0();
0000df5e      *(uint8_t*)0x20bd61 = 1;
0000df60      return 1;
0000dec8  }


0000df62    int32_t sub_df62(uint32_t arg1, int32_t arg2, int32_t arg3)

0000df62  {
0000df6e      sub_13f18(arg1, arg2, arg3, arg1);
0000df7a      sub_dc04();
0000df80      int32_t result = sub_c59c(1);
0000df84      *(uint8_t*)0x20d5a4 = 0;
0000df86      return result;
0000df62  }


0000df88    int32_t sub_df88()

0000df88  {
0000df88      int32_t r0;
0000df88      int32_t r1;
0000df88      int32_t r2;
0000df88      r0 = sub_c504();
0000df8c      int32_t r4;
0000df8c      char r5;
0000df8c      /* tailcall */
0000df8c      return sub_df92(r4, r5, r0, r1, r2);
0000df88  }


0000df8e    int32_t sub_df8e()

0000df8e  {
0000df8e      int32_t r0;
0000df8e      int32_t r1;
0000df8e      int32_t r2;
0000df8e      r0 = sub_dec8();
0000df8e      int32_t r4;
0000df8e      char r5;
0000df8e      /* tailcall */
0000df8e      return sub_df92(r4, r5, r0, r1, r2);
0000df8e  }


0000df92    int32_t sub_df92(char* arg1 @ r4, char arg2 @ r5, int32_t arg3, int32_t arg4, int32_t arg5)

0000df92  {
0000df92      *(uint8_t*)arg1 = arg2;
0000df92  }


0000df96    int32_t sub_df96()

0000df96  {
0000df98      int32_t r1;
0000df98      int32_t r2;
0000df98      r1 = sub_ddbc(0x20d5b8);
0000df9c      int32_t r4;
0000df9c      char r6;
0000df9c      /* tailcall */
0000df9c      return sub_dfa4(r4, r6, 0x20d5b8, r1, r2);
0000df96  }


0000df9e    int32_t sub_df9e()

0000df9e  {
0000dfa0      sub_dde6(0x20d5b8);
0000dfa0      int32_t entry_r2;
0000dfa0      int32_t r4;
0000dfa0      char r6;
0000dfa0      /* tailcall */
0000dfa0      return sub_dfa4(r4, r6, 0x20d5b8, 0, entry_r2);
0000df9e  }


0000dfa4    int32_t sub_dfa4(void* arg1 @ r4, char arg2 @ r6, int32_t arg3, int32_t arg4, int32_t arg5)

0000dfa4  {
0000dfa4      sub_de82();
0000dfa8      sub_de3c();
0000dfae      int32_t result = sub_c56a(1);
0000dfb2      *(uint8_t*)((char*)arg1 + 1) = arg2;
0000dfb4      return result;
0000dfa4  }


0000dfb6    int32_t sub_dfb6(void* arg1 @ r4, char arg2 @ r5, int32_t arg3, int32_t arg4, int32_t arg5)

0000dfb6  {
0000dfb8      sub_c56a(0);
0000dfbc      int32_t result = sub_ddf2();
0000dfc0      *(uint8_t*)((char*)arg1 + 1) = arg2;
0000dfc2      return result;
0000dfb6  }


0000dfc4    uint32_t sub_dfc4(int32_t arg1)

0000dfc4  {
0000dfcc      int32_t r4 = (int32_t)sub_e844();
0000dfcc      
0000dfda      if ((uint32_t)*(uint8_t*)0x2086c2 == 3)
0000dfda      {
0000dfec          int32_t var_1c = *(uint32_t*)0x2086a8;
0000dff0          int32_t r0_4;
0000dff0          int32_t r1_2;
0000dff0          r0_4 = j_sub_134d8(*(uint32_t*)0x2086b0);
0000dff8          int32_t r0_5;
0000dff8          int32_t r1_3;
0000dff8          r0_5 = sub_13530(r0_4, r1_2, 0x33333333, 0x3fd33333);
0000e002          uint32_t r0_7;
0000e002          int32_t r1_4;
0000e002          r0_7 = j_sub_134d8(var_1c);
0000e00a          int32_t r0_8;
0000e00a          int32_t r1_5;
0000e00a          r0_8 = sub_12f7c(r0_7, r1_4, r0_5, r1_3);
0000e00e          uint32_t r0_9 = sub_13490(r0_8, r1_5);
0000e00e          
0000e01e          if (r4 < *(uint32_t*)0x208478 && arg1 < r0_9)
0000e01e          {
0000e020          label_e020:
0000e020              uint32_t r0_10 = (uint32_t)*(uint8_t*)0x20d5a6;
0000e024              uint32_t r0_12;
0000e024              
0000e024              if (r0_10 < 5)
0000e024              {
0000e028                  r0_12 = (uint32_t)((uint8_t)r0_10 + 1);
0000e02a                  *(uint8_t*)0x20d5a6 = (char)r0_12;
0000e024              }
0000e024              
0000e02e              if (r0_10 >= 5 || r0_12 >= 5)
0000e054                  *(uint8_t*)0x20847d = 0;
0000e01e          }
0000e01e          else if (r4 > *(uint32_t*)0x208474 && arg1 > r0_9)
0000e040              goto label_e042;
0000dfda      }
0000dfda      else
0000dfda      {
0000dfe2          if (r4 < *(uint32_t*)0x208478)
0000dfe2              goto label_e020;
0000dfe2          
0000e05e          if (r4 > *(uint32_t*)0x208474)
0000e05e          {
0000e042          label_e042:
0000e042              uint32_t r0_13 = (uint32_t)*(uint8_t*)0x20d5a6;
0000e046              uint32_t r0_16;
0000e046              
0000e046              if (r0_13)
0000e046              {
0000e04c                  r0_16 = (r0_13 - 1) << 0x18 >> 0x18;  /* "0.33_250117" */
0000e04e                  *(uint8_t*)0x20d5a6 = (char)r0_16;
0000e046              }
0000e046              
0000e050              if (!r0_13 || !r0_16)
0000e054                  *(uint8_t*)0x20847d = 1;
0000e05e          }
0000dfda      }
0000dfda      
0000e062      uint32_t r0_19 = (uint32_t)*(uint8_t*)0x20847d;
0000e062      
0000e066      if ((uint32_t)*(uint8_t*)0x20847e != r0_19)
0000e066      {
0000e068          *(uint8_t*)0x20847e = (char)r0_19;
0000e068          
0000e06c          if (!r0_19)
0000e078              sub_dec8();
0000e06c          else if (r0_19 == 1)
0000e070          {
0000e07e              int32_t r1_11;
0000e07e              int32_t r2_2;
0000e07e              r1_11 = sub_17cec();
0000e084              int32_t r1_12;
0000e084              int32_t r2_3;
0000e084              r1_12 = sub_df62(0, r1_11, r2_2);
0000e08a              sub_df62(3, r1_12, r2_3);
0000e070          }
0000e066      }
0000e066      
0000e090      return (uint32_t)*(uint8_t*)0x20847d;
0000dfc4  }


0000e092    uint32_t sub_e092(char* arg1, int32_t arg2, int32_t arg3)

0000e092  {
0000e096      uint32_t r0 = (uint32_t)arg1[0xc];
0000e096      
0000e09e      if (!r0)
0000e09e      {
0000e0ba          r0 = 1;
0000e0bc          arg1[0xc] = 1;
0000e09e      }
0000e09e      else
0000e09e      {
0000e0a4          if (r0 == 1)
0000e0a4          {
0000e0c4              char r0_4;
0000e0c4              
0000e0c4              if (arg3 <= 0x445c0)
0000e0d2                  r0_4 = 0;
0000e0c4              else
0000e0cc                  r0_4 = sub_12b3e(arg3 - 0x445c0, 0x2710);
0000e0cc              
0000e0d4              arg1[7] = r0_4;
0000e0da              uint32_t r2 = (uint32_t)*(uint8_t*)0x208470;
0000e0da              
0000e0e4              if (arg2 <= arg3 + 0x80)
0000e10a                  *(uint16_t*)(arg1 + 4) = (uint16_t)arg1[0xd];
0000e0e4              else
0000e0e4              {
0000e0e6                  int32_t r0_7 = arg2 - arg3;
0000e0f0                  uint32_t r1_3 = ((r0_7 >> 0x1f >> 0x1a) + r0_7) << 0xa >> 0x10;
0000e0f0                      /* "RY02_3.00.33_250117" */  /* "33_250117" */  /* "0117" */
0000e0f2                  *(uint16_t*)(arg1 + 0xa) = (int16_t)r1_3;
0000e100                  uint32_t r1_4 =
0000e100                      (uint32_t)sub_12b2a(0x1388 * ((uint32_t)arg1[7] + r2), r1_3);
0000e102                  *(uint16_t*)(arg1 + 4) = (int16_t)r1_4;
0000e104                  uint32_t r0_14 = (uint32_t)arg1[0xd];
0000e104                  
0000e108                  if (r1_4 > r0_14)
0000e10a                      *(uint16_t*)(arg1 + 4) = (int16_t)r0_14;
0000e0e4              }
0000e0e4              
0000e10e              arg1[6] = (r2 >> 1);
0000e112              arg1[8] = 0x20;  /* "117" */
0000e116              *(uint8_t*)arg1 = 0xf;
0000e118              arg1[0xc] = 2;
0000e11a              return 0xf;
0000e0a4          }
0000e0a4          
0000e0a8          if (r0 == 2)
0000e0a8          {
0000e0ae              uint32_t r0_1;
0000e0ae              
0000e0ae              if (arg2 > 0x55730)
0000e0b0                  r0_1 = (uint32_t)arg1[6];
0000e0b0              
0000e0b4              char r0_2;
0000e0b4              
0000e0b4              if (arg2 <= 0x55730 || r0_1 > 0x78)
0000e0b4              {
0000e124                  uint32_t r0_16;
0000e124                  
0000e124                  if (arg2 < 0x249f0)
0000e126                      r0_16 = (uint32_t)arg1[6];
0000e126                  
0000e12a                  if (arg2 >= 0x249f0 || !r0_16)
0000e12a                  {
0000e134                      r0_2 = 3;
0000e136                      arg1[0xc] = 3;
0000e12a                  }
0000e12a                  else
0000e12a                  {
0000e12c                      r0_2 = (uint8_t)r0_16 - 1;
0000e12e                      arg1[6] = r0_2;
0000e130                      arg1[0xc] = 2;
0000e12a                  }
0000e0b4              }
0000e0b4              else
0000e0b4              {
0000e0b6                  r0_2 = (uint8_t)r0_1 + 1;
0000e12e                  arg1[6] = r0_2;
0000e130                  arg1[0xc] = 2;
0000e0b4              }
0000e0b4              
0000e138              *(uint8_t*)arg1 = 2;
0000e13a              return r0_2;
0000e0a8          }
0000e09e      }
0000e09e      
0000e0be      return r0;
0000e092  }


0000e13c    int32_t sub_e13c(int32_t arg1, int32_t arg2, int32_t arg3)

0000e13c  {
0000e144      *(uint8_t*)0x20d5b9 = 0;
0000e144      
0000e14e      if ((uint32_t)*(uint8_t*)0x20d5a5)
0000e14e      {
0000e152          *(uint8_t*)0x20d5b9 = 1;
0000e158          sub_c48e(0x20d5a8, arg2, arg3);
0000e166          int32_t r1_1;
0000e166          int32_t r2_1;
0000e166          r1_1 = sub_e092(0x20d5b8, *(uint32_t*)0x20d5b0, *(uint32_t*)0x20d5b4);
0000e166          
0000e16e          if ((uint32_t)*(uint8_t*)0x20d5c4 == 3)
0000e182              sub_df62(4, r1_1, r2_1);
0000e16e          else
0000e170              sub_de3c();
0000e14e      }
0000e14e      
0000e17e      return 0xff81b898(arg1, 0x20d5b8, 0xe);
0000e13c  }


0000e188    int32_t sub_e188()

0000e188  {
0000e19a      if (!sub_c2d2() || (uint32_t)*(uint8_t*)0x20d5a4)
0000e19c          return 1;
0000e19c      
0000e1e0      int32_t r2_1 = sub_17b50();
0000e1e8      *(uint8_t*)0x20847d = 1;
0000e1ec      *(uint8_t*)0x20847e = 2;
0000e1f0      sub_df62(0, 2, r2_1);
0000e1f4      return 0;
0000e188  }

0000e1a0  int32_t data_e1a0 = 0x20bd61
0000e1a4  int32_t data_e1a4 = 0x20bd60
0000e1a8  int32_t data_e1a8 = 0x208471
0000e1ac  int32_t data_e1ac = 0x20d5b8
0000e1b0  int32_t data_e1b0 = 0x2086c0
0000e1b4  int32_t data_e1b4 = 0x20847c
0000e1b8  int32_t data_e1b8 = 0x208478
0000e1bc  int32_t data_e1bc = 0x33333333
0000e1c0  int32_t data_e1c0 = 0x3fd33333
0000e1c4  int32_t data_e1c4 = 0x208474
0000e1c8  int32_t data_e1c8 = 0x55730
0000e1cc  int32_t data_e1cc = 0x445c0
0000e1d0  int32_t data_e1d0 = 0x2710
0000e1d4  int32_t data_e1d4 = 0x208470
0000e1d8  int32_t data_e1d8 = 0x1388
0000e1dc  int32_t data_e1dc = 0x249f0

0000e1f8    int32_t sub_e1f8()

0000e1f8  {
0000e1fe      *(uint8_t*)0x208472 = 9;
0000e202      sub_c6a8(0);
0000e208      sub_c59c(0);
0000e20e      int32_t r1;
0000e20e      int32_t r2;
0000e20e      r1 = sub_c56a(0);
0000e214      sub_df62(1, r1, r2);
0000e21c      *(uint8_t*)0x20d5a4 = 0;
0000e21e      *(uint8_t*)0x20d5a5 = 0;
0000e220      sub_17a70();
0000e19e      return 0x208500;
0000e1f8  }


0000e226    int32_t sub_e226()

0000e226  {
0000e22c      *(uint8_t*)0x20d5a4 = 0;
0000e22e      *(uint8_t*)0x20d5a5 = 0;
0000e230      sub_17a70();
0000e19e      return 0x208500;
0000e226  }


0000e236    uint32_t sub_e236()

0000e236  {
0000e23a      return (uint32_t)*(uint8_t*)0x20847d;
0000e236  }

0000e23c                                                                                      1f b5 3e 49                              ..>I
0000e240  6b 46 14 31 0a 78 1a 70 8a 78 9a 70 8a 88 9a 80 8a 79 9a 71 ca 79 da 71 0a 7a 1a 72 4a 89 5a 81  kF.1.x.p.x.p.....y.q.y.q.z.rJ.Z.
0000e260  09 7b 19 73 0e 22 19 46 0d f4 16 f3 1f bd                                                        .{.s.".F......

0000e26e    int32_t sub_e26e(uint32_t arg1)

0000e26e  {
0000e270      uint32_t r5 = arg1;
0000e276      int32_t var_1c = 0;
0000e278      int32_t* r0 = r5 + 4;
0000e27e      uint32_t var_30 = 0;
0000e280      int32_t var_2c = 0;
0000e282      int32_t var_28 = 0;
0000e284      uint32_t i = 0;
0000e286      int32_t var_24 = 0;
0000e294      *(uint8_t*)(r5 + 0x248) = *(uint8_t*)0x20d5bc;
0000e296      uint32_t r7 = r5;
0000e29e      uint32_t r1_1 = (uint32_t)*(uint8_t*)0x20d5a4;
0000e29e      
0000e2aa      if (!r1_1 || (uint32_t)*(uint8_t*)0x20d5a5)
0000e2ac          return 0;
0000e2ac      
0000e2b4      sub_c48e(&var_30, r1_1, 0x240);
0000e2c6      uint32_t r1_2 = (uint32_t)sub_c310(r7 + 0x144, 2, 1);
0000e2c8      *(uint8_t*)r5 = (char)r1_2;
0000e2c8      
0000e2e4      for (; i < r1_2; i = (uint32_t)((uint8_t)i + 1))
0000e2e4      {
0000e2cc          int32_t r0_8 = i << 3;
0000e2d2          r5 = *(uint32_t*)(r7 + 0x144 + r0_8);
0000e2dc          r0[i] = *(uint32_t*)(r0_8 + r7 + 0x144 + 4) << 1;
0000e2de          (r7 + 0xc4)[i] = r5;
0000e2e4      }
0000e2e4      
0000e2ec      if (!(uint32_t)*(uint8_t*)0x20847d)
0000e2f4          sub_e886(r5, *(uint32_t*)0x83e2cc);
0000e2f4      
0000e304      if (var_28 - 0x186a0 >= 0x493e1)
0000e304      {
0000e30a          if ((uint32_t)*(uint8_t*)0x20847d)
0000e30a              goto label_e31a;
0000e30a          
0000e32a          *(uint8_t*)0x20847c = 3;
0000e304      }
0000e304      else if (!var_1c)
0000e32a          *(uint8_t*)0x20847c = 3;
0000e312      else
0000e312      {
0000e31a      label_e31a:
0000e31a          uint32_t r0_19 = ((uint32_t)*(uint8_t*)0x20847c - 1) << 0x18 >> 0x18;
0000e31a              /* "0.33_250117" */
0000e31c          *(uint8_t*)0x20847c = (char)r0_19;
0000e31c          
0000e31e          if (!r0_19)
0000e31e          {
0000e320              *(uint8_t*)0x20847c = 3;
0000e324              sub_df62(5, 3, 0x493e1);
0000e31e          }
0000e312      }
0000e312      
0000e32c      return 1;
0000e26e  }

0000e330  int32_t data_e330 = 0x20847c
0000e334  int32_t data_e334 = 0x208472
0000e338  int32_t data_e338 = 0x20d5a4
0000e33c  int32_t data_e33c = 0x83e2cc
0000e340  int32_t data_e340 = -0x186a0
0000e344  int32_t data_e344 = 0x493e1

0000e348    void sub_e348(char arg1)

0000e348  {
0000e34a      *(uint8_t*)0x20847f = arg1;
0000e348  }


0000e34e    void sub_e34e(char arg1)

0000e34e  {
0000e350      *(uint8_t*)0x20d5c8 = arg1;
0000e34e  }


0000e354    int32_t sub_e354(int32_t arg1, int32_t arg2)

0000e354  {
0000e35e      int32_t r1;
0000e35e      int32_t r2;
0000e35e      int32_t r3;
0000e35e      r1 = sub_c256(0x35, 8);  /* "V3.0" */
0000e366      uint32_t r0_2;
0000e366      int32_t r1_1;
0000e366      int32_t r2_1;
0000e366      int32_t r3_1;
0000e366      r0_2 = sub_c2bc((uint32_t)((uint8_t)arg2 - 1), r1, r2, r3);
0000e36e      uint32_t r0_4;
0000e36e      int32_t r1_2;
0000e36e      int32_t r2_2;
0000e36e      int32_t r3_2;
0000e36e      r0_4 = sub_c2bc(arg2, r1_1, r2_1, r3_1);
0000e376      uint32_t r0_6 = sub_c2bc(arg1, r1_2, r2_2, r3_2);
0000e380      sub_c256(0x35, 0);  /* "V3.0" */
0000e38e      uint32_t r1_5 = r0_2 >> 4 | r0_4 << 4 | r0_6 << 0x1c >> 0x10;
0000e38e          /* "RY02_3.00.33_250117" */  /* "_250117" */
0000e38e      
0000e394      if (r1_5 <= 0x7fff)
0000e3a2          return (int32_t)(int16_t)r1_5;
0000e3a2      
0000e39e      return (int32_t)(uint16_t)r1_5;
0000e354  }


0000e3a4    int32_t sub_e3a4()

0000e3a4  {
0000e3aa      /* jump -> *(uint32_t*)0x200120 */
0000e3a4  }


0000e3ac    int32_t sub_e3ac()

0000e3ac  {
0000e3b2      /* jump -> *(uint32_t*)0x200120 */
0000e3ac  }


0000e3b4    int32_t sub_e3b4()

0000e3b4  {
0000e3b6      sub_e3ac();
0000e3be      return sub_e3a4();
0000e3b4  }


0000e3c0    uint32_t sub_e3c0()

0000e3c0  {
0000e3c8      int32_t entry_r1;
0000e3c8      int32_t entry_r2;
0000e3c8      int32_t entry_r3;
0000e3c8      return sub_c2bc(0, entry_r1, entry_r2, entry_r3);
0000e3c0  }


0000e3ca    int32_t sub_e3ca(int32_t arg1, int32_t arg2)

0000e3ca  {
0000e3ce      char r1 = (char)(arg2 << 1);
0000e3de      sub_c256((uint32_t)(r1 + 0x61), arg1 << 0x14 >> 0x1c);
0000e3de          /* "_3.00.33_250117" */  /* "_250117" */
0000e3ea      return sub_c256((uint32_t)(r1 + 0x60), (uint32_t)(uint8_t)arg1);
0000e3ca  }


0000e3ec    int32_t sub_e3ec(int32_t arg1)

0000e3ec  {
0000e3ee      char r1 = (uint8_t)arg1 + (char)(arg1 << 1);
0000e3fa      /* tailcall */
0000e3fa      return sub_e354((uint32_t)(r1 - 0x39), (uint32_t)(r1 - 0x3a));
0000e3ec  }


0000e3fc    uint32_t sub_e3fc(int32_t arg1)

0000e3fc  {
0000e3fc      int32_t r3;
0000e3fc      int32_t var_18_1 = r3;
0000e400      uint32_t r6 = 0;
0000e408      sub_c256(0x8f, 7);
0000e40e      uint32_t r5 = 0x3fc;
0000e414      *(uint8_t*)0x20d5cb = 0;
0000e414      
0000e45e      do
0000e45e      {
0000e418          uint32_t result = (r6 + r5) >> 1;
0000e41e          sub_e3ca((uint32_t)(uint16_t)result, arg1);
0000e424          sub_c20c(0x20);  /* "117" */
0000e42a          sub_e3ec(arg1);
0000e430          sub_c20c(0x21);  /* "17" */
0000e436          int32_t r0_4 = sub_e3ec(arg1);
0000e436          
0000e444          if (r0_4 + 0x690 <= 0xd20)
0000e462              return result;
0000e462          
0000e448          if (r0_4 <= 0x690)
0000e452              r5 = (uint32_t)((uint16_t)result - 1);
0000e448          else
0000e44c              r6 = (uint32_t)((uint16_t)result + 1);
0000e44c          
0000e45a          *(uint8_t*)0x20d5cb += 1;
0000e45e      } while (r6 < r5);
0000e45e      
0000e466      return 0;
0000e3fc  }


0000e468    int32_t sub_e468(int32_t arg1)

0000e468  {
0000e46a      char r1 = (uint8_t)arg1 + (char)(arg1 << 1);
0000e476      /* tailcall */
0000e476      return sub_e354((uint32_t)(r1 - 0x42), (uint32_t)(r1 - 0x43));
0000e468  }


0000e478    int32_t sub_e478(char arg1, int32_t arg2, int32_t arg3, int32_t arg4)

0000e478  {
0000e478      int32_t var_18 = arg4;
0000e47e      int32_t r0 = arg2 + arg4;
0000e488      int32_t r4 = ((r0 >> 0x1f >> 0x1b) + r0) >> 5;  /* "3_250117" */  /* "0117" */
0000e488      
0000e48a      if (r4 < 0)
0000e48c          r4 = 0;
0000e48c      
0000e496      sub_c256((uint32_t)(arg1 - 0x63), (uint32_t)(uint8_t)r4);
0000e4a4      sub_c256((uint32_t)(arg1 - 0x60), r4 << 0x10 >> 0x18);
0000e4a4          /* "RY02_3.00.33_250117" */  /* "0.33_250117" */
0000e4a8      int32_t r0_9 = arg3 + arg4;
0000e4b0      int32_t r4_1 = ((r0_9 >> 0x1f >> 0x1b) + r0_9) >> 5;  /* "3_250117" */  /* "0117" */
0000e4b0      
0000e4b2      if (r4_1 < 0)
0000e4b4          r4_1 = 0;
0000e4b4      
0000e4be      sub_c256((uint32_t)(arg1 - 0x5b), (uint32_t)(uint8_t)r4_1);
0000e4ce      return sub_c256((uint32_t)(arg1 - 0x58), r4_1 << 0x10 >> 0x18);
0000e4ce          /* "RY02_3.00.33_250117" */  /* "0.33_250117" */
0000e478  }


0000e4d0    int32_t sub_e4d0()

0000e4d0  {
0000e4d8      *(uint8_t*)0x20d5c8 = 0;
0000e4da      *(uint8_t*)0x20d5c9 = 0;
0000e4de      int32_t r0 = sub_c256(0x6a, 0);
0000e4ee      int32_t r6_1 = sub_c256(0x55, 0x30) & r0;  /* "RY02_V3.0" */
0000e4fa      int32_t r5_2 = sub_c256(0x57, 0x2c) & r6_1;
0000e506      int32_t r6_3 = sub_c256(0x59, 0xc) & r5_2;
0000e512      int32_t r5_4 = sub_c256(0x5b, 0) & r6_3;
0000e51e      int32_t r6_5 = sub_c256(0x5d, 0x25) & r5_4;
0000e52a      int32_t r5_6 = sub_c256(0x5e, 0x22) & r6_5;  /* "7" */
0000e536      int32_t r6_7 = sub_c256(0x5f, 0x11) & r5_6;  /* "Y02_3.00.33_250117" */
0000e542      int32_t r5_8 = sub_c256(0x66, 8) & r6_7;
0000e54e      int32_t r6_9 = sub_c256(0x67, 0) & r5_8;
0000e55a      int32_t r5_10 = sub_c256(0x68, 8) & r6_9;
0000e566      int32_t r6_11 = sub_c256(0x69, 0) & r5_10;
0000e572      int32_t r7_1 = sub_c256(0x6e, 0x11) & r6_11;  /* "Y02_3.00.33_250117" */
0000e57c      int32_t r0_14 = sub_c256(0x77, 0x70) & r7_1;
0000e588      int32_t r4_6;
0000e588      
0000e588      if (!(uint32_t)*(uint8_t*)0x20d5ca)
0000e588      {
0000e632          int32_t r4_8 = sub_c256(0x90, 2) & r0_14;
0000e63e          int32_t r5_19 = sub_c256(0x8f, 0) & r4_8;
0000e64a          r4_6 = sub_c256(0x95, 0) & r5_19;
0000e658          sub_e478(1, (int32_t)*(uint16_t*)0x208474, (int32_t)*(uint16_t*)0x208478, 0);
0000e666          sub_e478(0, 0x535, 0x3e8, 0);
0000e588      }
0000e588      else
0000e588      {
0000e594          int32_t r4_1 = sub_c256(0x90, 2) & r0_14;
0000e5a0          int32_t r5_13 = sub_c256(0x8f, 3) & r4_1;
0000e5ac          int32_t r4_3 = sub_c256(0x95, 0) & r5_13;
0000e5b6          sub_e3ca((uint32_t)*(uint16_t*)0x20d5cc, 1);
0000e5be          sub_e3ca((uint32_t)*(uint16_t*)0x20d5ce, 0);
0000e5ce          sub_e478(1, (int32_t)*(uint16_t*)0x208474, (int32_t)*(uint16_t*)0x208478, 0);
0000e5dc          sub_e478(0, 0x535, 0x3e8, 0);
0000e5ea          int32_t r5_15 = sub_c256(0x9c, 0) & r4_3;
0000e5f6          int32_t r4_5 = sub_c256(0x85, 0xf) & r5_15;
0000e602          int32_t r6_13 = sub_c256(0xa3, 0xff) & r4_5;
0000e60e          int32_t r5_17 = sub_c256(0xa4, 0xf) & r6_13;
0000e61a          r4_6 = sub_c256(0x70, 0x11) & r5_17;  /* "Y02_3.00.33_250117" */
0000e588      }
0000e588      
0000e626      return sub_c256(0x6a, 3) & r4_6;
0000e4d0  }


0000e66c    void sub_e66c(int32_t arg1)

0000e66c  {
0000e686      if ((uint32_t)*(uint8_t*)0x20d5ca == 1 && (uint32_t)*(uint8_t*)0x20d5c8 == 1
0000e686          && (int32_t)*(uint16_t*)0x20d5d0 - 0xc8 > arg1)
0000e686      {
0000e688          *(uint16_t*)0x20d5d0 = (int16_t)arg1;
0000e68c          *(uint16_t*)0x2086bc = (int16_t)arg1;
0000e686      }
0000e66c  }


0000e690    int32_t sub_e690()

0000e690  {
0000e69c      *(uint16_t*)0x20d5d4 = sub_e3ec(1);
0000e6a6      *(uint16_t*)0x20d5d8 = sub_e468(1);
0000e6ae      *(uint16_t*)0x20d5d6 = sub_e3ec(0);
0000e6b2      int32_t r0_3 = sub_e468(0);
0000e6b6      *(uint16_t*)0x20d5da = (int16_t)r0_3;
0000e6ba      int32_t r2 = (int32_t)*(uint16_t*)0x20d5d4;
0000e6ba      
0000e6ca      if (!r2 && !(uint32_t)*(uint16_t*)0x20d5d8)
0000e6cc          *(uint8_t*)0x20d5c8 = 0;
0000e6cc      
0000e6d8      if ((uint32_t)*(uint8_t*)0x20bd63)
0000e6d8      {
0000e6dc          *(uint32_t*)0x20d5dc = 0x7fff;
0000e6de          *(uint8_t*)0x20bd63 = 0;
0000e6d8      }
0000e6d8      
0000e6e4      if ((uint32_t)*(uint8_t*)0x20d5c9 == 1)
0000e6e4      {
0000e6e8          int32_t r0_7 = (int32_t)*(uint16_t*)0x20d5d8;
0000e6e8          
0000e6ec          if (r2 != r0_7)
0000e6ec          {
0000e6f2              int32_t r2_1;
0000e6f2              
0000e6f2              if (!(uint32_t)*(uint8_t*)0x20d5ca)
0000e750                  r2_1 = r2 - r0_7;
0000e6f2              else
0000e6fc                  r2_1 = r2 - (int32_t)*(uint16_t*)0x20d5d0;
0000e6fc              
0000e6fe              *(uint32_t*)0x20d5dc = r2_1;
0000e708              *(uint32_t*)0x20d5e0 = (int32_t)*(uint16_t*)0x20d5d6 - r0_3;
0000e70c              *(uint8_t*)0x20d5c8 = 1;
0000e70e              sub_e66c(r0_7);
0000e6ec          }
0000e6e4      }
0000e6e4      
0000e716      int32_t r0_8 = (int32_t)*(uint16_t*)0x20d5d4;
0000e716      
0000e758      if (r0_8 == (int32_t)*(uint16_t*)0x20d5d8 && r0_8
0000e758          && (uint32_t)*(uint8_t*)0x20d5ca == 1 && !(uint32_t)*(uint8_t*)0x20d5c9)
0000e758      {
0000e75e          sub_c256(0x9c, 7);
0000e766          sub_c256(0x70, 0);
0000e76c          *(uint8_t*)0x20d5c9 = 1;
0000e758      }
0000e758      
0000e770      return 0;
0000e690  }

0000e72a                                00 00                                                                        ..

0000e72c  int32_t data_e72c = 0x20847f
0000e730  int32_t data_e730 = 0x20d5c8
0000e734  int32_t data_e734 = 0x7fff
0000e738  int32_t data_e738 = 0x200120
0000e73c  int32_t data_e73c = 0x208478
0000e740  int32_t data_e740 = 0x208474
0000e744  int32_t data_e744 = 0x535
0000e748  int32_t data_e748 = 0x2086a0
0000e74c  int32_t data_e74c = 0x20bd63

0000e772    int32_t sub_e772()

0000e772  {
0000e77c      *(uint16_t*)0x20d5d4 = sub_e3ec(1);
0000e786      *(uint16_t*)0x20d5d8 = sub_e468(1);
0000e78e      *(uint16_t*)0x20d5d6 = sub_e3ec(0);
0000e792      int32_t r0_3 = sub_e468(0);
0000e796      *(uint16_t*)0x20d5da = (int16_t)r0_3;
0000e79c      int32_t r0_4 = (int32_t)*(uint16_t*)0x20d5d6;
0000e7a2      int32_t r2 = (int32_t)*(uint16_t*)0x20d5d2;
0000e7a6      int32_t r1 = r0_4 - r2;
0000e7a6      
0000e7a8      if (r0_4 - r2 < 0)
0000e7aa          r1 = 0;
0000e7aa      
0000e7b0      int32_t r3 = (int32_t)*(uint16_t*)0x20d5d4;
0000e7b0      
0000e7c0      if (!r3 && !(uint32_t)*(uint16_t*)0x20d5d8)
0000e7c2          *(uint8_t*)0x20d5c8 = 0;
0000e7c2      
0000e7ce      if ((uint32_t)*(uint8_t*)0x20bd63)
0000e7ce      {
0000e7d2          *(uint32_t*)0x20d5dc = 0x7fff;
0000e7d4          *(uint8_t*)0x20bd63 = 0;
0000e7ce      }
0000e7ce      
0000e7da      if ((uint32_t)*(uint8_t*)0x20d5c9 == 1)
0000e7da      {
0000e7de          int32_t r0_8 = (int32_t)*(uint16_t*)0x20d5d8;
0000e7de          
0000e7e2          if (r3 != r0_8)
0000e7e2          {
0000e7e8              int32_t r1_1;
0000e7e8              
0000e7e8              if (!(uint32_t)*(uint8_t*)0x20d5ca)
0000e822                  r1_1 = r3 - r0_8;
0000e7e8              else
0000e7f4                  r1_1 = r3 - (int32_t)*(uint16_t*)0x20d5d0 - r1;
0000e7f4              
0000e7f6              *(uint32_t*)0x20d5dc = r1_1;
0000e7fe              *(uint32_t*)0x20d5e0 = r0_4 - r0_3;
0000e802              *(uint8_t*)0x20d5c8 = 1;
0000e804              sub_e66c(r0_8);
0000e7e2          }
0000e7da      }
0000e7da      
0000e80c      int32_t r0_9 = (int32_t)*(uint16_t*)0x20d5d4;
0000e80c      
0000e82a      if (r0_9 == (int32_t)*(uint16_t*)0x20d5d8 && r0_9
0000e82a          && (uint32_t)*(uint8_t*)0x20d5ca == 1 && !(uint32_t)*(uint8_t*)0x20d5c9)
0000e82a      {
0000e830          sub_c256(0x9c, 7);
0000e838          sub_c256(0x70, 0);
0000e83e          *(uint8_t*)0x20d5c9 = 1;
0000e82a      }
0000e82a      
0000e842      return 0;
0000e772  }


0000e844    int32_t sub_e844()

0000e844  {
0000e870      if ((uint32_t)*(uint8_t*)0x20d5c8 == 1 && (
0000e870              (int32_t)*(uint16_t*)0x20d5d0 + 0x4000 >= 0xa1a9
0000e870              || (uint32_t)*(uint8_t*)0x20bd62 != 0x27))
0000e872          *(uint32_t*)0x20d5dc = 0x7fff;
0000e872      
0000e87e      if (!((uint32_t)*(uint8_t*)0x20d5ca & (0 - (uint32_t)*(uint8_t*)0x20847f)))
0000e880          *(uint32_t*)0x20d5dc = 0x7fff;
0000e880      
0000e884      return *(uint32_t*)0x20d5dc;
0000e844  }


0000e886    void sub_e886(uint32_t arg1, int32_t arg2)

0000e886  {
0000e892      if ((uint32_t)*(uint8_t*)0x20d5c8 != 1 || arg1 >= arg2)
0000e892          return;
0000e892      
0000e898      arg1 = *(uint32_t*)0x208478;
0000e8a0      int32_t r1 = *(uint32_t*)0x20d5dc;
0000e8a0      
0000e8ac      if (r1 > ((arg1 >> 0x1f >> 0x1e) + arg1) >> 2 && r1 < arg1)  /* "50117" */  /* "0117"
0000e8ac              */
0000e8b8          *(uint16_t*)0x20d5d0 = *(uint16_t*)0x20d5d8;
0000e886  }


0000e8bc    int32_t sub_e8bc()

0000e8bc  {
0000e8c6      int32_t r1 = (int32_t)*(uint16_t*)0x2086b8;
0000e8c8      *(uint16_t*)0x20d5cc = (int16_t)r1;
0000e8cc      *(uint16_t*)0x20d5ce = *(uint16_t*)0x2086ba;
0000e8d2      int32_t r2_1 = (int32_t)*(uint16_t*)0x2086bc;
0000e8d4      *(uint16_t*)0x20d5d0 = (int16_t)r2_1;
0000e8dc      *(uint16_t*)0x20d5d2 = *(uint16_t*)0x2086be;
0000e8dc      
0000e8ea      if ((r1 || r2_1) && r1 != 0xffff)
0000e8ea      {
0000e8fe          *(uint8_t*)0x20d5ca = 1;
0000e900          *(uint8_t*)0x20847f = 1;
0000e902          return 1;
0000e8ea      }
0000e8ea      
0000e8ee      *(uint16_t*)0x20d5cc = 0;
0000e8f0      *(uint16_t*)0x20d5d0 = 0;
0000e8f2      *(uint16_t*)0x20d5ce = 0;
0000e8f4      *(uint16_t*)0x20d5d2 = 0;
0000e8f6      *(uint8_t*)0x20847f = 0;
0000e8f8      *(uint8_t*)0x20d5ca = 0;
0000e8fa      return 0;
0000e8bc  }


0000e904    int32_t sub_e904()

0000e904  {
0000e908      int32_t r4 = 0;
0000e908      
0000e910      if ((uint32_t)*(uint8_t*)0x20bd62 == 0x27)
0000e910      {
0000e944          *(uint8_t*)0x20bd62 = sub_e3c0();
0000e946          sub_e8bc();
0000e94a          sub_e4d0();
0000e910      }
0000e910      else
0000e910      {
0000e912          sub_e3b4();
0000e916          sub_e8bc();
0000e91a          sub_c528();
0000e91a          
0000e91e          while (true)
0000e91e          {
0000e91e              uint32_t r0_1 = sub_e3c0();
0000e922              *(uint8_t*)0x20bd62 = (char)r0_1;
0000e922              
0000e926              if (r0_1 == 0x27)
0000e926              {
0000e934                  sub_e4d0();
0000e938                  r0_1 = (uint32_t)*(uint8_t*)0x20bd62;
0000e938                  
0000e93c                  if (r0_1 == 0x27)
0000e93c                      break;
0000e926              }
0000e926              else
0000e926              {
0000e928                  r4 += 1;
0000e928                  
0000e92c                  if (r4 < 5)
0000e92c                      continue;
0000e926              }
0000e926              
0000e92e              sub_e3ac(r0_1);
0000e932              break;
0000e91e          }
0000e910      }
0000e910      
0000e950      return 0;
0000e904  }


0000e952    int32_t sub_e952()

0000e952  {
0000e95a      *(uint16_t*)0x2086b8 = *(uint16_t*)0x20d5cc;
0000e95e      *(uint16_t*)0x2086ba = *(uint16_t*)0x20d5ce;
0000e966      *(uint16_t*)0x2086bc = *(uint16_t*)0x20d5d0;
0000e96a      *(uint16_t*)0x2086be = *(uint16_t*)0x20d5d2;
0000e96c      return 0x2086a0;
0000e952  }


0000e96e    int32_t sub_e96e()

0000e96e  {
0000e970      int32_t r4 = 0;
0000e976      *(uint8_t*)0x20bd62 = 0;
0000e978      sub_e3b4();
0000e97c      sub_c528();
0000e97c      
0000e980      while (true)
0000e980      {
0000e980          uint32_t r0_2 = sub_e3c0();
0000e984          *(uint8_t*)0x20bd62 = (char)r0_2;
0000e984          
0000e988          if (r0_2 == 0x27)
0000e988          {
0000e99c              sub_c256(0x18, 0x40);  /* "0.33_250117" */
0000e9a4              sub_c256(0x19, 1);  /* ".33_250117" */
0000e9a8              sub_e4d0();
0000e9ac              r0_2 = (uint32_t)*(uint8_t*)0x20bd62;
0000e9ac              
0000e9b0              if (r0_2 == 0x27)
0000e9b0                  break;
0000e988          }
0000e988          else
0000e988          {
0000e98a              r4 += 1;
0000e98a              
0000e98e              if (r4 < 5)
0000e98e                  continue;
0000e988          }
0000e988          
0000e990          sub_e3ac(r0_2);
0000e990          break;
0000e980      }
0000e980      
0000e996      return 0;
0000e96e  }


0000e9b4    int32_t sub_e9b4()

0000e9b4  {
0000e9b4      int32_t r3;
0000e9b4      int32_t var_18_1 = r3;
0000e9bc      int32_t var_18 = 0;
0000e9be      *(uint8_t*)0x20d5ca = 0;
0000e9c0      sub_e96e();
0000e9c6      sub_c20c(0x64);
0000e9cc      uint32_t r0 = sub_e3fc(1);
0000e9d4      uint32_t r0_1 = sub_e3fc(0);
0000e9dc      int32_t r0_2 = sub_e3ec(1);
0000e9e2      (uint16_t)var_18 = (int16_t)r0_2;
0000e9e8      int32_t r0_3 = sub_e3ec(0);
0000e9ee      *(uint16_t*)((char*)var_18)[2] = (int16_t)r0_3;
0000e9f6      *(uint16_t*)0x20d5cc = (int16_t)r0;
0000e9f8      *(uint16_t*)0x20d5ce = (int16_t)r0_1;
0000e9fc      *(uint16_t*)0x20d5d0 = (int16_t)r0_2;
0000e9fe      *(uint16_t*)0x20d5d2 = (int16_t)r0_3;
0000e9fe      
0000ea12      if (r0 != 0x1fe || r0_1 != 0x1fe || r0_2 || r0_3)
0000ea14          sub_e952();
0000ea14      
0000ea1c      return sub_e904();
0000e9b4  }


0000ea1e    uint32_t sub_ea1e()

0000ea1e  {
0000ea20      uint32_t result = (uint32_t)*(uint8_t*)0x20bd62;
0000ea20      
0000ea24      if (result == 0x27)
0000ea24      {
0000ea2a          result = (uint32_t)*(uint8_t*)0x20d5ca;
0000ea2a          
0000ea32          if (result == 1 || !result)
0000ea34              /* tailcall */
0000ea34              return sub_e9b4();
0000ea24      }
0000ea24      
0000ea36      return result;
0000ea1e  }


0000ea38    int32_t sub_ea38()

0000ea38  {
0000ea38      int32_t r3;
0000ea38      int32_t var_10 = r3;
0000ea38      int32_t r2;
0000ea38      int32_t var_14_1 = r2;
0000ea38      int32_t r1;
0000ea38      int32_t var_18_1 = r1;
0000ea3c      int32_t var_18 = 0;
0000ea3e      int32_t var_14 = 0;
0000ea44      int32_t r0 = sub_e3ec(1);
0000ea4a      (uint16_t)var_18 = (int16_t)r0;
0000ea50      int32_t r0_1 = sub_e468(1);
0000ea56      (uint16_t)var_14 = (int16_t)r0_1;
0000ea56      
0000ea60      if ((uint32_t)*(uint8_t*)0x20d5ca == 1)
0000ea70          return r0 - (int32_t)*(uint16_t*)0x20d5d0;
0000ea70      
0000ea64      return r0 - r0_1;
0000ea38  }


0000ea72    uint32_t sub_ea72()

0000ea72  {
0000ea76      int32_t r2 = (int32_t)*(uint16_t*)0x2086b8;
0000ea7e      int32_t r1 = (int32_t)*(uint16_t*)0x2086ba;
0000ea7e      
0000ea8c      if (r2 == 0x1fe && r1 == 0x1fe && !(uint32_t)*(uint16_t*)0x2086bc)
0000ea8c      {
0000ea8e          uint32_t result = (uint32_t)*(uint16_t*)0x2086be;
0000ea8e          
0000ea92          if (!result)
0000ea9e              return result;
0000ea8c      }
0000ea8c      
0000ea9a      if (!r2 && !r1)
0000eaa2          return 0;
0000eaa2      
0000ea9c      return 1;
0000ea72  }

0000eaa4  int32_t data_eaa4 = 0x20d5d4
0000eaa8  int32_t data_eaa8 = 0x20bd63
0000eaac  int32_t data_eaac = 0x7fff
0000eab0  int32_t data_eab0 = 0xa1a9
0000eab4  int32_t data_eab4 = 0x20bd62
0000eab8  int32_t data_eab8 = 0x20847f
0000eabc  int32_t data_eabc = 0x208478
0000eac0  int32_t data_eac0 = 0x2086a0
0000eac4  int32_t data_eac4 = 0xffff

0000eac8    int32_t sub_eac8()

0000eac8  {
0000ead4      sub_e34e(0);
0000eadc      sub_c256(0x16, 0xf);  /* ".00.33_250117" */
0000eae4      sub_c256(0x17, 0xf5);  /* "00.33_250117" */
0000eaec      sub_c256(0x18, 0);  /* "0.33_250117" */
0000eaf4      sub_c256(0x19, 5);  /* ".33_250117" */
0000eafc      sub_c256(0x1a, 0);  /* "33_250117" */
0000eb06      sub_c256(0x1b, 0x5e);  /* "3_250117" */
0000eb0e      sub_c256(0x1c, 6);  /* "_250117" */
0000eb16      sub_c256(0x1d, 6);  /* "250117" */
0000eb1e      sub_c256(0x1e, 0x40);  /* "50117" */
0000eb26      sub_c256(0x1f, 0x40);  /* "0117" */
0000eb30      sub_c256(0x20, 0);  /* "117" */
0000eb38      sub_c256(0x21, 0);  /* "17" */
0000eb40      sub_c256(0x23, 0x7f);
0000eb4a      sub_c256(0x24, 0x55);
0000eb52      sub_c256(0x25, 0x55);
0000eb5a      sub_c256(0x26, 0);
0000eb62      sub_c256(0x27, 6);
0000eb6a      sub_c256(0x28, 0);
0000eb72      sub_c256(0x29, 0);
0000eb7a      sub_c256(0x2a, 2);
0000eb82      sub_c256(0x2b, 0x42);
0000eb8a      sub_c256(0x2c, 0);
0000eb92      sub_c256(0x2d, 0);
0000eb9a      sub_c256(0x2e, 0);
0000eba2      sub_c256(0x2f, 0);
0000ebaa      sub_c256(0x36, 0x18);  /* "0.33_250117" */  /* "3.0" */
0000ebb2      sub_c256(0x4e, 0);
0000ebba      sub_c256(0x6d, 0);
0000ebc2      sub_c256(0xf0, 0x22);  /* "7" */
0000ebca      sub_c256(0xf1, 0x28);
0000ebd2      sub_c256(0xf2, 4);
0000ebda      sub_c256(0xf3, 0x70);
0000ebe2      sub_c256(0xf4, 0x32);  /* "02_V3.0" */
0000ebea      sub_c256(0xf5, 0x89);
0000ebf2      sub_c256(0xf6, 0x2b);
0000ebfa      sub_c256(0xf7, 0x85);
0000ec02      sub_c256(0xf8, 0x27);
0000ec0a      sub_c256(0xf9, 0);
0000ec12      sub_c256(0xfa, 0x88);
0000ec1a      sub_c256(0xfb, 0x40);
0000ec22      sub_c256(0xf6, 0x2b);
0000ec2a      sub_c256(0x3d, 0x80);
0000ec32      sub_c256(0x3e, 0x20);  /* "117" */
0000ec3a      sub_c256(0x3c, 0x1f);  /* "0117" */
0000ec42      sub_c256(0x37, 0);  /* ".0" */
0000ec4a      sub_c256(0x3b, 0);
0000ec52      sub_c256(0x3b, 0x10);  /* "RY02_3.00.33_250117" */
0000ec5a      sub_c256(0x4d, 1);
0000ec60      sub_c20c(5);
0000ec68      sub_c256(0x4d, 0);
0000ec6e      sub_c20c(5);
0000ec72      sub_e4d0();
0000ec7a      *(uint8_t*)0x20bd61 = 1;
0000ec7c      return 1;
0000eac8  }


0000ec7e    void sub_ec7e(char* arg1)

0000ec7e  {
0000ec80      *(uint8_t*)arg1 = 0xf;
0000ec84      arg1[5] = 0;
0000ec86      arg1[6] = 0;
0000ec88      arg1[4] = 0;
0000ec8a      arg1[7] = 0;
0000ec8e      arg1[0xe] = 5;
0000ec90      *(uint16_t*)(arg1 + 8) = 0;
0000ec94      *(uint16_t*)(arg1 + 0xa) = 0x40;
0000ec96      *(uint16_t*)(arg1 + 0xc) = 0x40;
0000ec98      arg1[0x1c] = 0;  /* "_250117" */
0000ec9a      arg1[2] = 0;
0000ec9c      arg1[3] = 0;
0000ec9e      *(uint32_t*)(arg1 + 0x10) = 0;  /* "RY02_3.00.33_250117" */
0000eca0      *(uint32_t*)(arg1 + 0x14) = 0;  /* "_3.00.33_250117" */
0000eca2      *(uint32_t*)(arg1 + 0x18) = 0;  /* "0.33_250117" */
0000ecae      uint32_t r1 = (uint32_t)*(uint8_t*)0x83e2ca;
0000ecb0      uint8_t r1_1;
0000ecb0      
0000ecb0      if ((uint32_t)*(uint8_t*)0x20bd60 == 1)
0000ecb0      {
0000ecc0          arg1[0x1e] = (char)((r1 * 3) >> 2);  /* "50117" */
0000ecc8          r1_1 = (char)(((uint32_t)*(uint8_t*)0x83e2cb * 3) >> 2);
0000ecb0      }
0000ecb0      else
0000ecb0      {
0000ecb2          arg1[0x1e] = (char)r1;  /* "50117" */
0000ecb4          r1_1 = *(uint8_t*)0x83e2cb;
0000ecb0      }
0000ecb0      
0000ecb6      arg1[0x1f] = r1_1;  /* "0117" */
0000ec7e  }


0000eccc    void sub_eccc(char* arg1)

0000eccc  {
0000ecce      *(uint8_t*)arg1 = 2;
0000ecd0      arg1[0x1c] = 2;  /* "_250117" */
0000ecd4      arg1[2] = 0;
0000eccc  }


0000ecd8    uint32_t sub_ecd8(int32_t arg1)

0000ecd8  {
0000ece0      int32_t r4 = (int32_t)sub_e844();
0000ecec      uint32_t r0_5;
0000ecec      int32_t r0_14;
0000ecec      
0000ecec      if ((uint32_t)*(uint8_t*)0x2086c2 == 3)
0000ecec      {
0000ed10          int32_t var_1c = *(uint32_t*)0x2086a8;
0000ed14          int32_t r0_7;
0000ed14          int32_t r1_2;
0000ed14          r0_7 = j_sub_134d8(*(uint32_t*)0x2086b0);
0000ed1c          int32_t r0_8;
0000ed1c          int32_t r1_3;
0000ed1c          r0_8 = sub_13530(r0_7, r1_2, 0x33333333, 0x3fd33333);
0000ed26          uint32_t r0_10;
0000ed26          int32_t r1_4;
0000ed26          r0_10 = j_sub_134d8(var_1c);
0000ed2e          int32_t r0_11;
0000ed2e          int32_t r1_5;
0000ed2e          r0_11 = sub_12f7c(r0_10, r1_4, r0_8, r1_3);
0000ed32          r0_5 = sub_13490(r0_11, r1_5);
0000ed32          
0000ed42          if (r4 < *(uint32_t*)0x208478 && arg1 < r0_5)
0000ed42          {
0000ecf6          label_ecf6:
0000ecf6              uint32_t r0_3 = (uint32_t)*(uint8_t*)0x20d5e6;
0000ecf6              
0000ecfa              if (r0_3 < 5)
0000ecfa              {
0000ecfe                  r0_5 = (uint32_t)((uint8_t)r0_3 + 1);
0000ed00                  *(uint8_t*)0x20d5e6 = (char)r0_5;
0000ecfa              }
0000ecfa              
0000ed04              if (r0_3 >= 5 || r0_5 >= 5)
0000ed04              {
0000ed06                  r0_14 = 0;
0000ed60                  *(uint8_t*)0x208481 = (char)r0_14;
0000ed62                  return r0_14;
0000ed04              }
0000ed42          }
0000ed42          else if (r4 > *(uint32_t*)0x208474 && arg1 > r0_5)
0000ed50              goto label_ed6c;
0000ecec      }
0000ecec      else
0000ecec      {
0000ecf4          if (r4 < *(uint32_t*)0x208478)
0000ecf4              goto label_ecf6;
0000ecf4          
0000ed66          r0_14 = *(uint32_t*)0x208474;
0000ed66          
0000ed6a          if (r4 <= r0_14)
0000ed62              return r0_14;
0000ed62          
0000ed6c      label_ed6c:
0000ed6c          uint32_t r0_15 = (uint32_t)*(uint8_t*)0x20d5e6;
0000ed6c          
0000ed70          if (r0_15)
0000ed70          {
0000ed58              r0_5 = (r0_15 - 1) << 0x18 >> 0x18;  /* "0.33_250117" */
0000ed5a              *(uint8_t*)0x20d5e6 = (char)r0_5;
0000ed70          }
0000ed70          
0000ed5c          if (!r0_15 || !r0_5)
0000ed5c          {
0000ed5e              r0_14 = 1;
0000ed60              *(uint8_t*)0x208481 = (char)r0_14;
0000ed62              return r0_14;
0000ed5c          }
0000ecec      }
0000ed52      return r0_5;
0000ecd8  }


0000ed74    int32_t sub_ed74()

0000ed74  {
0000ed74      int32_t r3;
0000ed74      int32_t var_18 = r3;
0000ed84      sub_e34e(0);
0000ed8c      sub_c256(0x18, 0);  /* "0.33_250117" */
0000ed94      sub_c256(0x19, 0x19);  /* ".33_250117" */
0000ed9c      sub_c256(0x1c, 6);  /* "_250117" */
0000eda4      sub_c256(0x1d, 6);  /* "250117" */
0000edac      sub_c256(0x1e, 0x40);  /* "50117" */
0000edb4      sub_c256(0x1f, 0x40);  /* "0117" */
0000edbe      sub_c256(0x20, 0);  /* "117" */
0000edc6      sub_c256(0x21, 0);  /* "17" */
0000edce      sub_c256(0x23, 0x4f);
0000edd6      sub_c256(0x26, 0);
0000edde      sub_c256(0x27, 6);
0000ede6      sub_c256(0x28, 0);
0000edee      sub_c256(0x29, 0);
0000edf6      sub_c256(0x2c, 0);
0000edfe      sub_c256(0x2d, 0);
0000ee06      sub_c256(0x2e, 0);
0000ee0e      sub_c256(0x2f, 0);
0000ee16      sub_c256(0x4d, 1);
0000ee1c      sub_c20c(5);
0000ee24      sub_c256(0x4d, 0);
0000ee2a      sub_c20c(5);
0000ee2e      sub_e4d0();
0000ee36      *(uint8_t*)0x20bd61 = 1;
0000ee38      return 1;
0000ed74  }


0000ee3a    int32_t sub_ee3a()

0000ee3a  {
0000ee40      sub_c256(0x18, 0);  /* "0.33_250117" */
0000ee48      sub_c256(0x19, 5);  /* ".33_250117" */
0000ee50      sub_c256(0x3d, 0x80);
0000ee58      sub_c256(0x4d, 1);
0000ee5e      sub_c20c(5);
0000ee66      sub_c256(0x4d, 0);
0000ee6c      sub_c20c(5);
0000ee70      sub_e4d0();
0000ee78      *(uint8_t*)0x20bd61 = 1;
0000ee7a      return 1;
0000ee3a  }


0000ee7c    int32_t sub_ee7c()

0000ee7c  {
0000ee86      if ((uint32_t)*(uint8_t*)0x20d5f8 << 0x1f)  /* "0117" */
0000ee86      {
0000ee8c          sub_c256(0x28, (uint32_t)*(uint8_t*)0x20d602);
0000ee94          sub_c256(0x29, (uint32_t)*(uint8_t*)0x20d604);
0000ee86      }
0000ee86      
0000ee9c      if ((uint32_t)*(uint8_t*)0x20d5f8 << 0x1e < 0)  /* "50117" */
0000ee9c      {
0000eea2          sub_c256(0x2e, (uint32_t)*(uint8_t*)0x20d5fd);
0000eeaa          sub_c256(0x2f, (uint32_t)*(uint8_t*)0x20d5fe);
0000ee9c      }
0000ee9c      
0000eeb2      if ((uint32_t)*(uint8_t*)0x20d5f8 << 0x1d < 0)  /* "250117" */
0000eeb8          sub_c256(0x2c, (uint32_t)*(uint8_t*)0x20d5ff);
0000eeb8      
0000eec0      if ((uint32_t)*(uint8_t*)0x20d5f8 << 0x1c < 0)  /* "_250117" */
0000eec0      {
0000eec6          sub_c256(0x1e, (uint32_t)*(uint8_t*)0x20d606);  /* "50117" */
0000eece          sub_c256(0x1f, (uint32_t)*(uint8_t*)0x20d606);  /* "0117" */
0000eec0      }
0000eec0      
0000eed8      return sub_c20c(0xa);
0000ee7c  }


0000eeda    int32_t sub_eeda()

0000eeda  {
0000eede      sub_e34e(0);
0000eee6      sub_c256(0x18, 0x40);  /* "0.33_250117" */
0000eeee      sub_c256(0x19, 1);  /* ".33_250117" */
0000eef6      sub_c256(0x3d, 0);
0000eefe      sub_c256(0x36, 8);  /* "3.0" */
0000ef06      sub_c256(0x4d, 1);
0000ef0c      sub_c20c(5);
0000ef14      sub_c256(0x4d, 0);
0000ef1e      return sub_c20c(5);
0000eeda  }


0000ef20    int32_t sub_ef20(uint32_t arg1, int32_t arg2, int32_t arg3)

0000ef20  {
0000ef2a      int32_t r0;
0000ef2a      int32_t r1;
0000ef2a      int32_t r2;
0000ef2a      r0 = sub_13f18(arg1, arg2, arg3, arg1);
0000ef36      sub_eac8();
0000ef3c      int32_t result = sub_c59c(1);
0000ef40      data_12 = (char)(r0 << 0x10);  /* "RY02_3.00.33_250117" */
0000ef42      return result;
0000ef20  }


0000ef44    int32_t sub_ef44()

0000ef44  {
0000ef44      int32_t r0;
0000ef44      int32_t r1;
0000ef44      int32_t r2;
0000ef44      r0 = sub_c504();
0000ef48      int32_t r4;
0000ef48      char r5;
0000ef48      /* tailcall */
0000ef48      return sub_ef4e(r4, r5, r0, r1, r2);
0000ef44  }


0000ef4a    int32_t sub_ef4a()

0000ef4a  {
0000ef4a      int32_t r0;
0000ef4a      int32_t r1;
0000ef4a      int32_t r2;
0000ef4a      r0 = sub_ed74();
0000ef4a      int32_t r4;
0000ef4a      char r5;
0000ef4a      /* tailcall */
0000ef4a      return sub_ef4e(r4, r5, r0, r1, r2);
0000ef4a  }


0000ef4e    int32_t sub_ef4e(char* arg1 @ r4, char arg2 @ r5, int32_t arg3, int32_t arg4, int32_t arg5)

0000ef4e  {
0000ef4e      *(uint8_t*)arg1 = arg2;
0000ef4e  }


0000ef52    int32_t sub_ef52()

0000ef52  {
0000ef56      int32_t r1;
0000ef56      int32_t r2;
0000ef56      r1 = sub_ec7e(0x20d5f8);
0000ef5a      int32_t r4;
0000ef5a      char r6;
0000ef5a      /* tailcall */
0000ef5a      return sub_ef64(r4, r6, 0x20d5f8, r1, r2);
0000ef52  }


0000ef5c    int32_t sub_ef5c()

0000ef5c  {
0000ef60      sub_eccc(0x20d5f8);
0000ef60      int32_t entry_r2;
0000ef60      int32_t r4;
0000ef60      char r6;
0000ef60      /* tailcall */
0000ef60      return sub_ef64(r4, r6, 0x20d5f8, 0, entry_r2);
0000ef5c  }


0000ef64    int32_t sub_ef64(void* arg1 @ r4, char arg2 @ r6, int32_t arg3, int32_t arg4, int32_t arg5)

0000ef64  {
0000ef64      sub_eeda();
0000ef68      sub_ee7c();
0000ef6e      int32_t result = sub_c56a(1);
0000ef72      *(uint8_t*)((char*)arg1 + 1) = arg2;
0000ef74      return result;
0000ef64  }


0000ef76    int32_t sub_ef76(void* arg1 @ r4, char arg2 @ r5, int32_t arg3, int32_t arg4, int32_t arg5)

0000ef76  {
0000ef78      sub_c56a(0);
0000ef7c      int32_t result = sub_ee3a();
0000ef80      *(uint8_t*)((char*)arg1 + 1) = arg2;
0000ef82      return result;
0000ef76  }


0000ef84    int32_t sub_ef84()

0000ef84  {
0000ef8a      uint32_t r0 = (uint32_t)*(uint8_t*)0x208481;
0000ef8a      
0000ef8e      if ((uint32_t)*(uint8_t*)0x208482 == r0)
0000efb8          return 0;
0000efb8      
0000ef90      *(uint8_t*)0x208482 = (char)r0;
0000ef90      
0000ef94      if (r0 == 1)
0000ef94      {
0000ef9c          int32_t r1_1;
0000ef9c          int32_t r2_1;
0000ef9c          r1_1 = sub_19598();
0000efa2          int32_t r1_2;
0000efa2          int32_t r2_2;
0000efa2          r1_2 = sub_ef20(0, r1_1, r2_1);
0000efa8          sub_ef20(3, r1_2, r2_2);
0000ef94      }
0000ef94      else if (!r0)
0000efae          sub_ed74();
0000efae      
0000efb4      return 1;
0000ef84  }


0000efba    uint32_t sub_efba(char* arg1, uint32_t arg2, int32_t arg3, int32_t arg4, int32_t arg5)

0000efba  {
0000efba      int32_t var_18 = arg4;
0000efba      uint32_t var_20 = arg2;
0000efbe      uint32_t r0 = (uint32_t)arg1[0x1c];  /* "_250117" */
0000efbe      
0000efc6      if (!r0)
0000efc6      {
0000efea          r0 = 1;
0000efec          arg1[0x1c] = 1;  /* "_250117" */
0000efc6      }
0000efc6      else
0000efc6      {
0000efce          if (r0 == 1)
0000efce          {
0000eff2              uint32_t r0_3 = (uint32_t)*(uint8_t*)0x208481;
0000eff2              
0000eff6              if (!r0_3)
0000eff6              {
0000f0ac                  arg1[0x1c] = 4;  /* "_250117" */
0000f0ae                  return r0_3;
0000eff6              }
0000eff6              
0000effa              arg1[7] = 0;
0000effa              
0000f004              if (arg4 > arg2 + 0x80)
0000f004              {
0000f006                  int32_t r0_6 = arg4 - arg2;
0000f00e                  int32_t r1_3 = ((r0_6 >> 0x1f >> 0x1a) + r0_6) >> 6;
0000f00e                      /* "33_250117" */  /* "0117" */
0000f012                  *(uint32_t*)(arg1 + 0x14) = r1_3;  /* "_3.00.33_250117" */
0000f014                  uint32_t r0_8 = (uint32_t)*(uint8_t*)0x83e2c8;
0000f01c                  uint32_t r0_10 = sub_12b2a(0x2710 * r0_8, r1_3);
0000f020                  uint32_t r1_4 = (uint32_t)arg1[0x1e];  /* "50117" */
0000f020                  
0000f024                  if (r1_4 < r0_10)
0000f026                      r0_10 = r1_4;
0000f026                  
0000f028                  *(uint16_t*)(arg1 + 0xa) = (int16_t)r0_10;
0000f02e                  arg1[5] = (char)(r0_8 >> 1);
0000f004              }
0000f004              
0000f034              if (arg5 > arg2 + 0x80)
0000f034              {
0000f036                  int32_t r0_14 = arg5 - arg2;
0000f03e                  int32_t r1_7 = ((r0_14 >> 0x1f >> 0x1a) + r0_14) >> 6;
0000f03e                      /* "33_250117" */  /* "0117" */
0000f042                  *(uint32_t*)(arg1 + 0x18) = r1_7;  /* "0.33_250117" */
0000f044                  uint32_t r0_16 = (uint32_t)*(uint8_t*)0x83e2c9;
0000f04c                  uint32_t r0_18 = sub_12b2a(0x2710 * r0_16, r1_7);
0000f050                  uint32_t r1_8 = (uint32_t)arg1[0x1f];  /* "0117" */
0000f050                  
0000f054                  if (r1_8 < r0_18)
0000f056                      r0_18 = r1_8;
0000f056                  
0000f058                  *(uint16_t*)(arg1 + 0xc) = (int16_t)r0_18;
0000f05c                  arg1[6] = (char)(r0_16 >> 1);
0000f034              }
0000f034              
0000f060              arg1[0xe] = 0x40;
0000f064              *(uint8_t*)arg1 = 0xf;
0000f066              arg1[0x1c] = 2;  /* "_250117" */
0000f068              return 0xf;
0000efce          }
0000efce          
0000efd2          uint32_t r0_24;
0000efd2          
0000efd2          if (r0 == 2)
0000efd2          {
0000f0b4              if (arg4 > 0x6ddd0)
0000f0b4              {
0000f0b6                  uint32_t r0_20 = (uint32_t)arg1[5];
0000f0b6                  
0000f0ba                  if (r0_20 < 0xc8)
0000f0be                      arg1[5] = (uint8_t)r0_20 + 2;
0000f0b4              }
0000f0b4              
0000f0c2              if (arg5 > 0x6ddd0)
0000f0c2              {
0000f0c4                  uint32_t r0_22 = (uint32_t)arg1[6];
0000f0c4                  
0000f0c8                  if (r0_22 < 0xc8)
0000f0cc                      arg1[6] = (uint8_t)r0_22 + 2;
0000f0c2              }
0000f0c2              
0000f0d4              if (arg5 <= 0x6ddd0 && arg4 <= 0x6ddd0)
0000f0d4              {
0000f0d6              label_f0d6:
0000f0d8                  arg1[0x1c] = 3;  /* "_250117" */
0000f0f0                  *(uint8_t*)arg1 = 2;
0000f0f2                  return 3;
0000f0d4              }
0000f0d4              
0000f0de              r0_24 = (uint32_t)arg1[6];
0000f0de              
0000f0e2              if (r0_24 >= 0xc8)
0000f0e2              {
0000f0ea              label_f0ea:
0000f0ea                  arg1[0x1c] = 4;  /* "_250117" */
0000f0f0                  *(uint8_t*)arg1 = 2;
0000f0f2                  return r0_24;
0000f0e2              }
0000f0e2              
0000f0e4              r0_24 = (uint32_t)arg1[5];
0000f0e4              
0000f0e8              if (r0_24 >= 0xc8)
0000f0e8                  goto label_f0ea;
0000f0e8              
0000f0ee              arg1[0x1c] = 2;  /* "_250117" */
0000f0f0              *(uint8_t*)arg1 = 2;
0000f0f2              return r0_24;
0000efd2          }
0000efd2          
0000efd6          if (r0 == 3)
0000efd6          {
0000efde              uint32_t r0_1;
0000efde              
0000efde              if (arg4 > 0x55730)
0000efe0                  r0_1 = (uint32_t)arg1[5];
0000efe0              
0000efe4              if (arg4 > 0x55730 && r0_1 < 0xc8)
0000f100                  arg1[5] = (uint8_t)r0_1 + 1;
0000efe4              else if (arg4 < 0x249f0)
0000f0f6              {
0000f0f8                  uint32_t r0_25 = (uint32_t)arg1[5];
0000f0f8                  
0000f0fc                  if (r0_25)
0000f100                      arg1[5] = (uint8_t)r0_25 - 1;
0000f0f6              }
0000f0f6              
0000f104              uint32_t r0_26;
0000f104              
0000f104              if (arg5 > 0x55730)
0000f106                  r0_26 = (uint32_t)arg1[6];
0000f106              
0000f10a              if (arg5 > 0x55730 && r0_26 < 0xc8)
0000f11c                  arg1[6] = (uint8_t)r0_26 + 1;
0000f10a              else if (arg5 < 0x249f0)
0000f112              {
0000f114                  uint32_t r0_28 = (uint32_t)arg1[6];
0000f114                  
0000f118                  if (r0_28)
0000f11c                      arg1[6] = (uint8_t)r0_28 - 1;
0000f112              }
0000f112              
0000f120              r0_24 = arg5 - 0x249f1;
0000f120              
0000f12e              if (r0_24 < 0x30d3f && arg4 < 0x55730 && arg4 > 0x249f0)
0000f126                  goto label_f0ea;
0000f126              
0000f130              r0_24 = (uint32_t)arg1[6];
0000f130              
0000f134              if (r0_24 >= 0xc8)
0000f134                  goto label_f0ea;
0000f134              
0000f136              r0_24 = (uint32_t)arg1[5];
0000f136              
0000f13a              if (r0_24 >= 0xc8)
0000f13a                  goto label_f0ea;
0000f13a              
0000f13a              goto label_f0d6;
0000efd6          }
0000efc6      }
0000efc6      
0000efee      return r0;
0000efba  }

0000f06a                                21 e0                                                                        !.

0000f06c  int32_t data_f06c = 0x20bd61
0000f070  int32_t data_f070 = 0x20bd60
0000f074  int32_t data_f074 = 0x83e2ca
0000f078  int32_t data_f078 = 0x83e2cb
0000f07c  int32_t data_f07c = 0x2086c0
0000f080  int32_t data_f080 = 0x208480
0000f084  int32_t data_f084 = 0x20d5e4
0000f088  int32_t data_f088 = 0x208478
0000f08c  int32_t data_f08c = 0x33333333
0000f090  int32_t data_f090 = 0x3fd33333
0000f094  int32_t data_f094 = 0x208474
0000f098  int32_t data_f098 = 0x55730
0000f09c  int32_t data_f09c = 0x249f0
0000f0a0  int32_t data_f0a0 = 0x83e2c8
0000f0a4  int32_t data_f0a4 = 0x2710
0000f0a8  int32_t data_f0a8 = 0x83e2c9

0000f13e    int32_t sub_f13e(int32_t arg1, int32_t arg2, int32_t arg3)

0000f13e  {
0000f13e      int32_t r3;
0000f13e      int32_t var_18 = r3;
0000f146      *(uint8_t*)0x20d5f9 = 0;
0000f146      
0000f150      if ((uint32_t)*(uint8_t*)0x20d5e5)
0000f150      {
0000f154          *(uint8_t*)0x20d5f9 = 1;
0000f15a          sub_c48e(0x20d5e8, arg2, arg3);
0000f16a          int32_t r1_1;
0000f16a          int32_t r2_1;
0000f16a          r1_1 = sub_efba(0x20d5f8, *(uint32_t*)0x20d5e8, *(uint32_t*)0x20d5ec, 
0000f16a              *(uint32_t*)0x20d5f0, *(uint32_t*)0x20d5f4);
0000f16a          
0000f172          if ((uint32_t)*(uint8_t*)0x20d614 == 4)
0000f186              sub_ef20(4, r1_1, r2_1);
0000f172          else
0000f174              sub_ee7c();
0000f150      }
0000f150      
0000f182      return 0xff7dc2f8(arg1, 0x20d5f8, 0x20);  /* "117" */
0000f13e  }


0000f18c    uint32_t* sub_f18c(uint32_t* arg1, int32_t arg2, int32_t arg3)

0000f18c  {
0000f18c      int32_t r3;
0000f18c      int32_t var_14_1 = r3;
0000f18c      int32_t var_18 = arg3;
0000f18c      int32_t var_1c_1 = arg2;
0000f18c      uint32_t* result = arg1;
0000f192      result = &data_0;
0000f194      int32_t var_1c = 0;
0000f196      var_18 = 0;
0000f198      int32_t var_14 = 0;
0000f1a0      sub_c288(3, &result, 6);
0000f1aa      sub_c288(9, &var_18, 6);
0000f1b6      uint32_t r2_1 =
0000f1b6          (uint32_t)(uint16_t)result | (uint32_t)*(uint8_t*)((char*)result)[2] << 0x10;
0000f1b6          /* "RY02_3.00.33_250117" */
0000f1c6      uint32_t r0_5 = (uint32_t)(uint8_t)var_1c << 8
0000f1c6          | (uint32_t)*(uint8_t*)((char*)result)[3]
0000f1c6          | (uint32_t)*(uint8_t*)((char*)var_1c)[1] << 0x10;  /* "RY02_3.00.33_250117" */
0000f1d4      uint32_t r3_5 =
0000f1d4          (uint32_t)(uint8_t)var_14 << 8 | (uint32_t)*(uint8_t*)((char*)var_18)[3];
0000f1da      arg1[3] =
0000f1da          (uint32_t)(uint16_t)var_18 | (uint32_t)*(uint8_t*)((char*)var_18)[2] << 0x10;
0000f1da          /* "RY02_3.00.33_250117" */
0000f1e0      arg1[2] = r0_5;
0000f1e2      *(uint32_t*)arg1 = r2_1;
0000f1e2      arg1[1] = r3_5 | (uint32_t)*(uint8_t*)((char*)var_14)[1] << 0x10;
0000f1e2          /* "RY02_3.00.33_250117" */
0000f1e4      return result;
0000f18c  }


0000f1e6    int32_t sub_f1e6()

0000f1e6  {
0000f1f8      if (sub_c2d2() && !(uint32_t)*(uint8_t*)0x20d5e4)
0000f1f8      {
0000f1fa          int32_t r0_2;
0000f1fa          int32_t r2_1;
0000f1fa          r0_2 = sub_19380();
0000f1fa          
0000f200          if (r0_2)
0000f200          {
0000f206              *(uint8_t*)0x208481 = 1;
0000f20a              *(uint8_t*)0x208482 = 2;
0000f20e              sub_ef20(0, 2, r2_1);
0000f214              return 0;
0000f200          }
0000f1f8      }
0000f1f8      
0000f218      return 1;
0000f1e6  }


0000f21a    int32_t sub_f21a()

0000f21a  {
0000f21e      sub_c59c(0);
0000f224      int32_t r1;
0000f224      int32_t r2;
0000f224      r1 = sub_c56a(0);
0000f22a      sub_ef20(1, r1, r2);
0000f234      *(uint8_t*)0x20d5e4 = 0;
0000f236      *(uint8_t*)0x20d5e5 = 0;
0000f238      sub_19318();
0000f23c      return 0x2084b4;
0000f21a  }


0000f23e    int32_t sub_f23e()

0000f23e  {
0000f246      *(uint8_t*)0x20d5e4 = 0;
0000f248      *(uint8_t*)0x20d5e5 = 0;
0000f24a      sub_19318();
0000f24e      return 0x2084b4;
0000f23e  }


0000f250    uint32_t sub_f250()

0000f250  {
0000f254      return (uint32_t)*(uint8_t*)0x208481;
0000f250  }


0000f256    int32_t sub_f256(int32_t arg1)

0000f256  {
0000f260      char var_28 = *(uint8_t*)0x20d5f8;
0000f264      char var_26 = *(uint8_t*)0x20d5fa;
0000f26c      int16_t var_1e = *(uint16_t*)0x20d602;
0000f278      char var_23 = *(uint8_t*)0x20d5fd;
0000f27c      char var_22 = *(uint8_t*)0x20d5fe;
0000f280      char var_21 = *(uint8_t*)0x20d5ff;
0000f284      char var_1a = *(uint8_t*)0x20d606;
0000f2a0      return 0xff7dc2f8(arg1, &var_28, 0x20, &var_28, var_28, *(uint8_t*)0x20d5fc, 
0000f2a0          *(uint16_t*)0x20d600, *(uint16_t*)0x20d604, *(uint32_t*)0x20d608, 
0000f2a0          *(uint32_t*)0x20d60c, *(uint32_t*)0x20d610, *(uint8_t*)0x20d614);  /* "117" */
0000f256  }


0000f2a2    int32_t sub_f2a2(char* arg1)

0000f2a2  {
0000f2c6      arg1[0x249] = *(uint8_t*)0x20d602;
0000f2ca      arg1[0x24a] = *(uint8_t*)0x20d604;
0000f2ce      int32_t r6 = 0;
0000f2d4      uint32_t r4 = 0;
0000f2d4      
0000f2de      if ((uint32_t)*(uint8_t*)0x20d5e4 && !(uint32_t)*(uint8_t*)0x20d5e5)
0000f2de      {
0000f2ea          uint32_t r0_10 = (uint32_t)sub_c310(&arg1[0x144], 4, 1);
0000f2ee          *(uint8_t*)arg1 = (char)r0_10;
0000f2ee          
0000f356          while (true)
0000f356          {
0000f356              if (r4 >= r0_10)
0000f356              {
0000f35c                  if (!r6)
0000f378                      *(uint8_t*)0x208480 = 3;
0000f35c                  else
0000f35c                  {
0000f366                      uint32_t r0_23 = ((uint32_t)*(uint8_t*)0x208480 - 1) << 0x18 >> 0x18;
0000f366                          /* "0.33_250117" */
0000f368                      *(uint8_t*)0x208480 = (char)r0_23;
0000f368                      
0000f36a                      if (!r0_23)
0000f36a                      {
0000f36c                          *(uint8_t*)0x208480 = 3;
0000f370                          sub_ef20(5, 0x208480, 3);
0000f36a                      }
0000f35c                  }
0000f35c                  
0000f37a                  return 1;
0000f356              }
0000f356              
0000f2fa              void* r0_12 = &arg1[0x144 + r4 * 4];
0000f2fe              int32_t r7_1 = *(uint32_t*)((char*)r0_12 + 8);
0000f302              int32_t r5_1 = *(uint32_t*)((char*)r0_12 + 0xc);
0000f308              arg1[0x104 + r4] = *(uint32_t*)((char*)r0_12 + 4) - arg1[0x144 + r4 * 4];
0000f310              arg1[0x84 + r4] = r7_1 - 0x3f7a0;
0000f316              arg1[0xc4 + r4] = r5_1 - 0x3f7a0;
0000f31a              arg1[0x104 + r4];
0000f31a              
0000f322              if (sub_ef84())
0000f322                  break;
0000f322              
0000f340              if (r7_1 - 0x186a0 >= 0x493e1 || r5_1 < 0x186a0 || r5_1 > 0x61a80)
0000f340              {
0000f344                  r6 = 1;
0000f344                  
0000f34a                  if (!(uint32_t)*(uint8_t*)0x208481)
0000f34c                      r6 = 0;
0000f340              }
0000f340              
0000f350              r4 = (uint32_t)((uint8_t)r4 + 1);
0000f356          }
0000f2de      }
0000f2de      
0000f324      return 0;
0000f2a2  }

0000f37e                                                                                            00 00                                ..

0000f380  int32_t data_f380 = 0x6ddd0
0000f384  int32_t data_f384 = -0x249f1
0000f388  int32_t data_f388 = 0x30d3f
0000f38c  int32_t data_f38c = 0x20d5f8
0000f390  int32_t data_f390 = 0x208480
0000f394  int32_t data_f394 = -0x3f7a0
0000f398  int32_t data_f398 = -0x186a0
0000f39c  int32_t data_f39c = 0x493e1

0000f3a0    int32_t sub_f3a0() __pure

0000f3a0  {
0000f3a0      return;
0000f3a0  }


0000f3a2    int32_t sub_f3a2() __pure

0000f3a2  {
0000f3a2      return;
0000f3a2  }


0000f3a4    int32_t sub_f3a4() __pure

0000f3a4  {
0000f3a4      return;
0000f3a4  }


0000f3a6    int32_t sub_f3a6() __pure

0000f3a6  {
0000f3a6      return;
0000f3a6  }


0000f3a8    void sub_f3a8() __noreturn

0000f3a8  {
0000f3ac      __mrs(ipsr);
0000f3b2      sub_5a06();
0000f3b2      
0000f3b4      while (true)
0000f3b4          /* nop */
0000f3a8  }

0000f3b6                                                                    70 47 45 72 72 6f 72 21 20 50                        pGError! P
0000f3c0  6c 65 61 73 65 20 69 6d 70 6c 65 6d 65 6e 74 20 79 6f 75 72 20 49 53 52 20 48 61 6e 64 6c 65 72  lease implement your ISR Handler
0000f3e0  20 66 6f 72 20 49 52 51 20 25 64 21 0a 00 00 00                                                   for IRQ %d!....

0000f3f0  int32_t data_f3f0 = 0x20000000
0000f3f4  int32_t data_f3f4 = 0x833368
0000f3f8  void* data_f3f8 = sub_5a06

0000f3fc    int32_t sub_f3fc()

0000f3fc  {
0000f402      int32_t result = 0xff7e4d8e(0xffffffff);
0000f408      *(uint32_t*)0x20d624 = result;
0000f40a      return result;
0000f3fc  }


0000f40c    int32_t sub_f40c() __pure

0000f40c  {
0000f40c      return;
0000f40c  }

0000f40e                                            10 b5 07 20 d4 f7 ba de 52 49 c9 69 03 f0 86 fb c4 b2                ... ....RI.i......
0000f420  07 20 d4 f7 71 de 21 46 d4 f7 34 dc 4c 48 80 22 40 38 c1 7e 11 43 c1 76 ff f7 e0 ff 49 48 00 7f  . ..q.!F..4.LH."@8.~.C.v....IH..
0000f440  c0 07 06 d0 05 f0 f0 ff f1 f7 06 f8 df f7 e1 de 10 bd df f7 e7 da f9 e7                          ........................

0000f458    int32_t sub_f458(int32_t arg1)

0000f458  {
0000f466      return 0xff7eec80(0, arg1, 0x83e2e4, 0x4d1);
0000f458  }

0000f468                          3f 4b 40 4a 10 b5 41 43 5b 1d d2 1d 00 20 df f7 30 dc 10 bd                      ?K@J..AC[.... ..0...

0000f47c    int32_t sub_f47c(int32_t arg1, int32_t arg2)

0000f47c  {
0000f482      if (!arg1)
0000f4e4          return 0xff7eec80(0, arg2, 0x83e2f2, 0x4e2);
0000f4e4      
0000f486      if (!arg2)
0000f486      {
0000f4e6          0xff7eed9c();
0000f4ec          return 0;
0000f486      }
0000f486      
0000f498      uint32_t r6_1 = *(uint32_t*)(arg1 - 4) << 4 >> 4;
0000f49c      int32_t r0_7 = r6_1 - (8 - (arg2 << 0x1d >> 0x1d) + arg2);  /* "250117" */
0000f49c      
0000f4a0      if (r0_7 == 8)
0000f4f0          return arg1;
0000f4f0      
0000f4a2      0xff7ef24e(r0_7, 8);
0000f4a8      0xff7eed9c(arg1);
0000f4b8      int32_t r0_9 = 0xff7eec80(0, arg2, 0x83e2f2, 0x4f7);
0000f4b8      
0000f4c0      if (arg1 != r0_9)
0000f4c0      {
0000f4ca          uint32_t r2_2 = *(uint32_t*)(r0_9 - 4) << 4 >> 4;
0000f4ce          int32_t r2_4;
0000f4ce          
0000f4ce          r2_4 = r6_1 >= r2_2 ? r2_2 - 8 : r6_1 - 8;
0000f4ce          
0000f4f8          0xff81b898(r0_9, arg1, r2_4);
0000f4c0      }
0000f4c0      
0000f4fc      0xff7ef26c();
0000f502      return r0_9;
0000f47c  }


0000f504    int32_t sub_f504()

0000f504  {
0000f50a      return 0xff7eed9c();
0000f504  }


0000f50c    int32_t sub_f50c()

0000f50c  {
0000f510      return *(uint32_t*)0x200524;
0000f50c  }


0000f512    uint32_t sub_f512()

0000f512  {
0000f516      return (uint32_t)*(uint8_t*)0x202cef;
0000f512  }

0000f518                                                                          10 b5 d9 f7 a1 de 0f 48                          .......H
0000f520  10 30 e0 f7 f3 d8 0d 48 10 30 e0 f7 01 d9 10 bd 1c b5 04 46 d9 f7 8f de 0f 4a 00 21 01 92 07 48  .0.....H.0.........F.....J.!...H
0000f540  00 91 0a 46 23 46 0d a1 10 30 e0 f7 9b d8 00 28 03 d0 02 48 10 30 e0 f7 b3 d8 1c bd              ...F#F...0.....(...H.0......

0000f55c  int32_t data_f55c = 0x20d618

0000f560    int32_t sub_f560(int32_t arg1, int32_t arg2, int32_t arg3)

0000f560  {
0000f56c      int32_t r4;
0000f56c      int32_t r5;
0000f56c      /* tailcall */
0000f56c      return sub_fb38(r4, r5, r4, arg3 << 0x13);  /* "2_3.00.33_250117" */
0000f560  }

0000f56e                                            83 00                                                                ..
0000f570  int32_t data_f570 = 0x200524
0000f574  int32_t data_f574 = 0x202ce0

0000f578                                                                          c9 34 83 00 53 65 74 41                          .4..SetA
0000f580  63 74 69 76 65 54 69 6d 65 72 00 00 10 b5 04 48 01 21 da f7 41 d9 03 48 05 21 da f7 3d d9 10 bd  ctiveTimer.....H.!..A..H.!..=...
0000f5a0  89 7e 20 00 45 7f 20 00                                                                          .~ .E. .

0000f5a8    int32_t* sub_f5a8(char* arg1)

0000f5a8  {
0000f5b2      int32_t r1 = (int32_t)*(uint8_t*)arg1;
0000f5b8      int32_t* result;
0000f5b8      int32_t r5;
0000f5b8      
0000f5b8      if (!(uint32_t)arg1[8])
0000f5b8      {
0000f634          result = 0xe000e180;
0000f634          
0000f638          if (r1 >= 0x32)  /* "02_V3.0" */
0000f638          {
0000f642              *(uint32_t*)0x4000600c &= ~(1 << (r1 - 0x32));  /* "02_V3.0" */
0000f642              
0000f648              if (!*(uint32_t*)0x4000600c)
0000f64e                  *(uint32_t*)0xe000e180 = 0x80000;
0000f64e              
0000f650              return 0xe000e180;
0000f638          }
0000f638          
0000f656          r5 = 1 << r1 << 0x1b >> 0x1b;  /* "3_250117" */
0000f5b8      }
0000f5b8      else
0000f5b8      {
0000f5bc          if (r1 >= 0x32)  /* "02_V3.0" */
0000f5bc          {
0000f5c8              *(uint32_t*)0x4000600c |= 1 << (r1 - 0x32);  /* "02_V3.0" */
0000f5ca              *(uint8_t*)arg1 = 0x13;  /* "2_3.00.33_250117" */
0000f5bc          }
0000f5bc          
0000f5d8          *(uint32_t*)0xe000e280 = 1 << (uint32_t)*(uint8_t*)arg1 << 0x1b >> 0x1b;
0000f5d8              /* "3_250117" */
0000f5dc          int32_t r1_4 = (int32_t)*(uint8_t*)arg1;
0000f5e0          int32_t r2_3 = *(uint32_t*)(arg1 + 4);
0000f5e0          
0000f5e4          if (r1_4 >= 0)
0000f5e4          {
0000f616              uint32_t r1_8 = r1_4 << 0x1e >> 0x1b;  /* "3_250117" */  /* "50117" */
0000f624              *(uint32_t*)((r1_4 >> 2 << 2) - 0x1fff1c00) = (
0000f624                  *(uint32_t*)((r1_4 >> 2 << 2) - 0x1fff1c00) & ~(0xff << r1_8))
0000f624                  | r2_3 << 0x1d >> 0x18 << r1_8;  /* "0.33_250117" */  /* "250117" */
0000f5e4          }
0000f5e4          else
0000f5e4          {
0000f5f8              uint32_t r1_6 = r1_4 << 0x1e >> 0x1b;  /* "3_250117" */  /* "50117" */
0000f606              *(uint32_t*)((((r1_4 << 0x1c >> 0x1c) - 8) >> 2 << 2) - 0x1fff12e4) = (
0000f606                  *(uint32_t*)((((r1_4 << 0x1c >> 0x1c) - 8) >> 2 << 2) - 0x1fff12e4)
0000f606                  & ~(0xff << r1_6)) | r2_3 << 0x1d >> 0x18 << r1_6;
0000f606                  /* "0.33_250117" */  /* "_250117" */  /* "250117" */
0000f5e4          }
0000f5e4          
0000f62c          r5 = 1 << (uint32_t)*(uint8_t*)arg1 << 0x1b >> 0x1b;  /* "3_250117" */
0000f62e          result = 0xe000e100;
0000f5b8      }
0000f5b8      
0000f658      *(uint32_t*)result = r5;
0000f65a      return result;
0000f5a8  }

0000f65c  int32_t data_f65c = 0x40006000
0000f660  int32_t data_f660 = -0x1fff1d80
0000f664  int32_t data_f664 = -0x1fff1300
0000f668  int32_t data_f668 = -0x1fff1c00
0000f66c  int32_t data_f66c = -0x1fff1f00

0000f670    uint32_t sub_f670()

0000f670  {
0000f682      uint32_t i;
0000f682      
0000f682      for (i = 0; i < 0xa; i = (uint32_t)((uint8_t)i + 1))
0000f67a          *(uint32_t*)((i << 2) + 0x40000280) = 0;
0000f67a      
0000f684      return i;
0000f670  }


0000f686    int32_t sub_f686(int32_t arg1)

0000f686  {
0000f696      int32_t result = 0xff << arg1 << 0x1e >> 0x1b;  /* "3_250117" */  /* "50117" */
0000f69a      *(uint32_t*)((arg1 >> 2 << 2) + 0x40000280) &= ~result;
0000f69c      return result;
0000f686  }


0000f69e    uint32_t sub_f69e(int32_t arg1, int32_t arg2)

0000f69e  {
0000f6a8      uint32_t result = arg1 << 0x1e >> 0x1b;  /* "3_250117" */  /* "50117" */
0000f6b8      *(uint32_t*)((arg1 >> 2 << 2) + 0x40000280) = (
0000f6b8          *(uint32_t*)((arg1 >> 2 << 2) + 0x40000280) & ~(0xff << result)) | arg2 << result;
0000f6ba      return result;
0000f69e  }


0000f6bc    int32_t sub_f6bc(int32_t arg1, int32_t arg2, int32_t arg3, int32_t arg4, int32_t arg5, int32_t arg6)

0000f6bc  {
0000f6bc      int32_t var_18 = arg4;
0000f6c4      uint32_t r5 = (uint32_t)*(uint8_t*)(0x83e3e4 + (arg1 << 1));
0000f6d2      uint32_t r0_4 = 0xff80efe4(r5, 0x83e3e4) >> 4 << 4;
0000f6d2      
0000f6d6      if (!arg4)
0000f6e4          r0_4 |= 4;
0000f6d6      else if (arg4 == 1)
0000f6e4          r0_4 |= 0xc;
0000f6e4      
0000f6ee      int32_t r4_3 = arg5 << 1 | arg6 | r0_4;
0000f6f6      int32_t r4_4;
0000f6f6      
0000f6f6      r4_4 = !arg2 ? r4_3 & 0xfffffdff : r4_3 | 0x200;
0000f6f6      
0000f708      int32_t result = 0xff80f088(r5, r4_4 | 0x100);
0000f708      
0000f70e      if (arg3)
0000f71a          return result;
0000f71a      
0000f716      return 0xff80f088(r5, r4_4 & 0xfffffeff);
0000f6bc  }


0000f71c    int32_t sub_f71c(int32_t arg1, int32_t arg2)

0000f71c  {
0000f724      uint32_t r4 = (uint32_t)*(uint8_t*)(0x83e3e4 + (arg1 << 1));
0000f728      int32_t r0_2 = 0xff80efe4(r4, 0x83e3e4);
0000f730      int32_t r0_3;
0000f730      
0000f730      r0_3 = !arg2 ? r0_2 & 0xffffffdf : r0_2 | 0x20;  /* "117" */
0000f730      
0000f740      return 0xff80f088(r4, r0_3);
0000f71c  }


0000f742    int32_t sub_f742(int32_t arg1, int32_t arg2)

0000f742  {
0000f74a      uint32_t r4 = (uint32_t)*(uint8_t*)(0x83e3e4 + (arg1 << 1));
0000f74e      int32_t r0_2 = 0xff80efe4(r4, 0x83e3e4);
0000f758      int32_t r0_3;
0000f758      
0000f758      r0_3 = !arg2 ? r0_2 & 0xfffffbff : r0_2 | 0x400;
0000f758      
0000f768      return 0xff80f088(r4, r0_3);
0000f742  }


0000f76a    int32_t sub_f76a(int32_t arg1, int32_t arg2)

0000f76a  {
0000f772      uint32_t r4 = (uint32_t)*(uint8_t*)(0x83e3e4 + (arg1 << 1));
0000f776      int32_t r0_2 = 0xff80efe4(r4, 0x83e3e4);
0000f77e      int32_t r0_3;
0000f77e      
0000f77e      r0_3 = !arg2 ? r0_2 & 0xffffffbf : r0_2 | 0x40;
0000f77e      
0000f78e      return 0xff80f088(r4, r0_3);
0000f76a  }


0000f790    int32_t sub_f790(int32_t arg1, int32_t arg2, int32_t arg3)

0000f790  {
0000f796      sub_f76a(arg1, arg2);
0000f79e      sub_f742(arg1, arg3);
0000f7aa      return sub_f71c(arg1, 1);
0000f790  }


0000f7ac    int32_t j_sub_f71c(int32_t arg1)

0000f7ac  {
0000f7ae      /* tailcall */
0000f7ae      return sub_f71c(arg1, 0);
0000f7ac  }


0000f7b0    int32_t sub_f7b0(int32_t arg1)

0000f7b0  {
0000f7d2      return 0xff80f088(0x2a, 
0000f7d2          arg1 << 0x1a >> 0x12 | (0xff80efe4(0x2a) & 0xffffc0ff) | 0xc000);
0000f7d2          /* "02_3.00.33_250117" */  /* "33_250117" */
0000f7b0  }


0000f7d4    int32_t sub_f7d4()

0000f7d4  {
0000f7d6      int32_t result = 0;
0000f7da      int32_t r0 = 0xff80efe4(0x2a);
0000f7da      
0000f7e0      if (r0 << 0x10 < 0)  /* "RY02_3.00.33_250117" */
0000f7e2          result = 1;
0000f7e2      
0000f7ec      0xff80f088(0x2a, 0x8000 | r0);
0000f7f2      return result;
0000f7d4  }


0000f7f4    int32_t j_sub_f7d4()

0000f7f4  {
0000f7f4      /* tailcall */
0000f7f4      return sub_f7d4();
0000f7f4  }


0000f7f6    int32_t sub_f7f6(int32_t arg1)

0000f7f6  {
0000f800      uint32_t r0 = (uint32_t)*(uint16_t*)(0x83e432 + (arg1 << 1));
0000f804      uint32_t r1_2 = r0 << 0x14 >> 0x14;  /* "_3.00.33_250117" */
0000f804      
0000f816      if (!(0xff80efe4(r1_2, r1_2) & (uint32_t)(uint16_t)(1 << r0 >> 0xc)))
0000f81c          return 0;
0000f81c      
0000f818      return 1;
0000f7f6  }


0000f81e    int32_t j_sub_f7f6(int32_t arg1)

0000f81e  {
0000f81e      /* tailcall */
0000f81e      return sub_f7f6(arg1);
0000f81e  }

0000f820  70 b5 0d 46 68 49 40 00 0c 5c 20 46 ff f7 da db 00 2d 02 d0 01 21 01 43 01 e0 41 08 49 00 20 46  p..FhI@..\ F.....-...!.C..A.I. F
0000f840  ff f7 22 dc 70 bd 70 b5 0d 46 5f 49 40 00 0c 5c 20 46 ff f7 c7 db 02 22 00 2d 01 d0 10 43 00 e0  ..".p.p..F_I@..\ F.....".-...C..
0000f860  90 43 01 46 20 46 ff f7 0f dc 70 bd 70 b5 0d 46 55 49 40 00 0c 5c 20 46 ff f7 b4 db 04 22 00 2d  .C.F F....p.p..FUI@..\ F.....".-
0000f880  01 d0 10 43 00 e0 90 43 01 46 20 46 ff f7 fc db 70 bd 70 b5 0d 46 4c 49 40 00 0c 5c 20 46 ff f7  ...C...C.F F....p.p..FLI@..\ F..
0000f8a0  a1 db 08 22 00 2d 01 d0 10 43 00 e0 90 43 01 46 20 46 ff f7 e9 db 70 bd                          ...".-...C...C.F F....p.

0000f8b8    int32_t sub_f8b8(int32_t arg1, int32_t arg2)

0000f8b8  {
0000f8c0      uint32_t r4 = (uint32_t)*(uint8_t*)(0x83e3e4 + (arg1 << 1));
0000f8c4      int32_t r0_2 = 0xff80efe4(r4, 0x83e3e4);
0000f8cc      int32_t r0_3;
0000f8cc      
0000f8cc      r0_3 = !arg2 ? r0_2 & 0xffffffef : r0_2 | 0x10;  /* "RY02_3.00.33_250117" */
0000f8cc      
0000f8dc      return 0xff80f088(r4, r0_3);
0000f8b8  }

0000f8de                                                                                            70 b5                                p.
0000f8e0  0d 46 39 49 40 00 0c 5c 20 46 ff f7 7b db ff 22 01 32 00 2d 01 d0 10 43 00 e0 90 43 01 46 20 46  .F9I@..\ F..{..".2.-...C...C.F F
0000f900  ff f7 c2 db 70 bd 70 b5 0d 46 2f 49 40 00 0c 5c 20 46 ff f7 67 db 01 22 52 02 00 2d 01 d0 10 43  ....p.p..F/I@..\ F..g.."R..-...C
0000f920  00 e0 90 43 01 46 20 46 ff f7 ae db 70 bd                                                        ...C.F F....p.

0000f92e    int32_t sub_f92e(int32_t arg1)

0000f92e  {
0000f936      uint32_t r0 = (uint32_t)*(uint16_t*)(0x83e432 + (arg1 << 1));
0000f93a      uint32_t r4_1 = r0 << 0x14 >> 0x14;  /* "_3.00.33_250117" */
0000f954      return 0xff80f088(r4_1, 0xff80efe4(r4_1) | (uint32_t)(uint16_t)(1 << r0 >> 0xc));
0000f92e  }

0000f956                                                                    10 b5 9a 20 ff f7 43 db 1b 49                        ... ..C..I
0000f960  01 43 9a 20 ff f7 90 db ae 20 ff f7 3b db 7f 21 01 43 ae 20 ff f7 88 db d2 20 ff f7 33 db 14 49  .C. ..... ..;..!.C. ..... ..3..I
0000f980  01 43 d2 20 ff f7 80 db f4 20 ff f7 2b db 11 49 01 43 f4 20 ff f7 78 db 10 bd                    .C. ..... ..+..I.C. ..x...

0000f99a    int32_t sub_f99a(int32_t arg1)

0000f99a  {
0000f9a2      int32_t r0 = *(uint32_t*)0x400002a8;
0000f9a4      int32_t result;
0000f9a4      
0000f9a4      result = !arg1 ? r0 & 0xfeffffff : r0 | 0x1000000;
0000f9a4      
0000f9ac      *(uint32_t*)0x400002a8 = result;
0000f9ae      return result;
0000f99a  }


0000f9b0    int32_t sub_f9b0(int32_t arg1)

0000f9b0  {
0000f9b6      int32_t r0 = *(uint32_t*)0x400002a8;
0000f9b8      int32_t result;
0000f9b8      
0000f9b8      result = !arg1 ? r0 & 0xfffffeff : r0 | 0x100;
0000f9b8      
0000f9c0      *(uint32_t*)0x400002a8 = result;
0000f9c2      return result;
0000f9b0  }

0000f9c4  int32_t data_f9c4 = 0x40000280
0000f9c8  int32_t data_f9c8 = 0x83e3e4

0000f9cc                                      ff 1b 00 00 ff 01 00 00 ff 03 00 00                                      ............

0000f9d8    int32_t sub_f9d8(int32_t arg1, int32_t arg2)

0000f9d8  {
0000f9e2      if (!(uint32_t)*(uint8_t*)0x20d804)
0000f9e2      {
0000f9ec          *(uint32_t*)0x40000014 |= 0x200;
0000f9ee          *(uint8_t*)0x20d804 = 1;
0000f9e2      }
0000f9e2      
0000f9f2      *(uint32_t*)0x400001f0 = arg2;
0000f9f8      *(uint32_t*)0x400001f4 = arg1 - 0x40000100;
0000f9fa      *(uint32_t*)0x400001f8 = 1;
0000f9fc      return arg1 - 0x40000100;
0000f9d8  }


0000f9fe    int32_t sub_f9fe()

0000f9fe  {
0000fa0c      sub_f9d8(0x40000100, *(uint32_t*)0x40000100 >> 1 << 1);
0000fa18      sub_f9d8(0x40000100, *(uint32_t*)0x40000100 & 0xbfffffff);
0000fa24      sub_f9d8(0x40000100, *(uint32_t*)0x40000100 & 0xdfffffff);
0000fa2e      sub_f9d8(0x40000104, 0xffff);
0000fa3a      sub_f9d8(0x40000104, 0);
0000fa44      sub_f9d8(0x4000010c, 0);
0000fa4e      sub_f9d8(0x40000110, 0);
0000fa58      sub_f9d8(0x40000114, 0);
0000fa62      sub_f9d8(0x40000118, 0);
0000fa6c      sub_f9d8(0x4000011c, 0);
0000fa76      sub_f9d8(0x40000120, 0);
0000fa80      sub_f9d8(0x40000124, 0);
0000fa8a      sub_f9d8(0x40000128, 0);
0000fa94      sub_f9d8(0x4000012c, 0);
0000fa9e      sub_f9d8(0x40000138, 0);
0000faa6      sub_f9d8(0x40000100, 6);
0000fab6      return sub_f9d8(0x40000100, 0);
0000f9fe  }


0000fab8    int32_t sub_fab8(int32_t arg1)

0000fab8  {
0000fac0      /* tailcall */
0000fac0      return sub_f9d8(0x4000010c, arg1 << 0x14 >> 0x14);  /* "_3.00.33_250117" */
0000fab8  }


0000fac2    int32_t sub_fac2(int32_t arg1)

0000fac2  {
0000faca      int32_t r1 = *(uint32_t*)0x40000100;
0000facc      uint32_t r1_2;
0000facc      
0000facc      r1_2 = arg1 == 1 ? r1 | 1 : r1 >> 1 << 1;
0000facc      
0000fad2      /* tailcall */
0000fad2      return sub_f9d8(0x40000100, r1_2);
0000fac2  }


0000fada    int32_t sub_fada(int32_t arg1, int32_t arg2)

0000fada  {
0000fae0      int32_t r1 = *(uint32_t*)0x40000100;
0000fae2      int32_t r1_1;
0000fae2      
0000fae2      r1_1 = arg2 == 1 ? r1 | arg1 : r1 & ~arg1;
0000fae2      
0000fae8      /* tailcall */
0000fae8      return sub_f9d8(0x40000100, r1_1);
0000fada  }


0000faee    int32_t sub_faee(int32_t arg1, int32_t arg2)

0000faee  {
0000faf4      int32_t r1 = *(uint32_t*)0x40000100;
0000faf6      int32_t r1_1;
0000faf6      
0000faf6      r1_1 = arg2 == 1 ? r1 | arg1 : r1 & ~arg1;
0000faf6      
0000fafc      /* tailcall */
0000fafc      return sub_f9d8(0x40000100, r1_1);
0000faee  }


0000fb02    int32_t sub_fb02(int32_t arg1)

0000fb02  {
0000fb08      int32_t r1 = *(uint32_t*)0x40000100;
0000fb0a      int32_t r1_1;
0000fb0a      
0000fb0a      r1_1 = !arg1 ? r1 & 0xbfffffff : r1 | 0x40000000;
0000fb0a      
0000fb12      /* tailcall */
0000fb12      return sub_f9d8(0x40000100, r1_1);
0000fb02  }


0000fb14    int32_t sub_fb14(int32_t arg1)

0000fb14  {
0000fb1c      int32_t r1 = *(uint32_t*)0x40000100;
0000fb1e      int32_t r1_1;
0000fb1e      
0000fb1e      r1_1 = arg1 == 1 ? r1 | 0x20000000 : r1 & 0xdfffffff;
0000fb1e      
0000fb22      /* tailcall */
0000fb22      return sub_f9d8(0x40000100, r1_1);
0000fb14  }


0000fb28    int32_t sub_fb28()

0000fb28  {
0000fb34      int32_t r0;
0000fb34      int32_t r1_2;
0000fb34      r0 = sub_f9d8(0x40000100, *(uint32_t*)0x40000100 | 2);
0000fb34      /* tailcall */
0000fb34      return sub_fb38(0x40000100, 2, r0, r1_2);
0000fb28  }


0000fb38    int32_t sub_fb38(int32_t* arg1 @ r4, int32_t arg2 @ r5, int32_t arg3, int32_t arg4)

0000fb38  {
0000fb46      return sub_f9d8(arg1, *(uint32_t*)arg1 & ~arg2);
0000fb38  }


0000fb48    int32_t sub_fb48()

0000fb48  {
0000fb54      sub_f9d8(0x40000100, *(uint32_t*)0x40000100 | 4);
0000fb66      return sub_f9d8(0x40000100, *(uint32_t*)0x40000100 & 0xfffffffb);
0000fb48  }


0000fb68    int32_t sub_fb68(int32_t arg1)

0000fb68  {
0000fb74      if (!(*(uint32_t*)0x40000108 & arg1 >> 8))
0000fb78          return 0;
0000fb78      
0000fb76      return 1;
0000fb68  }


0000fb7a    int32_t sub_fb7a(int32_t arg1)

0000fb7a  {
0000fb84      sub_f9d8(0x40000104, arg1 >> 8);
0000fb94      return sub_f9d8(0x40000104, 0);
0000fb7a  }


0000fb96    int32_t sub_fb96(int32_t arg1)

0000fb96  {
0000fba2      if (!(*(uint32_t*)0x40000108 & arg1 >> 8))
0000fba6          return 0;
0000fba6      
0000fba4      return 1;
0000fb96  }


0000fba8    int32_t sub_fba8(int32_t arg1)

0000fba8  {
0000fbb2      sub_f9d8(0x40000104, arg1 >> 8);
0000fbc2      return sub_f9d8(0x40000104, 0);
0000fba8  }


0000fbc4    int32_t sub_fbc4(int32_t arg1)

0000fbc4  {
0000fbd2      sub_f9d8(0x40000104, 1 << (arg1 + 8));
0000fbe2      return sub_f9d8(0x40000104, 0);
0000fbc4  }


0000fbe4    int32_t sub_fbe4()

0000fbe4  {
0000fbee      sub_f9d8(0x40000104, 2);
0000fbfe      return sub_f9d8(0x40000104, 0);
0000fbe4  }


0000fc00    int32_t sub_fc00()

0000fc00  {
0000fc0a      sub_f9d8(0x40000104, 1);
0000fc1a      return sub_f9d8(0x40000104, 0);
0000fc00  }

0000fc1c  int32_t data_fc1c = 0x20d804
0000fc20  int32_t data_fc20 = 0x400001c0
0000fc24  int32_t data_fc24 = -0x40000100
0000fc28  int32_t data_fc28 = 0xffff
0000fc2c  int32_t data_fc2c = 0x40000100
0000fc30  int32_t data_fc30 = 0x40000000

0000fc34    void* sub_fc34(int32_t arg1, int32_t arg2, int32_t arg3)

0000fc34  {
0000fc3c      uint32_t r5 = arg2 << 1 >> 0x1e;  /* "50117" */
0000fc40      uint32_t r2_1 = arg1 << 4 >> 0x1e;  /* "50117" */
0000fc44      int32_t r4_1 = arg1 | arg2;
0000fc4a      int32_t r0_4;
0000fc4a      
0000fc4a      if (arg3 == 1)
0000fc4a      {
0000fc68          if (arg2 == 0x60000040)
0000fc68          {
0000fc6e              *(uint32_t*)0x4000020c |= 0x4000000;
0000fc9a              *(uint32_t*)0x4000020c |= arg2 << 0x17;  /* "00.33_250117" */
0000fc68          }
0000fc68          else if (arg2 == 0x61000000 || arg2 == 0x40001000)
0000fc82          {
0000fc88              *(uint32_t*)0x4000020c |= 0x4000000;
0000fc92              *(uint32_t*)0x4000020c |= 0x400000;
0000fc9a              *(uint32_t*)0x4000020c |= 0x10000000;
0000fc82          }
0000fc82          else if (arg2 == 0x60000010 || arg2 == 0x60010000)
0000fcaa          {
0000fcb0              *(uint32_t*)0x4000020c |= 0x4000000;
0000fc9a              *(uint32_t*)0x4000020c |= 0x8000000;
0000fcaa          }
0000fcaa          else if (arg2 == 0x20004000)
0000fcca              *(uint32_t*)0x40000360 |= arg2 >> 0x14;  /* "_3.00.33_250117" */
0000fcca          
0000fcde          if (arg2 == 0x120 || arg2 == 0x140 || arg2 == 0x10)  /* "RY02_3.00.33_250117" */
0000fcde          {
0000fd0c              r0_4 = *(uint32_t*)0x40000220 | r4_1;
0000fd14              *(uint32_t*)0x40000220 = r0_4;
0000fd16              return r0_4;
0000fcde          }
0000fc4a      }
0000fc4a      else if (arg2 == 0x120 || arg2 == 0x140 || arg2 == 0x10)  /* "RY02_3.00.33_250117" */
0000fc5e      {
0000fd12          r0_4 = *(uint32_t*)0x40000220 & ~r4_1;
0000fd14          *(uint32_t*)0x40000220 = r0_4;
0000fd16          return r0_4;
0000fc5e      }
0000fce4      int32_t r0 = arg1 & 0xf3ffffff;
0000fce8      int32_t r1 = arg2 & 0x9fffffff;
0000fcee      void* r0_2;
0000fcee      int32_t r2_6;
0000fcee      
0000fcee      if (arg3 == 1)
0000fcee      {
0000fd22          r0_2 = (r5 << 2) + 0x40000200;
0000fd24          *(uint32_t*)((r2_1 << 2) + 0x40000210) |= r0;
0000fd2c          r2_6 = *(uint32_t*)((char*)r0_2 + 0x2c) | r1 | r1 << 1;
0000fcee      }
0000fcee      else
0000fcee      {
0000fcfa          r0_2 = (r5 << 2) + 0x40000200;
0000fcfc          *(uint32_t*)((r2_1 << 2) + 0x40000210) &= ~r0;
0000fd04          r2_6 = *(uint32_t*)((char*)r0_2 + 0x2c) & ~r1 & ~(r1 << 1);
0000fcee      }
0000fcee      
0000fd06      *(uint32_t*)((char*)r0_2 + 0x2c) = r2_6;
0000fd08      return r0_2;
0000fc34  }


0000fd30    void sub_fd30(int32_t arg1, int32_t arg2)

0000fd30  {
0000fd34      uint32_t r2 = arg1 << 4 >> 0x1e;  /* "50117" */
0000fd34      
0000fd3a      if (arg2 == 1)
0000fd3a      {
0000fd54          if (arg1 == 2 || arg1 == 4 || arg1 == 1)
0000fd54          {
0000fd76              *(uint32_t*)0x40000220 |= arg1;
0000fd78              return;
0000fd54          }
0000fd3a      }
0000fd3a      else if (arg1 == 2 || arg1 == 4 || arg1 == 1)
0000fd46      {
0000fd76          *(uint32_t*)0x40000220 &= ~arg1;
0000fd78          return;
0000fd46      }
0000fd46      
0000fd5a      int32_t r0 = arg1 & 0xf3ffffff;
0000fd5e      void* r1_1;
0000fd5e      int32_t r2_2;
0000fd5e      
0000fd5e      if (arg2 == 1)
0000fd5e      {
0000fd7c          r1_1 = (r2 << 2) + 0x40000200;
0000fd80          r2_2 = *(uint32_t*)((char*)r1_1 + 0x10) | r0;  /* "RY02_3.00.33_250117" */
0000fd5e      }
0000fd5e      else
0000fd5e      {
0000fd62          r1_1 = (r2 << 2) + 0x40000200;
0000fd66          r2_2 = *(uint32_t*)((char*)r1_1 + 0x10) & ~r0;  /* "RY02_3.00.33_250117" */
0000fd5e      }
0000fd5e      
0000fd68      *(uint32_t*)((char*)r1_1 + 0x10) = r2_2;  /* "RY02_3.00.33_250117" */
0000fd30  }


0000fd84    void sub_fd84(int32_t arg1, int32_t arg2)

0000fd84  {
0000fd8c      uint32_t r2_1 = arg1 << 1 >> 0x1e;  /* "50117" */
0000fd8c      
0000fd96      if (arg2 == 1)
0000fd96      {
0000fdb0          if (arg1 == 0x120 || arg1 == 0x140 || arg1 == 0x10)  /* "RY02_3.00.33_250117" */
0000fdb0          {
0000fdd6              *(uint32_t*)0x40000220 |= arg1;
0000fdd8              return;
0000fdb0          }
0000fd96      }
0000fd96      else if (arg1 == 0x120 || arg1 == 0x140 || arg1 == 0x10)  /* "RY02_3.00.33_250117" */
0000fda2      {
0000fdd6          *(uint32_t*)0x40000220 &= ~arg1;
0000fdd8          return;
0000fda2      }
0000fda2      
0000fdb6      int32_t r0 = arg1 & 0x9fffffff;
0000fdba      void* r1_1;
0000fdba      int32_t r2_4;
0000fdba      
0000fdba      if (arg2 == 1)
0000fdba      {
0000fddc          r1_1 = (r2_1 << 2) + 0x40000200;
0000fde4          r2_4 = *(uint32_t*)((char*)r1_1 + 0x2c) | r0 | r0 << 1;
0000fdba      }
0000fdba      else
0000fdba      {
0000fdbe          r1_1 = (r2_1 << 2) + 0x40000200;
0000fdc6          r2_4 = *(uint32_t*)((char*)r1_1 + 0x2c) & ~r0 & ~(r0 << 1);
0000fdba      }
0000fdba      
0000fdc8      *(uint32_t*)((char*)r1_1 + 0x2c) = r2_4;
0000fd84  }


0000fde8    void sub_fde8(int32_t arg1, int32_t arg2)

0000fde8  {
0000fdf2      if (arg1 == 0x40015000)
0000fdf2      {
0000fdfa          *(uint32_t*)0x40000238 = *(uint32_t*)0x40000238 >> 1 << 1;
0000fe04          *(uint32_t*)0x4000035c &= 0xfffe7fff;
0000fe0c          *(uint32_t*)0x4000035c |= arg2 << 0xf;
0000fe14          *(uint32_t*)0x40000238 |= 1;
0000fdf2      }
0000fdf2      else if (arg1 == 0x40015400)
0000fe1c      {
0000fe24          *(uint32_t*)0x40000238 &= 0xfffffffb;
0000fe2e          *(uint32_t*)0x4000035c &= 0xfff9ffff;
0000fe36          *(uint32_t*)0x4000035c |= arg2 << 0x11;  /* "Y02_3.00.33_250117" */
0000fe3c          *(uint32_t*)0x40000238 |= 4;
0000fe1c      }
0000fde8  }


0000fe40    void sub_fe40(int32_t arg1, int32_t arg2)

0000fe40  {
0000fe4a      if (arg1 == 0x40013000)
0000fe4a      {
0000fe52          *(uint32_t*)0x40000234 &= 0xfffeffff;
0000fe5c          *(uint32_t*)0x4000035c &= 0xffe7ffff;
0000fe84          *(uint32_t*)0x4000035c |= arg2 << 0x13;  /* "2_3.00.33_250117" */
0000fe8a          *(uint32_t*)0x40000234 |= 0x10000;
0000fe4a      }
0000fe4a      else if (arg1 == 0x40013400)
0000fe68      {
0000fe72          *(uint32_t*)0x40000234 &= 0xfffbffff;
0000fe7c          *(uint32_t*)0x4000035c &= 0xff9fffff;
0000fe84          *(uint32_t*)0x4000035c |= arg2 << 0x15;  /* "3.00.33_250117" */
0000fe8a          *(uint32_t*)0x40000234 |= 0x40000;
0000fe68      }
0000fe40  }


0000fe8e    int32_t sub_fe8e(int32_t arg1, int32_t arg2)

0000fe8e  {
0000fe98      *(uint32_t*)0x40000230 &= 0xffffbfff;
0000feaa      *(uint32_t*)0x40000360 &= ~(7 << (arg1 * 3 + 7));
0000feb2      *(uint32_t*)0x40000360 |= arg2 << (arg1 * 3 + 7);
0000feb6      int32_t result = *(uint32_t*)0x40000230 | 0x4000;
0000feb8      *(uint32_t*)0x40000230 = result;
0000feba      return result;
0000fe8e  }


0000febc    void sub_febc(int32_t arg1, int32_t arg2)

0000febc  {
0000fec6      if (arg1 == 0x40012000)
0000fec6      {
0000fece          *(uint32_t*)0x40000234 = *(uint32_t*)0x40000234 >> 1 << 1;
0000fed8          *(uint32_t*)0x4000035c &= 0xfffff9ff;
0000fee0          *(uint32_t*)0x4000035c |= arg2 << 9;
0000fee8          *(uint32_t*)0x40000234 |= 1;
0000fec6      }
0000fec6      else if (arg1 == 0x40011000)
0000fef0      {
0000fef4          int32_t r0_8 = arg1 >> 0x12;  /* "02_3.00.33_250117" */
0000fef8          *(uint32_t*)0x40000230 &= ~r0_8;
0000ff02          *(uint32_t*)0x4000035c &= 0xffffe7ff;
0000ff0a          *(uint32_t*)0x4000035c |= arg2 << 0xb;
0000ff10          *(uint32_t*)0x40000230 |= r0_8;
0000fef0      }
0000febc  }

0000ff14  int32_t data_ff14 = 0x40000200
0000ff18  int32_t data_ff18 = 0x60000040
0000ff1c  int32_t data_ff1c = 0x40001000
0000ff20  int32_t data_ff20 = 0x60010000
0000ff24  int32_t data_ff24 = 0x20004000
0000ff28  int32_t data_ff28 = 0x40000340
0000ff2c  int32_t data_ff2c = 0x40015000
0000ff30  int32_t data_ff30 = 0x40015400
0000ff34  int32_t data_ff34 = 0x40013000
0000ff38  int32_t data_ff38 = 0x40013400
0000ff3c  int32_t data_ff3c = 0x40012000
0000ff40  int32_t data_ff40 = 0x40011000

0000ff44    int32_t sub_ff44(uint32_t* arg1, int32_t* arg2)

0000ff44  {
0000ff44      int32_t r3;
0000ff44      int32_t var_18_1 = r3;
0000ff4a      int32_t var_18 = *(uint32_t*)arg2;
0000ff54      arg1[0x1b] = arg1[0x1b] >> 1 << 1;  /* "3_250117" */
0000ff56      uint32_t r0_4 = (uint32_t)arg2[2];
0000ff5e      uint32_t r2 = (uint32_t)*(uint16_t*)((char*)arg2 + 0xa);
0000ff5e      
0000ff62      if (r0_4 == 0x41)
0000ff62      {
0000ffd0          *(uint32_t*)arg1 = r0_4 | r2 << 4 | 0x20;  /* "117" */
0000ffde          arg1[1] = (uint32_t)arg2[3] << 0x16 >> 0x16
0000ffde              | (uint32_t)*(uint16_t*)((char*)arg2 + 0xa) << 0xc;  /* ".00.33_250117" */
0000ffe0          arg1[0x1f] = 8;  /* "0117" */
0000ff62      }
0000ff62      else
0000ff62      {
0000ff68          *(uint32_t*)arg1 = r0_4 | r2 << 3;
0000ff70          arg1[0x26] &= (uint32_t)*(uint16_t*)((char*)arg2 + 0xe);
0000ff74          arg1[2] = (uint32_t)arg2[3];
0000ff76          arg1[0x1f] = 8;  /* "0117" */
0000ff7a          arg1[0x25] = 2;
0000ff62      }
0000ff62      
0000ff7e      arg1[0xf] = arg2[4];
0000ff82      arg1[0xe] = arg2[5];
0000ff86      int32_t r0_11 = arg2[1];
0000ff86      
0000ff8e      if (r0_11 <= 0x186a0)
0000ff8e      {
0000ff94          *(uint32_t*)arg1 |= 6;
0000ff9c          *(uint32_t*)arg1 &= 0xfffb;
0000ffa0          int32_t r0_17 = sub_12b2a(var_18, 0x2710);
0000ffb4          arg1[5] = sub_12b2a(0xfa0 * r0_17, arg2[1]) + 0x14;  /* "_3.00.33_250117" */
0000ffc4          arg1[6] = sub_12b2a(0x125c * r0_17, arg2[1]) + 0x14;  /* "_3.00.33_250117" */
0000ff8e      }
0000ff8e      else if (r0_11 > 0x61a80)
0000ffe8      {
00010070          if (r0_11 > 0x33e140)
00010072              arg2[1] = 0x33e140;
00010072          
00010078          *(uint32_t*)arg1 |= 6;
0001007c          int32_t r0_56 = sub_12b2a(var_18, 0x2710);
00010090          arg1[9] = sub_12b2a(0x708 * r0_56, arg2[1]) + 8;
000100a2          arg1[0xa] = sub_12b2a(0xe10 * r0_56, arg2[1]) + 1;
0000ffe8      }
0000ffe8      else
0000ffe8      {
0000ffee          *(uint32_t*)arg1 |= 6;
0000fff8          *(uint32_t*)arg1 &= 0xfffd;
0000fffa          int32_t r7_1 = arg2[1];
00010000          int32_t r0_47;
00010000          
00010000          if (r7_1 == 0x30d40)
00010000          {
00010004              int32_t r0_35 = sub_12b2a(var_18, 0x2710);
0001005a              arg1[7] = sub_12b2a(0x960 * r0_35, r7_1) + 0x20;  /* "117" */
00010064              r0_47 = sub_12b2a(0x1450 * r0_35, arg2[1]);
00010000          }
00010000          else if (r7_1 != 0x61a80)
0001001e          {
00010046              int32_t r0_48 = sub_12b2a(var_18, 0x2710);
0001005a              arg1[7] = sub_12b2a(0x960 * r0_48, r7_1) + 0x14;  /* "_3.00.33_250117" */
00010064              r0_47 = sub_12b2a(0x1450 * r0_48, arg2[1]);
0001001e          }
0001001e          else
0001001e          {
00010020              int32_t r0_40 = sub_12b2a(var_18, 0x2710);
00010034              arg1[7] = sub_12b2a(0x960 * r0_40, r7_1) + 8;
00010042              r0_47 = sub_12b2a(0x1450 * r0_40, arg2[1]) + 1;
0001001e          }
0001001e          
00010068          arg1[8] = r0_47;
0000ffe8      }
0000ffe8      
000100ac      arg1[0x22] = (uint32_t)*(uint16_t*)((char*)arg2 + 0x1a) | (uint32_t)arg2[6] << 1;
000100ac          /* "33_250117" */  /* "7" */
000100b0      arg1[0x24] = (uint32_t)*(uint8_t*)((char*)arg2 + 0x1d);  /* "250117" */
000100b4      arg1[0x23] = (uint32_t)arg2[7];
000100b8      arg1[0xc] = 0;
000100ba      return 0;
0000ff44  }


000100bc    void sub_100bc(void* arg1)

000100bc  {
000100c2      if (arg1 == 0x40015000)
000100da          sub_fc34(0x8010000, 0x60000001, 0);
000100c2      else if (arg1 == 0x40015400)
000100da          sub_fc34(0x8020000, 0x60000004, 0);
000100bc  }


000100e0    void sub_100e0(int32_t* arg1)

000100e0  {
000100e2      *(uint32_t*)arg1 = 0x2625a00;
000100e6      arg1[1] = 0x61a80;
000100ea      arg1[2] = 0x41;
000100ee      *(uint16_t*)((char*)arg1 + 0xa) = 0;
000100f0      arg1[3] = 0;
000100f4      *(uint16_t*)((char*)arg1 + 0xe) = 1;
000100f6      arg1[4] = 0;
000100f8      arg1[5] = 0;
000100fa      arg1[6] = 0;
000100fc      *(uint16_t*)((char*)arg1 + 0x1a) = 0;  /* "33_250117" */
000100fe      *(uint8_t*)((char*)arg1 + 0x1d) = 1;  /* "250117" */
00010102      arg1[7] = 0xf;
000100e0  }


00010106    void sub_10106(void* arg1, int32_t arg2)

00010106  {
00010108      int32_t r1 = *(uint32_t*)((char*)arg1 + 0x6c);
0001010a      uint32_t r1_1;
0001010a      
0001010a      r1_1 = !arg2 ? r1 >> 1 << 1 : r1 | 1;
0001010a      
00010116      *(uint32_t*)((char*)arg1 + 0x6c) = r1_1;
00010106  }


0001011a    int32_t sub_1011a(int32_t arg1)

0001011a  {
0001011c      int32_t r1 = *(uint32_t*)(&data_80 + arg1);
0001011c      
00010122      if (r1 & 0x180f)
00010122      {
00010128          if (r1 << 0x1c < 0)  /* "_250117" */
0001012c              return 3;
0001012c          
00010130          if (r1 << 0x1f)  /* "0117" */
00010134              return 6;
00010134          
00010138          if (r1 << 0x13 < 0)  /* "2_3.00.33_250117" */
0001013c              return 1;
0001013c          
00010140          if (r1 << 0x14 < 0)  /* "_3.00.33_250117" */
00010144              return 2;
00010144          
00010148          if (r1 << 0x1e < 0)  /* "50117" */
0001014c              return 5;
0001014c          
00010150          if (r1 << 0x1d < 0)  /* "250117" */
00010154              return 4;
00010122      }
00010122      
00010158      return 0;
0001011a  }


0001015a    int32_t sub_1015a(void* arg1, char* arg2, int32_t arg3)

0001015a  {
0001015e      uint32_t r5 = 0;
00010162      char* r4 = arg2;
00010164      int32_t result = 0;
00010164      
000101a8      while (r5 < arg3)
000101a8      {
0001016c          uint32_t r0_1 = (uint32_t)*(uint8_t*)r4;
0001016c          
0001016e          if (r5 >= arg3 - 1)
00010174              r0_1 += 0x200;
00010174          
00010176          *(uint32_t*)((char*)arg1 + 0x10) = r0_1;  /* "RY02_3.00.33_250117" */
0001017a          r4 = &r4[1];
0001017c          int32_t r3_1 = *(uint32_t*)0x208484;
0001017c          
00010196          while (true)
00010196          {
00010196              if (*(uint32_t*)((char*)arg1 + 0x70) << 0x1e < 0 || !r3_1)  /* "50117" */
00010196              {
0001019a                  result = sub_1011a(arg1);
000101a0                  break;
00010196              }
00010196              
00010182              result = sub_1011a(arg1);
00010182              
00010188              if (result)
000101aa                  return result;
000101aa              
0001018a              int32_t temp0_1 = r3_1;
0001018a              r3_1 -= 1;
0001018a              
0001018c              if (temp0_1 == 1)
000101ae                  return 7;
000101ae              
0001018c              continue;
00010196          }
00010196          
000101a0          if (result)
000101a0              break;
000101a0          
000101a4          r5 = (uint32_t)((uint16_t)r5 + 1);
000101a8      }
000101a8      
000101aa      return result;
0001015a  }


000101b0    int32_t sub_101b0(void* arg1, char* arg2, int32_t arg3)

000101b0  {
000101b2      uint32_t r5 = 0;
000101b8      char* r6 = arg2;
000101bc      int32_t result = 0;
000101bc      
00010204      while (r5 < arg3)
00010204      {
000101c4          int32_t r1_1;
000101c4          
000101c4          r1_1 = r5 < arg3 - 1 ? 0x100 : 0x300;
000101c4          
000101d2          *(uint32_t*)((char*)arg1 + 0x10) = r1_1;  /* "RY02_3.00.33_250117" */
000101d2          
000101d6          if (r5)
000101d6          {
000101da              int32_t r3_1 = *(uint32_t*)0x208484;
000101da              
000101f4              while (true)
000101f4              {
000101f4                  if (*(uint32_t*)((char*)arg1 + 0x70) << 0x1c < 0 || !r3_1)  /* "_250117"
000101f4                      */
000101f4                  {
000101f8                      *(uint8_t*)r6 = (char)*(uint32_t*)((char*)arg1 + 0x10);
000101f8                          /* "RY02_3.00.33_250117" */
000101fa                      r6 = &r6[1];
000101fa                      break;
000101f4                  }
000101f4                  
000101e0                  result = sub_1011a(arg1);
000101e0                  
000101e6                  if (result)
00010228                      return result;
00010228                  
000101e8                  int32_t temp1_1 = r3_1;
000101e8                  r3_1 -= 1;
000101e8                  
000101ea                  if (temp1_1 == 1)
0001022c                      return 7;
0001022c                  
000101ea                  continue;
000101f4              }
000101d6          }
000101d6          
000101fe          r5 = (uint32_t)((uint16_t)r5 + 1);
00010204      }
00010204      
00010208      int32_t r3_2 = *(uint32_t*)0x208484;
00010208      
00010222      while (true)
00010222      {
00010222          if (*(uint32_t*)((char*)arg1 + 0x70) << 0x1c < 0 || !r3_2)  /* "_250117" */
00010222          {
00010226              *(uint8_t*)r6 = (char)*(uint32_t*)((char*)arg1 + 0x10);
00010226                  /* "RY02_3.00.33_250117" */
00010228              return result;
00010222          }
00010222          
0001020e          result = sub_1011a(arg1);
0001020e          
00010214          if (result)
00010228              return result;
00010228          
00010216          int32_t temp0_1 = r3_2;
00010216          r3_2 -= 1;
00010216          
00010218          if (temp0_1 == 1)
0001022c              return 7;
0001022c          
00010218          continue;
00010222      }
000101b0  }


0001022e    int32_t sub_1022e(void* arg1, char* arg2, int32_t arg3, char* arg4, int32_t arg5)

0001022e  {
0001022e      char* var_18 = arg4;
0001022e      char* var_20 = arg2;
0001022e      void* var_24 = arg1;
00010230      uint32_t i = 0;
00010234      char* r7 = arg2;
00010238      int32_t result = 0;
00010238      
00010272      for (; i < arg3; i = (uint32_t)((uint16_t)i + 1))
00010272      {
0001023e          *(uint32_t*)((char*)arg1 + 0x10) = (uint32_t)*(uint8_t*)r7;
0001023e              /* "RY02_3.00.33_250117" */
00010242          r7 = &r7[1];
00010244          int32_t r5_1 = *(uint32_t*)0x208484;
00010244          
0001025a          while (*(uint32_t*)((char*)arg1 + 0x70) << 0x1e >= 0)  /* "50117" */
0001025a          {
0001025e              if (!r5_1)
0001025e                  break;
0001025e              
0001024a              result = sub_1011a(arg1);
0001024a              
00010250              if (result)
000102e4                  return result;
000102e4              
00010252              int32_t temp0_1 = r5_1;
00010252              r5_1 -= 1;
00010252              
00010254              if (temp0_1 == 1)
000102e6                  return 7;
0001025a          }
0001025a          
00010262          result = sub_1011a(arg1);
00010262          
00010268          if (result)
000102e4              return result;
00010272      }
00010272      
000102be      for (uint32_t i_1 = 0; i_1 < arg5; i_1 = (uint32_t)((uint16_t)i_1 + 1))
000102be      {
0001027e          int32_t r2;
0001027e          
0001027e          r2 = i_1 < arg5 - 1 ? 0x100 : 0x300;
0001027e          
0001028c          *(uint32_t*)((char*)arg1 + 0x10) = r2;  /* "RY02_3.00.33_250117" */
0001028c          
00010290          if (i_1)
00010290          {
00010294              int32_t r5_2 = *(uint32_t*)0x208484;
00010294              
000102aa              while (*(uint32_t*)((char*)arg1 + 0x70) << 0x1c >= 0)  /* "_250117" */
000102aa              {
000102ae                  if (!r5_2)
000102ae                      break;
000102ae                  
0001029a                  result = sub_1011a(arg1);
0001029a                  
000102a0                  if (result)
000102e4                      return result;
000102e4                  
000102a2                  int32_t temp2_1 = r5_2;
000102a2                  r5_2 -= 1;
000102a2                  
000102a4                  if (temp2_1 == 1)
000102e6                      return 7;
000102aa              }
000102aa              
000102b2              *(uint8_t*)arg4 = (char)*(uint32_t*)((char*)arg1 + 0x10);
000102b2                  /* "RY02_3.00.33_250117" */
000102b4              arg4 = &arg4[1];
00010290          }
000102be      }
000102be      
000102c2      int32_t r5_3 = *(uint32_t*)0x208484;
000102c2      
000102dc      while (true)
000102dc      {
000102dc          if (*(uint32_t*)((char*)arg1 + 0x70) << 0x1c < 0 || !r5_3)  /* "_250117" */
000102dc          {
000102e0              *(uint8_t*)arg4 = (char)*(uint32_t*)((char*)arg1 + 0x10);
000102e0                  /* "RY02_3.00.33_250117" */
000102e4              return result;
000102dc          }
000102dc          
000102c8          result = sub_1011a(arg1);
000102c8          
000102ce          if (result)
000102e4              return result;
000102e4          
000102d0          int32_t temp1_1 = r5_3;
000102d0          r5_3 -= 1;
000102d0          
000102d2          if (temp1_1 == 1)
000102e6              return 7;
000102e6          
000102d2          continue;
000102dc      }
0001022e  }


000102ea    void sub_102ea(void* arg1, int32_t arg2, int32_t arg3)

000102ea  {
000102ec      int32_t r2 = *(uint32_t*)((char*)arg1 + 0x30);  /* "RY02_V3.0" */
000102ee      int32_t r2_1;
000102ee      
000102ee      r2_1 = !arg3 ? r2 & (uint32_t)(uint16_t)~arg2 : r2 | arg2;
000102ee      
000102fa      *(uint32_t*)((char*)arg1 + 0x30) = r2_1;  /* "RY02_V3.0" */
000102ea  }


000102fe    void sub_102fe(void* arg1, int32_t arg2)

000102fe  {
00010300      if (arg2 == 0x80)
00010300      {
0001034e          *(uint32_t*)((char*)arg1 + 0x58);
00010350          return;
00010300      }
00010300      
00010302      if (arg2 > 0x80)
00010302      {
00010326          if (arg2 == 0x100)
00010326          {
00010352              *(uint32_t*)((char*)arg1 + 0x5c);
00010354              return;
00010326          }
00010326          
0001032c          if (arg2 == 0x200)
0001032c          {
00010356              *(uint32_t*)((char*)arg1 + 0x60);
00010358              return;
0001032c          }
0001032c          
00010334          if (arg2 == 0x400)
00010334          {
0001035a              *(uint32_t*)((char*)arg1 + 0x64);
0001035c              return;
00010334          }
00010334          
0001033c          if (arg2 == 0x800)
0001033e              *(uint32_t*)((char*)arg1 + 0x68);
00010302      }
00010302      else
00010302      {
00010306          if (arg2 == 8)
00010306          {
00010346              *(uint32_t*)((char*)arg1 + 0x4c);
00010348              return;
00010306          }
00010306          
00010308          if (arg2 <= 8)
00010308          {
0001030c              if (arg2 == 1)
0001030c              {
00010342                  *(uint32_t*)((char*)arg1 + 0x44);
00010344                  return;
0001030c              }
0001030c              
00010310              if (arg2 == 2)
00010312                  *(uint32_t*)((char*)arg1 + 0x48);
00010312              
00010314              return;
00010308          }
00010308          
00010318          if (arg2 == 0x20)  /* "117" */
00010318          {
0001034a              *(uint32_t*)((char*)arg1 + 0x50);
0001034c              return;
00010318          }
00010318          
0001031c          if (arg2 != 0x40)
00010314              return;
00010314          
0001031e          *(uint32_t*)((char*)arg1 + 0x54);
00010302      }
000102fe  }

0001035e                                                                                            00 00                                ..

00010360  int32_t data_10360 = 0x186a0
00010364  int32_t data_10364 = 0x2710
00010368  char const (* data_10368)[0x2] = 0xfffb
0001036c  int32_t data_1036c = 0x125c
00010370  int32_t data_10370 = 0x61a80
00010374  int32_t data_10374 = 0x1450
00010378  int32_t data_10378 = 0x33e140
0001037c  int32_t data_1037c = 0x40015000
00010380  int32_t data_10380 = 0x60000001
00010384  int32_t data_10384 = 0x8010000
00010388  int32_t data_10388 = 0x40015400
0001038c  int32_t data_1038c = 0x8020000
00010390  int32_t data_10390 = 0x2625a00
00010394  int32_t data_10394 = 0x180f
00010398  int32_t data_10398 = 0x208484

0001039c    void* sub_1039c()

0001039c  {
000103aa      return sub_fc34(0xc000100, 0x21000000, 0);
0001039c  }


000103ac    void sub_103ac(int32_t* arg1)

000103ac  {
000103b4      int32_t r2 = *(uint32_t*)arg1;
000103b6      int32_t r3_1 = *(uint32_t*)0x40001004;
000103b6      
000103b8      if ((uint32_t)arg1[1] == 1)
000103b8      {
0001041c          *(uint32_t*)0x40001004 = r3_1 | r2;
00010422          int32_t r2_13 = *(uint32_t*)0x40001008;
00010424          int32_t r0_4 = *(uint32_t*)arg1;
00010426          int32_t r2_14;
00010426          
00010426          if (!(uint32_t)*(uint8_t*)((char*)arg1 + 9))
0001042e              r2_14 = r2_13 & ~r0_4;
00010426          else
00010428              r2_14 = r2_13 | r0_4;
00010428          
0001042a          *(uint32_t*)0x40001008 = r2_14;
0001042c          return;
000103b8      }
000103b8      
000103bc      *(uint32_t*)0x40001004 = r3_1 & ~r2;
000103bc      
000103c2      if ((uint32_t)*(uint8_t*)((char*)arg1 + 5) != 1)
000103c2          return;
000103c2      
000103c6      *(uint32_t*)0x40001034 = 0;
000103ca      uint32_t r2_2 = (uint32_t)*(uint8_t*)((char*)arg1 + 6);
000103ca      
000103d0      if (!r2_2)
000103d0      {
00010438          *(uint32_t*)0x40001038 &= ~*(uint32_t*)arg1;
00010440          *(uint32_t*)0x40001060 |= *(uint32_t*)arg1;
000103d0      }
000103d0      else if (r2_2 == 1)
000103d4      {
00010446          int32_t r2_19 = *(uint32_t*)arg1;
0001044c          *(uint32_t*)0x40001038 = (*(uint32_t*)0x40001038 & ~r2_19) | r2_19;
000103d4      }
000103d4      else
000103dc          *(uint32_t*)0x40001068 |= *(uint32_t*)arg1;
000103dc      
000103e2      if (!(uint32_t)*(uint8_t*)((char*)arg1 + 7))
00010456          *(uint32_t*)0x4000103c &= ~*(uint32_t*)arg1;
000103e2      else
000103e2      {
000103e6          int32_t r2_6 = *(uint32_t*)arg1;
000103ec          *(uint32_t*)0x4000103c = (*(uint32_t*)0x4000103c & ~r2_6) | r2_6;
000103e2      }
000103e2      
000103f2      if (!(uint32_t)arg1[2])
000103f2      {
00010460          *(uint32_t*)0x40001048 &= ~*(uint32_t*)arg1;
00010462          return;
000103f2      }
000103f2      
000103f6      int32_t r1_2 = *(uint32_t*)arg1;
000103fc      *(uint32_t*)0x40001048 = (*(uint32_t*)0x40001048 & ~r1_2) | r1_2;
00010404      *(uint32_t*)0x40000344 = 0x1c00;
00010416      *(uint32_t*)0x40000344 |= (uint32_t)((char)((0x4e20 * arg1[3]) >> 0xd) - 1);
000103ac  }


00010464    void sub_10464(int32_t* arg1)

00010464  {
00010468      *(uint32_t*)arg1 = 0xffffffff;
0001046c      arg1[1] = 0;
0001046e      *(uint8_t*)((char*)arg1 + 5) = 0;
00010470      *(uint8_t*)((char*)arg1 + 6) = 0;
00010472      *(uint8_t*)((char*)arg1 + 7) = 0;
00010474      arg1[2] = 0;
00010476      *(uint8_t*)((char*)arg1 + 9) = 0;
0001047a      arg1[3] = 0x14;  /* "_3.00.33_250117" */
00010464  }


0001047e    void sub_1047e(int32_t arg1, int32_t arg2)

0001047e  {
00010482      int32_t r1 = *(uint32_t*)0x40001030;
00010484      int32_t r1_1;
00010484      
00010484      r1_1 = !arg2 ? r1 & ~arg1 : r1 | arg1;
00010484      
0001048c      *(uint32_t*)0x40001030 = r1_1;
0001047e  }


00010490    void sub_10490(int32_t arg1)

00010490  {
00010494      *(uint32_t*)0x4000104c = arg1;
00010490  }


00010498    void sub_10498(int32_t arg1, int32_t arg2)

00010498  {
0001049c      int32_t r1 = *(uint32_t*)0x40001034;
0001049e      int32_t r1_1;
0001049e      
0001049e      r1_1 = !arg2 ? r1 & ~arg1 : r1 | arg1;
0001049e      
000104a6      *(uint32_t*)0x40001034 = r1_1;
00010498  }


000104aa    int32_t sub_104aa(int32_t arg1) __pure

000104aa  {
000104ae      if (arg1 <= 0x1e)  /* "50117" */
000104b4          return 1 << arg1;
000104b4      
000104b8      if (arg1 == 0x20)  /* "117" */
000104ca          return 0x2000;
000104ca      
000104c0      int32_t r2_2;
000104c0      
000104c0      if (arg1 - 0x21 > 2)  /* "17" */
000104c0      {
000104d2          if (arg1 - 0x24 > 2)
000104de              return 0xff;
000104de          
000104d4          r2_2 = arg1 - 0x1a;  /* "33_250117" */
000104c0      }
000104c0      else
000104c2          r2_2 = arg1 - 4;
000104c2      
000104da      return 1 << r2_2;
000104aa  }


000104e0    void sub_104e0(int32_t arg1) __pure

00010504  {
00010504      return;
00010504  }


0001050a    int32_t sub_1050a(int32_t arg1)

0001050a  {
00010510      int32_t r0 = *(uint32_t*)0x40000344;
00010512      int32_t result;
00010512      
00010512      result = !arg1 ? r0 & 0xffffefff : r0 | 0x1000;
00010512      
0001051a      *(uint32_t*)0x40000344 = result;
0001051c      return result;
0001050a  }

0001051e                                                                                            00 00                                ..

00010520  int32_t data_10520 = 0xc000100
00010524  int32_t data_10524 = 0x40001000
00010528  int32_t data_10528 = 0x40000340
0001052c  void* data_1052c = data_4e20

00010530    void* sub_10530()

00010530  {
0001053e      return sub_fc34(0xc000001, 0x61000000, 0);
00010530  }


00010540    int32_t sub_10540(void* arg1, int32_t* arg2)

00010540  {
00010558      0xff80f02a(0x116, 0x400 | 0xff80efe4(0x116));
00010568      0xff80f02a(0x116, 0x30 | 0xff80efe4(0x116));  /* "RY02_V3.0" */
00010572      *(uint32_t*)((char*)arg1 + 0xc) = *(uint32_t*)((char*)arg1 + 0xc) >> 5 << 5;
00010582      *(uint32_t*)((char*)arg1 + 0x50) =
00010582          arg2[0x16] | arg2[0x15] | arg2[0x17] << 0x1d >> 0x17;  /* "3.00.33_250117" */  /* "
00010582          .00.33_250117" */  /* "00.33_250117" */  /* "250117" */
00010582      
00010588      if (!arg2[0x15])  /* "3.00.33_250117" */
00010598          *(uint32_t*)((char*)arg1 + 0x50) =
00010598              *(uint32_t*)((char*)arg1 + 0x50) | arg2[0x18] | arg2[0x19] | arg2[0x1a];
00010598              /* "0.33_250117" */  /* ".33_250117" */  /* "33_250117" */
00010598      
0001059c      int32_t r0_12 = arg2[0x14];  /* "_3.00.33_250117" */
000105a2      uint32_t r0_20;
000105a2      
000105a2      if (r0_12 != 0x1000000)
000105a2      {
000105c8          *(uint32_t*)((char*)arg1 + 8) = *(uint32_t*)((char*)arg1 + 8) >> 0x10 << 0x10;
000105c8              /* "RY02_3.00.33_250117" */
000105c8          
000105e8          for (uint32_t i = 0; i < 8; i = (uint32_t)((uint8_t)i + 1))
000105e8          {
000105ce              void* r1_11 = &arg2[i];
000105e0              *(uint32_t*)((i << 2) + arg1 + 0x10) =
000105e0                  (uint32_t)*(uint8_t*)((char*)r1_11 + 0x1c) << 0x1b >> 0x1b
000105e0                  | (uint32_t)*(uint8_t*)((char*)r1_11 + 0x1e) << 0x1b >> 0xb;  /* "
000105e0                  RY02_3.00.33_250117" */  /* "3_250117" */  /* "_250117" */  /* "50117" */
000105e8          }
000105e8          
000105ea          r0_20 = (uint32_t)arg2[0xf];
000105a2      }
000105a2      else
000105a2      {
000105ac          *(uint32_t*)((char*)arg1 + 0x50) |= r0_12 | arg2[0x13];  /* "2_3.00.33_250117" */
000105b4          *(uint32_t*)((char*)arg1 + 8) = *(uint32_t*)((char*)arg1 + 8) >> 0x10 << 0x10;
000105b4              /* "RY02_3.00.33_250117" */
000105b8          *(uint32_t*)((char*)arg1 + 0x10) = (uint32_t)arg2[7];  /* "RY02_3.00.33_250117" */
000105be          r0_20 = *(uint32_t*)((char*)arg1 + 8) | 1;
000105a2      }
000105a2      
000105ec      *(uint32_t*)((char*)arg1 + 8) = r0_20;
00010608      *(uint32_t*)((char*)arg1 + 4) = arg2[2] | arg2[5] | (uint32_t)arg2[3] << 0x1a >> 6
00010608          | (uint32_t)arg2[4] << 0x1a >> 0xc | arg2[6];  /* "33_250117" */
00010618      *(uint32_t*)((char*)arg1 + 0x54) = arg2[0x11] | arg2[0x10] | arg2[0x12] << 0x14 >> 4;
00010618          /* "RY02_3.00.33_250117" */  /* "Y02_3.00.33_250117" */  /* "02_3.00.33_250117"
00010618          */  /* "_3.00.33_250117" */
00010622      *(uint32_t*)((char*)arg1 + 0x58) |= 0xc00;
00010622      
0001062c      if ((uint32_t)*(uint16_t*)arg2 << 0x12 >> 0x12 < 0x13)  /* "02_3.00.33_250117" */
0001062c              /* "2_3.00.33_250117" */
00010630          *(uint32_t*)arg2 = 0x13;  /* "2_3.00.33_250117" */
00010630      
0001063c      *(uint32_t*)((char*)arg1 + 0x5c) =
0001063c          arg2[1] | (uint32_t)*(uint16_t*)arg2 << 0x12 >> 0x12;  /* "02_3.00.33_250117" */
00010646      *(uint32_t*)((char*)arg1 + 4) |= 0x4000000;
0001064e      int32_t result = *(uint32_t*)((char*)arg1 + 0xc) | 0x1f00;
00010650      *(uint32_t*)((char*)arg1 + 0xc) = result;
00010652      return result;
00010540  }


00010654    void sub_10654(int32_t* arg1)

00010654  {
00010656      *(uint32_t*)arg1 = 0xff;
0001065a      arg1[1] = 0;
0001065e      arg1[3] = 0xa;
00010662      arg1[2] = 0;
00010666      arg1[5] = 0x2000;
00010668      arg1[4] = 1;
0001066a      __builtin_memset(&arg1[6], 0, 0x26);
0001068e      __builtin_memset(&arg1[0x10], 0, 0x1c);  /* "RY02_3.00.33_250117" */  /* "_250117" */
0001069c      arg1[0x18] = 0;  /* "0.33_250117" */
0001069e      arg1[0x19] = 0;  /* ".33_250117" */
000106a0      arg1[0x17] = 1;  /* "00.33_250117" */
000106a2      arg1[0x1a] = 0;  /* "33_250117" */
00010654  }


000106a6    int32_t sub_106a6(void* arg1, int32_t arg2, int32_t arg3)

000106a6  {
000106b2      if (arg3 != 1)
000106b2      {
000106ba          *(uint32_t*)((char*)arg1 + 4) = *(uint32_t*)((char*)arg1 + 4) >> 2 << 2;
000106ce          return 0xff80f02a(0x113, (uint32_t)0xff80efe4(0x113) | 4);
000106b2      }
000106b2      
000106de      0xff80f02a(0x113, (uint32_t)0xff80efe4(0x113) & 0xfb);
000106de      
000106e6      if (*(uint32_t*)((char*)arg1 + 0x50) << 0xc < 0)
000106e6      {
000106f0          *(uint32_t*)((char*)arg1 + 0x50) |= 0x3c00;
000106f8          (*(uint32_t*)0x20011c)(0x50);
00010702          *(uint32_t*)((char*)arg1 + 0x50) |= 0xc000;
0001070a          (*(uint32_t*)0x20011c)(0x140);
00010714          *(uint32_t*)((char*)arg1 + 0x50) |= 0x30000;
0001071a          (*(uint32_t*)0x20011c)(0xf0);
00010724          *(uint32_t*)((char*)arg1 + 0x50) |= 0x40000;
000106e6      }
000106e6      
0001072c      *(uint32_t*)((char*)arg1 + 4) = *(uint32_t*)((char*)arg1 + 4) >> 2 << 2;
00010730      int32_t result = *(uint32_t*)((char*)arg1 + 4) | arg2;
00010732      *(uint32_t*)((char*)arg1 + 4) = result;
00010734      return result;
000106a6  }


00010736    void sub_10736(void* arg1, int32_t arg2, int32_t arg3)

00010736  {
00010738      int32_t r2 = *(uint32_t*)((char*)arg1 + 0xc);
0001073a      int32_t r2_1;
0001073a      
0001073a      r2_1 = !arg3 ? r2 & ~arg2 : r2 | arg2;
0001073a      
00010742      *(uint32_t*)((char*)arg1 + 0xc) = r2_1;
00010736  }


00010746    uint32_t sub_10746(int32_t arg1, int32_t arg2)

00010746  {
0001074e      int32_t r0_1 = *(uint32_t*)((arg2 >> 1 << 2) + arg1 + 0x30);  /* "RY02_V3.0" */
0001074e      
00010752      if (!(arg2 << 0x1f))  /* "0117" */
0001075a          return (uint32_t)(uint16_t)r0_1;
0001075a      
00010756      return r0_1 >> 0x10;  /* "RY02_3.00.33_250117" */
00010746  }


0001075c    uint32_t sub_1075c(void* arg1)

0001075c  {
00010760      return (uint32_t)(uint16_t)*(uint32_t*)((char*)arg1 + 0x30);  /* "RY02_V3.0" */
0001075c  }


00010762    uint32_t sub_10762(int32_t* arg1)

00010762  {
00010768      return *(uint32_t*)arg1 << 0x14 >> 0x14;  /* "_3.00.33_250117" */
00010762  }


0001076a    void sub_1076a(int32_t* arg1, int16_t* arg2, uint32_t arg3)

0001076a  {
00010772      while (true)
00010772      {
00010772          uint32_t r3_2 = arg3;
00010776          arg3 = (uint32_t)((uint16_t)arg3 - 1);
00010776          
0001077a          if (!r3_2)
0001077a              break;
0001077a          
0001076e          *(uint16_t*)arg2 = (int16_t)*(uint32_t*)arg1;
00010770          arg2 = &arg2[1];
00010772      }
0001076a  }


0001077e    uint32_t sub_1077e(void* arg1)

0001077e  {
00010784      return *(uint32_t*)((char*)arg1 + 8) << 0xa >> 0x1a;  /* "33_250117" */
0001077e  }


00010786    int32_t sub_10786(int32_t arg1, int32_t arg2, int32_t arg3)

00010786  {
0001078c      void* r2_2 = (arg3 >> 1 << 2) + arg1;
0001078c      
00010792      if (arg3 << 0x1f)  /* "0117" */
00010794          arg2 <<= 0x10;  /* "RY02_3.00.33_250117" */
00010794      
00010796      int32_t result = *(uint32_t*)((char*)r2_2 + 0x10) | arg2;  /* "RY02_3.00.33_250117" */
00010798      *(uint32_t*)((char*)r2_2 + 0x10) = result;  /* "RY02_3.00.33_250117" */
0001079a      return result;
00010786  }


0001079c    int32_t sub_1079c(int32_t arg1, int32_t arg2, int32_t arg3)

0001079c  {
000107a2      void* r1_2 = (arg2 >> 1 << 2) + arg1;
000107a2      
000107a8      if (arg2 << 0x1f)  /* "0117" */
000107aa          arg3 <<= 0x10;  /* "RY02_3.00.33_250117" */
000107aa      
000107ac      int32_t result = *(uint32_t*)((char*)r1_2 + 0x10) | arg3;  /* "RY02_3.00.33_250117" */
000107ae      *(uint32_t*)((char*)r1_2 + 0x10) = result;  /* "RY02_3.00.33_250117" */
000107b0      return result;
0001079c  }


000107b2    void sub_107b2(void* arg1, int32_t arg2, int32_t arg3)

000107b2  {
000107b4      int32_t r2 = *(uint32_t*)((char*)arg1 + 8);
000107b6      int32_t r2_1;
000107b6      
000107b6      r2_1 = arg3 == 1 ? r2 | arg2 : r2 & ~arg2;
000107b6      
000107ba      *(uint32_t*)((char*)arg1 + 8) = r2_1;
000107b2  }


000107c2    void sub_107c2(void* arg1, int32_t arg2)

000107c2  {
000107c8      int32_t r1 = *(uint32_t*)((char*)arg1 + 0x50);
000107ca      int32_t r1_1;
000107ca      
000107ca      r1_1 = !arg2 ? r1 & 0xfff7ffff : r1 | 0x80000;
000107ca      
000107d2      *(uint32_t*)((char*)arg1 + 0x50) = r1_1;
000107c2  }


000107d6    void sub_107d6(void* arg1, int32_t arg2)

000107d6  {
000107dc      int32_t r1 = *(uint32_t*)((char*)arg1 + 0x50);
000107de      int32_t r1_1;
000107de      
000107de      r1_1 = !arg2 ? r1 | 0x200000 : r1 & 0xffdfffff;
000107de      
000107e2      *(uint32_t*)((char*)arg1 + 0x50) = r1_1;
000107d6  }


000107ea    void sub_107ea(int32_t arg1, int32_t arg2)

000107ea  {
000107ee      if (arg1 > 3)
000107ee          return;
000107ee      
000107f6      int32_t r4_1 = 1 << arg1;
000107fc      uint32_t r1;
000107fc      
000107fc      if (!arg2)
0001080e          r1 = 0xff80efe4(0x118) & ~r4_1;
000107fc      else
00010804          r1 = (uint32_t)(uint16_t)r4_1 | (uint32_t)0xff80efe4(0x118);
00010804      
00010812      0xff80f02a(0x118, r1);
000107ea  }


00010818    int32_t sub_10818(void* arg1, int32_t arg2)

00010818  {
00010822      if (!(*(uint32_t*)((char*)arg1 + 0xc) & arg2 << 0x10))  /* "RY02_3.00.33_250117" */
00010826          return 0;
00010826      
00010824      return 1;
00010818  }


00010828    void sub_10828(void* arg1, int32_t arg2)

00010828  {
0001082e      *(uint32_t*)((char*)arg1 + 0xc) |= arg2 << 8;
00010828  }

00010832                                                        00 00                                                        ..

00010834  int32_t data_10834 = 0xc000001
00010838  int32_t data_10838 = 0x20011c

0001083c    void* sub_1083c()

0001083c  {
0001084a      return sub_fc34(0x10000, 0x20004000, 0);
0001083c  }


0001084c    int32_t sub_1084c(int32_t* arg1, void* arg2)

0001084c  {
00010858      int32_t r0_1 = sub_12b2a(&arg1[-0x10000800], 0x14);  /* "_3.00.33_250117" */
00010864      *(uint32_t*)0x40000360 |= 0x200;
00010864      
0001086a      if (*(uint32_t*)0x40000360 << 0x15 < 0)  /* "3.00.33_250117" */
00010872          *(uint32_t*)0x40000360 &= 0xfffffbff;
00010872      
00010878      int32_t r2_7;
00010878      
00010878      if (r0_1 < 2)
00010878      {
0001087e          r2_7 = r0_1 * 3;
00010894          *(uint32_t*)0x40000360 &= ~(7 << r2_7);
0001089e          *(uint32_t*)0x40000360 |= (uint32_t)*(uint16_t*)((char*)arg2 + 4) << r2_7;
00010878      }
00010878      else if (r0_1 - 2 < 4)
00010886      {
0001088e          r2_7 = r0_1 * 3 + 7;
00010894          *(uint32_t*)0x40000360 &= ~(7 << r2_7);
0001089e          *(uint32_t*)0x40000360 |= (uint32_t)*(uint16_t*)((char*)arg2 + 4) << r2_7;
00010886      }
00010886      
000108a6      if (r0_1 == 3 || r0_1 == 5)
000108a6      {
000108b0          int32_t r3_6 = *(uint32_t*)0x4000035c;
000108b2          int32_t r3_7;
000108b2          
000108b2          if ((uint32_t)*(uint8_t*)(&data_24 + arg2) == 1)
000108f6              r3_7 = r3_6 | 1 << (((r0_1 - 1) >> 1) - 1);
000108b2          else
000108bc              r3_7 = r3_6 & ~(1 << (((r0_1 - 1) >> 1) - 1));
000108bc          
000108be          *(uint32_t*)0x4000035c = r3_7;
000108a6      }
000108a6      
000108c4      uint32_t r2_14 = (uint32_t)*(uint16_t*)((char*)arg2 + 8);
000108c6      int32_t r2_18;
000108c6      
000108c6      if (!(uint32_t)*(uint16_t*)((char*)arg2 + 0xa))
000108c6      {
00010900          arg1[2] = r2_14 << 1 | 4;
00010902          r2_18 = *(uint32_t*)((char*)arg2 + 0xc);
000108c6      }
000108c6      else
000108c6      {
000108ce          arg1[2] = r2_14 << 1 | 0xc;
000108d8          *(uint32_t*)((r0_1 << 2) + 0x400020b0) = *(uint32_t*)((char*)arg2 + 0x10);
000108d8              /* "RY02_3.00.33_250117" */
000108da          r2_18 = *(uint32_t*)((char*)arg2 + 0x14);  /* "_3.00.33_250117" */
000108c6      }
000108c6      
000108dc      *(uint32_t*)arg1 = r2_18;
000108dc      
000108e6      if ((uint32_t)*(uint16_t*)((char*)arg2 + 0x2c) == 1)
000108e6      {
00010908          if (r0_1 == 2)
00010920              *(uint32_t*)0x40000364 = *(uint32_t*)((char*)arg2 + 0x28)
00010920                  | (uint32_t)*(uint16_t*)((char*)arg2 + 0x30) << 9
00010920                  | (uint32_t)*(uint16_t*)((char*)arg2 + 0x2e) << 0xa | 0x61000;
00010920                  /* "RY02_V3.0" */
000108e6      }
000108e6      else if (r0_1 == 2)
00010920          *(uint32_t*)0x40000364 &= 0xfff9efff;
00010920      
00010924      return arg1[3];
0001084c  }


00010926    void sub_10926(void* arg1)

00010926  {
00010928      *(uint16_t*)((char*)arg1 + 8) = 1;
0001092c      *(uint32_t*)((char*)arg1 + 0xc) = 0xfff;
00010930      *(uint16_t*)((char*)arg1 + 4) = 0;
00010934      *(uint8_t*)(&data_24 + arg1) = 0;
00010936      *(uint16_t*)((char*)arg1 + 0xa) = 0;
00010938      *(uint16_t*)((char*)arg1 + 0x2e) = 0;
0001093a      *(uint16_t*)((char*)arg1 + 0x30) = 1;  /* "RY02_V3.0" */
0001093c      *(uint16_t*)((char*)arg1 + 0x2c) = 0;
00010926  }


00010940    void sub_10940(void* arg1, int32_t arg2)

00010940  {
00010942      int32_t r1 = *(uint32_t*)((char*)arg1 + 8);
00010944      uint32_t r1_1;
00010944      
00010944      r1_1 = !arg2 ? r1 >> 1 << 1 : r1 | 1;
00010944      
00010950      *(uint32_t*)((char*)arg1 + 8) = r1_1;
00010940  }


00010954    void sub_10954(int32_t* arg1, int32_t arg2)

00010954  {
00010954      *(uint32_t*)arg1 = arg2;
00010954  }


00010958    void sub_10958(void* arg1, int32_t arg2)

00010958  {
0001095c      int32_t r1 = *(uint32_t*)((char*)arg1 + 8);
0001095e      int32_t r1_1;
0001095e      
0001095e      r1_1 = !arg2 ? r1 | 4 : r1 & 0xfffffffb;
0001095e      
00010966      *(uint32_t*)((char*)arg1 + 8) = r1_1;
00010958  }


0001096a    int32_t* sub_1096a(int32_t* arg1, int32_t arg2, int32_t arg3)

0001096a  {
00010978      int32_t r0_1 = sub_12b2a(&arg1[-0x10000800], 0x14);  /* "_3.00.33_250117" */
0001097c      *(uint32_t*)arg1 = arg3;
00010984      *(uint32_t*)((r0_1 << 2) + 0x400020b0) = arg2;
00010986      return (r0_1 << 2) + 0x400020b0;
0001096a  }


00010988    void sub_10988(int32_t* arg1, int32_t arg2)

00010988  {
0001098e      int32_t r1 = *(uint32_t*)arg1;
00010990      int32_t r1_1;
00010990      
00010990      r1_1 = !arg2 ? r1 & 0xfffffeff : r1 | 0x100;
00010990      
00010998      *(uint32_t*)arg1 = r1_1;
00010988  }


0001099c    void sub_1099c(int32_t* arg1, int32_t arg2)

0001099c  {
000109a2      int32_t r1 = *(uint32_t*)arg1;
000109a4      int32_t r1_1;
000109a4      
000109a4      r1_1 = !arg2 ? r1 & 0xffffdfff : r1 | 0x2000;
000109a4      
000109ac      *(uint32_t*)arg1 = r1_1;
0001099c  }


000109b0    void sub_109b0(int32_t* arg1, int32_t arg2)

000109b0  {
000109b6      int32_t r1 = *(uint32_t*)arg1;
000109b8      int32_t r1_1;
000109b8      
000109b8      r1_1 = !arg2 ? r1 & 0xfffeffff : r1 | 0x10000;
000109b8      
000109c0      *(uint32_t*)arg1 = r1_1;
000109b0  }

000109c4  int32_t data_109c4 = 0x20004000
000109c8  int32_t data_109c8 = -0x40002000
000109cc  int32_t data_109cc = 0x40000340
000109d0  int32_t data_109d0 = 0x400020b0
000109d4  int32_t data_109d4 = 0xfff

000109d8    int32_t sub_109d8(int32_t arg1, int32_t arg2, int32_t arg3)

000109d8  {
000109da      int32_t result = 1;
000109da      
000109f8      if (arg1 == 1 && arg2 <= 0x12c)
000109f8      {
00010a00          0xff81b898(0x20d810, arg3, arg2);
00010a06          *(uint16_t*)0x208488 = (int16_t)arg2;
000109f8      }
000109f8      else
000109f8      {
000109e4          result = 0;
000109ec          0xff7e1af8(0x23103000, 0x8801690, 0, arg3);
000109f8      }
000109f8      
00010a0a      return result;
000109d8  }


00010a0c    int32_t sub_10a0c(char arg1, int32_t arg2, int32_t arg3, int16_t* arg4, int32_t* arg5)

00010a0c  {
00010a0c      int32_t var_1c = arg3;
00010a0c      int32_t var_20 = arg2;
00010a0c      
00010a18      if (arg3 != 2)
00010a18      {
00010a24          0xff7e1af8(0x23103000, 0x88016bc, 1, arg3);
00010a28          return 0x40a;
00010a18      }
00010a18      
00010a30      *(uint8_t*)((char*)var_20)[1] = 2;
00010a34      (uint8_t)var_1c = 1;
00010a36      (uint8_t)var_20 = arg1;
00010a3c      int32_t r2 = *(uint32_t*)0x20d80c;
00010a3c      
00010a40      if (r2)
00010a46          r2(arg2, &var_20);
00010a46      
00010a4a      *(uint32_t*)arg5 = 0x20d810;
00010a50      *(uint16_t*)arg4 = *(uint16_t*)0x208488;
00010a54      return 0;
00010a0c  }

00010a56                                                                    0e b5 02 93 00 91 03 46 5f 49                        .......F_I
00010a60  5f 48 01 92 04 22 68 31 80 1c d1 f7 45 d8 0e bd ff b5 85 b0 59 49 5a 48 17 46 00 24 01 22 c0 31  _H..."h1....E.......YIZH.F.$.".1
00010a80  80 1c 0e 9e 0f 9d 08 9b d1 f7 36 d8 10 98 58 49 01 60 05 2f 0b d0 51 49 3b 46 02 22 f4 31 50 48  ..........6...XI.`./..QI;F.".1PH
00010aa0  00 96 d1 f7 29 d8 51 4c 20 46 09 b0 f0 bd 00 2d 13 d0 03 20 69 46 48 71 05 98 08 71 01 20 08 72  ....).QL F.....-... iFHq...q. .r
00010ac0  08 98 48 72 47 48 4e 81 08 38 03 95 42 68 00 2a ea d0 01 a9 06 98 90 47 e6 e7 44 4c e4 1c e3 e7  ..HrGHN..8..Bh.*.......G..DL....
00010ae0  fe b5 07 46 3e 48 15 46 0e 46 1c 46 00 22 41 49 80 1c d1 f7 01 d8 00 20 01 90 2b 46 07 22 31 46  ...F>H.F.F.F."AI....... ..+F."1F
00010b00  00 94 38 46 00 f0 17 fe fe bd fe b5 0e 46 07 46 38 49 33 48 15 46 1c 46 00 22 24 31 80 1c d0 f7  ..8F.........F.F8I3H.F.F."$1....
00010b20  eb df 00 20 01 90 2b 46 0a 22 31 46 00 94 38 46 00 f0 01 fe fe bd ff b5 85 b0 69 46 08 71 01 27  ... ..+F."1F..8F..........iF.q.'
00010b40  4f 71 1d 46 00 93 2b 49 25 48 16 46 13 46 00 24 02 22 4c 31 80 1c d0 f7 cf df 08 2e 02 d0 0b 2e  Oq.F..+I%H.F.F.$."L1............
00010b60  08 d1 12 e0 e8 07 02 d0 68 46 07 72 01 e0 02 20 10 e0 01 24 1b 48 08 38 42 68 00 2a 95 d0 00 2c  ........hF.r... ...$.H.8Bh.*...,
00010b80  93 d0 01 a9 06 98 90 47 8f e7 a8 07 01 d5 03 20 00 e0 04 20 69 46 08 72 eb e7                    .......G....... ... iF.r..

00010b9a    uint32_t sub_10b9a(int32_t arg1)

00010b9a  {
00010b9a      int32_t r3;
00010b9a      int32_t var_14_1 = r3;
00010b9a      int32_t r2;
00010b9a      int32_t var_18_1 = r2;
00010b9a      
00010bc2      if (sub_1166c(0x20d808, 0x83e480, 0x150, *(uint32_t*)0x83e5d0, *(uint32_t*)0x83e5d4, 
00010bc2          *(uint32_t*)0x83e5d8))
00010bc2      {
00010bc4          *(uint32_t*)0x20d80c = arg1;
00010bc8          return (uint32_t)*(uint8_t*)0x20d808;
00010bc2      }
00010bc2      
00010bd2      0xff7e1af8(0x23103000, 0x8801858, 0);
00010bd8      *(uint8_t*)0x20d808 = 0xff;
00010bda      return 0xff;
00010b9a  }

00010bdc  int32_t data_10bdc = 0x8801690
00010be0  int32_t data_10be0 = 0x23103000
00010be4  int32_t data_10be4 = 0x20d810
00010be8  int32_t data_10be8 = 0x208488
00010bec  int32_t data_10bec = 0x40a

00010bf0                                                  07 4a 83 00                                                      .J..

00010bf4  int32_t data_10bf4 = 0x88017cc
00010bf8  int32_t data_10bf8 = 0x83e580

00010bfc    int32_t sub_10bfc(int32_t arg1, int32_t arg2, char* arg3)

00010bfc  {
00010bfe      int32_t result = 1;
00010bfe      
00010c02      if (arg1 == 1)
00010c02      {
00010c16          if (arg2 != 1)
00010c18              return 0;
00010c18          
00010c20          *(uint8_t*)0x20d93c = *(uint8_t*)arg3;
00010c02      }
00010c02      else
00010c02      {
00010c06          result = 0;
00010c0e          0xff7e1af8(0x23103300, 0x8801880, 1, arg1);
00010c02      }
00010c02      
00010c24      return result;
00010bfc  }


00010c26    uint32_t sub_10c26(int32_t arg1, int32_t arg2, int32_t arg3)

00010c26  {
00010c26      int32_t var_8 = arg3;
00010c26      int32_t var_c = arg2;
00010c26      int32_t var_10 = arg1;
00010c3c      return sub_11736(arg1, arg2, 2, &var_8, 1, 0);
00010c26  }


00010c3e    uint32_t sub_10c3e(int32_t arg1, int32_t arg2, int32_t arg3)

00010c3e  {
00010c3e      int32_t var_8 = arg3;
00010c3e      int32_t var_c = arg2;
00010c3e      int32_t var_10 = arg1;
00010c3e      
00010c48      if (!(uint32_t)*(uint8_t*)0x20d93d)
00010c5e          return 0;
00010c5e      
00010c4c      *(uint8_t*)0x20d93d = 0;
00010c58      return sub_116d2(arg1, arg2, 2, &var_8, 1, 0);
00010c3e  }


00010c62    int32_t sub_10c62(int32_t arg1, int32_t arg2, int32_t arg3, int32_t arg4, int16_t* arg5, int32_t* arg6)

00010c62  {
00010c6e      *(uint16_t*)arg5 = 0;
00010c70      int32_t var_28 = arg4;
00010c80      0xff7e1af8(0x23103302, 0x88018b0, 2, arg3, var_28, arg1, arg2, arg3, arg4);
00010c80      
00010c86      if (arg3 != 2)
00010c86      {
00010c90          0xff7e1af8(0x23103300, 0x88018e0, 0);
00010c94          return 0x40a;
00010c86      }
00010c86      
00010c9e      *(uint8_t*)((char*)var_28)[1] = 2;
00010ca0      (uint8_t)var_28 = (uint8_t)arg1;
00010ca6      *(uint8_t*)((char*)var_28)[2] = 1;
00010cac      int32_t result = (*(uint32_t*)0x20d940)(arg2, &var_28);
00010cac      
00010cb2      if (result == 0xd01)
00010cb4          *(uint8_t*)0x20d93d = 1;
00010cb4      
00010cb6      *(uint32_t*)arg6 = 0x20d93c;
00010cb8      *(uint16_t*)arg5 = 1;
00010c98      return result;
00010c62  }

00010cbc                                                                                      ff b5 83 b0                              ....
00010cc0  01 26 69 46 4e 71 08 71 1d 46 00 93 20 49 21 48 17 46 13 46 34 46 02 22 8c 31 80 1c d0 f7 0c df  .&iFNq.q.F.. I!H.F.F4F.".1......
00010ce0  03 2f 0b d0 00 24 1c 48 42 68 00 2a 04 d0 00 2c 02 d0 01 a9 04 98 90 47 07 b0 f0 bd e8 07 02 d0  ./...$.HBh.*...,.......G........
00010d00  68 46 86 71 ef e7 02 20 69 46 88 71 eb e7                                                        hF.q... iF.q..

00010d0e    uint32_t sub_10d0e(int32_t arg1, int32_t arg2, int32_t arg3, int32_t arg4)

00010d0e  {
00010d0e      int32_t var_10 = arg4;
00010d0e      int32_t var_14_1 = arg3;
00010d0e      int32_t var_18_1 = arg2;
00010d0e      
00010d2c      if (!sub_1166c(&var_10, 0x83e5dc, 0x70, *(uint32_t*)0x83e64c, *(uint32_t*)0x83e650, 
00010d2c          *(uint32_t*)0x83e654))
00010d2c      {
00010d3a          0xff7e1af8(0x23103300, 0x880193c, 1, (uint32_t)(uint8_t)var_10);
00010d42          (uint8_t)var_10 = 0xff;
00010d2c      }
00010d2c      
00010d46      *(uint32_t*)0x20d940 = arg1;
00010d4c      return (uint32_t)(uint8_t)var_10;
00010d0e  }

00010d4e                                            00 00                                                                ..

00010d50  int32_t data_10d50 = 0x8801880
00010d54  int32_t data_10d54 = 0x23103300
00010d58  int32_t data_10d58 = 0x20d93c
00010d5c  int32_t data_10d5c = 0x40a
00010d60  int32_t data_10d60 = 0xd01
00010d64  int32_t data_10d64 = 0x83e5dc

00010d66    void sub_10d66(int32_t arg1)

00010d66  {
00010d6a      *(uint32_t*)0x20dad8 = arg1;
00010d66  }


00010d6e    uint32_t sub_10d6e(int32_t arg1, int32_t arg2, int32_t arg3, int32_t arg4)

00010d6e  {
00010d70      int32_t var_8 = arg4;
00010d70      
00010d76      if (arg1 - 3 >= 0x7fe)
00010d78          return 0;
00010d78      
00010d80      (uint8_t)var_8 = 5;
00010d82      *(uint8_t*)((char*)var_8)[1] = (char)arg1;
00010d86      *(uint8_t*)((char*)var_8)[2] = (char)(arg1 >> 8);
00010d8c      uint32_t result = sub_113d0(0xfc6e, 3, &var_8, arg4);
00010d8c      
00010d92      if (!result)
00010d7a          return result;
00010d7a      
00010d96      return 1;
00010d6e  }


00010d98    void sub_10d98(int32_t* arg1, int32_t* arg2, int32_t* arg3)

00010d98  {
00010d9c      int32_t r4 = *(uint32_t*)0x201b20;
00010d9c      int32_t r5 = *(uint32_t*)0x201b24;
00010d9e      *(uint32_t*)arg1 = *(uint32_t*)0x201b1c;
00010da0      *(uint32_t*)arg2 = r4;
00010da2      *(uint32_t*)arg3 = r5;
00010d98  }


00010da6    int32_t sub_10da6(int32_t arg1, int32_t arg2, int32_t arg3, int32_t arg4)

00010da6  {
00010da6      int32_t var_8 = arg4;
00010dac      (uint8_t)var_8 = 4;
00010dac      
00010db0      if (arg1)
00010db2          arg1 = 1;
00010db2      
00010db4      *(uint8_t*)((char*)var_8)[1] = (char)arg1;
00010db4      
00010dc0      if (!sub_113d0(0xfd80, 2, &var_8, arg4))
00010dc8          return 7;
00010dc8      
00010dc4      return 0;
00010da6  }


00010dca    int32_t sub_10dca(int32_t arg1, int32_t arg2, int32_t arg3)

00010dca  {
00010dde      if (arg2 <= 0x1f && (arg3 || !arg2))  /* "0117" */
00010dde      {
00010de2          char var_2f_1 = (char)arg2;
00010de6          char r0_1;
00010de6          
00010de6          if (!arg1)
00010de6          {
00010dfa              r0_1 = 5;
00010e00          label_10e00:
00010e00              char var_30 = r0_1;
00010e1a              void var_2e;
00010e1a              
00010e1a              if (!sub_113d0(0xfd80, (uint32_t)((uint8_t)arg2 + 2), &var_30, 
00010e1a                      0xff81b898(&var_2e, arg3, arg2)))
00010e28                  return 7;
00010e28              
00010e1c              return 0;
00010de6          }
00010de6          
00010dea          if (arg1 == 1)
00010dea          {
00010dfe              r0_1 = 6;
00010dfe              goto label_10e00;
00010dea          }
00010dea          
00010dee          if (arg1 == 2)
00010dee          {
00010e20              r0_1 = 7;
00010e22              goto label_10e00;
00010dee          }
00010dee          
00010df2          if (arg1 == 3)
00010df2          {
00010e24              r0_1 = 8;
00010e26              goto label_10e00;
00010df2          }
00010dde      }
00010dde      
00010df4      return 3;
00010dca  }


00010e2c    int32_t sub_10e2c(int32_t arg1, int32_t arg2, int32_t arg3, int32_t arg4)

00010e2c  {
00010e2c      int32_t var_18 = arg4;
00010e2c      int32_t var_1c = arg3;
00010e2c      int32_t var_20 = arg2;
00010e3a      uint32_t r0;
00010e3a      int32_t r3;
00010e3a      r0 = sub_11dc6(0x83e8ef, arg1, arg3, arg4);
00010e3a      
00010e40      if (!r0)
00010e86          return 4;
00010e86      
00010e46      (uint16_t)var_18 = 0;
00010e4e      int32_t r3_1 = sub_11a78(0x27b, &var_18, arg1, r3);
00010e56      (uint8_t)var_20 = 0xd;
00010e58      uint32_t r0_1 = (uint32_t)(uint16_t)var_18;
00010e5a      *(uint8_t*)((char*)var_20)[1] = (char)r0_1;
00010e5e      *(uint8_t*)((char*)var_20)[2] = (char)(r0_1 >> 8);
00010e60      *(uint8_t*)((char*)var_20)[3] = (char)arg2;
00010e64      (uint8_t)var_1c = (char)(arg2 >> 8);
00010e66      *(uint8_t*)((char*)var_1c)[1] = (char)arg3;
00010e6a      *(uint8_t*)((char*)var_1c)[2] = (char)(arg3 >> 8);
00010e6c      *(uint8_t*)((char*)var_1c)[3] = (uint8_t)arg4;
00010e6c      
00010e7a      if (!sub_113d0(0xfd80, 8, &var_20, r3_1))
00010e82          return 7;
00010e82      
00010e7e      return 0;
00010e2c  }


00010e88    int32_t sub_10e88(int32_t arg1, int32_t arg2, int32_t arg3, int32_t arg4)

00010e88  {
00010e9a      uint32_t r0;
00010e9a      int32_t r3;
00010e9a      r0 = sub_11dc6(0x83e907, arg1, arg3, arg4);
00010e9a      
00010ea0      if (!r0)
00010eea          return 4;
00010eea      
00010ea6      int16_t var_1c = 0;
00010eae      int32_t r3_1 = sub_11a78(0x27b, &var_1c, arg1, r3);
00010eb6      char var_28 = 0x19;  /* ".33_250117" */
00010eb8      uint32_t r0_1 = (uint32_t)var_1c;
00010eba      uint8_t var_27_1 = (char)r0_1;
00010ebe      uint8_t var_26_1 = (char)(r0_1 >> 8);
00010ec0      char var_25_1 = (char)arg2;
00010ec4      uint8_t var_24_1 = (char)(arg2 >> 8);
00010ec6      char var_23_1 = (char)arg3;
00010eca      uint8_t var_22_1 = (char)(arg3 >> 8);
00010ecc      char var_21_1 = (char)arg4;
00010ed0      uint8_t var_20_1 = (char)(arg4 >> 8);
00010ed0      
00010ede      if (!sub_113d0(0xfd80, 9, &var_28, r3_1))
00010ee6          return 7;
00010ee6      
00010ee0      return 0;
00010e88  }


00010eee    int32_t sub_10eee(int32_t arg1, int32_t arg2, int32_t arg3, int32_t arg4)

00010eee  {
00010eee      int32_t var_8 = arg4;
00010ef4      (uint8_t)var_8 = 0xf;
00010ef4      
00010f02      if (!sub_113d0(0xfd80, 1, &var_8, arg4))
00010f0a          return 7;
00010f0a      
00010f06      return 0;
00010eee  }


00010f0c    uint32_t sub_10f0c(int16_t* arg1)

00010f0c  {
00010f0e      int16_t* r4 = arg1;
00010f14      uint32_t r6 = 0x20dadc;
00010f1a      int16_t var_28;
00010f1a      
00010f1a      if ((uint32_t)*(uint16_t*)arg1 == 0xfd80)
00010f1a      {
00010f20          uint32_t r1_2 = (uint32_t)r4[3] - 4;
00010f26          int32_t entry_r2;
00010f26          int32_t r2;
00010f26          int16_t* r3_2;
00010f26          r2 = sub_13f18(0, r1_2, entry_r2, r1_2);
00010f2a          r6 = r2 >> 0x10;  /* "RY02_3.00.33_250117" */
00010f2e          r4 = r3_2;
00010f46          var_28 = r4[1];
00010fc2          int32_t r2_2 = *(uint32_t*)r6;
00010fc2          
00010fc6          if (r2_2)
00010fcc              r2_2(0xa0, &var_28);
00010f1a      }
00010f1a      
00010fec      if ((uint32_t)*(uint16_t*)r4 == 0xfc6e && (uint32_t)r4[3] == 5)
00010fec      {
00010ff2          var_28 = r4[1];
00010ff4          int32_t r2_4 = *(uint32_t*)r6;
00010ff4          
00010ffa          if (r2_4)
00010ffc              r2_4(0xa6, &var_28);
00010fec      }
00010fec      
00011006      if ((uint32_t)*(uint16_t*)r4 == 0xfc40)
00011006      {
0001100e          uint16_t r0_6 =
0001100e              (uint16_t)r4[3] + (int16_t)((uint32_t)*(uint8_t*)((char*)r4 + 7) << 8);
00011014          var_28 = r4[1];
00011016          uint16_t var_26_1 = r0_6;
0001101a          int16_t* var_24 = &var_28;
0001101c          int32_t r2_5 = *(uint32_t*)0x20dad8;
0001101c          
00011022          if (r2_5)
00011026              r2_5(0xaf, &var_24);
00011006      }
00011006      
00011036      if ((uint32_t)*(uint16_t*)r4 == 0xfd82 && (uint32_t)r4[3] == 5)
00011036      {
00011038          uint32_t r0_8 = (uint32_t)*(uint8_t*)((char*)r4 + 7);
0001103c          int32_t r0_10;
0001103c          int16_t* r1_11;
0001103c          
0001103c          if (r0_8 == 9)
0001103c          {
0001104a              r1_11 = &var_28;
0001104c              var_28 = r4[1];
0001104e              r0_10 = 0xab;
00011064          label_11064:
00011064              int32_t r2_6 = *(uint32_t*)r6;
00011064              
00011068              if (r2_6)
0001106a                  r2_6(r0_10, r1_11);
0001103c          }
0001103c          else
0001103c          {
00011040              if (r0_8 == 0x10)  /* "RY02_3.00.33_250117" */
00011040              {
00011054                  r1_11 = &var_28;
00011056                  var_28 = r4[1];
00011058                  r0_10 = 0xa9;
0001105a                  goto label_11064;
00011040              }
00011040              
00011044              if (r0_8 == 0x1e)  /* "50117" */
00011044              {
0001105e                  r1_11 = &var_28;
00011060                  var_28 = r4[1];
00011062                  r0_10 = 0xaa;
00011062                  goto label_11064;
00011044              }
0001103c          }
00011036      }
00011036      
0001106c      uint32_t result = (uint32_t)*(uint16_t*)r4;
0001106c      
00011086      if (result != 0xfd80 && result != 0xfd81 && result != 0xfd82 && result != 0xfc40
00011086          && result != 0xfc6e)
00011086      {
0001108a          result = *(uint32_t*)0x20dae0;
0001108a          
0001108e          if (result)
0001108e          {
00011090              var_28 = r4;
00011098              return (*(uint32_t*)0x20dae0)(3, &var_28);
0001108e          }
00011086      }
00011086      
00010ee4      return result;
00010f0c  }


00010f4c    uint32_t sub_10f4c(int16_t* arg1 @ r4, int32_t* arg2 @ r6, int32_t arg3 @ r7, int32_t arg4, int32_t arg5, int32_t arg6, int32_t arg7)

00010f4c  {
00010f54      char arg_8 = 0;
00010f58      int16_t arg_a = arg1[1];
00010f5e      char* arg_0 = &arg_8;
00010fc2      int32_t r2 = *(uint32_t*)arg2;
00010fc2      
00010fc6      if (r2)
00010fcc          r2(0xa1, &arg_0);
00010fcc      
00010fd0      char** arg_4;
00010fd0      
00010fd0      if (arg3)
00010fd0      {
00010fd4          int32_t r2_1 = *(uint32_t*)0x20dad8;
00010fd4          
00010fd8          if (r2_1)
00010fde              r2_1(0xa1, &arg_4);
00010fd0      }
00010fd0      
00010fec      if ((uint32_t)*(uint16_t*)arg1 == 0xfc6e && (uint32_t)arg1[3] == 5)
00010fec      {
00010ff2          (uint16_t)arg_0 = arg1[1];
00010ff4          int32_t r2_2 = *(uint32_t*)arg2;
00010ff4          
00010ffa          if (r2_2)
00010ffc              r2_2(0xa6, &arg_0);
00010fec      }
00010fec      
00011006      if ((uint32_t)*(uint16_t*)arg1 == 0xfc40)
00011006      {
00011014          (uint16_t)arg_0 = arg1[1];
00011016          *(uint16_t*)((char*)arg_0)[2] =
00011016              (uint16_t)arg1[3] + (int16_t)((uint32_t)*(uint8_t*)((char*)arg1 + 7) << 8);
0001101a          arg_4 = &arg_0;
0001101c          int32_t r2_3 = *(uint32_t*)0x20dad8;
0001101c          
00011022          if (r2_3)
00011026              r2_3(0xaf, &arg_4);
00011006      }
00011006      
00011036      if ((uint32_t)*(uint16_t*)arg1 == 0xfd82 && (uint32_t)arg1[3] == 5)
00011036      {
00011038          uint32_t r0_8 = (uint32_t)*(uint8_t*)((char*)arg1 + 7);
0001103c          int32_t r0_10;
0001103c          char** r1_9;
0001103c          
0001103c          if (r0_8 == 9)
0001103c          {
0001104a              r1_9 = &arg_0;
0001104c              (uint16_t)arg_0 = arg1[1];
0001104e              r0_10 = 0xab;
00011064          label_11064:
00011064              int32_t r2_4 = *(uint32_t*)arg2;
00011064              
00011068              if (r2_4)
0001106a                  r2_4(r0_10, r1_9);
0001103c          }
0001103c          else
0001103c          {
00011040              if (r0_8 == 0x10)  /* "RY02_3.00.33_250117" */
00011040              {
00011054                  r1_9 = &arg_0;
00011056                  (uint16_t)arg_0 = arg1[1];
00011058                  r0_10 = 0xa9;
0001105a                  goto label_11064;
00011040              }
00011040              
00011044              if (r0_8 == 0x1e)  /* "50117" */
00011044              {
0001105e                  r1_9 = &arg_0;
00011060                  (uint16_t)arg_0 = arg1[1];
00011062                  r0_10 = 0xaa;
00011062                  goto label_11064;
00011044              }
0001103c          }
00011036      }
00011036      
0001106c      uint32_t result = (uint32_t)*(uint16_t*)arg1;
0001106c      
00011086      if (result != 0xfd80 && result != 0xfd81 && result != 0xfd82 && result != 0xfc40
00011086          && result != 0xfc6e)
00011086      {
0001108a          result = *(uint32_t*)0x20dae0;
0001108a          
0001108e          if (result)
0001108e          {
00011090              arg_0 = arg1;
00011098              return (*(uint32_t*)0x20dae0)(3, &arg_0);
0001108e          }
00011086      }
00011086      
00010ee4      return result;
00010f4c  }


00010f50    int32_t sub_10f50(void* arg1 @ r4)

00010f50  {
00010f54      char arg_8 = 1;
00010f58      int16_t arg_a = *(uint16_t*)((char*)arg1 + 2);
00010f5e      char* arg_0 = &arg_8;
00010f60      /* tailcall */
00010f60      return sub_10fc2(&arg_8, &arg_0);
00010f50  }

00010f62        02 20 f5 e7 03 20 f3 e7 60 88 69 46 08 80 a4 25 26 e0 21 7a e0 79 09 02 40 18 80 b2 03 a9    . ... ..`.iF...%&.!z.y..@.....
00010f80  00 f0 2c ff 60 88 69 46 48 81 08 7b 08 72 02 a8 b1 25 01 90 1d e0 60 88 69 46 08 80 ac 25 10 e0  ..,.`.iFH..{.r...%....`.iF...%..
00010fa0  60 88 69 46 08 80 a7 25 0b e0 60 88 69 46 08 80 a8 25 06 e0 60 88 69 46                          `.iF...%..`.iF...%..`.iF

00010fb8  int32_t data_10fb8 = 0x25b08088

00010fbc                                                                                      09 e0 00 28                              ...(
00010fc0  05 d0                                                                                            ..

00010fc2    uint32_t sub_10fc2(int16_t* arg1 @ r4, int32_t* arg2 @ r6, int32_t arg3 @ r7, int32_t arg4, int32_t arg5, int32_t arg6, int32_t arg7)

00010fc2  {
00010fc2      int32_t r2_5 = *(uint32_t*)arg2;
00010fc2      
00010fc6      if (r2_5)
00010fcc          r2_5();
00010fcc      
00010fd0      if (arg3)
00010fd0      {
00010fd4          int32_t r2 = *(uint32_t*)0x20dad8;
00010fd4          
00010fd8          if (r2)
00010fde              r2();
00010fd0      }
00010fd0      
00010fec      int16_t arg_0;
00010fec      
00010fec      if ((uint32_t)*(uint16_t*)arg1 == 0xfc6e && (uint32_t)arg1[3] == 5)
00010fec      {
00010ff2          arg_0 = arg1[1];
00010ff4          int32_t r2_1 = *(uint32_t*)arg2;
00010ff4          
00010ffa          if (r2_1)
00010ffc              r2_1(0xa6, &arg_0);
00010fec      }
00010fec      
00011006      if ((uint32_t)*(uint16_t*)arg1 == 0xfc40)
00011006      {
0001100e          uint16_t r0_5 =
0001100e              (uint16_t)arg1[3] + (int16_t)((uint32_t)*(uint8_t*)((char*)arg1 + 7) << 8);
00011014          arg_0 = arg1[1];
00011016          uint16_t arg_2 = r0_5;
0001101a          int16_t* arg_4 = &arg_0;
0001101c          int32_t r2_2 = *(uint32_t*)0x20dad8;
0001101c          
00011022          if (r2_2)
00011026              r2_2(0xaf, &arg_4);
00011006      }
00011006      
00011036      if ((uint32_t)*(uint16_t*)arg1 == 0xfd82 && (uint32_t)arg1[3] == 5)
00011036      {
00011038          uint32_t r0_7 = (uint32_t)*(uint8_t*)((char*)arg1 + 7);
0001103c          int32_t r0_9;
0001103c          int16_t* r1_7;
0001103c          
0001103c          if (r0_7 == 9)
0001103c          {
0001104a              r1_7 = &arg_0;
0001104c              arg_0 = arg1[1];
0001104e              r0_9 = 0xab;
00011064          label_11064:
00011064              int32_t r2_3 = *(uint32_t*)arg2;
00011064              
00011068              if (r2_3)
0001106a                  r2_3(r0_9, r1_7);
0001103c          }
0001103c          else
0001103c          {
00011040              if (r0_7 == 0x10)  /* "RY02_3.00.33_250117" */
00011040              {
00011054                  r1_7 = &arg_0;
00011056                  arg_0 = arg1[1];
00011058                  r0_9 = 0xa9;
0001105a                  goto label_11064;
00011040              }
00011040              
00011044              if (r0_7 == 0x1e)  /* "50117" */
00011044              {
0001105e                  r1_7 = &arg_0;
00011060                  arg_0 = arg1[1];
00011062                  r0_9 = 0xaa;
00011062                  goto label_11064;
00011044              }
0001103c          }
00011036      }
00011036      
0001106c      uint32_t result = (uint32_t)*(uint16_t*)arg1;
0001106c      
00011086      if (result != 0xfd80 && result != 0xfd81 && result != 0xfd82 && result != 0xfc40
00011086          && result != 0xfc6e)
00011086      {
0001108a          result = *(uint32_t*)0x20dae0;
0001108a          
0001108e          if (result)
0001108e          {
00011090              arg_0 = arg1;
00011098              return (*(uint32_t*)0x20dae0)(3, &arg_0);
0001108e          }
00011086      }
00011086      
00010ee4      return result;
00010fc2  }


0001109c    int32_t sub_1109c(int32_t arg1, int32_t arg2, int32_t arg3, int32_t arg4)

0001109c  {
000110a4      if (!sub_113d0(arg1, arg2, arg3, arg4))
000110ac          return 7;
000110ac      
000110a8      return 0;
0001109c  }


000110ae    int32_t sub_110ae(int32_t arg1, int32_t arg2, int32_t arg3, int32_t arg4)

000110ae  {
000110b0      int32_t var_8 = arg4;
000110b4      int32_t r2 = *(uint32_t*)0x20dae0;
000110b4      
000110b8      if (!r2)
000110c2          return 0x20dae0;
000110c2      
000110ba      var_8 = arg1;
000110c0      return r2(4, &var_8);
000110ae  }


000110c4    int32_t sub_110c4(int32_t arg1, int32_t arg2)

000110c4  {
000110c4      int32_t r3;
000110c4      int32_t var_8 = r3;
000110c4      int32_t r2;
000110c4      int32_t var_c = r2;
000110c4      int32_t var_10 = arg2;
000110ca      (uint8_t)var_10 = 0x10;  /* "RY02_3.00.33_250117" */
000110cc      *(uint8_t*)((char*)var_10)[1] = (char)arg1;
000110d0      *(uint8_t*)((char*)var_10)[2] = (char)(arg1 >> 8);
000110d4      *(uint8_t*)((char*)var_10)[3] = (char)(arg1 >> 0x10);  /* "RY02_3.00.33_250117" */
000110d8      (uint8_t)var_c = (char)(arg1 >> 0x18);  /* "0.33_250117" */
000110da      *(uint8_t*)((char*)var_c)[1] = (char)arg2;
000110de      *(uint8_t*)((char*)var_c)[2] = (char)(arg2 >> 8);
000110e2      *(uint8_t*)((char*)var_c)[3] = (char)(arg2 >> 0x10);  /* "RY02_3.00.33_250117" */
000110e6      (uint8_t)var_8 = (char)(arg2 >> 0x18);  /* "0.33_250117" */
000110e6      
000110f4      if (!sub_113d0(0xfd80, 9, &var_10, &var_10))
000110fc          return 7;
000110fc      
000110f8      return 0;
000110c4  }


000110fe    int32_t sub_110fe(char arg1, int32_t arg2, int32_t arg3, int32_t arg4)

000110fe  {
000110fe      int32_t var_8 = arg4;
00011104      (uint8_t)var_8 = 0x12;  /* "02_3.00.33_250117" */
00011106      *(uint8_t*)((char*)var_8)[1] = arg1;
00011106      
00011112      if (!sub_113d0(0xfd80, 2, &var_8, arg4))
0001111a          return 7;
0001111a      
00011116      return 0;
000110fe  }


0001111c    int32_t sub_1111c(int32_t arg1) __pure

0001111c  {
0001111e      if (arg1 <= 0xa)
00011126          return 1;
00011126      
00011122      return 0;
0001111c  }

00011128                          f0 b5 8d b0 04 46 2c 21 68 46 0a f4 19 f4 13 20 69 46 08 70 20 78 01 21          .....F,!hF..... iF.p x.!
00011140  00 22 02 28 16 d0 01 28 19 d0 00 28 1a d0 a2 e0                                                  .".(...(...(....

00011150  int32_t data_11150 = 0x20dad8
00011154  int32_t data_11154 = 0x7fe
00011158  int32_t data_11158 = 0xfc6e
0001115c  int32_t data_1115c = 0x201b1c
00011160  int32_t data_11160 = 0xfd80
00011164  int32_t data_11164 = 0x83e8ef
00011168  int32_t data_11168 = 0x27b
0001116c  int32_t data_1116c = 0x20dadc
00011170  int32_t data_11170 = 0x20dae0

00011174                                                              68 46 41 70 82 70 03 21 7f e0 68 46                      hFAp.p.!..hF
00011180  41 70 01 e0 68 46 42 70 e0 79 02 28 0a d1 20 7a ff f7 c4 ff 00 28 7e d0 6b 46 98 78 08 43 98 70  Ap..hFBp.y.(.. z.....(~.kF.x.C.p
000111a0  20 7a d8 70 60 78 01 28 0c d1 a0 78 ff f7 b6 ff 00 28 70 d0 69 46 88 78 04 21 08 43 69 46 88 70   z.p`x.(...x.....(p.iF.x.!.CiF.p
000111c0  a0 78 08 71 60 79 01 28 0c d1 a0 79 ff f7 a6 ff 00 28 60 d0 69 46 88 78 08 21 08 43 69 46 88 70  .x.q`y.(...y.....(`.iF.x.!.CiF.p
000111e0  a0 79 48 71 e0 78 01 28 0c d1 20 79 ff f7 96 ff 00 28 50 d0 69 46 88 78 10 21 08 43 69 46 88 70  .yHq.x.(.. y.....(P.iF.x.!.CiF.p
00011200  20 79 88 71 e0 79 07 21 01 28 38 d1 60 7a 40 1e 0b 28 40 d2 69 46 8a 85 88 78 02 21 08 43 69 46   y.q.y.!.(8.`z@..(@.iF...x.!.CiF
00011220  88 70 60 7a c8 71 00 25 1f e0 68 00 06 19 b7 7a 0b a9 3a 46 50 48 00 f0 1f fc f6 7a 39 46 4f 48  .p`z.q.%..h....z..:FPH.....z9FOH
00011240  00 f0 c1 fd 00 28 24 d0 30 46 ff f7 67 ff 00 28 21 d0 68 46 81 8d 68 00 2a 18 68 46 10 18 01 72  .....($.0F..g..(!.hF..h.*.hF...r
00011260  09 0a 41 72 6d 1c 86 72 ed b2 68 46 c0 79 a8 42 db d8 68 46 c0 79 41 00 40 18 08 30 c1 b2 6a 46  ..Arm..r..hF.y.B..hF.yA.@..0..jF
00011280  3f 48 00 f0 a5 f8 00 28 07 d0 00 20                                                              ?H.....(... 

0001128c    int32_t sub_1128c(int32_t arg1, int32_t arg2, int32_t arg3, int32_t arg4) __pure

0001128c  {
0001128e      return;
0001128c  }


00011290    int32_t sub_11290()

00011290  {
00011298      /* tailcall */
00011298      return sub_1128c();
00011290  }

00011292                                                        04 20 fa e7                                                  . ..
0001129a                                                                                07 20 f6 e7                                  . ..

0001129e    int32_t sub_1129e(int32_t arg1, int32_t arg2, int32_t arg3, int32_t arg4)

0001129e  {
0001129e      int32_t var_8 = arg4;
000112a4      (uint8_t)var_8 = 5;
000112a8      *(uint8_t*)((char*)var_8)[1] = 9;
000112a8      
000112ac      if (arg1)
000112ae          arg1 = 1;
000112ae      
000112b0      *(uint8_t*)((char*)var_8)[2] = (char)arg1;
000112b0      
000112be      if (!sub_113d0(0xfd82, 3, &var_8, arg4))
000112c6          return 7;
000112c6      
000112c2      return 0;
0001129e  }


000112c8    int32_t sub_112c8(int32_t arg1, int32_t arg2, int32_t arg3, int32_t arg4)

000112c8  {
000112c8      int32_t var_8 = arg4;
000112ce      (uint8_t)var_8 = 5;
000112d2      *(uint8_t*)((char*)var_8)[1] = 0x10;  /* "RY02_3.00.33_250117" */
000112d6      *(uint8_t*)((char*)var_8)[2] = 1;
000112d6      
000112e6      if (!sub_113d0(0xfd82, 3, &var_8, arg4))
000112ee          return 7;
000112ee      
000112ea      return 0;
000112c8  }


000112f0    int32_t sub_112f0(int32_t arg1, int32_t arg2, int32_t arg3, int32_t arg4)

000112f0  {
000112f0      int32_t var_8 = arg4;
000112f6      (uint8_t)var_8 = 5;
000112fa      *(uint8_t*)((char*)var_8)[1] = 0x1e;  /* "50117" */
000112fa      
000112fe      if (arg1)
00011300          arg1 = 1;
00011300      
00011302      *(uint8_t*)((char*)var_8)[2] = (char)arg1;
00011302      
00011310      if (!sub_113d0(0xfd82, 3, &var_8, arg4))
00011318          return 7;
00011318      
00011314      return 0;
000112f0  }


0001131a    int32_t sub_1131a(char arg1, int32_t arg2, int32_t arg3)

0001131a  {
0001132e      if (!arg2 || arg2 > 0x10 || !arg3)  /* "RY02_3.00.33_250117" */
00011356          return 3;
00011356      
00011334      char var_20 = 0x15;  /* "3.00.33_250117" */
00011336      char var_1f_1 = arg1;
0001134e      void var_1e;
0001134e      
0001134e      if (!sub_113d0(0xfd80, (uint32_t)((uint8_t)arg2 + 2), &var_20, 
0001134e              0xff81b898(&var_1e, arg3, arg2)))
0001135a          return 7;
0001135a      
00011350      return 0;
0001131a  }


0001135e    int32_t sub_1135e()

0001135e  {
0001136c      int32_t entry_r3;
0001136c      
0001136c      if (!sub_113d0(0xfc40, 0, 0, entry_r3))
00011374          return 7;
00011374      
00011370      return 0;
0001135e  }

00011376                                                                    00 00                                                ..

00011378    int32_t sub_11378(uint32_t arg1, char* arg2, int32_t arg3 @ r7)

00011378  {
0001137c      *(uint32_t*)((arg3 << 9) - 0xc) = arg1;
0001137c      *(uint32_t*)((arg3 << 9) - 8) = arg2;
0001137c      *(uint32_t*)((arg3 << 9) - 4) = arg3;
00011380      /* unimplemented  {stc2 p0, c0, [r0]} */
00011384      Coproc_SendTwoWords(arg1, arg1, 0, 0, 0);
0001138c      *(uint8_t*)arg2 = 1;
0001138e      uint32_t r1 = (uint32_t)*(uint16_t*)(arg1 + 2);
0001138e      
00011394      if (r1 == 0xe)
0001139e          sub_10f0c(arg1 + 4);
00011394      else if (r1 == 0xf)
000113a6          sub_110ae(arg1 + 4, r1, 1, (arg3 << 9) - 0xc);
000113a6      
000113ac      return 0;
00011378  }

000113ae                                            10 b5 04 23 01 22 03 49 04 48 d0 f7 9e db 03 48 00 f0                ...#.".I.H.....H..
000113c0  b2 f8 10 bd                                                                                      ....

000113c4    int32_t sub_113c4(int32_t arg1, int32_t arg2, void* arg3, int16_t* arg4 @ r7)

000113c4  {
000113c6      uint32_t r0 = arg1 >> 2;
000113cc      *(uint16_t*)(arg4 * 2 + arg3) = (int16_t)arg2;
000113ce      /* tailcall */
000113ce      return sub_113d0(r0, arg2, arg3, r0 << 2);
000113c4  }


000113d0    uint32_t sub_113d0(int32_t arg1, int32_t arg2, int32_t arg3, int32_t arg4)

000113d0  {
000113d0      int32_t var_c = arg4;
000113d0      int32_t var_10_1 = arg3;
000113e0      0xff7e0976(1, arg1, arg2, arg3, &var_c, var_c);
000113e8      return (uint32_t)(uint8_t)var_c;
000113d0  }

000113ea                                08 b5 01 46 6a 46 02 20 cf f7 c0 da 68 46 00 78 08 bd 08 b5 0a 46            ...FjF. ....hF.x.....F
00011400  01 46 6b 46 03 20 cf f7 b6 da 68 46 00 78 08 bd 08 b5 0a 46 01 46 6b 46 04 20 cf f7 ac da 68 46  .FkF. ....hF.x.....F.FkF. ....hF
00011420  00 78 08 bd 08 b5 01 46 6a 46 d0 20 cf f7 a3 da 68 46 00 78 08 bd 08 b5 69 46 d1 20 cf f7 9b da  .x.....FjF. ....hF.x....iF. ....
00011440  68 46 00 78 08 bd 08 b5 0a 46 01 46 6b 46 d2 20 cf f7 91 da 68 46 00 78 08 bd 08 b5 01 46 6a 46  hF.x.....F.FkF. ....hF.x.....FjF
00011460  d3 20 cf f7 88 da 68 46 00 78 08 bd                                                              . ....hF.x..

0001146c    uint32_t sub_1146c(int32_t arg1, int32_t arg2, int32_t arg3, int32_t arg4)

0001146c  {
0001146c      int32_t var_c = arg4;
0001146c      int32_t var_10_1 = arg3;
0001147e      0xff7e0976(0x100, arg1, arg2, arg3, &var_c, var_c);
00011486      return (uint32_t)(uint8_t)var_c;
0001146c  }

00011488                          10 b5 f9 49 48 60 01 46 ff 20 02 30 cf f7 6f da 10 bd                            ...IH`.F. .0..o...

0001149a    uint32_t sub_1149a(int32_t arg1, int32_t arg2, int32_t arg3, int32_t arg4)

0001149a  {
0001149a      int32_t var_c = arg4;
0001149a      int32_t var_10_1 = arg3;
000114ac      0xff7e0976(0x102, arg1, arg2, arg3, &var_c, var_c);
000114b4      return (uint32_t)(uint8_t)var_c;
0001149a  }


000114b6    uint32_t sub_114b6(int32_t arg1, int32_t arg2, int32_t arg3, int32_t arg4)

000114b6  {
000114b8      int32_t var_8 = arg4;
000114c2      int32_t lr;
000114c2      0xff7e0976(0x103, arg1, arg2, &var_8, var_8, lr);
000114ca      return (uint32_t)(uint8_t)var_8;
000114b6  }

000114cc                                      08 b5 ff 20 69 46 05 30 cf f7 4f da 68 46 00 78 08 bd 08 b5              ... iF.0..O.hF.x....
000114e0  01 46 ff 20 6a 46 06 30 cf f7 45 da 68 46 00 78 08 bd 08 b5 ff 20 69 46 07 30 cf f7 3c da 68 46  .F. jF.0..E.hF.x..... iF.0..<.hF
00011500  00 78 08 bd                                                                                      .x..

00011504    int32_t sub_11504(int32_t arg1)

00011504  {
00011510      return 0xff7e0976(0x107, arg1);
00011504  }

00011512                                                        08 b5 01 46 ff 20 6a 46 09 30 cf f7 2b da                    ...F. jF.0..+.
00011520  68 46 00 78 08 bd 01 46 10 b5 ff 20 0a 30 cf f7 22 da 10 bd 01 46 10 b5 03 20 00 03 cf f7 1b da  hF.x...F... .0.."....F... ......
00011540  10 bd 08 b5 01 46 6a 46 ca 48 cf f7 14 da 68 46 00 78 08 bd 01 46 c7 48 10 b5 40 1c cf f7 0b da  .....FjF.H....hF.x...F.H..@.....
00011560  10 bd 08 b5 c3 48 69 46 80 1c cf f7 04 da 68 46 00 78 08 bd                                      .....HiF......hF.x..

00011574    int32_t sub_11574(int32_t arg1)

00011574  {
00011578      *(uint32_t*)0x20dadc = arg1;
00011584      return 0xff7e0976(0x3004, arg1);
00011574  }


00011586    uint32_t sub_11586(int32_t arg1, int32_t arg2, int32_t arg3, int32_t arg4)

00011586  {
00011586      int32_t var_c = arg4;
00011586      int32_t var_10_1 = arg3;
00011598      0xff7e0976(sub_3002+3, arg1, arg2, arg3, &var_c, var_c);
000115a0      return (uint32_t)(uint8_t)var_c;
00011586  }

000115a2        0a 46 01 46 08 b5 b2 48 6b 46 40 1d cf f7 e2 d9 68 46 00 78 08 bd 1c b5 0c 46 01 a9 00 91    .F.F...HkF@.....hF.x.....F....
000115c0  01 46 ac 48 13 46 22 46 80 1d cf f7 d4 d9 68 46 00 79 1c bd 0a 46 01 46 08 b5 a6 48 6b 46 c0 1d  .F.H.F"F......hF.y...F.F...HkF..
000115e0  cf f7 c9 d9 68 46 00 78 08 bd 01 46 08 b5 a1 48 6a 46 08 30 cf f7 bf d9 68 46 00 78 08 bd 0a 46  ....hF.x...F...HjF.0....hF.x...F
00011600  01 46 08 b5 9b 48 6b 46 09 30 cf f7 b4 d9 68 46 00 78 08 bd 01 46 08 b5 96 48 6a 46 0a 30 cf f7  .F...HkF.0....hF.x...F...HjF.0..
00011620  aa d9 68 46 00 78 08 bd 0a 46 01 46 08 b5 91 48 6b 46 0b 30 cf f7 9f d9 68 46 00 78 08 bd 01 46  ..hF.x...F.F...HkF.0....hF.x...F
00011640  08 b5 8c 48 6a 46 0c 30 cf f7 95 d9 68 46 00 78 08 bd                                            ...HjF.0....hF.x..

00011652    int32_t sub_11652(int32_t arg1)

00011652  {
0001165e      return 0xff7e0976(0x3100, arg1);
00011652  }

00011660  10 b5 01 46 84 48 cf f7 86 d9 10 bd                                                              ...F.H......

0001166c    uint32_t sub_1166c(int32_t arg1, int32_t arg2, int32_t arg3, int32_t arg4, int32_t arg5, int32_t arg6)

0001166c  {
0001168c      char var_18;
0001168c      0xff7e0976(0x3102, arg1, arg2, arg3, arg4, arg5, arg6, &var_18);
00011696      return (uint32_t)var_18;
0001166c  }

00011698                                                                          f0 b5 87 b0 14 46 0d 46                          .....F.F
000116a0  0c af 46 cf 05 af 04 97 01 af 46 c7 01 46 72 48 00 93 23 46 2a 46 80 1c cf f7 5d d9 68 46 00 7d  ..F.......F..FrH..#F*F....].hF.}

000116c4    int32_t sub_116c4(int32_t arg1)

000116c4  {
000116d0      return 0xff7e0976(0x3104, arg1);
000116c4  }


000116d2    uint32_t sub_116d2(int32_t arg1, int32_t arg2, int32_t arg3, int32_t arg4, int32_t arg5, int32_t arg6)

000116d2  {
000116f2      char var_18;
000116f2      0xff7e0976(0x3105, arg1, arg2, arg3, arg4, arg5, arg6, &var_18);
00011696      return (uint32_t)var_18;
000116d2  }

000116fc                                                                                      1c b5 0c 46                              ...F
00011700  01 a9 00 91 01 46 5c 48 13 46 22 46 40 1d cf f7 32 d9 68 46 00 79 1c bd 3e b5 0c 46 02 a9 01 91  .....F\H.F"F@...2.hF.y..>..F....
00011720  01 46 00 93 54 48 13 46 22 46 80 1d cf f7 23 d9 68 46 00 7a 3e bd                                .F..TH.F"F....#.hF.z>.

00011736    uint32_t sub_11736(int32_t arg1, int32_t arg2, int32_t arg3, int32_t arg4, int32_t arg5, int32_t arg6)

00011736  {
00011756      char var_18;
00011756      0xff7e0976(0x3108, arg1, arg2, arg3, arg4, arg5, arg6, &var_18);
00011696      return (uint32_t)var_18;
00011736  }

00011760  1c b5 0c 46 01 a9 00 91 01 46 43 48 13 46 22 46 08 30 cf f7 00 d9 68 46 00 79 1c bd 01 46 08 b5  ...F.....FCH.F"F.0....hF.y...F..
00011780  3d 48 6a 46 6f 30 cf f7 f6 d8 68 46 00 88 08 bd 01 46 10 b5 19 20 40 02 cf f7 ed d8 10 bd 10 b5  =HjFo0....hF.....F... @.........
000117a0  01 46 36 48 cf f7 e7 d8 10 bd 0a 46 01 46 08 b5 32 48 6b 46 40 1c cf f7 de d8 68 46 00 78 08 bd  .F6H.......F.F..2HkF@.....hF.x..
000117c0  0a 46 01 46 08 b5 2d 48 6b 46 80 1c cf f7 d3 d8 68 46 00 78 08 bd 1c b5 0c 46 01 a9 00 91 01 46  .F.F..-HkF......hF.x.....F.....F
000117e0  26 48 13 46 22 46 c0 1c cf f7 c5 d8 68 46 00 79 1c bd 1c b5 0c 46 01 a9 00 91 01 46 1f 48 13 46  &H.F"F......hF.y.....F.....F.H.F
00011800  22 46 00 1d cf f7 b7 d8 68 46 00 79 1c bd 3e b5 0c 46 02 a9 01 91 01 46 00 93 18 48 13 46 22 46  "F......hF.y..>..F.....F...H.F"F
00011820  40 1d cf f7 a8 d8 68 46 00 7a 3e bd 3e b5 0c 46 02 a9 01 91 01 46 00 93 10 48 13 46 22 46 80 1d  @.....hF.z>.>..F.....F...H.F"F..
00011840  cf f7 99 d8 68 46 00 7a 3e bd 7f b5 0c 46 08 99 01 91 01 46 00 93 09 48 03 ad 13 46 02 95 22 46  ....hF.z>....F.....F...H...F.."F
00011860  c0 1d cf f7 88 d8 68 46 00 7b 04 b0 70 bd 00 00                                                  ......hF.{..p...

00011870  int32_t data_11870 = 0x20dadc
00011874  int32_t data_11874 = 0x3001
00011878  int32_t data_11878 = 0x3101

0001187c                                                                                      01 32 00 00                              .2..
00011880  7f b5 0c 46 08 99 00 93 01 91 03 ad 13 46 01 46 02 95 22 46 f7 48 cf f7 6e d8 68 46 00 7b e4 e7  ...F.........F.F.."F.H..n.hF.{..
000118a0  3e b5 0c 46 02 a9 01 91 01 46 00 93 f1 48 13 46 22 46 40 1c cf f7 5f d8 68 46 00 7a 3e bd 1c b5  >..F.....F...H.F"F@..._.hF.z>...
000118c0  0c 46 01 a9 00 91 01 46 ea 48 13 46 22 46 80 1c cf f7 51 d8 68 46 00 79 1c bd 70 b5 86 b0 14 46  .F.....F.H.F"F....Q.hF.y..p....F
000118e0  0d 46 0b 9a 0a 99 01 91 01 46 e2 48 04 ae 00 93 02 92 03 96 23 46 2a 46 c0 1c cf f7 3c d8 68 46  .F.......F.H........#F*F....<.hF
00011900  00 7c c7 e6 70 b5 86 b0 14 46 0d 46 0b 9a 0a 99 01 91 01 46 d7 48 04 ae 00 93 02 92 03 96 23 46  .|..p....F.F.......F.H........#F
00011920  2a 46 00 1d cf f7 27 d8 68 46 00 7c b2 e6 01 46 08 b5 d0 48 6a 46 40 1d cf f7 1d d8 68 46 00 78  *F....'.hF.|...F...HjF@.....hF.x
00011940  08 bd 1c b5 0c 46 01 a9 00 91 01 46 c9 48 13 46 22 46 80 1d cf f7 0f d8 68 46 00 79 00 28 00 d0  .....F.....F.H.F"F......hF.y.(..
00011960  01 20 1c bd                                                                                      . ..

00011964    uint32_t sub_11964(int32_t arg1, int32_t arg2, int32_t arg3, int32_t arg4)

00011964  {
00011966      int32_t var_8 = arg4;
0001196e      0xff7e0976(0x3210, arg1, &var_8);
00011976      return (uint32_t)(uint8_t)var_8;
00011964  }


00011978    uint32_t sub_11978(int32_t arg1, int32_t arg2, int32_t arg3, int32_t arg4)

00011978  {
00011978      int32_t var_c = arg4;
00011978      int32_t var_10_1 = arg3;
0001198a      0xff7e0976(0x3300, arg1, arg2, arg3, &var_c, var_c);
00011992      return (uint32_t)(uint8_t)var_c;
00011978  }

00011994                                                              0a 46 01 46 08 b5 b6 48 6b 46 f8 30                      .F.F...HkF.0
000119a0  ce f7 e9 df 68 46 00 78 08 bd                                                                    ....hF.x..

000119aa    uint32_t sub_119aa(int32_t arg1, int32_t arg2, int32_t arg3, int32_t arg4)

000119aa  {
000119aa      int32_t var_8 = arg4;
000119b2      0xff7e0976(0x3302, &var_8);
000119ba      return (uint32_t)(uint8_t)var_8;
000119aa  }


000119bc    uint32_t sub_119bc(int32_t arg1, int32_t arg2, int32_t arg3, int32_t arg4)

000119bc  {
000119bc      int32_t var_8 = arg4;
000119c4      0xff7e0976(0x3303, &var_8);
000119cc      return (uint32_t)(uint8_t)var_8;
000119bc  }

000119ce                                            08 b5 a8 48 69 46 fb 30 ce f7 ce df 68 46 00 78 08 bd                ...HiF.0....hF.x..
000119e0  08 b5 a4 48 69 46 fc 30 ce f7 c5 df 68 46 00 78 08 bd                                            ...HiF.0....hF.x..

000119f2    uint32_t sub_119f2(int32_t arg1, int32_t arg2, int32_t arg3, int32_t arg4)

000119f2  {
000119f6      int32_t var_8 = arg4;
000119fe      int32_t lr;
000119fe      0xff7e0976(0x3306, arg1, arg2, &var_8, var_8, lr);
00011a06      return (uint32_t)(uint8_t)var_8;
000119f2  }

00011a08                          1c b5 0c 46 01 a9 00 91 01 46 98 48 13 46 22 46 fe 30 ce f7 ac df 68 46          ...F.....F.H.F"F.0....hF
00011a20  00 79 1c bd 1c b5 0c 46 01 a9 00 91 01 46 13 46 0d 20 22 46 80 02 ce f7 9e df 68 46 00 79 1c bd  .y.....F.....F.F. "F......hF.y..
00011a40  08 b5 0a 46 01 46 6b 46 8b 48 ce f7 94 df 68 46 00 78 08 bd 08 b5 88 48 69 46 40 1c ce f7 8b df  ...F.FkF.H....hF.x.....HiF@.....
00011a60  68 46 00 78 08 bd 08 b5 83 48 69 46 80 1c ce f7 82 df 68 46 00 78 08 bd                          hF.x.....HiF......hF.x..

00011a78    uint32_t sub_11a78(int32_t arg1, int32_t arg2, int32_t arg3, int32_t arg4)

00011a78  {
00011a78      int32_t var_c = arg4;
00011a78      int32_t var_10_1 = arg3;
00011a8a      0xff7e0976(0x3500, arg1, arg2, arg3, &var_c, var_c);
00011a92      return (uint32_t)(uint8_t)var_c;
00011a78  }

00011a94                                                              08 b5 0a 46 01 46 6b 46 77 48 ce f7                      ...F.FkFwH..
00011aa0  6a df 68 46 00 78 00 28 00 d0 01 20 08 bd                                                        j.hF.x.(... ..

00011aae    uint32_t sub_11aae(int32_t arg1, int32_t arg2, int32_t arg3, int32_t arg4)

00011aae  {
00011aae      int32_t var_c = arg4;
00011aae      int32_t var_10_1 = arg3;
00011ac0      0xff7e0976(0x3502, arg1, arg2, arg3, &var_c, var_c);
00011ac8      return (uint32_t)(uint8_t)var_c;
00011aae  }

00011aca                                1c b5 0c 46 01 a9 00 91 01 46 69 48 13 46 22 46 80 1c ce f7 4b df            ...F.....FiH.F"F....K.
00011ae0  68 46 00 79 1c bd 08 b5 64 48 69 46 c0 1c ce f7 42 df 68 46 00 78 08 bd 08 b5 60 48 69 46 00 1d  hF.y....dHiF....B.hF.x....`HiF..
00011b00  ce f7 39 df 68 46 00 78 08 bd                                                                    ..9.hF.x..

00011b0a    uint32_t sub_11b0a(int32_t arg1, int32_t arg2, int32_t arg3, int32_t arg4)

00011b0a  {
00011b0c      int32_t var_8 = arg4;
00011b14      0xff7e0976(sub_34e6+0x20, arg1, &var_8);  /* "117" */
00011b1c      return (uint32_t)(uint8_t)var_8;
00011b0a  }

00011b1e                                                                                            01 46                                .F
00011b20  08 b5 56 48 6a 46 11 30 ce f7 25 df 68 46 00 78 08 bd 0a 46 01 46 08 b5 50 48 6b 46 14 30 ce f7  ..VHjF.0..%.hF.x...F.F..PHkF.0..
00011b40  1a df 68 46 00 78 08 bd 01 46 08 b5 4b 48 6a 46 80 1d ce f7 10 df 68 46 00 78 08 bd 01 46 08 b5  ..hF.x...F..KHjF......hF.x...F..
00011b60  46 48 6a 46 c0 1d ce f7 06 df 68 46 00 78 08 bd 1c b5 0c 46 01 a9 00 91 01 46 40 48 13 46 22 46  FHjF......hF.x.....F.....F@H.F"F
00011b80  08 30 ce f7 f8 de 68 46 00 79 1c bd 7f b5 0c 46 08 99 01 91 01 46 00 93 38 48 03 ad 13 46 02 95  .0....hF.y.....F.....F..8H...F..
00011ba0  22 46 09 30 ce f7 e7 de 68 46 00 7b 5d e6 0a 46 01 46 08 b5 31 48 6b 46 0a 30 ce f7 dc de 68 46  "F.0....hF.{]..F.F..1HkF.0....hF
00011bc0  00 78 08 bd 01 46 08 b5 2c 48 6a 46 0b 30 ce f7 d2 de 68 46 00 78 08 bd 0a 46 01 46 08 b5 27 48  .x...F..,HjF.0....hF.x...F.F..'H
00011be0  6b 46 0c 30 ce f7 c7 de 68 46 00 78 08 bd 7f b5 0c 46 08 99 01 91 01 46 00 93 20 48 03 ad 13 46  kF.0....hF.x.....F.....F.. H...F
00011c00  02 95 22 46 0d 30 ce f7 b6 de 68 46 00 7b 2c e6                                                  .."F.0....hF.{,.

00011c10    uint32_t sub_11c10(int32_t arg1, int32_t arg2, int32_t arg3, int32_t arg4, int32_t arg5, int32_t arg6, int32_t arg7)

00011c10  {
00011c30      char var_1c;
00011c30      0xff7e0976(sub_34e6+0x29, arg1, arg2, arg3, arg4, arg5, arg6, arg7, &var_1c);
000116c2      return (uint32_t)var_1c;
00011c10  }

00011c3a                                                                                1c b5 0c 46 01 a9                            ...F..
00011c40  00 91 01 46 0d 48 13 46 22 46 0f 30 ce f7 93 de 68 46 00 79 1c bd 1c b5 0c 46 01 a9 00 91 01 46  ...F.H.F"F.0....hF.y.....F.....F
00011c60  06 48 13 46 22 46 13 30 ce f7 85 de 68 46 00 79                                                  .H.F"F.0....hF.y
00011c72                                                        00 00                                                        ..

00011c74  int32_t data_11c74 = 0x3209

00011c78                                                                          01 34 00 00                                      .4..

00011c7c  int32_t data_11c7c = 0x3501

00011c80    uint32_t sub_11c80(int32_t arg1, int32_t arg2, int32_t arg3, int32_t arg4)

00011c80  {
00011c80      int32_t var_c = arg4;
00011c80      int32_t var_10_1 = arg3;
00011c92      0xff7e0976(0x3600, arg1, arg2, arg3, &var_c, var_c);
00011c70      return (uint32_t)(uint8_t)var_c;
00011c80  }

00011c9c                                                                                      08 b5 0a 46                              ...F
00011ca0  01 46 6b 46 f7 48 ce f7 66 de 68 46 00 78 08 bd 01 46 08 b5 f3 48 6a 46 40 1c ce f7 5c de 68 46  .FkF.H..f.hF.x...F...HjF@...\.hF
00011cc0  00 78 08 bd 0a 46 01 46 08 b5 ee 48 6b 46 80 1c ce f7 51 de 68 46 00 78 08 bd 1c b5 0c 46 01 a9  .x...F.F...HkF....Q.hF.x.....F..
00011ce0  00 91 01 46 e7 48 13 46 22 46 c0 1c ce f7 43 de 68 46 00 79 bc e7 0a 46 01 46 08 b5 e1 48 6b 46  ...F.H.F"F....C.hF.y...F.F...HkF
00011d00  00 1d ce f7 38 de 68 46 00 78 08 bd 0a 46 01 46 08 b5 dc 48 6b 46 40 1d ce f7 2d de 68 46 00 78  ....8.hF.x...F.F...HkF@...-.hF.x
00011d20  08 bd 0a 46 01 46 08 b5 d6 48 6b 46 80 1d ce f7 22 de 68 46 00 78 08 bd 0a 46 01 46 08 b5 d1 48  ...F.F...HkF....".hF.x...F.F...H
00011d40  6b 46 c0 1d ce f7 17 de 68 46 00 78 08 bd 0a 46 01 46 08 b5 cb 48 6b 46 08 30 ce f7 0c de 68 46  kF......hF.x...F.F...HkF.0....hF
00011d60  00 78 08 bd 0a 46 01 46 08 b5 c6 48 6b 46 09 30 ce f7 01 de 68 46 00 78 08 bd c2 48 10 b5 0c 30  .x...F.F...HkF.0....hF.x...H...0
00011d80  ce f7 f9 dd 10 bd 01 46 08 b5 be 48 6a 46 0d 30 ce f7 f1 dd 68 46 00 78 08 bd 0a 46 01 46 08 b5  .......F...HjF.0....hF.x...F.F..
00011da0  b8 48 6b 46 0e 30 ce f7 e6 dd 68 46 00 78 08 bd 0a 46 01 46 08 b5 b3 48 6b 46 0f 30 ce f7 db dd  .HkF.0....hF.x...F.F...HkF.0....
00011dc0  68 46 00 78 08 bd                                                                                hF.x..

00011dc6    uint32_t sub_11dc6(int32_t arg1, int32_t arg2, int32_t arg3, int32_t arg4)

00011dc6  {
00011dca      int32_t var_8 = arg4;
00011dd2      int32_t lr;
00011dd2      0xff7e0976(sub_34e6+0x2b, arg1, arg2, &var_8, var_8, lr);
00011dda      return (uint32_t)(uint8_t)var_8;
00011dc6  }

00011ddc                                                                                      0a 46 01 46                              .F.F
00011de0  08 b5 a8 48 6b 46 ee 38 ce f7 c5 dd 68 46 00 78 08 bd 08 b5 01 46 37 20 6a 46 00 02 ce f7 bb dd  ...HkF.8....hF.x.....F7 jF......
00011e00  00 98 08 bd 08 b5 01 46 6a 46 9f 48 ce f7 b3 dd 00 98 08 bd 01 46 08 b5 9b 48 6a 46 40 1c ce f7  .......FjF.H.........F...HjF@...
00011e20  aa dd 00 98 08 bd 01 46 08 b5 97 48 6a 46 80 1c ce f7 a1 dd 00 98 08 bd 01 46 08 b5 92 48 6a 46  .......F...HjF...........F...HjF
00011e40  c0 1c ce f7 98 dd 00 98 08 bd 01 46 08 b5 8e 48 6a 46 00 1d ce f7 8f dd 00 98 08 bd 0a 46 01 46  ...........F...HjF...........F.F
00011e60  08 b5 89 48 6b 46 40 1d ce f7 85 dd 00 98 08 bd                                                  ...HkF@.........

00011e70    int32_t sub_11e70(int32_t arg1, int32_t arg2, int32_t arg3, int32_t arg4)

00011e70  {
00011e72      int32_t result = arg4;
00011e7a      0xff7e0976(sub_3704+3, arg1, &result);
00011e80      return result;
00011e70  }

00011e82        08 b5 80 48 69 46 c0 1d ce f7 74 dd 68 46 00 78 08 bd 08 b5 7c 48 69 46 08 30 ce f7 6b dd    ...HiF....t.hF.x....|HiF.0..k.
00011ea0  00 98 08 bd 08 b5 78 48 69 46 09 30 ce f7 63 dd 00 98 08 bd 0a 46 01 46 08 b5 73 48 6b 46 0a 30  ......xHiF.0..c......F.F..sHkF.0
00011ec0  ce f7 59 dd 68 46 00 78 08 bd 1c b5 0c 46 01 a9 00 91 01 46 6c 48 13 46 22 46 0b 30 ce f7 4b dd  ..Y.hF.x.....F.....FlH.F"F.0..K.
00011ee0  68 46 00 79 c4 e6 0a 46 01 46 08 b5 66 48 6b 46 0c 30 ce f7 40 dd 68 46 00 78 08 bd f0 b5 87 b0  hF.y...F.F..fHkF.0..@.hF.x......
00011f00  14 46 0d 46 0c af 46 cf 05 af 04 97 01 af 46 c7 01 46 5d 48 00 93 23 46 2a 46 0d 30 ce f7 2b dd  .F.F..F.......F..F]H..#F*F.0..+.
00011f20  68 46 00 7d 88 e6 0a 46 01 46 08 b5 56 48 6b 46 0e 30 ce f7 20 dd 68 46 00 78 08 bd 0a 46 01 46  hF.}...F.F..VHkF.0.. .hF.x...F.F
00011f40  08 b5 51 48 6b 46 0f 30 ce f7 15 dd 68 46 00 78 08 bd 01 46 08 b5 4c 48 6a 46 10 30 ce f7 0b dd  ..QHkF.0....hF.x...F..LHjF.0....
00011f60  68 46 00 78 08 bd 08 b5 47 48 69 46 11 30 ce f7 02 dd 68 46 00 78 08 bd 08 b5 43 48 69 46 12 30  hF.x....GHiF.0....hF.x....CHiF.0
00011f80  ce f7 f9 dc 68 46 00 88 08 bd 0a 46 01 46 08 b5 3d 48 6b 46 13 30 ce f7 ee dc 68 46 00 78 08 bd  ....hF.....F.F..=HkF.0....hF.x..
00011fa0  1c b5 0c 46 01 a9 00 91 01 46 37 48 13 46 22 46 14 30 ce f7 e0 dc 01 98 5a e6 0a 46 01 46 08 b5  ...F.....F7H.F"F.0......Z..F.F..
00011fc0  31 48 6b 46 15 30 ce f7 d6 dc 00 98 00 28 00 d0 01 20 08 bd 1c b5 0c 46 01 a9 00 91 01 46 2a 48  1HkF.0.......(... .....F.....F*H
00011fe0  13 46 22 46 16 30 ce f7 c6 dc 01 98 00 28 00 d0 01 20 3d e6 1c b5 0c 46 01 a9 00 91 01 46 13 46  .F"F.0.......(... =....F.....F.F
00012000  07 20 22 46 c0 02 ce f7 b6 dc 68 46 00 79 2f e6 08 b5 0a 46 01 46 6b 46 1c 48 ce f7 ac dc 68 46  . "F......hF.y/....F.FkF.H....hF
00012020  00 78 08 bd 01 46 19 48 10 b5 40 1c ce f7 a3 dc 10 bd 01 46 08 b5 15 48 6a 46 80 1c ce f7 9b dc  .x...F.H..@........F...HjF......
00012040  68 46 00 78 08 bd 0a 46 01 46 08 b5 0f 48 6b 46 c0 1c ce f7 90 dc 68 46 00 78 08 bd 0a 46 01 46  hF.x...F.F...HkF......hF.x...F.F
00012060  08 b5 0a 48 6b 46 00 1d ce f7 85 dc 68 46 00 78 08 bd 08 b5 05 48 69 46 40 1d ce f7 7c dc 68 46  ...HkF......hF.x.....HiF@...|.hF
00012080  00 78 08 bd                                                                                      .x..

00012084  int32_t data_12084 = 0x3601
00012088  int32_t data_12088 = 0x3701

0001208c                                      01 38 00 00 1c b5 0c 46 01 a9 00 91 13 46 01 46 22 46 fa 48              .8.....F.....F.F"F.H
000120a0  ce f7 69 dc 68 46 00 79 e2 e5 1c b5 0c 46 01 a9 00 91 01 46 f4 48 13 46 22 46 40 1c ce f7 5b dc  ..i.hF.y.....F.....F.H.F"F@...[.
000120c0  68 46 00 79 d4 e5 01 46 08 b5 ef 48 6a 46 80 1c ce f7 51 dc 68 46 00 78 d3 e7 08 b5 01 46 39 20  hF.y...F...HjF....Q.hF.x.....F9 
000120e0  6a 46 00 02 ce f7 47 dc 68 46 00 78 c9 e7 0a 46 01 46 08 b5 e4 48 6b 46 fa 30 ce f7 3c dc 68 46  jF....G.hF.x...F.F...HkF.0..<.hF
00012100  00 78 be e7 08 b5 e0 48 69 46 fb 30 ce f7 33 dc 68 46 00 78 b5 e7 01 46 08 b5 db 48 6a 46 fc 30  .x.....HiF.0..3.hF.x...F...HjF.0
00012120  ce f7 29 dc 68 46 00 78 ab e7 01 46 08 b5 d6 48 6a 46 fd 30 ce f7 1f dc 68 46 00 78 a1 e7 f0 b5  ..).hF.x...F...HjF.0....hF.x....
00012140  8f b0 14 46 0d 46 1c af 46 cf 0d af 0c 97 09 af 46 c7 18 a9 c6 c9 08 97 05 af 46 c7 14 a9 c6 c9  ...F.F..F.......F.........F.....
00012160  04 97 01 af 46 c7 01 46 c7 48 00 93 23 46 2a 46 fe 30 ce f7 00 dc 08 a8 00 7d 0f b0 f0 bd 1c b5  ....F..F.H..#F*F.0.......}......
00012180  0c 46 01 a9 00 91 01 46 bf 48 13 46 22 46 ff 30 ce f7 f1 db 68 46 00 79 6a e5 1c b5 0c 46 01 a9  .F.....F.H.F"F.0....hF.yj....F..
000121a0  00 91 13 46 01 46 22 46 b8 48 ce f7 e4 db 68 46 00 79 5d e5 0a 46 01 46 08 b5 b4 48 6b 46 40 1c  ...F.F"F.H....hF.y]..F.F...HkF@.
000121c0  ce f7 d9 db 68 46 00 78 5b e7 0a 46 01 46 08 b5 ae 48 6b 46 80 1c ce f7 ce db 68 46 00 78 50 e7  ....hF.x[..F.F...HkF......hF.xP.
000121e0  1c b5 0c 46 01 a9 00 91 01 46 a8 48 13 46 22 46 c0 1c ce f7 c0 db 68 46 00 79 39 e5 0a 46 01 46  ...F.....F.H.F"F......hF.y9..F.F
00012200  08 b5 a2 48 6b 46 00 1d ce f7 b5 db 68 46 00 78 37 e7 0a 46 01 46 08 b5 9c 48 6b 46 40 1d ce f7  ...HkF......hF.x7..F.F...HkF@...
00012220  aa db 68 46 00 78 2c e7 08 b5 98 48 69 46 80 1d ce f7 a1 db 68 46 00 78 23 e7 01 46 08 b5 93 48  ..hF.x,....HiF......hF.x#..F...H
00012240  6a 46 c0 1d ce f7 97 db 68 46 00 78 19 e7 01 46 8e 48 10 b5 08 30 ce f7 8e db 10 bd 1c b5 0c 46  jF......hF.x...F.H...0.........F
00012260  01 a9 00 91 01 46 13 46 1d 20 22 46 40 02 ce f7 82 db 68 46 00 79 fb e4 0a 46 01 46 08 b5 83 48  .....F.F. "F@.....hF.y...F.F...H
00012280  6b 46 fa 30 ce f7 77 db 68 46 00 78 f9 e6 0a 46 01 46 7e 48 10 b5 fb 30 ce f7 6d db 10 bd 08 b5  kF.0..w.hF.x...F.F~H...0..m.....
000122a0  7a 48 69 46 fc 30 ce f7 66 db 68 46 00 78 e8 e6 08 b5 76 48 69 46 fd 30 ce f7 5d db 68 46 00 78  zHiF.0..f.hF.x....vHiF.0..].hF.x
000122c0  df e6 01 46 71 48 10 b5 fe 30 ce f7 54 db 10 bd 08 b5 01 46 3b 20 6a 46 00 02 ce f7 4c db 68 46  ...FqH...0..T......F; jF....L.hF
000122e0  00 78 ce e6 1c b5 0c 46 01 a9 00 91 13 46 01 46 22 46 67 48 ce f7 3f db 68 46 00 79 b8 e4 08 b5  .x.....F.....F.F"FgH..?.hF.y....
00012300  63 48 69 46 40 1c ce f7 36 db 68 46 00 78 b8 e6 1c b5 0c 46 01 a9 00 91 01 46 5d 48 13 46 22 46  cHiF@...6.hF.x.....F.....F]H.F"F
00012320  80 1c ce f7 28 db 68 46 00 79 a1 e4 3e b5 0c 46 02 a9 01 91 01 46 00 93 55 48 13 46 22 46 c0 1c  ....(.hF.y..>..F.....F..UH.F"F..
00012340  ce f7 19 db 68 46 00 7a 3e bd f0 b5 89 b0 14 46 0d 46 10 af 46 cf 07 af 06 97 03 af 46 c7 0e 99  ....hF.z>......F.F..F.......F...
00012360  0f 9a 01 91 01 46 4a 48 00 93 02 92 23 46 2a 46 00 1d ce f7 00 db 68 46 00 7f 09 b0 f0 bd 10 b5  .....FJH....#F*F......hF........
00012380  01 46 44 48 ce f7 f7 da 10 bd 1c b5 0c 46 01 a9 00 91 01 46 3f 48 13 46 22 46 40 1c ce f7 eb da  .FDH.........F.....F?H.F"F@.....
000123a0  68 46 00 79 64 e4 08 b5 00 93 13 46 0a 46 01 46 38 48 80 1c ce f7 df da 63 e6 1c b5 0c 46 01 a9  hF.yd......F.F.F8H......c....F..
000123c0  00 91 01 46 33 48 13 46 22 46 c0 1c ce f7 d3 da 68 46 00 79 4c e4 08 b5 69 46 2f 48 ce f7 cb da  ...F3H.F"F......hF.yL...iF/H....
000123e0  68 46 00 78 4d e6 0a 46 01 46 08 b5 2a 48 6b 46 40 1c ce f7 c0 da 68 46 00 78 42 e6 0a 46 01 46  hF.xM..F.F..*HkF@.....hF.xB..F.F
00012400  08 b5 25 48 6b 46 80 1c ce f7 b5 da 68 46 00 78 37 e6 0a 46 01 46 08 b5 1f 48 6b 46 c0 1c ce f7  ..%HkF......hF.x7..F.F...HkF....
00012420  aa da 68 46 00 78 2c e6 1c b5 0c 46 01 a9 00 91 01 46 19 48 13 46 22 46 80 1d ce f7 9c da 68 46  ..hF.x,....F.....F.H.F"F......hF
00012440  00 79 15 e4 70 b5 86 b0 14 46 0d 46 0b 9a 0a 99 01 91 01 46 10 48 04 ae 00 93 02 92 03 96 23 46  .y..p....F.F.......F.H........#F
00012460  2a 46 00 1d ce f7 87 da 68 46 00 7c 06 b0 70 bd 0a 46 01 46 08 b5 08 48 6b 46 40 1d ce f7 7b da  *F......hF.|..p..F.F...HkF@...{.
00012480  68 46 00 78 fd e5 00 00                                                                          hF.x....

00012488  char const (* data_12488)[0x1] = data_3807 {"s"}

0001248c                                      07 39 00 00 01 3b 00 00 0a 31 00 00 20 3f 00 00                          .9...;...1.. ?..

0001249c    void sub_1249c(uint16_t* arg1, char* arg2)

0001249c  {
0001249e      uint32_t r2 = (uint32_t)arg2[1];
000124a0      *(uint16_t*)arg1 = (int16_t)r2;
000124a8      *(uint16_t*)arg1 = (int16_t)(r2 << 8) + (uint16_t)*(uint8_t*)arg2;
000124ac      uint32_t r3_1 = (uint32_t)arg2[4] >> 7;
000124ae      arg1[5] = (char)r3_1;
000124b0      uint32_t r2_4 = (uint32_t)arg2[4];
000124b2      *(uint32_t*)((char*)arg1 + 4) = r2_4;
000124b8      uint32_t r2_6 = (r2_4 << 8) + (uint32_t)arg2[3];
000124ba      *(uint32_t*)((char*)arg1 + 4) = r2_6;
000124c0      uint32_t r4_2 = (r2_6 << 8) + (uint32_t)arg2[2];
000124c2      *(uint32_t*)((char*)arg1 + 4) = r4_2;
000124c4      uint32_t r2_8 = (uint32_t)arg2[6];
000124c6      arg1[4] = (int16_t)r2_8;
000124ce      arg1[4] = (int16_t)(r2_8 << 8) + (uint16_t)arg2[5];
000124ce      
000124d2      if (r3_1)
000124da          *(uint32_t*)((char*)arg1 + 4) = r4_2 | 0xff000000;
0001249c  }


000124de    uint32_t sub_124de(void* arg1, int32_t arg2, int32_t arg3 @ r4, int32_t arg4 @ r5, int32_t arg5 @ r6, int32_t arg6, int32_t arg7, int32_t arg8)

000124de  {
000124ee      uint32_t r0_3 = sub_137d8(sub_139fc(arg2 * arg2), 0x4cbebc20);
000124fe      int32_t r0_6 = sub_19964(sub_139fc((int32_t)*(uint16_t*)arg1), r0_3, arg1);
0001250e      uint32_t r0_10;
0001250e      int32_t r2;
0001250e      int32_t r3;
0001250e      r0_10 = sub_137d8(sub_139fc(arg2 * *(uint32_t*)((char*)arg1 + 4)), 0x47c35000);
00012514      uint32_t r0_11 = sub_198d8(r0_10, r0_6, r2, r3, arg1, r0_6, arg3, arg4);
00012524      uint32_t r0_14;
00012524      int32_t r2_1;
00012524      int32_t r3_1;
00012524      r0_14 = sub_137d8(sub_139fc((int32_t)*(uint16_t*)((char*)arg1 + 8)), 0x41200000);
0001252e      int32_t lr;
0001252e      return sub_198d8(r0_14, r0_11, r2_1, r3_1, arg1, r0_6, arg5, lr);
000124de  }


00012530    int32_t sub_12530()

00012530  {
00012532      int32_t result = 0;
00012538      int32_t var_28 = 0;
0001253a      int32_t var_24 = 0;
0001253c      int32_t var_20 = 0;
0001253e      uint32_t i = 0;
00012544      int32_t var_1c = 0;
00012544      
00012552      do
00012552      {
0001254a          *(uint8_t*)(&var_28 + i) = *(uint8_t*)(i + 0x4000);
0001254e          i = (uint32_t)((uint8_t)i + 1);
00012552      } while (i < 0x10);  /* "RY02_3.00.33_250117" */
00012552      
0001257c      for (uint32_t i_1 = 0; i_1 < 3; i_1 = (uint32_t)((uint8_t)i_1 + 1))
0001257c      {
0001255a          uint32_t r1_1 = 0;
0001255a          
00012568          while ((uint32_t)*(uint8_t*)(&var_28 + r1_1)
00012568              == (uint32_t)*(uint8_t*)((i_1 << 4) + 0x208526 + r1_1))
00012568          {
0001256c              r1_1 = (uint32_t)((uint8_t)r1_1 + 1);
0001256c              
00012570              if (r1_1 >= 0x10)  /* "RY02_3.00.33_250117" */
00012570                  break;
00012568          }
00012568          
00012574          if (r1_1 == 0x10)  /* "RY02_3.00.33_250117" */
00012574          {
000125ae              *(uint8_t*)0x208524 = (char)i_1;
000125b0              break;
00012574          }
0001257c      }
0001257c      
00012596      for (uint32_t i_2 = 0; i_2 < 0x1f; i_2 = (uint32_t)((uint8_t)i_2 + 1))  /* "0117" */
0001258c          0xff7e46c0(i_2 + 0x8002f2, 1, i_2 + 0x20daf7);
0001258c      
0001259a      *(uint8_t*)0x20daf6 = 0x55;
000125a2      *(uint8_t*)0x20db16 = 0xaa;
000125aa      int32_t r0_10;
000125aa      
000125aa      if ((uint32_t)*(uint8_t*)0x20db13 == 0xff)
000125aa      {
000125b2          uint32_t r0_5 = (uint32_t)*(uint8_t*)0x20db14;
000125b2          
000125b6          if (r0_5 != 0xff)
000125b6          {
000125ba              if (!r0_5)
000125ba              {
000125e6                  if ((uint32_t)*(uint8_t*)0x20db15 != 0xff)
000125e6                      goto label_125d6;
000125e6                  
000125ea                  r0_10 = 0xfffffffe;
000125ec                  goto label_1263e;
000125ba              }
000125ba              
000125cc              if (r0_5 != 0xff || (uint32_t)*(uint8_t*)0x20db15)
000125be                  goto label_125d0;
000125be              
000125f0          label_125f0:
000125f0              
00012604              if ((uint32_t)*(uint8_t*)0x20db0d != 0xff
00012604                      || (uint32_t)*(uint8_t*)0x20db0e != 0xff
00012604                      || (uint32_t)*(uint8_t*)0x20db0f != 0xff
00012604                      || (uint32_t)*(uint8_t*)0x20db10 != 0xff)
000125f2                  goto label_125d6;
000125f2              
00012608              r0_10 = 0xffffffff;
0001260a              goto label_1263e;
000125b6          }
000125b6          
000125c6          if ((uint32_t)*(uint8_t*)0x20db15 != 0xff)
000125c6          {
000125cc              if (!(uint32_t)*(uint8_t*)0x20db15)
000125cc                  goto label_125f0;
000125cc              
000125cc              goto label_125d0;
000125c6          }
000125c6          
000125de          r0_10 = 0xfffffffd;
0001263e      label_1263e:
0001263e          *(uint8_t*)0x208525 = (char)r0_10;
00012640          result = 1;
00012640          
00012644          if (r0_10 == 0xfffffffe)
00012644          {
0001266c              uint32_t r2_6 = (uint32_t)*(uint8_t*)0x20daff;
0001266e              *(uint16_t*)0x20db24 = (int16_t)r2_6;
00012676              *(uint16_t*)0x20db24 = (int16_t)(r2_6 << 8) + (uint16_t)*(uint8_t*)0x20db00;
0001267c              *(uint8_t*)0x20db2e = *(uint8_t*)0x20db01 >> 7;
0001267e              uint32_t r2_11 = (uint32_t)*(uint8_t*)0x20db01;
00012680              *(uint32_t*)0x20db28 = r2_11;
00012686              uint32_t r2_13 = (r2_11 << 8) + (uint32_t)*(uint8_t*)0x20db02;
00012688              *(uint32_t*)0x20db28 = r2_13;
00012690              *(uint32_t*)0x20db28 = (r2_13 << 8) + (uint32_t)*(uint8_t*)0x20db03;
00012692              uint32_t r2_16 = (uint32_t)*(uint8_t*)0x20db04;
00012694              *(uint16_t*)0x20db2c = (int16_t)r2_16;
0001269c              *(uint16_t*)0x20db2c = (int16_t)(r2_16 << 8) + (uint16_t)*(uint8_t*)0x20db05;
0001269c              
000126a2              if ((uint32_t)*(uint8_t*)0x20db2e == 1)
000126ac                  *(uint32_t*)0x20db28 |= 0xff000000;
00012644          }
00012644          else if (r0_10 == 0xffffffff)
000126b6              sub_1249c(0x20db24, 0x20dafe);
0001264c          else
0001264c          {
00012654              if (r0_10 && r0_10 != 1)
00012654              {
00012658                  *(uint8_t*)0x208525 = 0x5a;
0001265a                  return 0;
00012654              }
00012654              
000126c2              sub_1249c(0x20db18, 0x20daf7);
000126cc              sub_1249c(0x20db24, 0x20dafe);
000126d8              sub_1249c(0x20db30, 0x20db05);
000126e4              sub_1249c(0x20db3c, 0x20db0c);
000126f4              *(uint16_t*)0x20daf4 = (int16_t)((uint32_t)*(uint8_t*)0x20db14 << 8)
000126f4                  + (uint16_t)*(uint8_t*)0x20db13;
0001264c          }
000125aa      }
000125aa      else
000125aa      {
000125d0      label_125d0:
000125d0          
000125d2          if ((uint32_t)*(uint8_t*)0x20db15 != 0xff)
000125d2          {
000125d6          label_125d6:
000125d6              
0001261c              if ((uint32_t)*(uint8_t*)0x20daf7 != 0xff
0001261c                  || (uint32_t)*(uint8_t*)0x20dafe != 0xff
0001261c                  || (uint32_t)*(uint8_t*)0x20db05 != 0xff
0001261c                  || (uint32_t)*(uint8_t*)0x20db0c != 0xff)
0001261c              {
0001261e                  uint32_t r0_19 = (uint32_t)*(uint8_t*)0x208524;
00012622                  uint32_t r0_20;
00012622                  
00012622                  if (r0_19 && (r0_19 == 1 || r0_19 == 2))
0001262c                      r0_20 = (uint32_t)*(uint8_t*)0x20db15;
0001262c                  
00012634                  if (r0_19 && ((r0_19 != 1 && r0_19 != 2) || !r0_20 || r0_20 == 1))
00012634                  {
00012662                      r0_10 = 1;
00012664                      goto label_1263e;
00012634                  }
00012634                  
00012638                  r0_10 = (int32_t)*(uint8_t*)0x20db15;
00012638                  
0001263c                  if (r0_10 != 0x5a)
0001263c                      goto label_1263e;
0001261c              }
000125d2          }
000125aa      }
00012660      return result;
00012530  }


000126f8    uint32_t sub_126f8(int32_t arg1, int32_t arg2, char* arg3, int32_t arg4 @ r4, int32_t arg5, int32_t arg6)

000126f8  {
000126f8      int32_t lr;
000126f8      int32_t var_4 = lr;
000126f8      int32_t __saved_r4;
000126f8      int32_t* sp_1 = &__saved_r4;
000126fc      uint32_t result = 0;
00012702      *(uint8_t*)arg3 = 0;
00012702      
00012710      if (arg1 - 1 >= 4 || arg2 < 0 || arg2 > 0xfff)
0001274e          *(uint8_t*)arg3 = 0xff;
00012710      else
00012710      {
00012722          if ((uint32_t)*(uint8_t*)0x20daf6 != 0x55
00012722              && (uint32_t)*(uint8_t*)0x20db16 != 0xaa)
00012722          {
00012734              *(uint8_t*)arg3 = -2;
00012736              return 0;
00012722          }
00012722          
0001272a          uint32_t r4_3 = (uint32_t)*(uint8_t*)0x208525;
0001272a          
0001272e          if (r4_3 != 1)
0001272e          {
00012734              *(uint8_t*)arg3 = -4;
00012736              return 0;
0001272e          }
0001272e          
0001273a          void* const r0;
0001273a          
0001273a          if (arg1 == 1)
0001273a          {
00012754              r0 = 0x20db18;
0001275c          label_1275c:
0001275c              result = sub_124de(r0, arg2, r4_3, 0xffffffff, 0x208524, arg3, arg1, arg4);
0001275c              sp_1 = &var_4;
0001275c              
00012766              if (result + 0x7f800000 < result)
0001276a                  return 0;
0001273a          }
0001273a          else
0001273a          {
0001273e              if (arg1 == 2)
0001273e              {
0001275a                  r0 = 0x20db24;
0001275a                  goto label_1275c;
0001273e              }
0001273e              
00012748              if (arg1 == 3)
0001277a                  return sub_124de(0x20db30, arg2 - 0x200, r4_3, 0xffffffff, 0x208524, 
0001277a                      arg3, arg1, arg4);
0001277a              
0001274c              if (arg1 == 4)
0001277a                  return sub_124de(0x20db3c, arg2 - 0x200, r4_3, 0xffffffff, 0x208524, 
0001277a                      arg3, arg1, arg4);
0001277a              
0001274e              *(uint8_t*)arg3 = 0xff;
0001273a          }
00012710      }
00012710      
00012750      *(uint32_t*)sp_1;
00012750      sp_1[1];
00012750      sp_1[2];
00012750      return result;
000126f8  }


0001277c    uint32_t sub_1277c()

0001277c  {
00012782      if ((uint32_t)*(uint8_t*)0x208525 == 1)
0001278e          return (uint32_t)*(uint16_t*)0x20daf4;
0001278e      
00012786      return 0;
0001277c  }

00012790  int32_t data_12790 = 0x4cbebc20
00012794  int32_t data_12794 = 0x47c35000
00012798  int32_t data_12798 = 0x41200000
0001279c  int32_t data_1279c = 0x208524
000127a0  int32_t data_127a0 = 0x20daf6
000127a4  int32_t data_127a4 = 0x8002f2

000127a8    int32_t sub_127a8(int32_t arg1, int32_t arg2, int32_t arg3)

000127a8  {
000127a8      int32_t r3;
000127a8      int32_t var_4 = r3;
000127a8      int32_t var_8 = arg3;
000127a8      int32_t var_10 = arg1;
000127aa      int32_t var_1c = r3;
000127aa      int32_t var_20 = arg3;
000127b4      var_20 = arg1;
000127b8      sub_13ae2(arg2, &var_20, &var_8);
000127c0      sub_13b08(0, &var_20);
000127ca      return 0;
000127a8  }

000127cc  int32_t data_127cc = 0x1355

000127d0    int32_t sub_127d0(int32_t arg1, int32_t arg2, int32_t arg3, int32_t arg4)

000127d0  {
000127d0      int32_t var_4 = arg4;
000127d0      int32_t var_c = arg2;
000127d0      int32_t var_10 = arg1;
000127d2      int32_t var_1c = arg4;
000127d2      int32_t var_20 = arg3;
000127d8      var_20 = arg1;
000127d8      
000127da      if (arg2)
000127de          arg1 = arg1 + arg2 - 1;
000127de      
000127e6      int32_t var_1c_1 = arg1;
000127ea      int32_t result = sub_13ae2(arg3, &var_20, &var_4);
000127ea      
000127f0      if (arg2)
000127f0      {
000127f4          result = 0;
000127f6          sub_13b08(0, &var_20);
000127f0      }
000127f0      
00012800      return result;
000127d0  }

00012802        00 00                                                                                        ..

00012804  int32_t data_12804 = 0x132d

00012808    int32_t sub_12808(int32_t* arg1)

00012808  {
0001280c      int32_t r5 = arg1[6];
0001280e      int32_t r0 = *(uint32_t*)arg1;
00012812      int32_t r6;
00012812      
00012812      r6 = r0 << 0x1b >= 0 ? 0x20 : 0x30;  /* "3_250117" */  /* "117" */  /* "RY02_V3.0" */
00012812      
0001281a      int32_t result = r0 << 0x1f;  /* "0117" */
0001281a      
0001281c      if (result)
0001281e          return result;
0001281e      
0001282e      while (true)
0001282e      {
0001282e          int32_t temp0_1 = r5;
0001282e          r5 -= 1;
0001282e          
00012830          if (temp0_1 - 1 < 0)
00012830              break;
00012830          
00012826          arg1[1](r6, arg1[2]);
0001282a          result = arg1[8] + 1;
0001282c          arg1[8] = result;
0001282e      }
0001282e      
00012832      return result;
00012808  }


00012834    uint32_t sub_12834(char* arg1)

00012834  {
00012838      int32_t r5 = *(uint32_t*)(arg1 + 0x18);  /* "0.33_250117" */
0001283c      uint32_t result = (uint32_t)*(uint8_t*)arg1 << 0x1f;  /* "0117" */
0001283c      
0001283e      if (!result)
00012840          return result;
00012840      
00012850      while (true)
00012850      {
00012850          int32_t temp0_1 = r5;
00012850          r5 -= 1;
00012850          
00012852          if (temp0_1 - 1 < 0)
00012852              break;
00012852          
00012848          (*(uint32_t*)(arg1 + 4))(0x20, *(uint32_t*)(arg1 + 8));  /* "117" */
0001284c          result = *(uint32_t*)(arg1 + 0x20) + 1;  /* "117" */
0001284e          *(uint32_t*)(arg1 + 0x20) = result;  /* "117" */
00012850      }
00012850      
00012854      return result;
00012834  }


00012856    uint32_t sub_12856(char* arg1, void* arg2, int32_t arg3)

00012856  {
00012858      void* r4 = arg2;
0001285e      int32_t i;
0001285e      
0001285e      if (arg3 == 1)
0001286c          i = 1;
0001285e      else
0001285e      {
00012864          if ((uint32_t)*(uint8_t*)arg1 << 0x1a < 0)  /* "33_250117" */
00012866              arg3 = *(uint32_t*)(arg1 + 0x1c);  /* "_250117" */
00012866          
00012874          for (i = 0; i < arg3; i += 1)
00012874          {
0001287a              if (!(uint32_t)*(uint8_t*)((char*)r4 + i))
0001287a                  break;
00012874          }
0001285e      }
0001285e      
0001287e      void* r6 = (char*)r4 + i;
00012882      *(uint32_t*)(arg1 + 0x18) -= i;  /* "0.33_250117" */
00012888      *(uint32_t*)(arg1 + 0x20) += i;  /* "117" */
0001288c      sub_12808(arg1);
0001288c      
0001289e      while (r4 < r6)
0001289e      {
00012894          uint32_t r0_8 = (uint32_t)*(uint8_t*)r4;
00012898          r4 += 1;
0001289a          (*(uint32_t*)(arg1 + 4))(r0_8, *(uint32_t*)(arg1 + 8));
0001289e      }
0001289e      
000128a6      return sub_12834(arg1);
00012856  }


000128a8    int32_t sub_128a8(int16_t* arg1, int32_t arg2, int32_t* arg3)

000128a8  {
000128b0      uint32_t i = *(uint32_t*)arg3;
000128ba      void* const r2;
000128ba      
000128ba      if ((uint32_t)*(uint16_t*)arg1 << 0x14 >= 0)  /* "_3.00.33_250117" */
000128c6          r2 = "0123456789abcdef@0x";
000128ba      else
000128be          r2 = "0123456789ABCDEF@0X";
000128be      
000128ca      int32_t r1_2 = 0;
000128ca      
000128de      while (i)
000128de      {
000128d0          int32_t r6_1 = i << 0x1c;  /* "_250117" */
000128d2          i u>>= 4;
000128d8          *(uint8_t*)(&arg1[0x12] + r1_2) = *(uint8_t*)((char*)r2 + (r6_1 >> 0x1c));
000128d8              /* "02_3.00.33_250117" */  /* "_250117" */
000128da          r1_2 += 1;
000128de      }
000128de      
000128e2      int32_t r3_2 = 0;
000128e2      
000128ee      if ((uint32_t)*(uint8_t*)arg1 << 0x1c < 0 && arg2 != 0x70 && r1_2)  /* "_250117" */
000128ee      {
000128f0          r3_2 = 2;
000128f2          r2 += 0x11;  /* "Y02_3.00.33_250117" */
000128ee      }
000128ee      
000128fa      return sub_13a28(arg1, r1_2, r2, r3_2);
000128a8  }

000128fc  char const (* data_128fc)[0x3] = data_80f6 {"0Ud"}

00012900    int32_t sub_12900(int32_t* arg1, void* arg2)

00012900  {
00012900      void* var_18 = arg2;
00012900      int32_t* var_1c = arg1;
00012904      int32_t r0 = 0;
00012904      
00012908      while (true)
00012908      {
00012908          arg1[8] = r0;
0001290e          int32_t r0_2;
0001290e          int32_t r1_1;
0001290e          int32_t r2_1;
0001290e          
0001290e          while (true)
0001290e          {
0001290e              r0_2 = arg1[3](arg1);
0001290e              
00012912              if (r0_2)
00012912              {
00012916                  if (r0_2 != 0x25)
00012916                  {
00012918                      r2_1 = arg1[1];
0001291a                      r1_1 = arg1[2];
0001291c                      break;
00012916                  }
00012916                  
00012920                  int32_t r5_1 = 0;
00012928                  int32_t r6_1;
00012928                  
00012928                  while (true)
00012928                  {
00012928                      int32_t r0_4 = arg1[3](arg1);
0001292c                      r6_1 = r0_4;
0001292c                      
0001292e                      if (r0_4 < 0x20)  /* "117" */
0001292e                          break;
0001292e                      
00012932                      if (r6_1 >= 0x31)  /* "Y02_V3.0" */
00012932                          break;
00012932                      
00012938                      uint32_t r0_7 = (uint32_t)*(uint8_t*)(r6_1 + "89ABCDEF@0X");
00012938                      
0001293c                      if (!r0_7)
0001293c                          break;
0001293c                      
0001293e                      r5_1 |= r0_7;
00012928                  }
00012928                  
00012944                  if (r5_1 << 0x1e < 0)  /* "50117" */
00012948                      r5_1 &= 0xfffffffb;
00012948                  
0001294c                  arg1[7] = 0;
0001294e                  int32_t i = 0;
00012950                  arg1[6] = 0;
00012950                  
000129c8                  do
000129c8                  {
00012954                      if (r6_1 == 0x2a)
00012954                      {
00012974                          arg1[i + 6] = *(uint32_t*)var_18;
00012976                          var_18 += 4;
00012980                          r6_1 = arg1[3](arg1);
00012980                          
00012982                          if (i == 1)
00012982                          {
00012988                              if (arg1[7] < 0)
0001298c                                  r5_1 &= 0xffffffdf;
0001298c                              
00012988                              break;
00012982                          }
00012954                      }
00012954                      else
00012954                      {
0001295e                          if (sub_14088(r6_1))
0001295e                          {
00012962                              void* r0_12 = &arg1[i];
00012968                              *(uint32_t*)((char*)r0_12 + 0x18) = r6_1 - 0x30;
00012968                                  /* "0.33_250117" */  /* "RY02_V3.0" */
00012968                              
000129a4                              while (true)
000129a4                              {
000129a4                                  int32_t r0_24 = arg1[3](arg1);
000129a6                                  r6_1 = r0_24;
000129a6                                  
000129ae                                  if (!sub_14088(r0_24))
000129ae                                      break;
000129ae                                  
0001299e                                  *(uint32_t*)((char*)r0_12 + 0x18) =
0001299e                                      0xa * *(uint32_t*)((char*)r0_12 + 0x18) + r6_1 - 0x30;
0001299e                                      /* "0.33_250117" */  /* "RY02_V3.0" */
000129a4                              }
0001295e                          }
0001295e                          
000129b2                          if (i == 1)
000129b2                              break;
00012954                      }
00012954                      
000129b6                      if (r6_1 != 0x2e)
000129b6                          break;
000129b6                      
000129be                      r6_1 = arg1[3](arg1);
000129c2                      r5_1 |= 0x20;  /* "117" */
000129c4                      i += 1;
000129c8                  } while (i < 2);
000129c8                  
000129ca                  int32_t r0_28 = arg1[6];
000129ca                  
000129ce                  if (r0_28 < 0)
000129ce                  {
000129d2                      arg1[6] = 0 - r0_28;
000129d6                      r5_1 |= 1;
000129ce                  }
000129ce                  
000129da                  if (r5_1 << 0x1f)  /* "0117" */
000129de                      r5_1 &= 0xffffffef;
000129de                  
000129e2                  if (r6_1)
000129e2                  {
000129ea                      if (r6_1 - 0x41 <= 0x19)  /* ".33_250117" */
000129ea                      {
000129f0                          r5_1 |= 0x800;
000129f2                          r6_1 += 0x20;  /* "117" */
000129ea                      }
000129ea                      
000129f6                      *(uint32_t*)arg1 = r5_1;
000129fa                      int32_t* r2_4 = var_18;
000129fe                      int32_t r0_34 = sub_460(arg1, r6_1, r2_4);
000129fe                      
00012a04                      if (!r0_34)
00012a04                      {
00012a20                          r2_1 = arg1[1];
00012a22                          r0_2 = r6_1;
00012a24                          r1_1 = arg1[2];
00012a24                          break;
00012a04                      }
00012a04                      
00012a08                      if (r0_34 == 1)
00012a08                      {
00012a1c                          var_18 = &r2_4[1];
00012a1e                          continue;
00012a08                      }
00012a08                      else
00012a08                      {
00012a16                          var_18 = (((char*)r2_4 + 7) >> 3 << 3) + 8;
00012a18                          continue;
00012a08                      }
000129e2                  }
00012912              }
00012912              
00012a30              return arg1[8];
0001290e          }
0001290e          
00012a26          r2_1(r0_2, r1_1);
00012a2a          r0 = arg1[8] + 1;
00012908      }
00012900  }

00012a32                                                        00 00                                                        ..

00012a34  int32_t data_12a34 = 0x80ba

00012a38    void sub_12a38(int32_t arg1)

00012a38  {
00012a46      *(uint32_t*)0x20dc24 = 0x20dbc4;
00012a46      *(uint32_t*)0x20dc28 = 0x20db48;
00012a48      int32_t r1 = 0x37;  /* ".0" */
00012a48      
00012a5a      while (true)
00012a5a      {
00012a5a          int32_t r2_3 = r1;
00012a5c          r1 -= 1;
00012a5c          
00012a60          if (r2_3 <= 0)
00012a60              break;
00012a60          
00012a52          *(uint32_t*)(0x20db48 + (r1 << 2)) = (arg1 >> 0x10) + arg1;
00012a52              /* "RY02_3.00.33_250117" */
00012a58          arg1 = 0x10dcd * arg1 + 0x66d619e1;
00012a5a      }
00012a38  }


00012a64    int32_t j_sub_12a38()

00012a64  {
00012a66      /* tailcall */
00012a66      return sub_12a38(1);
00012a64  }

00012a68  int32_t data_12a68 = 0x20dbc4
00012a6c  int32_t data_12a6c = 0x66d619e1
00012a70  int32_t data_12a70 = 0x10dcd

00012a74    uint32_t sub_12a74(int32_t* arg1, int32_t* arg2, int32_t arg3)

00012a74  {
00012a7c      if (!((arg1 | arg2) << 0x1e))  /* "50117" */
00012a7c      {
00012a84          while (arg3 >= 4)
00012a84          {
00012a86              int32_t r3_2 = *(uint32_t*)arg1;
00012a86              arg1 = &arg1[1];
00012a88              int32_t r4_1 = *(uint32_t*)arg2;
00012a88              arg2 = &arg2[1];
00012a8e              arg3 -= 4;
00012a90              int32_t r6_3 = (r3_2 - 0x1010101) & ~r3_2 & 0x80808080;
00012a90              
00012a92              if (r6_3)
00012a92              {
00012a98                  uint32_t result = (uint32_t)(uint8_t)r3_2 - (uint32_t)(uint8_t)r4_1;
00012a98                  
00012a9e                  if (!(r6_3 << 0x18 | result))  /* "0.33_250117" */
00012a9e                  {
00012aa4                      result = (uint32_t)(uint16_t)r3_2 - (uint32_t)(uint16_t)r4_1;
00012aa4                      
00012aaa                      if (!(r6_3 << 0x10 | result))  /* "RY02_3.00.33_250117" */
00012aaa                      {
00012ab4                          result = (r3_2 << 8 >> 8) - (r4_1 << 8 >> 8);
00012ab4                          
00012aba                          if (!(r6_3 << 8 | result))
00012ac0                              return (r3_2 >> 0x18) - (r4_1 >> 0x18);  /* "0.33_250117" */
00012aaa                      }
00012a9e                  }
00012a9e                  
00012ac2                  return result;
00012a92              }
00012a92              
00012ac6              if (r3_2 != r4_1)
00012ac6              {
00012ace                  if ((r3_2 >> 0x18 | (r3_2 >> 0x10 & 0xff) << 8
00012ace                          | (r3_2 >> 8 & 0xff) << 0x10 | (r3_2 & 0xff) << 0x18) <= (r4_1 >> 0x18
00012ace                          | (r4_1 >> 0x10 & 0xff) << 8 | (r4_1 >> 8 & 0xff) << 0x10
00012ace                          | (r4_1 & 0xff) << 0x18))  /* "RY02_3.00.33_250117" */  /* "0.33_250117"
00012ace                          */
00012ad8                      return 0xffffffff;
00012ad8                  
00012ad2                  return 1;
00012ac6              }
00012a84          }
00012a7c      }
00012a7c      
00012adc      if (!arg3)
00012ae0          return 0;
00012ae0      
00012b08      uint32_t r3_3;
00012b08      uint32_t r4_2;
00012b08      int32_t i;
00012b08      
00012b08      do
00012b08      {
00012ae2          r3_3 = (uint32_t)*(uint8_t*)arg1;
00012ae4          r4_2 = (uint32_t)*(uint8_t*)arg2;
00012ae4          
00012aec          if (!r3_3)
00012aec              break;
00012aec          
00012af0          if (r3_3 != r4_2)
00012af0              break;
00012af0          
00012af2          i = arg3 - 1;
00012af2          
00012af4          if (arg3 == 1)
00012af4              break;
00012af4          
00012af6          r3_3 = (uint32_t)*(uint8_t*)((char*)arg1 + 1);
00012af8          r4_2 = (uint32_t)*(uint8_t*)((char*)arg2 + 1);
00012afa          arg1 += 2;
00012afc          arg2 += 2;
00012afc          
00012b00          if (!r3_3)
00012b00              break;
00012b00          
00012b04          if (r3_3 != r4_2)
00012b04              break;
00012b04          
00012b06          arg3 = i - 1;
00012b08      } while (i != 1);
00012b0c      return r3_3 - r4_2;
00012a74  }

00012b0e                                            00 00                                                                ..

00012b10  int32_t data_12b10 = 0x1010101

00012b14    uint32_t sub_12b14(char* arg1)

00012b14  {
00012b28      return (uint32_t)arg1[1] << 8 | (uint32_t)*(uint8_t*)arg1 | (uint32_t)arg1[2] << 0x10
00012b28          | (uint32_t)arg1[3] << 0x18;  /* "RY02_3.00.33_250117" */  /* "0.33_250117" */
00012b14  }


00012b2a    int32_t sub_12b2a(int32_t arg1, int32_t arg2)

00012b2a  {
00012b2a      int32_t r2_3 = 0;
00012b2a      
00012b30      if (arg1 >> 4 >= arg2)
00012b30      {
00012b36          if (arg1 >> 8 >= arg2)
00012b36          {
00012bde              int32_t r1_2 = arg2 << 6;
00012be0              int32_t r2_8 = 0xfc000000;
00012be2              uint32_t r3_16 = arg1 >> 8;
00012be2              
00012be6              if (r3_16 >= r1_2)
00012be6              {
00012be8                  r1_2 <<= 6;
00012bea                  r2_8 = 0xfff00000;
00012bea                  
00012bee                  if (r3_16 >= r1_2)
00012bee                  {
00012bf0                      r1_2 <<= 6;
00012bf2                      r2_8 = 0xffffc000;
00012bf2                      
00012bf6                      if (r3_16 >= r1_2)
00012bf6                      {
00012bf8                          r1_2 <<= 6;
00012bf8                          
00012bfa                          if (!r1_2)
00012bfa                          {
00012c74                              bool c_19 = /* bool c_19 =
00012c74                                  unimplemented  {asrs r3, r3, #1} */;
00012c74                              
00012c76                              if (c_19)
00012c78                                  arg1 = 0 - arg1;
00012c78                              
00012c7a                              int32_t var_8 = arg1;
00012c82                              return 0;
00012bfa                          }
00012bfa                          
00012bfc                          r2_8 = 0xffffff00;
00012bf6                      }
00012bee                  }
00012be6              }
00012be6              
00012c04              while (true)
00012c04              {
00012c04                  bool c_9 = arg1 >> 7 >= r1_2;
00012c04                  
00012c06                  if (c_9)
00012c06                  {
00012c08                      int32_t r3_18 = r1_2 << 7;
00012c0a                      int32_t temp7_1 = arg1;
00012c0a                      arg1 -= r3_18;
00012c0a                      c_9 = temp7_1 >= r3_18;
00012c06                  }
00012c06                  
00012c0c                  int32_t r2_9 = r2_8 + r2_8;
00012c10                  bool c_10 = arg1 >> 6 >= r1_2;
00012c10                  
00012c12                  if (c_10)
00012c12                  {
00012c14                      int32_t r3_20 = r1_2 << 6;
00012c16                      int32_t temp9_1 = arg1;
00012c16                      arg1 -= r3_20;
00012c16                      c_10 = temp9_1 >= r3_20;
00012c12                  }
00012c12                  
00012c18                  int32_t r2_10 = r2_9 + r2_9;
00012c1c                  bool c_11 = arg1 >> 5 >= r1_2;
00012c1c                  
00012c1e                  if (c_11)
00012c1e                  {
00012c20                      int32_t r3_22 = r1_2 << 5;
00012c22                      int32_t temp10_1 = arg1;
00012c22                      arg1 -= r3_22;
00012c22                      c_11 = temp10_1 >= r3_22;
00012c1e                  }
00012c1e                  
00012c24                  int32_t r2_11 = r2_10 + r2_10;
00012c28                  bool c_12 = arg1 >> 4 >= r1_2;
00012c28                  
00012c2a                  if (c_12)
00012c2a                  {
00012c2c                      int32_t r3_24 = r1_2 << 4;
00012c2e                      int32_t temp12_1 = arg1;
00012c2e                      arg1 -= r3_24;
00012c2e                      c_12 = temp12_1 >= r3_24;
00012c2a                  }
00012c2a                  
00012c30                  int32_t r2_12 = r2_11 + r2_11;
00012c34                  bool c_13 = arg1 >> 3 >= r1_2;
00012c34                  
00012c36                  if (c_13)
00012c36                  {
00012c38                      int32_t r3_26 = r1_2 << 3;
00012c3a                      int32_t temp13_1 = arg1;
00012c3a                      arg1 -= r3_26;
00012c3a                      c_13 = temp13_1 >= r3_26;
00012c36                  }
00012c36                  
00012c3c                  int32_t r2_13 = r2_12 + r2_12;
00012c40                  bool c_14 = arg1 >> 2 >= r1_2;
00012c40                  
00012c42                  if (c_14)
00012c42                  {
00012c44                      int32_t r3_28 = r1_2 << 2;
00012c46                      int32_t temp16_1 = arg1;
00012c46                      arg1 -= r3_28;
00012c46                      c_14 = temp16_1 >= r3_28;
00012c42                  }
00012c42                  
00012c48                  r2_8 = r2_13 + r2_13;
00012c48                  
00012c4a                  if (r2_13 + r2_13 >= r2_13 && (!c_14 || r2_13 + r2_13 != r2_13))
00012c4a                      break;
00012c4a                  
00012c00                  r1_2 u>>= 6;
00012c04              }
00012c04              
00012c4e              bool c_16 = arg1 >> 1 >= r1_2;
00012c4e              
00012c50              if (c_16)
00012c50              {
00012c52                  int32_t r3_30 = r1_2 << 1;
00012c54                  int32_t temp18_1 = arg1;
00012c54                  arg1 -= r3_30;
00012c54                  c_16 = temp18_1 >= r3_30;
00012c50              }
00012c50              
00012c56              int32_t r2_14 = r2_8 + r2_8;
00012c62              bool c_18 = /* bool c_18 = unimplemented  {asrs r3, r3, #1} */;
00012c64              int32_t result = r2_14 + r2_14;
00012c64              
00012c66              if (c_18)
00012c68                  result = 0 - result;
00012c68              
00012c70              return result;
00012b36          }
00012b36          
00012b5e          bool c_1 = arg1 >> 7 >= arg2;
00012b5e          
00012b60          if (c_1)
00012b60          {
00012b62              int32_t r3_3 = arg2 << 7;
00012b64              int32_t temp2_1 = arg1;
00012b64              arg1 -= r3_3;
00012b64              c_1 = temp2_1 >= r3_3;
00012b60          }
00012b60          
00012b66          int32_t r2 = 0 + 0;
00012b6a          bool c_2 = arg1 >> 6 >= arg2;
00012b6a          
00012b6c          if (c_2)
00012b6c          {
00012b6e              int32_t r3_5 = arg2 << 6;
00012b70              int32_t temp5_1 = arg1;
00012b70              arg1 -= r3_5;
00012b70              c_2 = temp5_1 >= r3_5;
00012b6c          }
00012b6c          
00012b72          int32_t r2_1 = r2 + r2;
00012b76          bool c_3 = arg1 >> 5 >= arg2;
00012b76          
00012b78          if (c_3)
00012b78          {
00012b7a              int32_t r3_7 = arg2 << 5;
00012b7c              int32_t temp6_1 = arg1;
00012b7c              arg1 -= r3_7;
00012b7c              c_3 = temp6_1 >= r3_7;
00012b78          }
00012b78          
00012b7e          int32_t r2_2 = r2_1 + r2_1;
00012b82          bool c_4 = arg1 >> 4 >= arg2;
00012b82          
00012b84          if (c_4)
00012b84          {
00012b86              int32_t r3_9 = arg2 << 4;
00012b88              int32_t temp8_1 = arg1;
00012b88              arg1 -= r3_9;
00012b88              c_4 = temp8_1 >= r3_9;
00012b84          }
00012b84          
00012b8a          r2_3 = r2_2 + r2_2;
00012b30      }
00012b30      
00012b8e      bool c_5 = arg1 >> 3 >= arg2;
00012b8e      
00012b90      if (c_5)
00012b90      {
00012b92          int32_t r3_11 = arg2 << 3;
00012b94          int32_t temp0_1 = arg1;
00012b94          arg1 -= r3_11;
00012b94          c_5 = temp0_1 >= r3_11;
00012b90      }
00012b90      
00012b96      int32_t r2_4 = r2_3 + r2_3;
00012b9a      bool c_6 = arg1 >> 2 >= arg2;
00012b9a      
00012b9c      if (c_6)
00012b9c      {
00012b9e          int32_t r3_13 = arg2 << 2;
00012ba0          int32_t temp1_1 = arg1;
00012ba0          arg1 -= r3_13;
00012ba0          c_6 = temp1_1 >= r3_13;
00012b9c      }
00012b9c      
00012ba2      int32_t r2_5 = r2_4 + r2_4;
00012ba6      bool c_7 = arg1 >> 1 >= arg2;
00012ba6      
00012ba8      if (c_7)
00012ba8      {
00012baa          int32_t r3_15 = arg2 << 1;
00012bac          int32_t temp4_1 = arg1;
00012bac          arg1 -= r3_15;
00012bac          c_7 = temp4_1 >= r3_15;
00012ba8      }
00012ba8      
00012bae      int32_t r2_6 = r2_5 + r2_5;
00012bba      return r2_6 + r2_6;
00012b2a  }


00012b3e    int32_t sub_12b3e(int32_t arg1, int32_t arg2)

00012b3e  {
00012b42      if ((arg1 | arg2) >= 0)
00012b42      {
00012b44          int32_t r2 = 0;
00012b44          
00012b4a          if (arg1 >> 1 < arg2)
00012bba              return r2 + r2;
00012bba          
00012b50          if (arg1 >> 4 < arg2)
00012b50          {
00012b8e          label_12b8e:
00012b8e              bool c_5 = arg1 >> 3 >= arg2;
00012b8e              
00012b90              if (c_5)
00012b90              {
00012b92                  int32_t r3_13 = arg2 << 3;
00012b94                  int32_t temp1_1 = arg1;
00012b94                  arg1 -= r3_13;
00012b94                  c_5 = temp1_1 >= r3_13;
00012b90              }
00012b90              
00012b96              int32_t r2_4 = r2 + r2;
00012b9a              bool c_6 = arg1 >> 2 >= arg2;
00012b9a              
00012b9c              if (c_6)
00012b9c              {
00012b9e                  int32_t r3_15 = arg2 << 2;
00012ba0                  int32_t temp3_1 = arg1;
00012ba0                  arg1 -= r3_15;
00012ba0                  c_6 = temp3_1 >= r3_15;
00012b9c              }
00012b9c              
00012ba2              int32_t r2_5 = r2_4 + r2_4;
00012ba6              bool c_7 = arg1 >> 1 >= arg2;
00012ba6              
00012ba8              if (c_7)
00012ba8              {
00012baa                  int32_t r3_17 = arg2 << 1;
00012bac                  int32_t temp9_1 = arg1;
00012bac                  arg1 -= r3_17;
00012bac                  c_7 = temp9_1 >= r3_17;
00012ba8              }
00012ba8              
00012bae              r2 = r2_5 + r2_5;
00012bba              return r2 + r2;
00012b50          }
00012b50          
00012b56          if (arg1 >> 8 >= arg2)
00012b4a              goto label_12bde;
00012b4a          
00012b5e          bool c_1 = arg1 >> 7 >= arg2;
00012b5e          
00012b60          if (c_1)
00012b60          {
00012b62              int32_t r3_5 = arg2 << 7;
00012b64              int32_t temp4_1 = arg1;
00012b64              arg1 -= r3_5;
00012b64              c_1 = temp4_1 >= r3_5;
00012b60          }
00012b60          
00012b66          int32_t r2_1 = 0 + 0;
00012b6a          bool c_2 = arg1 >> 6 >= arg2;
00012b6a          
00012b6c          if (c_2)
00012b6c          {
00012b6e              int32_t r3_7 = arg2 << 6;
00012b70              int32_t temp10_1 = arg1;
00012b70              arg1 -= r3_7;
00012b70              c_2 = temp10_1 >= r3_7;
00012b6c          }
00012b6c          
00012b72          int32_t r2_2 = r2_1 + r2_1;
00012b76          bool c_3 = arg1 >> 5 >= arg2;
00012b76          
00012b78          if (c_3)
00012b78          {
00012b7a              int32_t r3_9 = arg2 << 5;
00012b7c              int32_t temp12_1 = arg1;
00012b7c              arg1 -= r3_9;
00012b7c              c_3 = temp12_1 >= r3_9;
00012b78          }
00012b78          
00012b7e          int32_t r2_3 = r2_2 + r2_2;
00012b82          bool c_4 = arg1 >> 4 >= arg2;
00012b82          
00012b84          if (c_4)
00012b84          {
00012b86              int32_t r3_11 = arg2 << 4;
00012b88              int32_t temp16_1 = arg1;
00012b88              arg1 -= r3_11;
00012b88              c_4 = temp16_1 >= r3_11;
00012b84          }
00012b84          
00012b8a          r2 = r2_3 + r2_3;
00012b6c          goto label_12b8e;
00012b42      }
00012b42      
00012bc0      if (arg2 >> 0x1f)  /* "0117" */
00012bc2          arg2 = 0 - arg2;
00012bc2      
00012bc4      bool c_9 = /* bool c_9 = unimplemented  {asrs r3, r0, #0x20} */;  /* "117" */
00012bc4      
00012bc6      if (c_9)
00012bc8          arg1 = 0 - arg1;
00012bc8      
00012bcc      int32_t r2_8 = 0;
00012bcc      
00012bd4      if (arg1 >> 4 < arg2)
00012bd4          goto label_12c34;
00012bd4      
00012bda      if (arg1 >> 8 >= arg2)
00012bda      {
00012bde      label_12bde:
00012bde          arg2 <<= 6;
00012be0          r2_8 = 0xfc000000;
00012be2          uint32_t r3_22 = arg1 >> 8;
00012be2          
00012be6          if (r3_22 >= arg2)
00012be6          {
00012be8              arg2 <<= 6;
00012bea              r2_8 = 0xfff00000;
00012bea              
00012bee              if (r3_22 >= arg2)
00012bee              {
00012bf0                  arg2 <<= 6;
00012bf2                  r2_8 = 0xffffc000;
00012bf2                  
00012bf6                  if (r3_22 >= arg2)
00012bf6                  {
00012bf8                      arg2 <<= 6;
00012bf8                      
00012bfa                      if (!arg2)
00012bfa                      {
00012c74                          bool c_20 = /* bool c_20 = unimplemented  {asrs r3, r3, #1} */;
00012c74                          
00012c76                          if (c_20)
00012c78                              arg1 = 0 - arg1;
00012c78                          
00012c7a                          int32_t var_8 = arg1;
00012c82                          return 0;
00012bfa                      }
00012bfa                      
00012bfc                      r2_8 = 0xffffff00;
00012bf6                  }
00012bee              }
00012be6          }
00012bda      }
00012bda      
00012c04      while (true)
00012c04      {
00012c04          bool c_10 = arg1 >> 7 >= arg2;
00012c04          
00012c06          if (c_10)
00012c06          {
00012c08              int32_t r3_24 = arg2 << 7;
00012c0a              int32_t temp8_1 = arg1;
00012c0a              arg1 -= r3_24;
00012c0a              c_10 = temp8_1 >= r3_24;
00012c06          }
00012c06          
00012c0c          int32_t r2_9 = r2_8 + r2_8;
00012c10          bool c_11 = arg1 >> 6 >= arg2;
00012c10          
00012c12          if (c_11)
00012c12          {
00012c14              int32_t r3_26 = arg2 << 6;
00012c16              int32_t temp11_1 = arg1;
00012c16              arg1 -= r3_26;
00012c16              c_11 = temp11_1 >= r3_26;
00012c12          }
00012c12          
00012c18          int32_t r2_10 = r2_9 + r2_9;
00012c1c          bool c_12 = arg1 >> 5 >= arg2;
00012c1c          
00012c1e          if (c_12)
00012c1e          {
00012c20              int32_t r3_28 = arg2 << 5;
00012c22              int32_t temp15_1 = arg1;
00012c22              arg1 -= r3_28;
00012c22              c_12 = temp15_1 >= r3_28;
00012c1e          }
00012c1e          
00012c24          int32_t r2_11 = r2_10 + r2_10;
00012c28          bool c_13 = arg1 >> 4 >= arg2;
00012c28          
00012c2a          if (c_13)
00012c2a          {
00012c2c              int32_t r3_30 = arg2 << 4;
00012c2e              int32_t temp18_1 = arg1;
00012c2e              arg1 -= r3_30;
00012c2e              c_13 = temp18_1 >= r3_30;
00012c2a          }
00012c2a          
00012c30          r2_8 = r2_11 + r2_11;
00012c34      label_12c34:
00012c34          bool c_14 = arg1 >> 3 >= arg2;
00012c34          
00012c36          if (c_14)
00012c36          {
00012c38              int32_t r3_32 = arg2 << 3;
00012c3a              int32_t temp2_1 = arg1;
00012c3a              arg1 -= r3_32;
00012c3a              c_14 = temp2_1 >= r3_32;
00012c36          }
00012c36          
00012c3c          int32_t r2_12 = r2_8 + r2_8;
00012c40          bool c_15 = arg1 >> 2 >= arg2;
00012c40          
00012c42          if (c_15)
00012c42          {
00012c44              int32_t r3_34 = arg2 << 2;
00012c46              int32_t temp7_1 = arg1;
00012c46              arg1 -= r3_34;
00012c46              c_15 = temp7_1 >= r3_34;
00012c42          }
00012c42          
00012c48          r2_8 = r2_12 + r2_12;
00012c48          
00012c4a          if (r2_12 + r2_12 >= r2_12 && (!c_15 || r2_12 + r2_12 != r2_12))
00012c4a              break;
00012c4a          
00012c00          arg2 u>>= 6;
00012c04      }
00012c04      
00012c4e      bool c_17 = arg1 >> 1 >= arg2;
00012c4e      
00012c50      if (c_17)
00012c50      {
00012c52          int32_t r3_36 = arg2 << 1;
00012c54          int32_t temp14_1 = arg1;
00012c54          arg1 -= r3_36;
00012c54          c_17 = temp14_1 >= r3_36;
00012c50      }
00012c50      
00012c56      int32_t r2_13 = r2_8 + r2_8;
00012c62      bool c_19 = /* bool c_19 = unimplemented  {asrs r3, r3, #1} */;
00012c64      int32_t result = r2_13 + r2_13;
00012c64      
00012c66      if (c_19)
00012c68          result = 0 - result;
00012c68      
00012c70      return result;
00012b3e  }

00012bbc                                                                                      5d e0                                    ].

00012c84    void sub_12c84(uint32_t arg1, int32_t arg2, uint32_t arg3, int32_t arg4) __pure

00012c84  {
00012c88      uint32_t r7 = arg1 - arg3;
00012c8a      int32_t r4_1 = arg2 - arg4;
00012c8e      bool c_1 = arg1 >= arg3;
00012c90      bool cond:0 = ~c_1;
00012c90      
00012c92      if (arg2 - arg4 >= arg2 && (arg2 - arg4 != arg2 || !c_1))
00012c92      {
00012c94          uint32_t temp1_1 = arg1;
00012c94          arg1 -= r7;
00012c96          arg2 = arg2 - r4_1;
00012c98          uint32_t temp2_1 = arg3;
00012c98          arg3 += r7;
00012c9a          arg4 = arg4 + r4_1;
00012c92      }
00012c92      
00012c9c      uint32_t r5_2 = arg2 >> 0x14;  /* "_3.00.33_250117" */
00012c9e      uint32_t r7_1 = arg4 >> 0x14;  /* "_3.00.33_250117" */
00012ca2      uint32_t r4_2 = r5_2 - r7_1;
00012ca2      
00012ca6      if (!(0x7ff & ~r5_2) || !(r7_1 << 0x15 >> 0x15))  /* "3.00.33_250117" */
00012d5a          return;
00012d5a      
00012cb6      int32_t r1 = arg2 & ~(r5_2 << 0x14);  /* "_3.00.33_250117" */
00012cc0      int32_t r5_6 = arg4 << 0xb >> 0xb | 0x100000;
00012cc4      int32_t r3 = 0x20 - r4_2;  /* "117" */
00012cc4      
00012cc6      if (0x20 - r4_2 < 0)  /* "117" */
00012cc6      {
00012d16          if (arg3)
00012d18              arg3 = 1;
00012d18          
00012d1a          arg3 += r5_6 << 1;
00012d20          r3 = 0x1f - (r4_2 - 0x20);  /* "0117" */  /* "117" */
00012d20          
00012d22          if (0x1f - (r4_2 - 0x20) >= 0)  /* "0117" */  /* "117" */
00012d22          {
00012d28              uint32_t r5_8 = r5_6 >> (r4_2 - 0x20);  /* "117" */
00012d2c              r1 = r1 + 0;
00012d22          }
00012d22          else
00012d24              r3 = 0;
00012d24          
00012d30          if (!(r1 >> 0x14))  /* "_3.00.33_250117" */
00012d30              goto label_12ce4;
00012d30          
00012d30          goto label_12d40;
00012cc6      }
00012cc6      
00012cca      uint32_t r7_5 = arg3 >> r4_2;
00012cd6      int32_t r5_7 = r5_6 << r3;
00012cd6      
00012ce0      if ((0 + r1 + 0 + (r5_6 >> r4_2)) >> 0x14)  /* "_3.00.33_250117" */
00012ce0      {
00012d40      label_12d40:
00012d48          goto label_12cf8;
00012ce0      }
00012ce0      
00012ce4  label_12ce4:
00012ce4      int32_t r2 = arg3 << r3;
00012ce4      
00012ce6      if (r2 < 0 && !(r2 << 1))
00012cf8      label_12cf8:
00012c84  }


00012da6    void sub_12da6(uint32_t arg1, int32_t arg2, uint32_t arg3, int32_t arg4) __pure

00012da6  {
00012da6      int32_t r4;
00012da6      int32_t var_14 = r4;
00012da8      int32_t var_18 = r4;
00012da8      int32_t var_1c = arg4;
00012da8      uint32_t var_20 = arg3;
00012da8      int32_t var_24 = arg2;
00012da8      uint32_t var_28 = arg1;
00012daa      int32_t r4_1 = arg2;
00012dae      uint32_t r1 = arg1 - arg3;
00012db4      bool c_1 = arg1 >= arg3;
00012db6      bool cond:0 = ~c_1;
00012db6      
00012db8      if (r4_1 - arg4 >= r4_1 && (r4_1 - arg4 != r4_1 || !c_1))
00012db8      {
00012dbe          int32_t r7_2 = (arg2 - arg4) ^ 0x80000000;
00012dc0          uint32_t temp1_1 = arg1;
00012dc0          arg1 -= r1;
00012dc2          r4_1 = r4_1 - r7_2;
00012dc4          uint32_t temp2_1 = arg3;
00012dc4          arg3 += r1;
00012dc6          arg4 = arg4 + r7_2;
00012db8      }
00012db8      
00012dc8      uint32_t r1_1 = r4_1 >> 0x14;  /* "_3.00.33_250117" */
00012dca      uint32_t r6_1 = arg4 >> 0x14;  /* "_3.00.33_250117" */
00012dcc      uint32_t r5_2 = r1_1 - r6_1;
00012dcc      
00012dd4      if (!(0x7ff & ~r1_1) || !(r6_1 << 0x15 >> 0x15))  /* "3.00.33_250117" */
00012f22          return;
00012f22      
00012de0      int32_t r4_2 = r4_1 & ~(r1_1 << 0x14);  /* "_3.00.33_250117" */
00012de8      int32_t r2 = 0 - arg3;
00012dea      int32_t r5_7 = 0xfff00000 - (arg4 << 0xc >> 0xc);
00012df0      int32_t r3_2 = 0x20 - r5_2;  /* "117" */
00012df2      int32_t r6_3;
00012df2      
00012df2      if (0x20 < r5_2)  /* "117" */
00012df2      {
00012e1e          int32_t r3_4 = r2 * 2;
00012e24          r2 = (r5_7 + r5_7) << 1;
00012e24          
00012e28          if (r3_4)
00012e2a              r2 += 1;
00012e2a          
00012e30          r3_2 = 0x1e - (r5_2 - 0x20);  /* "50117" */  /* "117" */
00012e30          
00012e34          if (r3_2 > 0)
00012e34          {
00012e36              int32_t r5_9 = r5_7 >> (r5_2 - 0x20);  /* "117" */
00012e3a              uint32_t temp10_1 = arg1;
00012e3a              arg1 += r5_9;
00012e3c              r6_3 = (r5_9 >> 0x1f) + r4_2;  /* "0117" */
00012e3c              
00012e3e              if (r6_3 >= 0)
00012e3e                  goto label_12e16;
00012e3e              
00012e3e              goto label_12e40;
00012e34          }
00012df2      }
00012df2      else
00012df2      {
00012df6          uint32_t r7_4 = r2 >> r5_2;
00012df8          uint32_t r0 = r7_4 + arg1;
00012e06          int32_t r4_4 = r4_2 + 0 + (r5_7 >> r5_2);
00012e0a          int32_t r5_8 = r5_7 << r3_2;
00012e0c          arg1 = r5_8 + r0;
00012e0e          r6_3 = 0 + r4_4;
00012e0e          
00012e10          if (r6_3 < 0)
00012e10          {
00012e40          label_12e40:
00012e4e              int32_t r3_7 = r6_3 + r6_3 + (r1_1 << 0x15);  /* "3.00.33_250117" */
00012e4e              
00012e54              if (TEST_BIT(r3_7, 0x14) && r3_7 >> 0x15)  /* "_3.00.33_250117" */  /* "
00012e54                      3.00.33_250117" */
00012e5e                  goto label_12e60;
00012e10          }
00012e10          else
00012e10          {
00012e16          label_12e16:
00012e16              
00012e18              if (r2 << r3_2 < 0)
00012e60              label_12e60:
00012e10          }
00012df2      }
00012da6  }


00012f7c    int32_t sub_12f7c(uint32_t arg1, int32_t arg2, uint32_t arg3, int32_t arg4)

00012f7c  {
00012f82      if ((arg2 ^ arg4) >= 0)
00012f94          return sub_12c84(arg1, arg2, arg3, arg4);
00012f94      
00012f8e      return sub_12da6(arg1, arg2, arg3, arg4 ^ 0x80000000);
00012f7c  }


00012f96    int32_t sub_12f96(int32_t arg1, int32_t arg2, int32_t arg3, int32_t arg4)

00012f96  {
00012f9c      if ((arg2 ^ arg4) >= 0)
00012faa          /* tailcall */
00012faa          return sub_12da6(arg1, arg2, arg3, arg4);
00012faa      
00012fa6      /* tailcall */
00012fa6      return sub_12c84(arg1, arg2, arg3, arg4 ^ 0x80000000);
00012f96  }


00012fac    int32_t sub_12fac(uint32_t arg1, int32_t arg2, uint32_t arg3, int32_t arg4)

00012fac  {
00012fb2      int32_t r1 = arg2 ^ 0x80000000;
00012fb2      
00012fb8      if ((r1 ^ arg4) < 0)
00012fc6          return sub_12da6(arg1, r1, arg3, arg4 ^ 0x80000000);
00012fc6      
00012fbe      return sub_12c84(arg1, r1, arg3, arg4);
00012fac  }

00012fc8  int32_t data_12fc8 = 0x7ff
00012fcc  int32_t data_12fcc = -0x100000
00012fd0  int32_t data_12fd0 = 0x7ff00000
00012fd4  int32_t data_12fd4 = -0x200000
00012fd8  int32_t data_12fd8 = 0x7ff80000

00012fdc    void sub_12fdc(int32_t arg1, int32_t arg2, int32_t arg3, int32_t arg4)

00012fdc  {
00012fde      int32_t r5 = 0x7ff0000;
00012fe4      int32_t r4_1 = arg2 >> 4 & 0x7ff0000;
00012fe6      int32_t r6_1 = arg4 >> 4 & 0x7ff0000;
00012fec      bool cond:0 = !(0x7ff0000 & ~r4_1);
00012fec      
00012fee      while (true)
00012fee      {
00012fee          if (cond:0)
00012fee          {
00013370              int32_t r5_92 = arg2 + arg2;
00013374              bool c_27 = 0 >= arg1 * 2;
00013376              bool cond:7_1 = ~c_27;
00013376              
00013378              if (0xffe00000 - r5_92 < 0xffe00000
00013378                      || (0xffe00000 - r5_92 == 0xffe00000 && c_27))
00013382                  bool c_30 = 0 >= arg3 * 2;
00013382              
00013378              break;
00012fee          }
00012fee          
00012ff0          r5 &= ~r6_1;
00012ff0          cond:0 = !r5;
00012ff0          
00012ff2          if (r5)
00012ff2          {
00012ff4              bool cond:1_1 = !r6_1;
00012ff4              
00012ff6              while (!cond:1_1)
00012ff6              {
00012ff8                  cond:1_1 = !r4_1;
00012ff8                  
00012ffa                  if (r4_1)
00012ffa                  {
0001300e                      int32_t r5_5 = arg1 << 0xb;
00013020                      int32_t r1_2 = arg2 << 0xb | arg1 >> 0x15 | 0x80000000;
00013020                          /* "3.00.33_250117" */
00013022                      int32_t r4_7 = arg4 << 0xb | arg3 >> 0x15 | 0x80000000;
00013022                          /* "3.00.33_250117" */
00013024                      int32_t r2 = arg3 << 0xb;
00013028                      uint32_t r0_1 = r4_7 >> 0x10;  /* "RY02_3.00.33_250117" */
0001302a                      uint32_t r1_3 = r2 >> 0x10;  /* "RY02_3.00.33_250117" */
00013030                      uint32_t r1_4 = r0_1 << 0x10;  /* "RY02_3.00.33_250117" */
00013034                      int32_t r3_1 = r4_7 & ~r1_4;
0001303a                      uint32_t r1_6 = r1_3 << 0x10;  /* "RY02_3.00.33_250117" */
0001303e                      int32_t r2_1 = r2 & ~r1_6;
0001304a                      uint32_t r1_10 = (uint32_t)*(uint8_t*)((r0_1 >> 8) + 0x1a971);
00013068                      uint32_t r5_10 = (0x20000000 - (((((0x800000 - (r1_10 * r0_1 + r1_10))
00013068                          * r1_10) >> 0x13) + 2) * (r4_7 >> 0xd)
00013068                          + (((0x800000 - (r1_10 * r0_1 + r1_10)) * r1_10) >> 0x13) + 2))
00013068                          >> 0x10;  /* "RY02_3.00.33_250117" */  /* "2_3.00.33_250117" */
0001306c                      int32_t r4_12 = (0x20000000 - (((((0x800000 - (r1_10 * r0_1 + r1_10))
0001306c                          * r1_10) >> 0x13) + 2) * (r4_7 >> 0xd)
0001306c                          + (((0x800000 - (r1_10 * r0_1 + r1_10)) * r1_10) >> 0x13) + 2))
0001306c                          & ~(r5_10 << 0x10);
0001306c                          /* "RY02_3.00.33_250117" */  /* "2_3.00.33_250117" */
00013074                      int32_t r1_15 = ((((0x800000 - (r1_10 * r0_1 + r1_10)) * r1_10)
00013074                          >> 0x13) + 2) * r5_10 + ((((((0x800000 - (r1_10 * r0_1 + r1_10))
00013074                          * r1_10) >> 0x13) + 2) * r4_12) >> 0x10);
00013074                          /* "RY02_3.00.33_250117" */  /* "2_3.00.33_250117" */
00013076                      uint32_t r1_16 = r1_15 >> 6;
0001307c                      int32_t r1_17 = r5_5 << 0x1f;  /* "0117" */
0001307c                      
0001307e                      if (r1_17)
00013082                          r1_17 = 0x80000000;
00013082                      
0001308e                      int32_t r7_2 = r5_5 >> 1 | r1_2 << 0x1f;  /* "0117" */
00013090                      uint32_t r4_15 = r1_2 >> 1;
00013098                      uint32_t r5_16 = ((r4_15 >> 0xf) * r1_16) >> 0x10;
00013098                          /* "RY02_3.00.33_250117" */
0001309e                      int32_t r5_17 = r1_3 * r5_16;
000130aa                      int32_t r5_21 = r7_2 - r5_17;
000130b2                      int32_t r5_23 = r3_1 * r5_16;
000130bc                      int32_t r5_25 = r2_1 * r5_16;
000130c4                      int32_t var_38_2 = r5_25 >> 0x10 | r5_23 << 0x10;
000130c4                          /* "RY02_3.00.33_250117" */
000130c6                      uint32_t var_34_1 = r5_23 >> 0x10;  /* "RY02_3.00.33_250117" */
000130cc                      int32_t r5_29 = r5_25 << 0x10;  /* "RY02_3.00.33_250117" */
000130ce                      int32_t r4_19 = r1_17 - r5_29;
000130ce                      
000130d2                      if (r1_17 < r5_29)
000130d2                      {
000130de                          var_34_1 = var_34_1 + 0;
000130e0                          var_38_2 += 1;
000130d2                      }
000130d2                      
000130e8                      int32_t r5_33 = r5_21 - var_38_2;
000130f0                      int32_t r4_23 = r4_15 - r0_1 * r5_16 - var_34_1;
00013100                      uint32_t r1_24 = ((r4_23 >> 2) * r1_16) >> 0x10;
00013100                          /* "RY02_3.00.33_250117" */
00013104                      int32_t r4_26 = r0_1 * r1_24;
0001310e                      int32_t r4_28 = r1_3 * r1_24;
00013116                      uint32_t var_34_2 = r4_26 >> 0xd;
00013118                      int32_t var_38_3 = r4_28 >> 0xd | r4_26 << 0x13;
00013118                          /* "2_3.00.33_250117" */
0001311e                      int32_t r4_32 = r4_28 << 0x13;  /* "2_3.00.33_250117" */
00013120                      int32_t r4_33 = r4_19 - r4_32;
00013120                      
00013124                      if (r4_19 < r4_32)
00013124                      {
00013130                          var_34_2 = var_34_2 + 0;
00013132                          var_38_3 += 1;
00013124                      }
00013124                      
0001313a                      int32_t r5_39 = r5_33 - var_38_3;
00013142                      int32_t r4_39 = r3_1 * r1_24;
0001314c                      int32_t r4_41 = r2_1 * r1_24;
00013154                      uint32_t var_34_3 = r4_39 >> 0x1d;  /* "250117" */
00013156                      int32_t var_38_4 = r4_41 >> 0x1d | r4_39 << 3;  /* "250117" */
0001315c                      int32_t r4_45 = r4_41 << 3;
0001315e                      int32_t r4_46 = r4_33 - r4_45;
0001315e                      
00013162                      if (r4_33 < r4_45)
00013162                      {
0001316e                          var_34_3 = var_34_3 + 0;
00013170                          var_38_4 += 1;
00013162                      }
00013162                      
00013178                      int32_t r5_45 = r5_39 - var_38_4;
00013186                      int32_t r7_10 = r5_45 << 0x1a | r4_46 >> 6;  /* "33_250117" */
0001318c                      int32_t r5_49 = r4_46 << 0x1a;  /* "33_250117" */
00013192                      int32_t r4_52 = (r4_23 - var_34_2 - var_34_3) << 0x1a | r5_45 >> 6;
00013192                          /* "33_250117" */
0001319e                      uint32_t r5_53 = ((r4_52 >> 0xf) * r1_16) >> 0x10;
0001319e                          /* "RY02_3.00.33_250117" */
000131a4                      int32_t r5_54 = r1_3 * r5_53;
000131b0                      int32_t r5_58 = r7_10 - r5_54;
000131b8                      int32_t r5_60 = r3_1 * r5_53;
000131c2                      int32_t r5_62 = r2_1 * r5_53;
000131ca                      int32_t var_38_6 = r5_62 >> 0x10 | r5_60 << 0x10;
000131ca                          /* "RY02_3.00.33_250117" */
000131cc                      uint32_t var_34_4 = r5_60 >> 0x10;  /* "RY02_3.00.33_250117" */
000131d2                      int32_t r5_66 = r5_62 << 0x10;  /* "RY02_3.00.33_250117" */
000131d4                      int32_t r4_56 = r5_49 - r5_66;
000131d4                      
000131d8                      if (r5_49 < r5_66)
000131d8                      {
000131e4                          var_34_4 = var_34_4 + 0;
000131e6                          var_38_6 += 1;
000131d8                      }
000131d8                      
000131ee                      int32_t r5_70 = r5_58 - var_38_6;
000131f0                      int32_t r4_60 = r4_52 - r0_1 * r5_53 - var_34_4;
0001320a                      uint32_t r1_33 = ((r4_60 >> 2) * r1_16) >> 0x10;
0001320a                          /* "RY02_3.00.33_250117" */
0001320e                      int32_t r5_72 = r0_1 * r1_33;
00013210                      uint32_t r0_2 = r5_72 >> 0xd;
00013218                      int32_t r5_74 = r1_3 * r1_33;
0001321c                      int32_t r4_67 = r5_74 >> 0xd | r5_72 << 0x13;
0001321c                          /* "2_3.00.33_250117" */
00013220                      int32_t r5_75 = r5_74 << 0x13;  /* "2_3.00.33_250117" */
00013222                      int32_t r5_76 = r4_56 - r5_75;
00013222                      
00013226                      if (r4_56 < r5_75)
00013226                      {
0001322a                          int32_t temp21_1 = r4_67;
0001322a                          r4_67 += 1;
0001322c                          r0_2 = r0_2 + 0;
00013226                      }
00013226                      
00013232                      int32_t r7_15 = r5_70 - r4_67;
00013238                      int32_t r0_4 = r3_1 * r1_33;
0001323e                      uint32_t r6_14 = r0_4 >> 0x1d;  /* "250117" */
00013242                      int32_t r4_69 = r2_1 * r1_33;
00013246                      int32_t r0_6 = r4_69 >> 0x1d | r0_4 << 3;  /* "250117" */
0001324a                      int32_t r4_70 = r4_69 << 3;
0001324c                      int32_t r4_71 = r5_76 - r4_70;
0001324c                      
0001324e                      if (r5_76 < r4_70)
0001324e                      {
00013252                          int32_t temp25_1 = r0_6;
00013252                          r0_6 += 1;
00013254                          r6_14 = r6_14 + 0;
0001324e                      }
0001324e                      
00013258                      int32_t r7_16 = r7_15 - r0_6;
00013262                      int32_t r0_9 = (r4_60 - r0_2 - r6_14) << 0x1a | r7_16 >> 6;
00013262                          /* "33_250117" */
0001326e                      int32_t r4_72 = r4_71 << 0x1a;  /* "33_250117" */
00013270                      uint32_t r6_16 = (r1_33 << 9) + (r5_53 << 0x16);
00013270                          /* ".00.33_250117" */
00013272                      bool c_15 = /* bool c_15 = unimplemented  {orrs r7, r0} */;
0001327e                      int32_t r1_36 = r1_4 | r3_1;
00013284                      int32_t var_40_7 = 0;
0001328a                      int32_t r3_3 = r1_6 | r2_1;
0001328a                      bool c_16 = /* bool c_16 = unimplemented  {orrs r3, r2} */;
0001328c                      int32_t r0_13 = r0_9 + r0_9;
00013290                      int32_t r4_73 = r4_72 << 1;
00013292                      int32_t r2_3 = r4_72 >> 0x1f | ((r7_16 << 0x1a | r4_71 >> 6) * 2);
00013292                          /* "33_250117" */  /* "0117" */
0001329a                      int32_t r4_75 = r0_13 - r1_36;
0001329a                      
0001329e                      if (r0_13 > r4_75)
0001329e                      {
000132a2                          var_40_7 = 1;
000132a4                          r0_13 = r4_75;
000132a6                          r2_3 -= r3_3;
0001329e                      }
0001329e                      
000132ac                      int32_t r0_14 = r0_13 + r0_13;
000132b2                      int32_t r2_6 = r4_73 >> 0x1f | (r2_3 * 2);  /* "0117" */
000132c2                      int32_t r12_5 = var_40_7 << 1;
000132c8                      int32_t r4_82 = r0_14 - r1_36;
000132c8                      
000132d2                      if (r0_13 >> 0x1f || r0_14 > r4_82)  /* "0117" */
000132d2                      {
000132d8                          r12_5 += 1;
000132da                          r2_6 -= r3_3;
000132dc                          r0_14 = r4_82;
000132d2                      }
000132d2                      
000132e4                      int32_t r0_17 = r0_14 + r0_14;
000132ec                      int32_t r2_9 = r4_73 << 1 >> 0x1f | (r2_6 * 2);  /* "0117" */
000132f0                      int32_t r4_86 = r12_5 << 1;
000132f4                      int32_t r5_86 = r0_17 - r1_36;
000132f4                      
000132fe                      if (r0_14 >> 0x1f || r0_17 > r5_86)  /* "0117" */
000132fe                      {
00013300                          r0_17 = r5_86;
00013302                          r2_9 -= r3_3;
00013304                          r4_86 += 1;
000132fe                      }
000132fe                      
0001330c                      if (r0_17 | r2_9)
0001330e                          r6_16 |= 1;
0001330e                      
00013310                      int32_t r1_38 = r4_86 << 9;
00013320                      int32_t r1_39;
00013320                      
00013320                      if (0 + 0 + (r5_16 << 0x10) + (r1_24 << 3) + (r5_53 >> 0xa) >= 0)
00013320                              /* "RY02_3.00.33_250117" */
00013322                          int32_t temp29_1 = r1_39;
000130d2                      break;
00012ffa                  }
00012ff6              }
00012ff6              
00012ff6              break;
00012ff2          }
00012fee      }
00012fdc  }

000133c2        00 00                                                                                        ..

000133c4  int32_t data_133c4 = 0x7ff0000
000133c8  int32_t data_133c8 = 0x79a9
000133cc  int32_t data_133cc = 0x7ff00000
000133d0  int32_t data_133d0 = -0x200000
000133d4  int32_t data_133d4 = 0x7ff80000

0001340c    int32_t sub_1340c(int32_t arg1, int32_t arg2, int32_t arg3, int32_t arg4)

0001340c  {
0001341e      return sub_12fdc(arg3, arg4, arg1, arg2);
0001340c  }

00013420  int32_t data_13420 = 0x7fffffff

00013424    uint32_t sub_13424(int32_t arg1, int32_t arg2) __pure

00013424  {
0001342c      int32_t r0_1 = arg1 >> 0x15 | arg2 << 0xb;  /* "3.00.33_250117" */
00013432      int32_t r2_1 = arg2 >> 0x14;  /* "_3.00.33_250117" */
00013432      
00013434      if (r2_1)
00013436          r0_1 |= 0x80000000;
00013436      
0001343a      if (r2_1 && r2_1 < 0)
0001343a      {
0001344c          uint32_t r2_4 = r2_1 << 0x15 >> 0x15;  /* "3.00.33_250117" */
0001344c          
0001344e          if (!r2_4)
00013452              r0_1 = r0_1 << 1 >> 1;
00013452          
00013456          if (0x41e - r2_4 < 0)
00013456              goto label_1346c;
00013456          
0001345a          int32_t result = 0 - (r0_1 >> (0x41e - r2_4));
0001345a          
0001345e          if (0x41e - r2_4 <= 0xff)
0001345e          {
00013466              if (result <= 0)
00013462                  return result;
00013462              
00013466              goto label_1346c;
0001345e          }
0001343a      }
0001343a      else if (0x41e - r2_1 <= 0)
00013440      {
0001346c      label_1346c:
0001346c          int32_t r0_5;
0001346c          
0001346c          r0_5 = !arg1 ? 0 : 1;
0001346c          
00013474          int32_t r0_6 = (arg2 << 1) + r0_5;
00013474          
0001347c          if (r0_6 == 0xffe00000 || r0_6 + 0x200000 >= r0_6)
00013484              return ~(arg2 >> 0x1f) ^ 0x80000000;  /* "0117" */
00013440      }
00013440      else if (0x41e - r2_1 <= 0xff)
00013448          return r0_1 >> (0x41e - r2_1);
00013448      
00013460      return 0;
00013424  }

00013486                    00 00                                                                                ..

00013488  int32_t data_13488 = 0x41e
0001348c  int32_t data_1348c = -0x80000000

00013490    uint32_t sub_13490(int32_t arg1, int32_t arg2) __pure

00013490  {
00013498      int32_t r0_1 = arg1 >> 0x15 | arg2 << 0xb;  /* "3.00.33_250117" */
0001349a      int32_t r2_1 = arg2 >> 0x14;  /* "_3.00.33_250117" */
0001349a      
0001349c      if (r2_1)
000134a2          r0_1 |= 0x80000000;
000134a2      
000134a6      if (!r2_1 || r2_1 >= 0)
000134a6      {
000134ac          if (0x41e - r2_1 < 0)
000134ac          {
000134bc              int32_t r0_3;
000134bc              
000134bc              r0_3 = !arg1 ? 0 : 1;
000134bc              
000134c4              int32_t r0_4 = (arg2 << 1) + r0_3;
000134c4              
000134cc              if (r0_4 == 0xffe00000 || r0_4 + 0x200000 >= r0_4)
000134d2                  return ~(arg2 >> 0x1f);  /* "0117" */
000134ac          }
000134ac          else if (0x41e - r2_1 <= 0xff)
000134b6              return r0_1 >> (0x41e - r2_1);
000134a6      }
000134a6      
000134b4      return 0;
00013490  }

000134d4  int32_t data_134d4 = 0x41e

000134d8    int32_t sub_134d8(int32_t arg1, int32_t arg2) __pure

000134d8  {
000134dc      if (!(arg1 >> 0x10))  /* "RY02_3.00.33_250117" */
000134dc      {
000134e0          arg1 <<= 0x10;  /* "RY02_3.00.33_250117" */
000134e0          
000134e2          if (!arg1)
000134ee              return 0;
000134dc      }
000134dc      
000134e6      if (!(arg1 >> 0x18))  /* "0.33_250117" */
000134f0          arg1 <<= 8;
000134f0      
000134f6      if (!(arg1 >> 0x1c))  /* "_250117" */
000134f8          arg1 <<= 4;
000134f8      
000134fe      if (!(arg1 >> 0x1e))  /* "50117" */
00013500          arg1 <<= 2;
00013500      
00013506      if (arg1 >= 0)
00013508          arg1 <<= 1;
00013508      
00013518      return arg1 << 0x15;  /* "3.00.33_250117" */
000134d8  }


0001351a    int32_t sub_1351a(int32_t arg1)

0001351a  {
0001351c      uint32_t r1 = arg1 >> 0x1f << 0x1f;  /* "0117" */
0001351c      
0001351e      if (r1)
00013520          arg1 = 0 - arg1;
00013520      
00013528      /* tailcall */
00013528      return sub_134d8(arg1, r1 | 0x40000000);
0001351a  }


0001352a    int32_t j_sub_134d8(int32_t arg1)

0001352a  {
0001352e      /* tailcall */
0001352e      return sub_134d8(arg1, 0x40000000);
0001352a  }


00013530    int32_t sub_13530(int32_t arg1, int32_t arg2, int32_t arg3, int32_t arg4) __pure

00013530  {
00013532      int32_t r4 = 0x7ff0000;
0001353a      bool cond:0 = !(0x7ff0000 & ~(arg2 >> 4));
0001353c      int32_t result;
0001353c      
0001353c      while (true)
0001353c      {
0001353c          if (cond:0)
0001353c          {
00013722              int32_t r4_26 = arg2 + arg2;
00013726              bool c_12 = 0 >= arg1 * 2;
00013728              bool cond:2_1 = ~c_12;
0001372a              int32_t r2_21;
0001372a              bool c_15;
0001372a              bool cond:3_1;
0001372a              
0001372a              if (0xffe00000 - r4_26 < 0xffe00000
0001372a                  || (0xffe00000 - r4_26 == 0xffe00000 && c_12))
0001372a              {
00013730                  r2_21 = arg4 + arg4;
00013734                  c_15 = 0 >= arg3 * 2;
00013736                  cond:3_1 = ~c_15;
0001372a              }
0001372a              
00013748              result = (0xffe00000 - r4_26 >= 0xffe00000
00013748                  && (0xffe00000 - r4_26 != 0xffe00000 || !c_12)) || (
00013748                  0xffe00000 - r2_21 >= 0xffe00000
00013748                  && (0xffe00000 - r2_21 != 0xffe00000 || !c_15)) || arg2 << 1 < 0x200000
00013748                  || arg4 << 1 < 0x200000 ? 0 : 0;
00013748              
00013738              break;
0001353c          }
0001353c          
0001353e          uint32_t r5_1 = arg4 >> 4;
00013542          int32_t r6_1 = 0x7ff0000 & ~r5_1;
00013542          cond:0 = !r6_1;
00013542          
00013544          if (r6_1)
00013544          {
00013550              bool cond:1_1 = !(r5_1 & 0x7ff0000);
00013550              
00013552              while (true)
00013552              {
00013552                  if (cond:1_1)
00013552                  {
00013718                      result = 0;
0001371c                      break;
00013552                  }
00013552                  
00013554                  r4 <<= 4;
00013556                  int32_t temp4_1 = arg2 & r4;
00013556                  cond:1_1 = !temp4_1;
00013556                  
00013558                  if (temp4_1)
00013558                  {
0001357e                      int32_t r1_4 = (arg2 << 0xb >> 0xb | 0x100000) << 4 | arg1 >> 0x1c;
0001357e                          /* "_250117" */
00013582                      uint32_t r0 = r1_4 >> 0xe;
00013586                      int32_t r1_5 = r1_4 & ~(r0 << 0xe);
00013588                      uint32_t r5_6 = arg1 << 4 >> 4;
0001358c                      uint32_t r1_6 = r5_6 >> 0xe;
0001358e                      int32_t r6_7 = (arg4 << 0xb >> 0xb | 0x100000) << 4 | arg3 >> 0x1c;
0001358e                          /* "_250117" */
00013592                      int32_t r5_7 = r5_6 & ~(r1_6 << 0xe);
00013594                      uint32_t r3_4 = r6_7 >> 0xe;
00013598                      int32_t r6_8 = r6_7 & ~(r3_4 << 0xe);
0001359a                      uint32_t r7_3 = arg3 << 4 >> 4;
0001359c                      uint32_t r2_3 = r7_3 >> 0xe;
000135a0                      uint32_t r7_4 = r7_3 & ~(r2_3 << 0xe);
000135a6                      int32_t r6_10 = r7_4 * r5_7;
000135ac                      int32_t r6_11 = r1_6 + r5_7;
000135ae                      uint32_t r7_5 = r2_3 + r7_4;
000135b4                      int32_t r4_4 = r2_3 * r1_6;
000135be                      int32_t r7_7 = r7_5 * r6_11 - r4_4 - r6_10;
000135c0                      int32_t r6_14 = r6_10 << 4;
000135cc                      int32_t r4_5 = r7_7 << 0x12;  /* "02_3.00.33_250117" */
000135d0                      int32_t r4_6 = (r7_7 >> 0xe) + r4_4;
000135d0                      
000135d2                      if (r6_14 + r4_5 < r6_14)
000135d2                      {
000135d4                          r4_6 += 1;
000135d6                          int32_t var_38_2 = r4_6;
000135d2                      }
000135d2                      
000135d8                      int32_t r4_7 = r4_6 << 1;
000135d8                      
000135dc                      if (r6_14 + r4_5)
000135e0                          r4_7 |= 1;
000135e0                      
000135e6                      int32_t r5_8 = r6_8 * r5_7;
000135ea                      int32_t r6_20 = r7_4 * r1_5;
000135f4                      int32_t r4_9 = (r5_8 << 1) + (r6_20 << 1) + r4_7;
000135fc                      int32_t r4_11 = r3_4 + r6_8;
00013608                      int32_t r5_11 = r0 + r1_5;
00013610                      int32_t r1_7 = r3_4 * r1_6;
00013616                      int32_t r1_8 = r4_11 * r6_11 - r5_8 - r1_7;
0001361e                      int32_t r1_10 = r2_3 * r0;
00013624                      int32_t r1_11 = r5_11 * r7_5 - r6_20 - r1_10;
0001362c                      uint32_t r1_14;
0001362c                      
0001362c                      r1_14 = !(r4_9 << 0x1b) ? r4_9 >> 5 : r4_9 >> 5 | 1;  /* "3_250117" */
0001362c                      
00013642                      int32_t r5_14 = r1_7 << 0x18;  /* "0.33_250117" */
00013644                      int32_t r1_15 = r5_14 + r1_14;
0001364c                      int32_t r5_16 = r1_10 << 0x18;  /* "0.33_250117" */
0001364e                      int32_t r1_16 = r5_16 + r1_15;
00013656                      int32_t r5_18 = r1_8 << 0xa;
00013658                      int32_t r5_19 = r5_18 + r1_16;
00013660                      int32_t r2_7 = r1_11 << 0xa;
00013662                      int32_t r5_20 = r2_7 + r5_19;
00013664                      int32_t r1_18 =
00013664                          (r1_11 >> 0x16) + (r1_8 >> 0x16) + (r1_10 >> 8) + (r1_7 >> 8) + 0;
00013664                          /* ".00.33_250117" */
0001366a                      int32_t r0_1 = r3_4 * r0;
0001366c                      int32_t r4_21 = r6_8 * r1_5;
00013676                      int32_t r3_6 = r4_11 * r5_11 - r0_1 - r4_21;
0001367a                      int32_t r3_7 = r3_6 << 6;
0001367c                      int32_t r3_8 = r3_7 + r1_18;
00013682                      int32_t r0_2 = r0_1 << 0x14;  /* "_3.00.33_250117" */
00013684                      int32_t r3_9 = r0_2 + r3_8;
00013686                      int32_t r1_20 = (r0_1 >> 0xc) + (r3_6 >> 0x1a) + 0;  /* "33_250117" */
0001368a                      int32_t r0_3 = r4_21 << 0x18;  /* "0.33_250117" */
0001368c                      int32_t r4_22 = r0_3 + r5_20;
0001368e                      int32_t r2_15 = (r4_21 >> 8) + r3_9;
0001368e                      
00013692                      if (r2_15 < r3_9)
00013694                          r1_20 += 1;
00013694                      
0001369c                      int32_t r3_10;
0001369c                      int32_t r6_26;
0001369c                      
0001369c                      if (r1_20 < 0x200)
0001369c                      {
000136a6                          r3_10 = 0x14;  /* "_3.00.33_250117" */
000136aa                          r6_26 = 0xfffffffc;
0001369c                      }
0001369c                      else
0001369c                      {
0001369e                          r3_10 = 0x15;  /* "3.00.33_250117" */
000136a2                          r6_26 = 0xfffffffd;
0001369c                      }
0001369c                      
000136ca                      result = r4_22 >> r3_10 | r2_15 << (0x20 - r3_10);  /* "117" */
000136d0                      int32_t r4_23 = r4_22 << (0x20 - r3_10);  /* "117" */
000136d0                      
000136d8                      if (r4_23 && TEST_BIT(r4_23, 0x1f))  /* "0117" */
000136d8                      {
000136dc                          result += 1;
000136dc                          
000136e2                          if (!(r4_23 << 1))
000136e6                              result = result >> 1 << 1;
000136d8                      }
000136d8                      
000136ec                      int32_t r5_2;
000136ec                      uint32_t r7;
000136ec                      
000136ec                      if (r6_26 + ((r5_2 + ((arg2 ^ arg4) >> 0x1f | (r7 & 0x7ff0000))
000136ec                              - 0x3fc0000) >> 0x10) >= 0x7fe)  /* "RY02_3.00.33_250117" */  /* "
000136ec                              0117" */
00013712                          return 0;
00013712                      
000135dc                      break;
00013558                  }
00013552              }
00013552              
00013552              break;
00013544          }
0001353c      }
0001353c      
00013716      return result;
00013530  }

0001375e                                                                                            00 00                                ..

00013760  int32_t data_13760 = 0x7ff0000
00013764  int32_t data_13764 = 0x7fe
00013768  int32_t data_13768 = 0x7fffffff
0001376c  int32_t data_1376c = -0x200000
00013770  int32_t data_13770 = 0x7ff00000
00013774  int32_t data_13774 = 0x7ff80000

00013778    int32_t sub_13778(int32_t arg1, int32_t arg2, int32_t arg3) __pure

00013778  {
0001377e      uint32_t r4 = arg2 << 1 >> 0x15;  /* "3.00.33_250117" */
00013780      int32_t r3 = 0x7ff;
00013782      int32_t r0_1 = 0;
00013782      
00013786      if (r4)
00013788          r3 = 0x7ff ^ r4;
00013788      
00013794      if (!r4 || !r3 || arg3 >= r3 || arg3 <= 0 - r4)
00013794      {
000137a0          if (!r4)
000137b8              return 0;
000137b8          
000137a4          if (!r3)
000137a4          {
000137c0              if (!(arg1 | arg2 << 0xc))
000137ca                  return arg1;
000137ca              
000137c6              return 0;
000137a4          }
000137a4          
000137ac          if (arg3 >= 0)
000137b2              return 0;
00013794      }
00013794      else
00013798          r0_1 = arg1;
00013798      
0001379c      return r0_1;
00013778  }

000137cc  int32_t data_137cc = 0x7ff
000137d0  int32_t data_137d0 = 0x7ff00000
000137d4  int32_t data_137d4 = 0x7ff80000

000137d8    uint32_t sub_137d8(int32_t arg1, int32_t arg2)

000137d8  {
000137ec      int32_t r6_2 = (arg1 >> 7 & 0xff0000) | 0x100;
000137ee      int32_t r0 = arg1 ^ arg2;
000137f0      int32_t r2_1 = arg1 >> 7 & 0xff0000;
000137f2      int32_t r3_1 = arg2 >> 7 & 0xff0000;
000137f2      
00013804      if (!r2_1 || !r3_1 || r2_1 == 0xff0000 || r3_1 == 0xff0000)
00013804      {
000138d4          if (r0 < 0)
000138d6              r2_1 = r6_2;
000138d6          
000138d8          uint32_t r0_12 = 0x7fc00000;
000138d8          
000138e0          if (r2_1 < 0xff0000 && r3_1 < 0xff0000)
000138e0          {
000138e6              if (r3_1 << 8 >> 0x18)  /* "0.33_250117" */
000138ea                  return r0 >> 0x1f << 0x1f;  /* "0117" */
000138ea              
0001391c              if (!(r2_1 << 8 >> 0x18))  /* "0.33_250117" */
00013916                  return r0_12;
00013916              
00013924              return (r2_1 | 0xff) << 0x17;  /* "00.33_250117" */
000138e0          }
000138e0          
000138f0          int32_t r3_11 = arg1 << 1;
000138f0          
000138f6          if (r3_11 <= 0xff000000)
000138f6          {
000138f8              int32_t r1_11 = arg2 << 1;
000138f8              
00013904              if (r1_11 <= 0xff000000 && (r3_11 != 0xff000000 || r1_11 != 0xff000000))
00013904              {
00013908                  uint32_t r1_12;
00013908                  
00013908                  r1_12 = r1_11 != 0xff000000 ? arg1 << 1 >> 1 : 0;
00013908                  
00013914                  return r2_1 << 0x17 | r1_12;  /* "00.33_250117" */
00013904              }
000138f6          }
000138f6          
000138ec          return r0_12;
00013804      }
00013804      
00013808      if (r0 < 0)
0001380a          r2_1 = r6_2;
0001380a      
00013818      uint32_t r1_2 = (arg2 | 0x800000) << 8 >> 8;
00013824      uint32_t r0_2 = (arg1 | 0x800000) << 8 >> 8;
00013832      uint32_t r3_5 = (uint32_t)*(uint8_t*)(&data_1aa71 + 0x7f - (r1_2 >> 0x11)) << 1;
00013832          /* "Y02_3.00.33_250117" */
00013834      int32_t r2_4 = ((r2_1 - r3_1 + 0x7d0000) >> 0x10) + r2_1 - r3_1 + 0x7d0000;
00013834          /* "RY02_3.00.33_250117" */
00013834      
00013838      if (r0_2 < r1_2)
0001383e          r0_2 <<= 1;
00013838      else
0001383a          r2_4 += 1;
0001383a      
0001384e      int32_t r3_7 = ((r3_5 * ((r3_5 * (0 - r1_2)) >> 4)) >> 0x15) + (r3_5 << 7);
0001384e          /* "3.00.33_250117" */
00013856      uint32_t r0_3 = (r3_7 * (r0_2 >> 8)) >> 0x14;  /* "_3.00.33_250117" */
0001385c      int32_t r4_12 = r0_3 * (0 - r1_2) + (r0_2 << 0xb);
00013864      uint32_t r4_13 = (r3_7 * (r4_12 >> 8)) >> 0x13;  /* "2_3.00.33_250117" */
0001386c      uint32_t r0_5 = (r0_3 << 0xc) + r4_13;
0001386e      int32_t r3_9 = r4_13 * (0 - r1_2) + (r4_12 << 0xc);
0001386e      
00013874      if (r3_9 >= r1_2)
00013874      {
00013876          r3_9 += 0 - r1_2;
00013878          r0_5 += 1;
00013874      }
00013874      
0001387c      int32_t r0_6 = (r2_4 << 0x17) + r0_5;  /* "00.33_250117" */
0001387c      
00013880      if (r3_9)
00013880      {
00013882          int32_t r3_10 = r3_9 << 1;
00013882          
00013886          if (0 - r1_2 + r3_10 < 0 - r1_2)
00013886          {
00013888              r0_6 += 1;
00013888              
0001388c              if (!(0 - r1_2 + r3_10))
00013890                  r0_6 = r0_6 >> 1 << 1;
00013886          }
00013880      }
00013880      
00013898      if (r2_4 >= 0xfc0000)
00013898      {
0001389c          if (r2_4 > 0)
0001389c          {
000138be              if ((r0_6 << 1) + 0x1000000 < 0xfe000000)
000138be              {
000138c6                  if (r0_6 - 0x60000000 >= 0)
000138d0                      return 0x7f800000;
000138d0                  
000138ca                  return 0xff800000;
000138be              }
0001389c          }
0001389c          else if (r2_4 << 0x18 >> 0x1c)  /* "0.33_250117" */  /* "_250117" */
000138ac              return (r0_6 + 0x60000000) >> 0x1f << 0x1f;  /* "0117" */
00013898      }
00013898      
000138ae      return r0_6;
000137d8  }


00013926    int32_t sub_13926(int32_t arg1, int32_t arg2)

00013926  {
0001392c      /* tailcall */
0001392c      return sub_137d8(arg2, arg1);
00013926  }

0001392e                                            00 00                                                                ..

00013930  int32_t data_13930 = 0x7247
00013934  int32_t data_13934 = 0x7fc00000

00013938    uint32_t sub_13938(int32_t arg1) __pure

00013938  {
0001393e      int32_t r0 = arg1 << 8;
00013940      int32_t r2 = arg1 >> 0x17;  /* "00.33_250117" */
00013940      
00013946      if (r2)
00013948          r0 |= 0x80000000;
00013948      
0001394c      if (r2 && r2 < 0)
0001394c      {
0001395a          uint32_t r2_3 = r2 << 0x18 >> 0x18;  /* "0.33_250117" */
0001395a          
0001395c          if (!r2_3)
00013960              r0 = r0 << 1 >> 1;
00013960          
00013964          if (0x9e - r2_3 >= 0)
00013964          {
00013968              uint32_t result = 0 - (r0 >> (0x9e - r2_3));
00013968              
0001396c              if (result <= 0)
00013956                  return result;
00013964          }
0001394c      }
0001394c      else if (0x9e - r2 > 0)
00013954          return r0 >> (0x9e - r2);
00013954      
00013976      if (arg1 << 1 <= 0xff000000)
00013982          return ~(arg1 >> 0x1f) ^ 0x80000000;  /* "0117" */
00013982      
0001397a      return 0;
00013938  }


00013984    uint32_t sub_13984(int32_t arg1) __pure

00013984  {
00013984      int32_t r1 = arg1 << 8;
00013986      int32_t r2 = arg1 >> 0x17;  /* "00.33_250117" */
00013986      
00013988      if (r2)
0001398e          r1 |= 0x80000000;
0001398e      
00013992      if (!r2 || r2 >= 0)
00013992      {
00013998          if (0x9e - r2 >= 0)
0001399e              return r1 >> (0x9e - r2);
0001399e          
000139a8          if (arg1 << 1 <= 0xff000000)
000139b2              return ~(arg1 >> 0x1f);  /* "0117" */
00013992      }
00013992      
000139ac      return 0;
00013984  }


000139b4    int32_t sub_139b4(int32_t arg1, int32_t arg2) __pure

000139b4  {
000139b4      int32_t r2 = 0x1f;  /* "0117" */
000139b4      
000139b8      if (!(arg1 >> 0x10))  /* "RY02_3.00.33_250117" */
000139b8      {
000139ba          r2 = 0xf;
000139bc          arg1 <<= 0x10;  /* "RY02_3.00.33_250117" */
000139bc          
000139be          if (!arg1)
000139fa              return arg1;
000139b8      }
000139b8      
000139c2      if (!(arg1 >> 0x18))  /* "0.33_250117" */
000139c2      {
000139c4          arg1 <<= 8;
000139c6          r2 -= 8;
000139c2      }
000139c2      
000139ca      if (!(arg1 >> 0x1c))  /* "_250117" */
000139ca      {
000139cc          arg1 <<= 4;
000139ce          r2 -= 4;
000139ca      }
000139ca      
000139d2      if (!(arg1 >> 0x1e))  /* "50117" */
000139d2      {
000139d4          arg1 <<= 2;
000139d6          r2 -= 2;
000139d2      }
000139d2      
000139da      if (arg1 >= 0)
000139da      {
000139dc          arg1 <<= 1;
000139de          r2 -= 1;
000139da      }
000139da      
000139e6      int32_t r1_1 = (arg1 >> 8) + (r2 << 0x17) + arg2;  /* "00.33_250117" */
000139e6      
000139ec      if (TEST_BIT(arg1, 7))
000139ec      {
000139ee          r1_1 += 1;
000139ee          
000139f2          if (!(arg1 << 0x19))  /* ".33_250117" */
000139f6              return r1_1 >> 1 << 1;
000139ec      }
000139ec      
000139f8      return r1_1;
000139b4  }


000139fc    int32_t sub_139fc(int32_t arg1)

000139fc  {
000139fe      uint32_t r1 = arg1 >> 0x1f << 0x1f;  /* "0117" */
000139fe      
00013a00      if (r1)
00013a02          arg1 = 0 - arg1;
00013a02      
00013a0a      /* tailcall */
00013a0a      return sub_139b4(arg1, r1 | 0x40000000);
000139fc  }


00013a0c    int32_t j_sub_139b4(int32_t arg1)

00013a0c  {
00013a10      /* tailcall */
00013a10      return sub_139b4(arg1, 0x40000000);
00013a0c  }


00013a12    int32_t sub_13a12()

00013a12  {
00013a1a      return *(uint32_t*)0x20dc2c;
00013a12  }


00013a1c    int32_t sub_13a1c(int32_t arg1)

00013a1c  {
00013a24      *(uint32_t*)0x20dc2c = arg1;
00013a26      return 0x20dc2c;
00013a1c  }


00013a28    int32_t sub_13a28(int32_t* arg1, int32_t arg2, void* arg3, int32_t arg4)

00013a28  {
00013a28      int32_t var_20 = arg2;
00013a28      int32_t* var_24 = arg1;
00013a2c      int32_t r5 = arg2;
00013a34      int32_t r1 = *(uint32_t*)arg1;
00013a38      int32_t r0_2;
00013a38      
00013a38      if (r1 << 0x1a >= 0)  /* "33_250117" */
00013a44          r0_2 = 1;
00013a38      else
00013a38      {
00013a3c          r0_2 = arg1[7];
00013a40          *(uint32_t*)arg1 = r1 & 0xffffffef;
00013a38      }
00013a38      
00013a48      int32_t r7;
00013a48      
00013a48      r7 = r0_2 <= r5 ? 0 : r0_2 - r5;
00013a48      
00013a5a      arg1[6] -= r7 + r5 + arg4;
00013a5a      
00013a60      if ((uint32_t)*(uint8_t*)arg1 << 0x1b >= 0)  /* "3_250117" */
00013a64          sub_12808(arg1);
00013a64      
00013a68      int32_t r6 = 0;
00013a68      
00013a82      while (r6 < arg4)
00013a82      {
00013a74          arg1[1]((uint32_t)*(uint8_t*)((char*)arg3 + r6), arg1[2]);
00013a7a          r6 += 1;
00013a7c          arg1[8] += 1;
00013a82      }
00013a82      
00013a88      if ((uint32_t)*(uint8_t*)arg1 << 0x1b < 0)  /* "3_250117" */
00013a8c          sub_12808(arg1);
00013a8c      
00013aa0      while (true)
00013aa0      {
00013aa0          int32_t r0_19 = r7;
00013aa2          r7 -= 1;
00013aa2          
00013aa6          if (r0_19 <= 0)
00013aa6              break;
00013aa6          
00013a98          arg1[1](0x30, arg1[2]);  /* "RY02_V3.0" */
00013a9e          arg1[8] += 1;
00013aa0      }
00013aa0      
00013aba      while (true)
00013aba      {
00013aba          int32_t r0_24 = r5;
00013abc          r5 -= 1;
00013abc          
00013ac0          if (r0_24 <= 0)
00013ac0              break;
00013ac0          
00013ab2          arg1[1]((uint32_t)*(uint8_t*)(&arg1[9] + r5), arg1[2]);
00013ab8          arg1[8] += 1;
00013aba      }
00013aba      
00013ac4      sub_12834(arg1);
00013ac4      
00013acc      if ((uint32_t)*(uint8_t*)arg1 << 0x18 >= 0)  /* "0.33_250117" */
00013ad4          return 1;
00013ad4      
00013ace      return 2;
00013a28  }


00013ad8    uint32_t sub_13ad8(void* arg1)

00013ad8  {
00013ad8      char* r1 = *(uint32_t*)((char*)arg1 + 0x10);  /* "RY02_3.00.33_250117" */
00013adc      *(uint32_t*)((char*)arg1 + 0x10) = &r1[1];  /* "RY02_3.00.33_250117" */
00013ae0      return (uint32_t)*(uint8_t*)r1;
00013ad8  }


00013ae2    int32_t sub_13ae2(int32_t arg1, int32_t arg2, void* arg3)

00013ae2  {
00013ae6      int32_t var_38 = arg2;
00013aea      int32_t var_2c = 0;
00013aee      int32_t r3;
00013aee      int32_t var_3c = r3;
00013af2      void* const var_34 = sub_13ad8;
00013af6      int32_t var_30 = arg1;
00013b00      void var_40;
00013b00      return sub_12900(&var_40, arg3);
00013ae2  }

00013b02        00 00                                                                                        ..

00013b04  int32_t data_13b04 = -0x1b

00013b08    void sub_13b08(char arg1, int32_t* arg2)

00013b08  {
00013b08      char* r2_1 = *(uint32_t*)arg2;
00013b0a      *(uint8_t*)r2_1 = arg1;
00013b0e      *(uint32_t*)arg2 = &r2_1[1];
00013b08  }


00013b12    void sub_13b12(char arg1, int32_t* arg2)

00013b12  {
00013b12      char* r2 = *(uint32_t*)arg2;
00013b12      
00013b18      if (r2 < arg2[1])
00013b18      {
00013b1c          *(uint32_t*)arg2 = &r2[1];
00013b1e          *(uint8_t*)r2 = arg1;
00013b18      }
00013b12  }


00013b22    int32_t sub_13b22(char* arg1, void* arg2, int32_t arg3)

00013b22  {
00013b28      if (!*(uint32_t*)(arg1 + 0x14))  /* "_3.00.33_250117" */
00013b30          sub_12856(arg1, arg2, arg3);
00013b30      
00013b36      return 1;
00013b22  }


00013b38    int32_t sub_13b38(void* arg1, int32_t arg2, char* arg3)

00013b38  {
00013b3e      *(uint8_t*)((char*)arg1 + 0x24) = *(uint8_t*)arg3;
00013b42      *(uint8_t*)((char*)arg1 + 0x25) = 0;
00013b46      /* tailcall */
00013b46      return sub_13b22(arg1, (char*)arg1 + 0x24, 1);
00013b38  }


00013b48    int32_t sub_13b48(int32_t arg1, int32_t arg2, int32_t* arg3)

00013b48  {
00013b4e      /* tailcall */
00013b4e      return sub_13b22(arg1, *(uint32_t*)arg3, 0xffffffff);
00013b48  }


00013b50    uint32_t sub_13b50(int32_t arg1, int32_t arg2, int32_t arg3, int32_t arg4, int32_t arg5)

00013b50  {
00013b50      int32_t var_18_1 = arg4;
00013b54      int32_t r6 = arg2 << 1;
00013b54      
00013b62      if (r6 <= 0xffe00000 && (r6 != 0xffe00000 || !arg1))
00013b62      {
00013b64          int32_t r6_1 = arg4 << 1;
00013b64          
00013b70          if (r6_1 <= 0xffe00000 && (r6_1 != 0xffe00000 || !arg3))
00013b70          {
00013b88              if ((arg2 | arg4) >= 0)
00013b92                  return __mrs(apsr);
00013b92              
00013bac              uint32_t result;
00013bac              
00013bac              if (arg4 != arg2)
00013bac              {
00013bb2                  result = __mrs(apsr) & 0x6fffffff;
00013bb2                  
00013bb6                  if (arg4 < arg2)
00013bb8                      result |= 0x80000000;
00013bac              }
00013bac              else if (arg3 < arg1)
00013bb8                  result = (__mrs(apsr) & 0x6fffffff) | 0x80000000;
00013bbe              else
00013bc4                  result = __mrs(apsr) & 0x6fffffff;
00013bc4              
00013bc6              __msr(apsr_nzcvq, result);
00013bca              return result;
00013b70          }
00013b62      }
00013b62      
00013b78      if (arg5 & 0xd0000)
00013b82          return sub_13ce8(0, arg5);
00013b82      
00013bd4      int32_t var_18 = arg5;
00013bda      return sub_13d18(arg1);
00013b50  }

00013bdc  int32_t data_13bdc = -0x200000

00013be0    int32_t sub_13be0(int32_t arg1, int32_t arg2) __pure

00013be0  {
00013be4      int32_t r2 = arg1;
00013be4      
00013bee      if (arg2 & 0x7ff00000)
00013bee      {
00013bf4          if (0x7ff00000 & ~arg2)
00013bf4          {
00013bf8              if (arg2 < 0)
00013cd6                  return 0;
00013cd6              
00013c04              int32_t r1_1 = (arg2 & ~(arg2 >> 0x14 << 0x14)) | 0x100000;
00013c04                  /* "_3.00.33_250117" */
00013c0c              uint32_t r3_1;
00013c0c              
00013c0c              if (TEST_BIT(r3_1 + 0xfd, 0))
00013c0c              {
00013c0e                  int32_t temp1_1 = r2;
00013c0e                  int32_t temp2_1 = r2;
00013c0e                  r2 *= 2;
00013c10                  r1_1 = r1_1 + r1_1;
00013c0c              }
00013c0c              
00013c20              int32_t r1_2 = 0x40000000;
00013c24              int32_t r2_1 = r2 << 0xa;
00013c26              int32_t r7 = 0;
00013c28              int32_t r3_8 = (r1_1 << 0xa | r2 >> 0x16) - 0x40000000;  /* ".00.33_250117" */
00013c28              
00013c40              for (uint32_t i = 0x10000000; i; i u>>= 1)
00013c40              {
00013c2c                  int32_t r5_1 = r3_8 - r1_2;
00013c2c                  
00013c32                  if (r3_8 - r1_2 >= 0 && r5_1 - i >= 0)
00013c32                  {
00013c34                      r3_8 = r5_1 - i;
00013c38                      r1_2 += i << 1;
00013c32                  }
00013c32                  
00013c3a                  int32_t temp3_1 = r2_1;
00013c3a                  int32_t temp4_1 = r2_1;
00013c3a                  r2_1 *= 2;
00013c3c                  r3_8 = r3_8 + r3_8;
00013c40              }
00013c40              
00013c44              if (r3_8 - r1_2 >= 0)
00013c44              {
00013c4e                  int32_t r4_4 = r3_8 - r1_2 - 1;
00013c4e                  
00013c50                  if (r4_4 >= 0)
00013c50                  {
00013c52                      r2_1 -= 0x80000000;
00013c54                      r3_8 = r4_4;
00013c56                      r1_2 += 1;
00013c50                  }
00013c44              }
00013c44              
00013c58              int32_t r4_5 = r2_1 * 2;
00013c5a              int32_t r3_9 = r3_8 + r3_8;
00013c5a              
00013c7e              for (uint32_t i_1 = 0x40000000; i_1 != 0x80; i_1 u>>= 1)
00013c7e              {
00013c62                  int32_t r6_1 = r4_5 - r7;
00013c64                  int32_t r5_6 = r3_9 - r1_2;
00013c64                  
00013c66                  if (r5_6 >= 0)
00013c66                  {
00013c6a                      int32_t r5_7 = r5_6 - 0;
00013c6a                      
00013c6c                      if (r5_7 >= 0)
00013c6c                      {
00013c6e                          r3_9 = r5_7;
00013c72                          r4_5 = r6_1 - i_1;
00013c74                          r7 += i_1 << 1;
00013c6c                      }
00013c66                  }
00013c66                  
00013c76                  int32_t temp7_1 = r4_5;
00013c76                  int32_t temp8_1 = r4_5;
00013c76                  r4_5 *= 2;
00013c78                  r3_9 = r3_9 + r3_9;
00013c7e              }
00013c7e              
00013c80              int32_t r3_10 = r3_9 | r4_5;
00013c80              
00013c82              if (r3_10)
00013c84                  r3_10 = 2;
00013c84              
00013c8c              if (TEST_BIT(r7, 9))
00013c90                  r3_10 |= 1;
00013c90              
00013c94              int32_t r0_2 = r7 >> 0xa | r1_2 << 0x16;  /* ".00.33_250117" */
00013c94              
00013ca0              if (r3_10)
00013ca0              {
00013ca6                  if (TEST_BIT(r3_10, 0))
00013caa                      r0_2 += 1;
00013caa                  
00013cb0                  if (!(r3_10 >> 1))
00013cb4                      return r0_2 >> 1 << 1;
00013ca0              }
00013ca0              
00013cb6              return r0_2;
00013bf4          }
00013bf4          
00013ccc          if (arg2 << 0xc | r2 || arg2 < 0)
00013cd6              return 0;
00013bee      }
00013bee      else if (arg2 << 0xc | r2)
00013cc2          return 0;
00013cc2      
00013cd0      return r2;
00013be0  }

00013cd8  int32_t data_13cd8 = 0x7ff00000
00013cdc  int32_t data_13cdc = 0x7ff80000

00013ce0    int32_t sub_13ce0() __pure

00013ce0  {
00013ce2      return 0x20dc2c;
00013ce0  }

00013ce4  int32_t data_13ce4 = 0x20dc2c

00013ce8    uint32_t sub_13ce8(int32_t arg1, int32_t arg2)

00013ce8  {
00013cea      if (arg2 << 0xb >= 0)
00013d14          return 0;
00013d14      
00013cf2      if (arg2 << 0xd >> 0x1d)  /* "250117" */
00013cfc          return ~(arg2 << 0xf) << 1;
00013cfc      
00013d0a      uint32_t result = __mrs(apsr) << 4 >> 4 | 0x30000000;
00013d0c      __msr(apsr_nzcvq, result);
00013d10      return result;
00013ce8  }

00013d16                                                                    00 00                                                ..

00013d18    int32_t sub_13d18(int32_t arg1)

00013d18  {
00013d24      return sub_13d2c(0, 0x7ff80000, arg1);
00013d18  }

00013d26                    00 00                                                                                ..

00013d28  int32_t data_13d28 = 0x7ff80000

00013d2c    void sub_13d2c(uint32_t arg1, uint32_t arg2, int32_t arg3)

00013d2c  {
00013d36      if (arg3 << 0x1c >> 0x1c == 9)  /* "_250117" */
00013d46          sub_13ce8(8, arg3);
00013d2c  }


00013d8a    int32_t sub_13d8a(int32_t* arg1, int32_t arg2)

00013d8a  {
00013d96      char var_48[0x1c];
00013d96      0xff81b968(&var_48, 0x1c);  /* "_250117" */
00013da0      int32_t lr = (int32_t)var_48[0];
00013da2      int32_t i = 0;
00013da4      int32_t var_24 = 0;
00013da6      int32_t r2 = 0;
00013da8      int32_t r3 = 0;
00013daa      int32_t r12 = 0;
00013dac      int32_t var_1c = 0;
00013dac      
00013dbc      for (; i < arg2; i = (int32_t)((uint8_t)i + 1))
00013db4          var_48[i] = 0;
00013db4      
00013dbe      int32_t j_2 = 0;
00013dc0      int32_t i_1 = arg2 - 1;
00013dc2      int32_t i_5 = i_1;
00013dc2      
00013e14      for (; j_2 < i_1; i_1 = i_5)
00013e14      {
00013dc8          int32_t j = (int32_t)((uint8_t)j_2 + 1);
00013dce          int32_t j_1 = j;
00013dce          
00013dfc          for (; j < arg2; j = (int32_t)((uint8_t)j + 1))
00013dfc          {
00013dd6              int32_t r6_3 = arg1[j_2];
00013dda              int32_t r7_2 = arg1[j];
00013dda              
00013de6              if (r6_3 == r7_2 && r6_3 && r7_2)
00013de6              {
00013dee                  var_48[j_2] += 1;
00013df4                  arg1[j] = 0;
00013de6              }
00013dfc          }
00013dfc          
00013e04          if (arg1[j_2])
00013e0c              var_48[j_2] += 1;
00013e0c          
00013e0e          j_2 = j_1;
00013e14      }
00013e14      
00013e20      if (*(uint32_t*)(&arg1[arg2] - 4))
00013e2c          *(uint8_t*)(&var_48[arg2] - 1) += 1;
00013e2c      
00013e46      for (int32_t i_2 = 0; i_2 < arg2; i_2 = (int32_t)((uint8_t)i_2 + 1))
00013e46      {
00013e34          int32_t r1_2 = (int32_t)var_48[i_2];
00013e34          
00013e38          if (r1_2 > lr)
00013e38          {
00013e3a              lr = r1_2;
00013e3e              r2 = arg1[i_2];
00013e38          }
00013e46      }
00013e46      
00013e6a      for (int32_t i_3 = 0; i_3 < arg2; i_3 = (int32_t)((uint8_t)i_3 + 1))
00013e6a      {
00013e4c          int32_t r1_4 = (int32_t)var_48[i_3];
00013e4c          
00013e56          if (r1_4 > var_24 && r1_4 <= lr)
00013e56          {
00013e5a              int32_t r6_8 = arg1[i_3];
00013e5a              
00013e5e              if (r6_8 != r2)
00013e5e              {
00013e60                  r3 = r6_8;
00013e62                  var_24 = r1_4;
00013e5e              }
00013e56          }
00013e6a      }
00013e6a      
00013e94      for (int32_t i_4 = 0; i_4 < arg2; i_4 = (int32_t)((uint8_t)i_4 + 1))
00013e94      {
00013e70          int32_t r1_5 = (int32_t)var_48[i_4];
00013e70          
00013e7c          if (r1_5 > var_1c && r1_5 <= var_24)
00013e7c          {
00013e80              int32_t r6_12 = arg1[i_4];
00013e80              
00013e88              if (r6_12 != r3 && r6_12 != r2)
00013e88              {
00013e8a                  r12 = r6_12;
00013e8c                  var_1c = r1_5;
00013e88              }
00013e7c          }
00013e94      }
00013e94      
00013e98      if (!r3)
00013e9a          r3 = r2;
00013e9a      
00013ea0      if (!r12)
00013ea2          r12 = r2;
00013ea2      
00013eb2      return sub_12b3e(r2 + r3 + r12, 3);
00013d8a  }


00013eb4    int32_t sub_13eb4(int32_t arg1)

00013eb4  {
00013ec0      void var_1c;
00013ec0      0xff81b898(&var_1c, arg1, 6);
00013eca      void var_14;
00013eca      0xff81b91a(&var_14, 6, 0xff);
00013ed2      int16_t var_28 = 0x33;  /* "2_V3.0" */
00013ed6      char var_26 = 6;
00013eda      void* var_24 = &var_1c;
00013ede      void* var_20 = &var_14;
00013ee6      0xff7e1a56(0x23000000, "Ready to update MAC!\n");
00013ef8      return sub_14198(0x801400, 0x801400, &var_28, 1);
00013eb4  }

00013efa                                                                                00 00                                        ..

00013efc  int32_t data_13efc = 0x801400

00013f00  data_13f00:
00013f00  52 65 61 64 79 20 74 6f 20 75 70 64 61 74 65 20 4d 41 43 21 0a 00 00 00                          Ready to update MAC!....

00013f18    int32_t sub_13f18(int32_t, int32_t, int32_t, uint32_t arg4)

00013f18  {
00013f1e      int32_t lr;
00013f1e      uint32_t r5 = (uint32_t)*(uint8_t*)(lr - 1);
00013f1e      
00013f24      if (arg4 < r5)
00013f26          r5 = arg4;
00013f26      
00013f30      /* jump -> lr + ((uint32_t)*(uint8_t*)(lr + r5) << 1) */
00013f18  }

00013f32                                                        00 00                                                        ..

00013f34    int32_t sub_13f34()

00013f34  {
00013f36      int32_t r0 = sub_14a1c();
00013f36      
00013f3e      if (r0 > 0xea6)
00013f42          return 0x7d;
00013f42      
00013f48      if (r0 >= 0x9f6)
00013f58          return sub_12b3e(0x64 * r0, 0xbb8);
00013f58      
00013f4c      return 0x55;
00013f34  }

00013f5a                                                                                00 00                                        ..

00013f5c  int32_t data_13f5c = 0xea6
00013f60  int32_t data_13f60 = 0x9f6
00013f64  int32_t data_13f64 = 0xbb8

00013f68    int32_t sub_13f68(char* arg1)

00013f68  {
00013f6c      uint32_t r0 = sub_12b14(arg1);
00013f6c      
00013f74      if (r0 == 0x8721bee2)
00013f86          return 1;
00013f86      
00013f7e      0xff7e1a56(0x23000000, "wrong signature! Read %8X != Requried %8X\n", r0, 0x8721bee2);
00013f82      return 0;
00013f68  }

00013f88  int32_t data_13f88 = -0x78de411e

00013f8c  data_13f8c:
00013f8c                                      77 72 6f 6e 67 20 73 69 67 6e 61 74 75 72 65 21 20 52 65 61              wrong signature! Rea
00013fa0  64 20 25 38 58 20 21 3d 20 52 65 71 75 72 69 65 64 20 25 38 58 0a 00 00                          d %8X != Requried %8X...

00013fb8    int32_t sub_13fb8(int32_t arg1, int32_t arg2, int32_t arg3)

00013fb8  {
00013fc8      int32_t r0 = 0xff7eec80(0, 0x400, 0x83e93a, 0x27);
00013fc8      
00013fd0      if (!r0)
00014052          return 0xff7e1a56(0x23000000, "malloc %d bytes fail!", 0x400);
00014052      
00013fda      int32_t var_28 = 0x800;
00013fdc      int32_t r0_1 = 0xff7eec80(0, 0x800, 0x83e93a, 0x30, var_28);  /* "RY02_V3.0" */
00013fe2      int32_t r0_12;
00013fe2      
00013fe2      if (!r0_1)
00013fe2      {
0001405e          0xff7e1a56(0x23000000, "malloc %d bytes fail!", var_28);
00014062          r0_12 = r0;
00013fe2      }
00013fe2      else
00013fe2      {
00013fe8          char var_24 = 0;
00013ff4          0xff81b898(r0, arg1 - 0x400, 0x400);
00014000          0xff81b898(r0_1, arg1 + 0x400, var_28);
00014008          0xff7e498c(arg1 - 0x400, &var_24);
00014010          0xff7e41f0(2, arg1 - 0x400);
0001401a          0xff7e4650(arg1 - 0x400, 0x400, r0);
00014024          0xff7e4650(arg1, arg3, arg2);
00014030          0xff7e4650(arg1 + 0x400, var_28, r0_1);
00014038          0xff7e4966((uint32_t)var_24, &var_28);
0001403e          0xff7eed9c(r0);
00014042          r0_12 = r0_1;
00013fe2      }
00013fe2      
00014044      return 0xff7eed9c(r0_12);
00013fb8  }

00014066                    00 00                                                                                ..

00014068  int32_t data_14068 = 0x83e93a
0001406c  int32_t data_1406c = 0x23000000

00014070  data_14070:
00014070                                                  6d 61 6c 6c 6f 63 20 25 64 20 62 79 74 65 73 20                  malloc %d bytes 
00014080  66 61 69 6c                                                                                      fail

00014084  char const (* data_14084)[0x3] = &data_18[0x9] {00000021} {"17"}

00014088    int32_t sub_14088(int32_t arg1) __pure

00014088  {
0001408c      if (arg1 - 0x30 >= 0xa)  /* "RY02_V3.0" */
00014094          return 0;
00014094      
00014090      return 1;
00014088  }

00014096                                                                    00 00                                                ..

00014098    int32_t sub_14098(int32_t arg1, int32_t arg2, int32_t arg3, int32_t arg4)

00014098  {
0001409e      uint32_t r0 = (uint32_t)*(uint8_t*)0x2084a9;
000140ac      int32_t r4_1 = sub_13f18(r0, arg2, arg3, r0, arg4) << 0x10;
000140ac          /* "RY02_3.00.33_250117" */
000140b0      int32_t r0_3 = sub_14a1c();
000140b8      int32_t r7;
000140b8      
000140b8      if (r0_3 > 0x1a5e)
000140ba          r7 = 0x87;
000140b8      else if (r0_3 >= 0xfa0)
000140d4          r7 = sub_12b3e(0x64 * r0_3, 0x1388);
000140c4      else
000140c6          r7 = 0x50;
000140c6      
000140e4      *(uint8_t*)(r4_1 + 6) = sub_12b3e(0x28 * r7 * (uint32_t)*(uint8_t*)0x2084a6, 0x2710);
000140f0      char result = sub_12b3e(0x37 * r7 * *(uint32_t*)0x2084b0, 0x2710);  /* ".0" */
00014114      *(uint8_t*)(r4_1 + 5) = result;
00014116      return result;
00014098  }

000140f6                                                                    ff f7 1d ff 07 46 a8 78 26 21                        .....F.x&!
00014100  78 43 48 43 31 46 fe f7 1a fd a0 71 e8 68 78 43 2f 21 eb e7                                      xCHC1F.....q.hxC/!..
00014118                                                                          ff f7 0c ff 01 46 a8 78                          .....F.x
00014120  48 43 26 21 48 43 31 46 fe f7 09 fd a0 71 00 20 f0 e7 00 00                                      HC&!HC1F.....q. ....

00014134  int32_t data_14134 = 0x2084a4
00014138  int32_t data_14138 = 0x2710
0001413c  int32_t data_1413c = 0x20d944
00014140  void* data_14140 = sub_1a5e
00014144  int32_t data_14144 = 0x1388

00014148    uint32_t sub_14148(int32_t arg1)

00014148  {
00014150      if (!arg1)
00014172          return 0;
00014172      
00014156      int32_t r0_2 = arg1 - (uint32_t)*(uint8_t*)0x2084a4;
00014156      
0001415a      if (r0_2 <= 0)
00014180          return 5;
00014180      
00014160      int32_t r0_3;
00014160      int32_t r1_1;
00014160      int32_t r2_1;
00014160      int32_t r3_1;
00014160      
00014160      if (!(uint32_t)*(uint8_t*)0x2084a8)
00014160      {
00014174          r0_3 = sub_1351a(r0_2);
00014178          r2_1 = 0xcccccccd;
0001417a          r3_1 = 0x3ff4cccc;
00014160      }
00014160      else
00014160      {
00014162          r0_3 = sub_1351a(r0_2);
00014166          r2_1 = 0x9999999a;
00014168          r3_1 = 0x3ff19999;
00014160      }
00014160      
0001416a      int32_t r0_4;
0001416a      int32_t r1_2;
0001416a      r0_4 = sub_13530(r0_3, r1_1, r2_1, r3_1);
0001416e      return sub_13424(r0_4, r1_2);
00014148  }

00014182        00 00                                                                                        ..

00014184  int32_t data_14184 = 0x2084a4
00014188  int32_t data_14188 = -0x66666666
0001418c  int32_t data_1418c = 0x3ff19999
00014190  int32_t data_14190 = -0x33333333
00014194  int32_t data_14194 = 0x3ff4cccc

00014198    int32_t sub_14198(char* arg1, int32_t arg2, int32_t arg3, int32_t arg4)

00014198  {
00014198      char* var_24 = arg1;
000141a2      void var_30;
000141a2      void* var_34 = &var_30;
000141a8      int32_t r6 = 0;
000141a8      
000141ac      if (arg4 > 0x20)  /* "117" */
00014262          return 0;
00014262      
000141ba      uint32_t r5_1 =
000141ba          (uint32_t)(((int16_t)((uint32_t)arg1[5] << 8) | (uint16_t)arg1[4]) + 6);
000141c2      0xff7e1a56(0x23000000, "old config len %d");
00014212      int16_t var_80[0x20];
00014212      
00014212      for (uint32_t i = 0; i < arg4; i = (uint32_t)((uint8_t)i + 1))
00014212      {
000141d0          int16_t* r7_1 = i * 0xc + arg3;
000141d0          
000141e2          if (sub_14380(arg1, r7_1, &var_80[i]))
000141e8              r6 |= 1 << i;
000141e8          
000141f4          0xff7e1a56(0x23000000, "item[%d] len %d", i, (uint32_t)r7_1[1]);
000141f4          
000141fe          if (!(1 << i & r6))
00014208              r5_1 = (uint32_t)((int16_t)((uint32_t)r7_1[1] << 1) + (uint16_t)r5_1 + 3);
00014212      }
00014212      
00014218      void* r5_3 = (r5_1 + 3) & &data_fffc;
00014224      void* r0_14 = 0xff7eecda(0, r5_3, 0x83e94e, 0xae);
00014224      
0001422a      if (!r0_14)
0001422a      {
0001425a          0xff7e1a56(0x23000000, "malloc %d bytes fail!", r5_3);
0001425e          return 0;
0001422a      }
0001422a      
00014230      0xff81b91a(r0_14, r5_3, 0xff);
00014240      uint32_t r4_2 =
00014240          (uint32_t)(((int16_t)((uint32_t)arg1[5] << 8) | (uint16_t)arg1[4]) + 6);
00014246      0xff81b898(r0_14, arg1, r4_2);
0001424c      uint32_t i_1 = 0;
0001424e      void* var_40_1 = (char*)r0_14 + r4_2;
0001424e      
000142ee      for (; i_1 < arg4; i_1 = (uint32_t)((uint8_t)i_1 + 1))
000142ee      {
0001426a          void* r4_3 = i_1 * 0xc + arg3;
0001426a          
00014272          if (!(1 << i_1 & r6))
00014272          {
000142b0              int32_t r0_30 = ((uint32_t)*(uint8_t*)((char*)r0_14 + 5) << 8
000142b0                  | (uint32_t)*(uint8_t*)((char*)r0_14 + 4))
000142b0                  + ((uint32_t)*(uint8_t*)((char*)r4_3 + 2) << 1) + 3;
000142b2              *(uint8_t*)((char*)r0_14 + 4) = (char)r0_30;
000142b6              *(uint8_t*)((char*)r0_14 + 5) = (char)(r0_30 >> 8);
000142bc              0xff81b898(var_40_1, r4_3, 3);
000142c6              uint32_t r2_10 = (uint32_t)*(uint8_t*)((char*)r4_3 + 2);
000142cc              0xff81b898((char*)var_40_1 + 3, *(uint32_t*)((char*)r4_3 + 4), r2_10);
000142d4              void* r0_36 = (char*)var_40_1 + 3 + r2_10;
000142da              0xff81b898(r0_36, *(uint32_t*)((char*)r4_3 + 8));
000142e4              var_40_1 = (char*)r0_36 + r2_10;
00014272          }
00014272          else
00014272          {
0001427c              void* r0_24 = (uint32_t)var_80[i_1] + (char*)r0_14 + 3;
00014280              *(uint32_t*)((char*)var_34 + 4) = r0_24;
00014288              *(uint32_t*)((char*)var_34 + 8) =
00014288                  (char*)r0_24 + (uint32_t)*(uint8_t*)((char*)r4_3 + 2);
0001428e              0xff81b898(r0_24, *(uint32_t*)((char*)r4_3 + 4), 
0001428e                  (uint32_t)*(uint8_t*)((char*)r4_3 + 2));
0001429a              0xff81b898(*(uint32_t*)((char*)var_34 + 8), *(uint32_t*)((char*)r4_3 + 8), 
0001429a                  (uint32_t)*(uint8_t*)((char*)r4_3 + 2));
00014272          }
000142ee      }
000142ee      
00014300      0xff7e1a56(0x23000000, "new config len %d, backup_len %d", 
00014300          (uint32_t)*(uint8_t*)((char*)r0_14 + 5) << 8
00014300              | (uint32_t)*(uint8_t*)((char*)r0_14 + 4), 
00014300          r5_3);
0001430a      sub_13fb8(arg2, r0_14, r5_3);
00014310      0xff7eed9c(r0_14);
00014314      return 1;
00014198  }

00014318  data_14318:
00014318                                                                          6f 6c 64 20 63 6f 6e 66                          old conf
00014320  69 67 20 6c 65 6e 20 25 64 00 00 00                                                              ig len %d...
0001432c  data_1432c:
0001432c                                      69 74 65 6d 5b 25 64 5d 20 6c 65 6e 20 25 64 00                          item[%d] len %d.

0001433c  char const (* data_1433c)[0x1] = data_fffc {"P"}
00014340  int32_t data_14340 = 0x83e94e

00014344  data_14344:
00014344              6d 61 6c 6c 6f 63 20 25 64 20 62 79 74 65 73 20 66 61 69 6c                              malloc %d bytes fail

00014358  char const (* data_14358)[0x3] = &data_18[0x9] {00000021} {"17"}

0001435c  data_1435c:
0001435c                                                                                      6e 65 77 20                              new 
00014360  63 6f 6e 66 69 67 20 6c 65 6e 20 25 64 2c 20 62 61 63 6b 75 70 5f 6c 65 6e 20 25 64 00 00 00 00  config len %d, backup_len %d....

00014380    int32_t sub_14380(char* arg1, int16_t* arg2, uint16_t* arg3)

00014380  {
00014394      if (!sub_13f68(arg1))
000143be          0xff7e1a56(0x23000000, "Header is invalid\n");
00014394      else
00014394      {
000143a2          uint16_t var_30_1 = (uint16_t)arg1[6] + (int16_t)((uint32_t)arg1[7] << 8);
000143a4          uint32_t r1_2 = (uint32_t)arg1[8];
000143a8          uint8_t var_2e_1 = (char)r1_2;
000143ac          void* var_2c_1 = &arg1[9];
000143b0          uint32_t i = 6;
000143b2          void* r5_2 = &arg1[6];
000143b4          void* var_28_1 = &arg1[9 + r1_2];
000143b4          
00014424          while (((uint32_t)arg1[5] << 8 | (uint32_t)arg1[4]) + 6 > i)
00014424          {
000143ce              0xff7e1a56(0x23000000, "pos %02x, offset %02x\n", i, (uint32_t)var_30_1, 
000143ce                  var_30_1, var_2c_1, var_28_1, 0, arg1, arg2, arg3);
000143ce              
000143d8              if ((uint32_t)var_30_1 == (uint32_t)*(uint16_t*)arg2)
000143d8              {
000143da                  uint32_t r2_1 = (uint32_t)var_2e_1;
000143da                  
000143e0                  if (r2_1 == (uint32_t)arg2[1]
000143e0                      && !0xff81b7f8(var_28_1, *(uint32_t*)((char*)arg2 + 8), r2_1))
000143e0                  {
00014430                      if (arg3)
00014432                          *(uint16_t*)arg3 = (int16_t)i;
00014432                      
0001443c                      0xff7e1a56(0x23000000, &data_14478, (uint32_t)var_30_1);
00014442                      return 1;
000143e0                  }
000143d8              }
000143d8              
000143f2              int32_t r0_13 = ((uint32_t)var_2e_1 << 1) + 3;
000143f4              r5_2 += r0_13;
000143fe              var_30_1 = (uint16_t)*(uint8_t*)r5_2
000143fe                  + (int16_t)((uint32_t)*(uint8_t*)((char*)r5_2 + 1) << 8);
00014400              uint32_t r2_4 = (uint32_t)*(uint8_t*)((char*)r5_2 + 2);
00014402              var_2e_1 = (char)r2_4;
00014408              var_2c_1 = (char*)r5_2 + 3;
0001440a              i = (uint32_t)((uint16_t)i + (uint16_t)r0_13);
00014410              var_28_1 = r2_4 + (char*)r5_2 + 3;
00014410              
00014414              if (i >= 0x3fa)
00014414                  break;
00014424          }
00014394      }
00014394      
0001442a      return 0;
00014380  }

00014446                    00 00                                                                                ..
00014448  data_14448:
00014448                          48 65 61 64 65 72 20 69 73 20 69 6e 76 61 6c 69 64 0a 00 00                      Header is invalid...
0001445c  data_1445c:
0001445c                                                                                      70 6f 73 20                              pos 
00014460  25 30 32 78 2c 20 6f 66 66 73 65 74                                                              %02x, offset

0001448c    int32_t sub_1448c()

0001448c  {
00014494      0xff81b898(0x20dae4, 0x202cf1, 0xe);
0001449a      return 0x20dae4;
0001448c  }


0001449c    int32_t sub_1449c(int32_t arg1, char arg2, void* arg3 @ r4, int32_t arg4 @ r6, void* arg5 @ r7)

0001449c  {
000144a0      if (arg3 < 0 != (char*)arg3 - 0xf1)
000144a2          /* tailcall */
000144a2          return sub_144a4(arg3);
000144a2      
00014478      data_31 = arg2;
00014482      *(uint32_t*)((char*)arg3 + 0x60) = (uint32_t)*(uint8_t*)((char*)arg5 + 0x5b);
00014484      data_70 = (char)arg5;
00014486      data_9f = arg4;
0001448a      /* tailcall */
0001448a      return sub_1448c();
0001449c  }


000144a4    void sub_144a4(uint32_t arg1)

000144a4  {
000144a8      uint32_t r1 = (uint32_t)*(uint8_t*)0x20d953;
000144a8      
000144ac      if (r1)
000144ac      {
000144b2          uint32_t r1_3 = (r1 - 1) << 0x18 >> 0x18;  /* "0.33_250117" */
000144b4          *(uint8_t*)0x20d953 = (char)r1_3;
000144b4          
000144b6          if (r1_3)
000144ba              *(uint8_t*)0x20d953 = (uint8_t)r1_3 - 1;
000144ac      }
000144ac      
000144c0      uint32_t r2 = (uint32_t)*(uint8_t*)0x2084a5;
000144c4      uint32_t r3 = (uint32_t)*(uint8_t*)0x20d951;
000144c6      uint32_t r1_5 = (uint32_t)*(uint8_t*)0x20d952;
000144c6      
000144ce      if (r3 >= r2)
000144ce      {
00014502          uint16_t r7_1 = (uint16_t)r1_5 + (uint16_t)arg1;
00014508          *(uint8_t*)0x20d944 += (uint8_t)r7_1;
0001450a          *(uint8_t*)0x20d952 = 0;
00014510          uint32_t r0_8 = (uint32_t)(*(uint8_t*)0x20d948 + (uint8_t)r7_1);
00014512          *(uint8_t*)0x20d948 = (char)r0_8;
00014512          
00014516          if (r0_8 >= 0x14)  /* "_3.00.33_250117" */
00014516          {
00014518              sub_14098(r0_8, r1_5, r2, r3);
0001451c              *(uint8_t*)0x20d948 = 0;
00014516          }
00014516          
00014520          sub_15300(r7_1);
000144ce      }
000144ce      else
000144ce      {
000144d2          if (r1_5)
000144d2          {
000144d6              *(uint8_t*)0x20d951 = (uint8_t)r3 + (uint8_t)r1_5;
000144d8              *(uint8_t*)0x20d952 = 0;
000144d2          }
000144d2          
000144dc          if (arg1)
000144dc          {
000144de              uint32_t r1_7 = (uint32_t)*(uint8_t*)0x20d951;
000144e2              arg1 = (uint32_t)((uint8_t)r1_7 + (uint8_t)arg1);
000144e4              *(uint8_t*)0x20d951 = (char)arg1;
000144e4              
000144e8              if (arg1 >= r2)
000144e8              {
000144ea                  sub_14098(arg1, r1_7, r2, r3);
000144f4                  uint16_t r0_3 = (uint16_t)(*(uint8_t*)0x20d944 + *(uint8_t*)0x20d951);
000144f6                  *(uint8_t*)0x20d944 = (uint8_t)r0_3;
000144fa                  *(uint8_t*)0x20d955 = 1;
000144fc                  *(uint8_t*)0x20d954 = 0;
000144fe                  *(uint8_t*)0x20d948 = 0;
00014520                  sub_15300(r0_3);
000144e8              }
000144dc          }
000144ce      }
000144a4  }

00014526                    00 00                                                                                ..

00014528  int32_t data_14528 = 0x20d950
0001452c  int32_t data_1452c = 0x2084a4

00014530    int32_t sub_14530(int32_t arg1, int32_t arg2)

00014530  {
00014530      int32_t var_20_1 = arg2;
00014546      int32_t r0_3 = sub_12b3e(*(uint32_t*)0x20d990 * 7 + arg1 * 3, 0xa);
0001454c      *(uint32_t*)0x20d990 = r0_3;
0001454e      int32_t r0_4 = r0_3 * 3;
0001455c      char* r0_7;
0001455c      
0001455c      r0_7 = ((r0_4 >> 0x1f >> 0x1e) + r0_4) >> 2 > arg1 ? 0x20d994 : 0x20d9a8;
0001455c          /* "50117" */  /* "0117" */
0001455c      
00014566      if (arg2 < 5)
0001456a          return 0;
0001456a      
00014576      *(uint8_t*)0x20d98c ^= 1;
00014578      uint32_t r1_7 = (uint32_t)*(uint8_t*)r0_7;
00014578      
0001457c      if (r1_7 < 4)
00014580          *(uint8_t*)r0_7 = (uint8_t)r1_7 + 1;
00014580      
00014588      void* r1_11 = &r0_7[(uint32_t)r0_7[1] << 1];
00014590      *(uint32_t*)(r0_7 + 8) += arg1 - (uint32_t)*(uint16_t*)((char*)r1_11 + 0xc);
00014592      *(uint16_t*)((char*)r1_11 + 0xc) = (int16_t)arg1;
00014598      uint32_t r1_14 = (uint32_t)(r0_7[1] + 1);
0001459a      r0_7[1] = (char)r1_14;
0001459a      
0001459e      if (r1_14 >= 4)
000145a2          r0_7[1] = 0;
000145a2      
000145a8      int32_t r0_10 = sub_12b2a(*(uint32_t*)(r0_7 + 8), (uint32_t)*(uint8_t*)r0_7);
000145b2      uint32_t r1_16 = (uint32_t)*(uint8_t*)0x20d994;
000145b4      uint32_t r4 = 0;
000145b4      
000145b8      if (r1_16)
000145c2          r4 = sub_12b2a(*(uint32_t*)0x20d99c, r1_16);
000145c2      
000145c4      uint32_t r1_17 = (uint32_t)*(uint8_t*)0x20d9a8;
000145c4      
000145c8      if (r1_17)
000145d4          r4 = (sub_12b2a(*(uint32_t*)0x20d9b0, r1_17) + r4) >> 1;
000145d4      
000145d8      int32_t var_20 = 7;
000145dc      int32_t r7 = 0x25;
000145dc      
000145e0      if (r4 >= 0x1770)
000145e0      {
000145e4          r7 = 0x1e;  /* "50117" */
000145e6          var_20 = 5;
000145e0      }
000145e0      else if (r4 >= 0xfa0)
000145f0      {
000145f4          r7 = 0x20;  /* "117" */
000145f6          var_20 = 6;
000145f0      }
000145f0      
000145fa      int32_t r0_17 = arg1 - r0_10;
000145fa      
000145fc      if (arg1 - r0_10 < 0)
000145fe          r0_17 = 0 - r0_17;
000145fe      
00014608      int32_t r0_20 = sub_12b3e(r0_10 << 2, 0xa);
00014608      
00014610      if (r0_20 < 0xa8c)
00014612          r0_20 = 0xa8c;
00014610      else if (r0_20 > 0x1b58)
0001461c          r0_20 = 0x1b58;
0001461c      
00014622      if (r0_17 >= r0_20)
00014622      {
0001466a          sub_14824(1);
00014672          sub_12b3e(r0_17, 0xa8c);
00014676          sub_14854();
00014622      }
00014622      else
00014622      {
00014628          uint32_t r1_19 = (uint32_t)*(uint8_t*)0x20d951;
00014628          
00014636          if (r1_19 < (uint32_t)*(uint8_t*)0x2084a5 && arg1 < 0x7d0)  /* "17 10:58:10 2022"
00014636                  */
0001465e              sub_14824(0);
00014636          else if (arg2 < var_20 || arg2 > r7)
00014640          {
00014650              if (arg2 > r7 && !r1_19)
00014656                  *(uint32_t*)0x20d988 += 1;
00014656              
0001465a              if (arg2 <= r7)
0001465e                  sub_14824(0);
0001465a              else
0001465e                  sub_14824(1);
00014640          }
00014640          else
00014646              *(uint32_t*)0x20d988 += 1;
00014622      }
00014622      
0001467c      return 1;
00014530  }

0001467e                                                                                            00 00                                ..

00014680  int32_t data_14680 = 0x20d950
00014684  int32_t data_14684 = 0x1770
00014688  int32_t data_14688 = 0xa8c
0001468c  int32_t data_1468c = 0x1b58
00014690  int32_t data_14690 = 0x2084a4

00014694    int32_t sub_14694(int32_t arg1, int32_t arg2)

00014694  {
00014696      int32_t r4 = arg2;
00014696      
000146a4      if (arg1 >= 0x190)
000146a4      {
000146ae          if (r4 >= 5)
000146ae          {
000146b8              uint32_t r1 = (uint32_t)*(uint8_t*)0x20d9bc;
000146b8              
000146bc              if (r1 < 4)
000146c0                  *(uint8_t*)0x20d9bc = (uint8_t)r1 + 1;
000146c0              
000146d0              *(uint32_t*)0x20d9c4 += arg1 - (uint32_t)
000146d0                  *(uint16_t*)(((uint32_t)*(uint8_t*)0x20d9bd << 1) + 0x20d9c8);
000146d8              *(uint16_t*)(((uint32_t)*(uint8_t*)0x20d9bd << 1) + 0x20d9c8) = (int16_t)arg1;
000146de              uint32_t r1_9 = (uint32_t)(*(uint8_t*)0x20d9bd + 1);
000146e0              *(uint8_t*)0x20d9bd = (char)r1_9;
000146e0              
000146e4              if (r1_9 >= 4)
000146e8                  *(uint8_t*)0x20d9bd = 0;
000146e8              
000146ee              int32_t r1_10 = *(uint32_t*)0x20d988;
000146ee              
000146f4              if (!r1_10)
00014714                  sub_14824(0);
000146f4              else
000146f4              {
000146fa                  int32_t r0_3 =
000146fa                      sub_12b2a(*(uint32_t*)0x20d9c4, (uint32_t)*(uint8_t*)0x20d9bc);
00014702                  int32_t var_24_1 = 0x25;
00014706                  int32_t r7_1 = 7;
00014706                  
0001470a                  if (arg1 >= 0x1770)
0001470a                  {
0001470c                      r7_1 = 5;
00014726                      var_24_1 = 0x1e;  /* "50117" */
0001470a                  }
0001470a                  else if (arg1 >= 0xfa0)
00014720                  {
00014722                      r7_1 = 6;
00014726                      var_24_1 = 0x20;  /* "117" */
00014720                  }
00014720                  
0001472e                  uint32_t var_28_1 = 1;
00014730                  uint32_t r0_5 = (uint32_t)*(uint16_t*)0x20d9e6;
00014730                  
00014734                  if (r0_5)
00014734                  {
00014742                      int32_t r0_8 = sub_12b3e(r4 * 0x64, 
00014742                          sub_12b2a(r0_5, (uint32_t)*(uint8_t*)0x20d9e4));
00014742                      
00014748                      if (r0_8 < 0x32)  /* "02_V3.0" */
00014748                      {
0001474c                          sub_14824(0);
00014752                          var_28_1 = 0;
00014748                      }
00014748                      else if (r1_10 <= 1)
0001475e                      {
00014782                          if (!(uint32_t)*(uint8_t*)0x20d952 && r0_8 > 0xa0
00014782                                  && r7_1 << 1 < r4)
00014786                              *(uint8_t*)0x20d952 = 1;
0001475e                      }
0001475e                      else if (r0_8 > 0x4b && r7_1 << 1 < r4)
00014768                      {
0001476c                          var_28_1 = 2;
00014770                          *(uint8_t*)0x20d952 = 0;
000147a2                          r4 s>>= 1;
00014768                      }
00014734                  }
00014734                  else if (r1_10 > 1 && r7_1 << 1 < r4)
00014798                  {
0001479c                      var_28_1 = 2;
000147a0                      *(uint8_t*)0x20d952 = 0;
000147a2                      r4 s>>= 1;
00014798                  }
00014798                  
000147a6                  uint32_t r1_16 = (uint32_t)*(uint8_t*)0x20d9e5;
000147b2                  *(uint16_t*)0x20d9e6 +=
000147b2                      (uint16_t)r4 - (uint16_t)*(uint8_t*)(r1_16 + 0x20d9e8);
000147b4                  *(uint8_t*)(r1_16 + 0x20d9e8) = (char)r4;
000147ba                  uint32_t r0_13 = (uint32_t)(*(uint8_t*)0x20d9e5 + 1);
000147bc                  *(uint8_t*)0x20d9e5 = (char)r0_13;
000147bc                  
000147c0                  if (r0_13 >= 4)
000147c4                      *(uint8_t*)0x20d9e5 = 0;
000147c4                  
000147c6                  uint32_t r0_14 = (uint32_t)*(uint8_t*)0x20d9e4;
000147c6                  
000147ca                  if (r0_14 < 4)
000147ce                      *(uint8_t*)0x20d9e4 = (uint8_t)r0_14 + 1;
000147ce                  
000147d6                  int32_t r0_18 = sub_12b3e(r0_3 << 2, 0xa);
000147d6                  
000147de                  if (r0_18 > 0x1b58)
000147e0                      r0_18 = 0x1b58;
000147e0                  
000147e8                  if (r0_3 - arg1 >= r0_18)
000147e8                  {
00014806                      sub_14824(var_28_1);
00014810                      *(uint32_t*)0x20d988 = 0;
000147e8                  }
000147e8                  else if (r4 < r7_1 || r4 > var_24_1)
00014714                      sub_14824(0);
000147f6                  else
000147f6                  {
000147fa                      sub_144a4(var_28_1);
00014800                      *(uint32_t*)0x20d988 = 0;
000147f6                  }
000146f4              }
000146f4              
00014812              return 1;
000146ae          }
000146ae          
000146b2          sub_14854();
000146a4      }
000146a4      
000146a6      return 0;
00014694  }

00014816                                                                    00 00                                                ..

00014818  int32_t data_14818 = 0x20d9bc
0001481c  int32_t data_1481c = 0x1770
00014820  int32_t data_14820 = 0x1b58

00014824    void sub_14824(uint32_t arg1)

00014824  {
0001482a      uint32_t r3 = (uint32_t)(*(uint8_t*)0x20d953 + 1);
0001482c      *(uint8_t*)0x20d953 = (char)r3;
00014832      *(uint8_t*)0x20d952 += (uint8_t)arg1;
00014832      
00014838      if (r3 >= 5)
00014838      {
0001483a          *(uint8_t*)0x20d951 = 0;
0001483c          *(uint8_t*)0x20d953 = 0;
0001483e          *(uint8_t*)0x20d952 = 0;
00014838      }
00014838      
0001484a      if ((uint32_t)*(uint8_t*)0x20d952 == arg1 && !(uint32_t)*(uint8_t*)0x20d951)
0001484c          *(uint8_t*)0x20d953 = 0;
00014824  }

00014850  int32_t data_14850 = 0x20d950

00014854    int32_t sub_14854()

00014854  {
0001485e      if ((uint32_t)*(uint8_t*)0x20d951 < (uint32_t)*(uint8_t*)0x2084a5)
0001485e      {
00014864          uint32_t r1_3 = (uint32_t)(*(uint8_t*)0x20d954 + 1);
00014866          *(uint8_t*)0x20d954 = (char)r1_3;
00014866          
0001486a          if (r1_3 > 5)
0001486a          {
0001486e              *(uint8_t*)0x20d951 = 0;
00014870              *(uint8_t*)0x20d953 = 0;
00014872              *(uint8_t*)0x20d952 = 0;
0001486a          }
0001485e      }
0001485e      
00014874      return 0x20d950;
00014854  }

00014876                                                                    00 00                                                ..

00014878  int32_t data_14878 = 0x20d950
0001487c  int32_t data_1487c = 0x2084a4

00014880    uint32_t sub_14880(int32_t arg1)

00014880  {
00014884      uint32_t r2 = (uint32_t)*(uint8_t*)0x20d9d0;
00014884      
00014888      if (r2 < 3)
0001488c          *(uint8_t*)0x20d9d0 = (uint8_t)r2 + 1;
0001488c      
0001489a      void* r3_2 = ((uint32_t)*(uint8_t*)0x20d9d1 << 1) + 0x20d9d0;
000148a2      *(uint32_t*)0x20d9d8 += arg1 - (uint32_t)*(uint16_t*)((char*)r3_2 + 0xc);
000148a4      *(uint16_t*)((char*)r3_2 + 0xc) = (int16_t)arg1;
000148aa      uint32_t r0_2 = (uint32_t)(*(uint8_t*)0x20d9d1 + 1);
000148ac      *(uint8_t*)0x20d9d1 = (char)r0_2;
000148ac      
000148b0      if (r0_2 >= 3)
000148b4          *(uint8_t*)0x20d9d1 = 0;
000148b4      
000148b6      uint32_t result = 0x7fffffff;
000148b6      
000148d0      for (int32_t i = 0; (uint32_t)*(uint8_t*)0x20d9d0 > i; i += 1)
000148d0      {
000148c4          uint32_t result_1 = (uint32_t)*(uint16_t*)((i << 1) + 0x20d9dc);
000148c4          
000148c8          if (result_1 < result)
000148ca              result = result_1;
000148d0      }
000148d0      
000148d2      *(uint32_t*)0x20d9d4 = result;
000148d4      return result;
00014880  }

000148d6                                                                    00 00                                                ..

000148d8  int32_t data_148d8 = 0x20d9d0
000148dc  int32_t data_148dc = 0x7fffffff

000148e0    int32_t sub_148e0(int32_t arg1, int32_t arg2, int32_t arg3)

000148e0  {
000148f8      int32_t r0_3 = ((arg1 >> 0x1f >> 0x1d) + arg1) >> 3;  /* "250117" */  /* "0117" */
000148fa      int32_t r1_3 = ((arg2 >> 0x1f >> 0x1d) + arg2) >> 3;  /* "250117" */  /* "0117" */
000148fe      int32_t r2_3 = ((arg3 >> 0x1f >> 0x1d) + arg3) >> 3;  /* "250117" */  /* "0117" */
0001490a      int32_t r0_7;
0001490a      int32_t r1_5;
0001490a      r0_7 = sub_1351a(r0_3 * r0_3 + r1_3 * r1_3 + r2_3 * r2_3);
0001490e      int32_t r0_8;
0001490e      int32_t r1_6;
0001490e      r0_8 = sub_154fc(r0_7, r1_5);
00014914      int32_t r0_9;
00014914      int32_t r1_7;
00014914      r0_9 = sub_13778(r0_8, r1_6, 3);
00014918      uint32_t r0_10;
00014918      int32_t r2_5;
00014918      int32_t r3;
00014918      r0_10 = sub_13490(r0_9, r1_7);
0001491e      int32_t r1_8 = *(uint32_t*)0x20da8c;
0001491e      
00014922      if (!r1_8)
000149da          *(uint32_t*)0x20da8c = r0_10;
00014922      else
00014930          r0_10 = sub_12b2a(r1_8 * 3 + r0_10 * 7, 0xa);
00014930      
00014934      *(uint32_t*)0x20da8c = r0_10;
00014936      sub_14a7c(r0_10, r1_8, r2_5, r3);
0001494a      void* r1_13 = ((uint32_t)*(uint8_t*)0x20da90 << 1) + 0x20da90;
00014954      *(uint32_t*)0x20daa0 += arg1 - (int32_t)*(uint16_t*)((char*)r1_13 + 2);
00014956      *(uint16_t*)((char*)r1_13 + 2) = (int16_t)arg1;
00014964      void* r1_17 = ((uint32_t)*(uint8_t*)0x20da90 << 1) + 0x20da90;
0001496e      *(uint32_t*)0x20daa4 += arg2 - (int32_t)*(uint16_t*)((char*)r1_17 + 6);
00014970      *(uint16_t*)((char*)r1_17 + 6) = (int16_t)arg2;
0001497e      void* r1_21 = ((uint32_t)*(uint8_t*)0x20da90 << 1) + 0x20da90;
00014988      *(uint32_t*)0x20daa8 += arg3 - (int32_t)*(uint16_t*)((char*)r1_21 + 0xa);
0001498a      *(uint16_t*)((char*)r1_21 + 0xa) = (int16_t)arg3;
00014990      uint32_t r1_24 = (uint32_t)(*(uint8_t*)0x20da90 + 1);
00014992      *(uint8_t*)0x20da90 = (char)r1_24;
00014992      
00014996      if (r1_24 >= 2)
0001499a          *(uint8_t*)0x20da90 = 0;
0001499a      
0001499c      int32_t r0_13 = *(uint32_t*)0x20daa0;
000149a6      int32_t r0_16 = (int32_t)(int16_t)(((r0_13 >> 0x1f) + r0_13) >> 1);  /* "0117" */
000149a8      *(uint16_t*)0x2084aa = (int16_t)r0_16;
000149aa      int32_t r1_26 = *(uint32_t*)0x20daa4;
000149b2      int32_t r1_29 = (int32_t)(int16_t)(((r1_26 >> 0x1f) + r1_26) >> 1);  /* "0117" */
000149b4      *(uint16_t*)0x2084ac = (int16_t)r1_29;
000149b6      int32_t r2_15 = *(uint32_t*)0x20daa8;
000149c0      int32_t r2_18 = (int32_t)(int16_t)(((r2_15 >> 0x1f) + r2_15) >> 1);  /* "0117" */
000149c2      *(uint16_t*)0x2084ae = (int16_t)r2_18;
000149c2      
000149ca      if ((uint32_t)*(uint8_t*)0x20d947)
000149cc          sub_14d70(r0_16, r1_29, r2_18);
000149cc      
000149d8      return sub_15478((int32_t)*(uint16_t*)0x2084ac);
000148e0  }

000149de                                                                                            00 00                                ..

000149e0  int32_t data_149e0 = 0x20da50
000149e4  int32_t data_149e4 = 0x20d950
000149e8  int32_t data_149e8 = 0x2084a4

000149ec    uint32_t sub_149ec()

000149ec  {
000149f0      uint32_t result = (uint32_t)*(uint8_t*)0x20d945;
000149f2      *(uint8_t*)0x20d945 = 0;
000149f4      return result;
000149ec  }

000149f6                                                                    00 00                                                ..

000149f8  int32_t data_149f8 = 0x20d944

000149fc    uint32_t sub_149fc()

000149fc  {
00014a00      uint32_t result = (uint32_t)*(uint16_t*)0x20d94e;
00014a02      *(uint16_t*)0x20d94e = 0;
00014a04      return result;
000149fc  }

00014a06                    00 00                                                                                ..

00014a08  int32_t data_14a08 = 0x20d944

00014a0c    uint32_t sub_14a0c()

00014a0c  {
00014a10      uint32_t result = (uint32_t)*(uint16_t*)0x20d94c;
00014a12      *(uint16_t*)0x20d94c = 0;
00014a14      return result;
00014a0c  }

00014a16                                                                    00 00                                                ..

00014a18  int32_t data_14a18 = 0x20d944

00014a1c    int32_t sub_14a1c()

00014a1c  {
00014a1e      int32_t result = *(uint32_t*)0x20d990;
00014a1e      
00014a22      if (result >= 0)
00014a26          return result;
00014a26      
00014a24      return 0 - result;
00014a1c  }

00014a28  int32_t data_14a28 = 0x20d950

00014a2c    uint32_t sub_14a2c()

00014a2c  {
00014a30      uint32_t result = (uint32_t)*(uint8_t*)0x20d944;
00014a32      *(uint8_t*)0x20d944 = 0;
00014a34      return result;
00014a2c  }

00014a36                                                                    00 00                                                ..

00014a38  int32_t data_14a38 = 0x20d944

00014a3c    int32_t sub_14a3c()

00014a3c  {
00014a42      if ((uint32_t)*(uint8_t*)0x20d946 < 0x7d)
00014a4a          return 0;
00014a4a      
00014a46      return 1;
00014a3c  }

00014a4c  int32_t data_14a4c = 0x20d944

00014a50    int32_t sub_14a50()

00014a50  {
00014a58      0xff81b968(0x20d950, 0x15c);
00014a62      sub_14cc4(0, 0xaa, 0x46);
00014a68      sub_153a4(2);
00014a70      *(uint8_t*)0x2084a5 = 0xf;
00014a72      return 0xf;
00014a50  }

00014a74  int32_t data_14a74 = 0x20d950
00014a78  int32_t data_14a78 = 0x2084a4

00014a7c    int32_t sub_14a7c(int32_t arg1, int32_t arg2, int32_t arg3, int32_t arg4)

00014a7c  {
00014a7c      int32_t var_18 = arg4;
00014a7c      int32_t var_1c = arg3;
00014a7c      int32_t var_20 = arg2;
00014a82      int16_t r7 = (int16_t)arg1;
00014a84      int32_t r2 = *(uint32_t*)0x20d968;
00014a84      
00014a88      if (!r2)
00014a88      {
00014b62          *(uint32_t*)0x20d968 = arg1 * 3;
00014b62          
00014b70          for (int32_t i = 0; i < 3; )
00014b70          {
00014b68              void* r2_6 = (i << 1) + 0x20d950;
00014b6a              i += 1;
00014b6c              *(uint16_t*)((char*)r2_6 + 0x1c) = r7;  /* "_250117" */
00014b70          }
00014a88      }
00014a88      else
00014a88      {
00014a8e          void* r1_2 = ((uint32_t)*(uint8_t*)0x20d964 << 1) + 0x20d950;
00014a96          *(uint32_t*)0x20d968 = r2 + arg1 - (uint32_t)*(uint16_t*)((char*)r1_2 + 0x1c);
00014a96              /* "_250117" */
00014a98          *(uint16_t*)((char*)r1_2 + 0x1c) = r7;  /* "_250117" */
00014a9e          uint32_t r1_5 = (uint32_t)(*(uint8_t*)0x20d964 + 1);
00014aa0          *(uint8_t*)0x20d964 = (char)r1_5;
00014aa0          
00014aa4          if (r1_5 >= 3)
00014aa8              *(uint8_t*)0x20d964 = 0;
00014a88      }
00014a88      
00014ac4      *(uint16_t*)(((uint32_t)*(uint8_t*)0x20d974 << 1) + 0x20d976) =
00014ac4          sub_12b2a(*(uint32_t*)0x20d968, 3);
00014ac8      uint32_t r0_5 = (uint32_t)*(uint8_t*)0x20d9ec;
00014ac8      
00014acc      if (r0_5 < 0x4b)
00014ad0          *(uint8_t*)0x20d9ec = (uint8_t)r0_5 + 1;
00014ad0      
00014ade      void* r0_9 = ((uint32_t)*(uint8_t*)0x20d9ed << 1) + 0x20d9d0;
00014ae6      *(uint32_t*)0x20da84 += arg1 - (uint32_t)*(uint16_t*)((char*)r0_9 + 0x1e);
00014ae6          /* "50117" */
00014ae8      *(uint16_t*)((char*)r0_9 + 0x1e) = r7;  /* "50117" */
00014aee      uint32_t r0_12 = (uint32_t)(*(uint8_t*)0x20d9ed + 1);
00014af0      *(uint8_t*)0x20d9ed = (char)r0_12;
00014af0      
00014af4      if (r0_12 >= 0x4b)
00014af8          *(uint8_t*)0x20d9ed = 0;
00014af8      
00014afe      int32_t r0_14 = sub_12b2a(*(uint32_t*)0x20da84, (uint32_t)*(uint8_t*)0x20d9ec);
00014b08      uint32_t r0_15 = (uint32_t)*(uint8_t*)0x20d946;
00014b08      
00014b0c      if (r0_15 < 0x7d)
00014b0c      {
00014b14          uint32_t r0_17 = (uint32_t)((uint8_t)r0_15 + 1);
00014b16          *(uint8_t*)0x20d946 = (char)r0_17;
00014b16          
00014b1a          if (r0_17 >= 0x7d)
00014b1a          {
00014b20              int32_t r0_19;
00014b20              int32_t r1_10;
00014b20              r0_19 = j_sub_134d8((uint32_t)*(uint8_t*)0x2084a6);
00014b28              int32_t r0_20;
00014b28              int32_t r1_11;
00014b28              r0_20 = sub_13530(r0_19, r1_10, 0x851eb852, 0x3fd851eb);
00014b30              *(uint8_t*)0x20d94a = sub_13490(r0_20, r1_11);
00014b40              *(uint8_t*)0x20d949 = sub_12b3e(0x2f * *(uint32_t*)0x2084b0, 0x64);
00014b1a          }
00014b0c      }
00014b0c      
00014b46      uint32_t r0_26 = sub_1531c(&var_1c, &var_18);
00014b4e      uint32_t r0_27 = (uint32_t)*(uint8_t*)0x20d950;
00014b4e      
00014b52      if (!r0_27)
00014b52      {
00014b7a          if ((uint32_t)(uint8_t)var_1c)
00014b7a          {
00014b82              if (!(uint32_t)*(uint16_t*)0x20d960)
00014b82              {
00014b84                  *(uint16_t*)0x20d960 = (int16_t)r0_14;
00014b88                  *(uint32_t*)0x20d958 = *(uint32_t*)0x20da88;
00014b8c                  sub_14880(r0_14);
00014b82              }
00014b82              
00014b92              if (r0_26)
00014b92              {
00014b96                  *(uint8_t*)0x20d950 = 2;
00014b9a                  *(uint32_t*)0x20d95c = *(uint32_t*)0x20da88;
00014b9c                  *(uint16_t*)0x20d962 = (int16_t)r0_26;
00014ba0                  *(uint32_t*)0x20d988 = 1;
00014b92              }
00014b7a          }
00014b52      }
00014b52      else if (r0_27 == 1)
00014b56      {
00014be0          if ((uint32_t)(uint8_t)var_1c)
00014be0          {
00014be6              *(uint8_t*)0x20d950 = 2;
00014bea              int32_t r2_7 = r0_26 - r0_14;
00014bec              int32_t r3_2 = r0_26 - *(uint32_t*)0x20d9d4;
00014bec              
00014bf4              if (r2_7 >= 0x2bc)
00014bf4              {
00014bfa                  if (r2_7 >= 0xbb8)
00014c04                      *(uint8_t*)0x20d945 += 1;
00014c04                  
00014c0e                  *(uint8_t*)0x20d945 += 1;
00014c12                  *(uint8_t*)0x20d946 = 0;
00014bf4              }
00014bf4              
00014c1a              *(uint32_t*)0x20d990 = r2_7;
00014c1a              
00014c22              if (r3_2 >= 0x708 && r2_7 >= 0)
00014c22              {
00014c32                  if (!sub_14530(r3_2, *(uint32_t*)0x20da88 - *(uint32_t*)0x20d95c))
00014c42                      sub_14824(0);
00014c32                  else
00014c32                  {
00014c36                      *(uint32_t*)0x20d95c = *(uint32_t*)0x20da88;
00014c38                      *(uint16_t*)0x20d962 = (int16_t)r0_26;
00014c3c                      *(uint8_t*)0x20d956 = 0;
00014c32                  }
00014c22              }
00014be0          }
00014b56      }
00014b56      else if (r0_27 == 2 && (uint32_t)(uint8_t)var_18)
00014baa      {
00014bb0          *(uint8_t*)0x20d950 = 1;
00014bb6          int32_t r6_2 = r0_14 - r0_26;
00014bb6          
00014bc4          if (!sub_14694(r6_2, *(uint32_t*)0x20da88 - *(uint32_t*)0x20d958))
00014bd2              sub_14880(r0_26);
00014bc4          else
00014bc4          {
00014bc6              sub_14880(r0_26);
00014bcc              *(uint32_t*)0x20d958 = *(uint32_t*)0x20da88;
00014bce              *(uint16_t*)0x20d960 = (int16_t)r0_26;
00014bc4          }
00014bc4          
00014bd6          *(uint32_t*)0x20d990 = r6_2;
00014baa      }
00014baa      
00014c48      int32_t r0_46 = *(uint32_t*)0x20da88 + 1;
00014c4a      *(uint32_t*)0x20da88 = r0_46;
00014c52      uint32_t r2_8 = (uint32_t)(*(uint8_t*)0x20d974 + 1);
00014c58      *(uint8_t*)0x20d974 = (char)r2_8;
00014c58      
00014c5a      if (r2_8 >= 9)
00014c5a      {
00014c5c          r2_8 = 0x20d970;
00014c60          *(uint8_t*)0x20d974 = 0;
00014c5a      }
00014c5a      
00014c66      int32_t result = r0_46 - *(uint32_t*)0x20d95c;
00014c66      
00014c6a      if (result < 0x50)
00014c76          return result;
00014c76      
00014c72      return 0xff81b968(0x20d950, 0x15c, r2_8);
00014a7c  }

00014c78  int32_t data_14c78 = 0x20d950
00014c7c  int32_t data_14c7c = 0x20da50
00014c80  int32_t data_14c80 = 0x2084a4
00014c84  int32_t data_14c84 = -0x7ae147ae
00014c88  int32_t data_14c88 = 0x3fd851eb
00014c8c  int32_t data_14c8c = 0xbb8

00014c90    void sub_14c90(int32_t arg1)

00014c90  {
00014c92      if (arg1 < 0xa)
00014c94          arg1 = 0xa;
00014c92      else if (arg1 > 0x28)
00014c9c          arg1 = 0x28;
00014c9c      
00014ca0      *(uint8_t*)0x2084a5 = (char)arg1;
00014c90  }

00014ca4  int32_t data_14ca4 = 0x2084a4

00014ca8    int32_t sub_14ca8(char arg1, int32_t arg2)

00014ca8  {
00014cac      *(uint8_t*)0x2084a9 = arg1;
00014cb0      int32_t r0_1 = arg2 - 0x28;
00014cb0      
00014cb4      if (r0_1 >= 0x3d)
00014cb6          arg2 = 0x41;
00014cb6      
00014cb8      *(uint8_t*)0x2084a4 = (char)arg2;
00014cbe      int32_t entry_r3;
00014cbe      return sub_14098(r0_1, arg2, 0x2084a4, entry_r3);
00014ca8  }

00014cc0  int32_t data_14cc0 = 0x2084a4

00014cc4    uint32_t sub_14cc4(char arg1, int32_t arg2, int32_t arg3)

00014cc4  {
00014cca      if (arg2 < 0x50)
00014ccc          arg2 = 0x50;
00014cca      else if (arg2 > 0xfa)
00014cd4          arg2 = 0xfa;
00014cd4      
00014cd6      uint32_t r0 = (uint32_t)(uint8_t)arg2;
00014cdc      *(uint8_t*)0x2084a6 = (char)r0;
00014cdc      
00014cde      if (r0 < 0xa0)
00014cec          *(uint8_t*)0x2084a6 =
00014cec              (char)((((0xa0 - r0) >> 0x1f) + 0xa0 - r0) >> 1) + (uint8_t)r0;  /* "0117" */
00014cec      
00014cf0      if (arg3 < 0x14)  /* "_3.00.33_250117" */
00014cf2          arg3 = 0x14;  /* "_3.00.33_250117" */
00014cf0      else if (arg3 > 0xdc)
00014cfa          arg3 = 0xdc;
00014cfa      
00014cfc      uint32_t r0_2 = (uint32_t)(uint8_t)arg3;
00014cfe      uint32_t r2 = (uint32_t)arg1;
00014d00      *(uint8_t*)0x2084a7 = (char)r0_2;
00014d06      *(uint8_t*)0x2084a8 = (char)r2;
00014d0a      int32_t r0_4;
00014d0a      int32_t r1_3;
00014d0a      
00014d0a      if (r2 == 1)
00014d0a      {
00014d14          if (r0_2 <= 0x32)  /* "02_V3.0" */
00014d14          {
00014d24              *(uint32_t*)0x2084b0 = 0x64;
00014d26              return r0_2;
00014d14          }
00014d14          
00014d1a          r0_4 = 0x32 * (r0_2 - 0x32);  /* "02_V3.0" */
00014d1c          r1_3 = 0xf;
00014d0a      }
00014d0a      else
00014d0a      {
00014d0e          if (r0_2 <= 0x41)
00014d0e          {
00014d24              *(uint32_t*)0x2084b0 = 0x64;
00014d26              return r0_2;
00014d0e          }
00014d0e          
00014d2c          r0_4 = 0x32 * (r0_2 - 0x41);  /* "02_V3.0" */
00014d2e          r1_3 = 0x14;  /* "_3.00.33_250117" */
00014d0a      }
00014d0a      
00014d34      int32_t r0_7 = sub_12b3e(r0_4, r1_3) + 0x65;
00014d36      *(uint32_t*)0x2084b0 = r0_7;
00014d36      
00014d3a      if (r0_7 <= 0xc8)
00014d3c          return r0_7;
00014d3c      
00014d20      *(uint32_t*)0x2084b0 = 0xc8;
00014d22      return r0_7;
00014cc4  }

00014d3e                                                                                            00 00                                ..

00014d40  int32_t data_14d40 = 0x2084a4

00014d44    void sub_14d44(uint32_t arg1)

00014d44  {
00014d4c      if ((uint32_t)*(uint8_t*)0x2084a9 > 4)
00014d58          *(uint16_t*)0x20d94c =
00014d58              (int16_t)(sub_14148(arg1) + (uint32_t)*(uint16_t*)0x20d94c);
00014d44  }

00014d5c  int32_t data_14d5c = 0x2084a4
00014d60  int32_t data_14d60 = 0x20d944

00014d64    int32_t sub_14d64()

00014d64  {
00014d68      *(uint8_t*)0x20d946 = 0;
00014d6a      return 0;
00014d64  }

00014d6c  int32_t data_14d6c = 0x20d944

00014d70    int32_t sub_14d70(int32_t arg1, int32_t arg2, int32_t arg3)

00014d70  {
00014d7e      *(uint16_t*)(((uint32_t)*(uint8_t*)0x208560 << 1) + 0x208562) = (uint16_t)arg1;
00014d88      *(uint16_t*)(((uint32_t)*(uint8_t*)0x208560 << 1) + 0x208594) = (uint16_t)arg2;
00014d94      *(uint16_t*)(((uint32_t)*(uint8_t*)0x208560 << 1) + 0x2085c6) = (uint16_t)arg3;
00014d9e      int32_t result_1 = 0;
00014daa      *(uint16_t*)(((uint32_t)*(uint8_t*)0x208560 << 1) + 0x2085f8) =
00014daa          (uint16_t)arg1 - *(uint16_t*)0x20862a;
00014dae      *(uint16_t*)0x20862a = (uint16_t)arg1;
00014db4      uint32_t r1_8 = (uint32_t)(*(uint8_t*)0x208560 + 1);
00014db6      *(uint8_t*)0x208560 = (char)r1_8;
00014db6      
00014dba      if (r1_8 >= 0x19)  /* ".33_250117" */
00014dc0          *(uint8_t*)0x208560 = 0;
00014dc0      
00014dd2      if ((uint32_t)*(uint8_t*)0x208558)
00014dd2      {
00014dde          int32_t r0_5;
00014dde          
00014dde          if (arg2 + 0xd1f < 0x1a3f)
00014dde          {
00014de4              int32_t r0_4 = sub_12b3e(*(uint32_t*)0x208634, 9);
00014dea              r0_5 = arg2 - r0_4;
00014dea              
00014dec              if (arg2 - r0_4 < 0)
00014dee                  r0_5 = 0 - r0_5;
00014dde          }
00014dde          
00014df6          if (arg2 + 0xd1f >= 0x1a3f || r0_5 >= 0x4b0)
00014e00              *(uint8_t*)0x20864d = 0;
00014df6          else
00014df6          {
00014df8              uint32_t r0_6 = (uint32_t)*(uint8_t*)0x20864d;
00014df8              
00014dfc              if (r0_6 < 0xc8)
00014e00                  *(uint8_t*)0x20864d = (uint8_t)r0_6 + 1;
00014df6          }
00014df6          
00014e06          int32_t r0_9 = sub_12b3e(*(uint32_t*)0x208630, 9);
00014e0c          int32_t r0_10 = arg1 - r0_9;
00014e0c          
00014e0e          if (arg1 - r0_9 < 0)
00014e10              r0_10 = 0 - r0_10;
00014e10          
00014e18          if (r0_10 >= 0x4b0)
00014e22              *(uint8_t*)0x20864c = 0;
00014e18          else
00014e18          {
00014e1a              uint32_t r0_11 = (uint32_t)*(uint8_t*)0x20864c;
00014e1a              
00014e1e              if (r0_11 < 0xc8)
00014e22                  *(uint8_t*)0x20864c = (uint8_t)r0_11 + 1;
00014e18          }
00014dd2      }
00014dd2      
00014e24      uint32_t r0_13 = (uint32_t)*(uint8_t*)0x20862d;
00014e34      int32_t r2_16 = *(uint32_t*)0x208630 + (int32_t)*(uint16_t*)((r0_13 << 1) + 0x208562);
00014e36      *(uint32_t*)0x208630 = r2_16;
00014e38      uint32_t r0_15 = (uint32_t)*(uint8_t*)0x20862c;
00014e4a      int32_t r0_17 = r2_16 - (int32_t)*(uint16_t*)((r0_15 << 1) + 0x208562);
00014e4c      *(uint32_t*)0x208630 = r0_17;
00014e58      int32_t r2_18 = *(uint32_t*)0x208634 + (int32_t)*(uint16_t*)((r0_13 << 1) + 0x208594);
00014e5a      *(uint32_t*)0x208634 = r2_18;
00014e60      int32_t r0_20 = r2_18 - (int32_t)*(uint16_t*)((r0_15 << 1) + 0x208594);
00014e62      *(uint32_t*)0x208634 = r0_20;
00014e6c      int32_t r1_13 = *(uint32_t*)0x208638 + (int32_t)*(uint16_t*)((r0_13 << 1) + 0x2085c6);
00014e6e      *(uint32_t*)0x208638 = r1_13;
00014e78      *(uint32_t*)0x208638 = r1_13 - (int32_t)*(uint16_t*)((r0_15 << 1) + 0x2085c6);
00014e7e      int32_t r0_25 = sub_12b3e(r0_17, 9);
00014e88      int32_t r0_27 = sub_12b3e(r0_20, 9);
00014e92      int32_t r1_14 = (int32_t)*(uint16_t*)((r0_15 << 1) + 0x208562);
00014e94      int32_t var_64 = r1_14;
00014e96      int32_t r12_1 = r1_14;
00014e9a      int32_t r1_15 = (int32_t)*(uint16_t*)((r0_15 << 1) + 0x208594);
00014e9c      uint32_t r0_29 = r0_15;
00014e9e      int32_t var_6c_1 = r1_15;
00014ea0      int32_t var_5c_1 = r1_15;
00014ea0      
00014eaa      while (true)
00014eaa      {
00014eaa          int32_t r1_16 = (int32_t)*(uint16_t*)((r0_29 << 1) + 0x208562);
00014eaa          
00014eb0          if (r1_16 < var_64)
00014eb2              var_64 = r1_16;
00014eb2          
00014eb6          if (r1_16 > r12_1)
00014eb8              r12_1 = r1_16;
00014eb8          
00014ebc          int32_t r1_17 = (int32_t)*(uint16_t*)((r0_29 << 1) + 0x208594);
00014ebc          
00014ec2          if (r1_17 < var_5c_1)
00014ec4              var_5c_1 = r1_17;
00014ec4          
00014eca          if (r1_17 > var_6c_1)
00014ecc              var_6c_1 = r1_17;
00014ecc          
00014ed2          if (r0_13 == r0_29)
00014ed2              break;
00014ed2          
00014ed6          if (r0_29 < 0x18)  /* "0.33_250117" */
00014ee6              r0_29 += 1;
00014ed6          else
00014ed8              r0_29 = 0;
00014eaa      }
00014eaa      
00014ef0      int32_t r0_32 = (int32_t)((uint16_t)r12_1 - (uint16_t)var_64);
00014f02      uint32_t r0_38 = (uint32_t)((uint8_t)r0_15 + 1);
00014f04      *(uint8_t*)0x20862c = (char)r0_38;
00014f04      
00014f08      if (r0_38 >= 0x19)  /* ".33_250117" */
00014f0c          *(uint8_t*)0x20862c = 0;
00014f0c      
00014f12      uint32_t r0_41 = (uint32_t)((uint8_t)r0_13 + 1);
00014f14      *(uint8_t*)0x20862d = (char)r0_41;
00014f14      
00014f18      if (r0_41 >= 0x19)  /* ".33_250117" */
00014f1c          *(uint8_t*)0x20862d = 0;
00014f1c      
00014f1e      uint32_t r0_42 = (uint32_t)*(uint8_t*)0x20863d;
00014f2e      int32_t r2_26 = *(uint32_t*)0x208640 + (int32_t)*(uint16_t*)((r0_42 << 1) + 0x208562);
00014f30      *(uint32_t*)0x208640 = r2_26;
00014f32      uint32_t r0_44 = (uint32_t)*(uint8_t*)0x20863c;
00014f44      int32_t r0_46 = r2_26 - (int32_t)*(uint16_t*)((r0_44 << 1) + 0x208562);
00014f46      *(uint32_t*)0x208640 = r0_46;
00014f52      int32_t r2_28 = *(uint32_t*)0x208644 + (int32_t)*(uint16_t*)((r0_42 << 1) + 0x208594);
00014f54      *(uint32_t*)0x208644 = r2_28;
00014f5a      int32_t r0_49 = r2_28 - (int32_t)*(uint16_t*)((r0_44 << 1) + 0x208594);
00014f5c      *(uint32_t*)0x208644 = r0_49;
00014f66      int32_t r1_23 = *(uint32_t*)0x208648 + (int32_t)*(uint16_t*)((r0_42 << 1) + 0x2085c6);
00014f68      *(uint32_t*)0x208648 = r1_23;
00014f70      int32_t r0_52 = r1_23 - (int32_t)*(uint16_t*)((r0_44 << 1) + 0x2085c6);
00014f72      *(uint32_t*)0x208648 = r0_52;
00014f7a      int32_t r0_54 = sub_12b3e(r0_46, 9);
00014f84      int32_t r0_56 = sub_12b3e(r0_49, 9);
00014f8e      int32_t r0_58 = sub_12b3e(r0_52, 9);
00014f98      int32_t r1_24 = (int32_t)*(uint16_t*)((r0_44 << 1) + 0x208562);
00014f9a      int32_t var_64_2 = r1_24;
00014f9c      int32_t r12_3 = r1_24;
00014fa0      int32_t r1_25 = (int32_t)*(uint16_t*)((r0_44 << 1) + 0x208594);
00014fa2      uint32_t r0_60 = r0_44;
00014fa4      int32_t var_6c_3 = r1_25;
00014fa6      int32_t var_5c_2 = r1_25;
00014fa6      
00014fb0      while (true)
00014fb0      {
00014fb0          int32_t r1_26 = (int32_t)*(uint16_t*)((r0_60 << 1) + 0x208562);
00014fb0          
00014fb6          if (r1_26 < var_64_2)
00014fb8              var_64_2 = r1_26;
00014fb8          
00014fbc          if (r1_26 > r12_3)
00014fbe              r12_3 = r1_26;
00014fbe          
00014fc2          int32_t r1_27 = (int32_t)*(uint16_t*)((r0_60 << 1) + 0x208594);
00014fc2          
00014fc8          if (r1_27 < var_5c_2)
00014fca              var_5c_2 = r1_27;
00014fca          
00014fd0          if (r1_27 > var_6c_3)
00014fd2              var_6c_3 = r1_27;
00014fd2          
00014fd8          if (r0_42 == r0_60)
00014fd8              break;
00014fd8          
00014fdc          if (r0_60 < 0x18)  /* "0.33_250117" */
00014fe2              r0_60 += 1;
00014fdc          else
00014fde              r0_60 = 0;
00014fb0      }
00014fb0      
00014fec      int32_t r2_34 = (int32_t)((uint16_t)r12_3 - (uint16_t)var_64_2);
00014ffc      uint32_t r0_68 = (uint32_t)((uint8_t)r0_44 + 1);
00014ffe      *(uint8_t*)0x20863c = (char)r0_68;
00014ffe      
00015002      if (r0_68 >= 0x19)  /* ".33_250117" */
00015006          *(uint8_t*)0x20863c = 0;
00015006      
0001500c      uint32_t r0_71 = (uint32_t)((uint8_t)r0_42 + 1);
0001500e      *(uint8_t*)0x20863d = (char)r0_71;
0001500e      
00015012      if (r0_71 >= 0x19)  /* ".33_250117" */
00015016          *(uint8_t*)0x20863d = 0;
00015016      
00015018      int32_t r7 = 0;
00015018      
00015030      for (int32_t i = 0; i < 0x19; i += 1)  /* ".33_250117" */
00015030      {
00015024          int32_t r1_32 = (int32_t)*(uint16_t*)((i << 1) + 0x2085f8);
00015024          
00015028          if (r1_32 > r7)
0001502a              r7 = r1_32;
00015030      }
00015030      
00015032      uint32_t r0_72 = (uint32_t)*(uint8_t*)0x20864e;
00015032      
00015036      if (!r0_72)
00015036      {
0001504e          if (r2_34 < 0x2710 && arg2 < 0x9c4 && arg2 > 0xfffff63c)
0001504e          {
00015054              int32_t r1_35 = arg1 - r0_54;
00015054              
000150f2              if ((r1_35 > 0x1d4c && arg1 > 0xfffff63c && r0_54 < 0xffffea20 && r7 > 0x9c4)
000150f2                  || (r1_35 > 0x1d4c && arg1 > 0x15e0 && r0_54 > 0xfffff63c && r7 > 0x5dc)
000150f2                  || (arg3 - 0x15e1 < 0xa1f && r0_58 < 0xffffea20 && r0_58 > 0xffffe000
000150f2                  && arg3 - r0_58 > 0x2710) || (r0_56 > 0x15e0 && r0_56 - arg2 > 0xfa0
000150f2                  && r0_54 < 0xfffffa24 && arg1 > 0xfffffc18 && r1_35 > 0x1068
000150f2                  && r7 > 0x3e8 && r7 < 0xdac))
000150f2              {
00015130                  result_1 = 1;
00015134                  *(uint8_t*)0x20864e = 0x19;  /* ".33_250117" */
000150f2              }
000150f2              else if (r0_56 < 0xffffea20 && arg2 - r0_56 > 0xfa0 && r0_54 < 0xfffffa24
000150f2                  && arg1 > 0xfffffc18 && r1_35 > 0x1068 && r7 > 0x3e8 && r7 < 0xdac)
0001512e              {
00015130                  result_1 = 1;
00015134                  *(uint8_t*)0x20864e = 0x19;  /* ".33_250117" */
0001512e              }
0001504e          }
0001504e          else if (r0_25 > 0xfffff63c && r0_27 < 0xbb8 && r0_27 > 0xfffff448
0001504e              && r0_32 > 0x7d0 && r2_34 > 0xbb8)  /* "17 10:58:10 2022" */
0001515a          {
00015162              int32_t r0_82;
00015162              int32_t r1_39;
00015162              r0_82 = sub_1351a(sub_12b3e(r2_34, r0_32));
0001516a              sub_19870(r0_82, r1_39, 0, 0x3ff80000);
0001516a              
000151a0              if (r2_34 < 0xbb8)
000151a0              {
000151aa                  int32_t r0_85;
000151aa                  int32_t r1_41;
000151aa                  r0_85 = sub_1351a(sub_12b3e(
000151aa                      (int32_t)((uint16_t)var_6c_3 - (uint16_t)var_5c_2), 
000151aa                      (int32_t)((uint16_t)var_6c_1 - (uint16_t)var_5c_1)));
000151b2                  sub_19870(r0_85, r1_41, 0, 0x3ff40000);
000151b2                  
000151c2                  if (r2_34 < 0xbb8 && r0_25 - r0_54 > sub_2260)
000151c2                  {
000151c6                      *(uint8_t*)0x20864e = 0x19;  /* ".33_250117" */
000151c8                      result_1 = 1;
000151c2                  }
000151a0              }
0001515a          }
0001515a          
000151e6          if ((uint32_t)*(uint8_t*)0x208558 && !result_1 && r7 > 0x5dc
000151e6              && (uint32_t)*(uint8_t*)0x20864c >= 3 && (uint32_t)*(uint8_t*)0x20864d > 3)
000151e6          {
000151ea              int32_t r0_91 = *(uint32_t*)0x208630;
000151f8              int32_t r0_93;
000151f8              
000151f8              if (r0_91 - *(uint32_t*)0x208640 <= 0x5dc0 || r0_91 <= 0xffffd120)
000151f8              {
000151fa                  int32_t r3_13 = *(uint32_t*)0x208644;
000151fc                  int32_t r0_92 = *(uint32_t*)0x208634;
000151fe                  r0_93 = r0_92 - r3_13;
000151fe                  
00015200                  if (r0_92 - r3_13 < 0)
00015202                      r0_93 = 0 - r0_93;
000151f8              }
000151f8              
00015206              if ((r0_91 - *(uint32_t*)0x208640 > 0x5dc0 && r0_91 > 0xffffd120)
00015206                  || r0_93 > 0x5dc0)
00015206              {
0001520a                  *(uint8_t*)0x20864e = 0x19;  /* ".33_250117" */
0001520c                  int32_t r0_94 = *(uint32_t*)0x208638;
0001520e                  result_1 = 1;
0001520e                  
00015212                  if (r0_94 < 0)
00015214                      r0_94 = 0 - r0_94;
00015214                  
00015218                  if (r0_94 < 0x5dc)
00015218                  {
0001521a                      int32_t r0_95 = *(uint32_t*)0x208648;
0001521a                      
0001521e                      if (r0_95 < 0)
00015220                          r0_95 = 0 - r0_95;
00015220                      
00015224                      if (r0_95 < 0x5dc)
00015224                      {
00015226                          result_1 = 0;
0001522a                          *(uint8_t*)0x20864e = 0;
00015224                      }
00015218                  }
00015206              }
000151e6          }
00015036      }
00015036      else
0001522a          *(uint8_t*)0x20864e = (uint8_t)r0_72 - 1;
0001522a      
0001522e      int32_t result = 0x208559;
00015230      uint32_t r1_43 = (uint32_t)*(uint8_t*)0x208559;
00015230      
00015234      if (r1_43 == 1)
00015234      {
00015248          if (arg1 > 0xfffff510 && r0_25 > 0xfffff510)
0001524c              *(uint8_t*)0x208559 = 0;
00015234      }
00015234      else if (!r1_43)
00015238      {
0001525c          char r1_45;
0001525c          
0001525c          if (arg1 < 0xffffea20 || r0_25 < 0xffffea20)
00015260              r1_45 = *(uint8_t*)0x20855c + 1;
0001525c          else
00015264              r1_45 = 0;
00015264          
00015266          *(uint8_t*)0x20855c = r1_45;
00015266          
00015272          if ((uint32_t)*(uint8_t*)0x20864e < 0xc && (uint32_t)*(uint8_t*)0x20855c >= 0xc)
00015272          {
00015276              *(uint8_t*)0x208559 = 1;
00015276              
0001527a              if (!result_1)
0001527c                  result_1 = 3;
00015272          }
00015238      }
00015238      
0001527e      uint32_t r1_48 = (uint32_t)*(uint8_t*)0x20855a;
0001527e      
00015282      if (r1_48 == 2)
00015282      {
00015298          if (arg2 + 0xaef < 0x15df)
0001529c              *(uint8_t*)0x20855a = 0;
0001529c          
00015298          goto label_152d0;
00015282      }
00015282      
00015286      if (!r1_48)
00015286      {
000152ac          char r1_54;
000152ac          
000152ac          if (arg2 + 0x15e0 < 0x2bc1)
000152b4              r1_54 = 0;
000152ac          else
000152b0              r1_54 = *(uint8_t*)0x20855d + 1;
000152b0          
000152b6          *(uint8_t*)0x20855d = r1_54;
000152b6          
000152c2          if ((uint32_t)*(uint8_t*)0x20864e >= 0xc || (uint32_t)*(uint8_t*)0x20855d < 0xc)
000152bc              goto label_152d0;
000152bc          
000152c6          *(uint8_t*)0x20855a = 2;
000152c6          
000152ca          if (!result_1)
000152cc              result_1 = 3;
000152cc          
000152d4          result = result_1;
00015286      }
00015286      else
00015286      {
000152d0      label_152d0:
000152d0          
000152d2          if (result_1)
000152d4              result = result_1;
00015286      }
00015286      
000152dc      return result;
00014d70  }

00014edc                                                                                      ff e7                                    ..
00015138                                                                          ff e7                                            ..

00015170  int32_t data_15170 = 0x208560
00015174  int32_t data_15174 = 0xd1f
00015178  int32_t data_15178 = 0x1a3f
0001517c  int32_t data_1517c = 0x2710
00015180  int32_t data_15180 = -0x9c4
00015184  int32_t data_15184 = 0x1d4c
00015188  int32_t data_15188 = 0x5dc
0001518c  int32_t data_1518c = -0x15e1
00015190  void* data_15190 = sub_a1e
00015194  int32_t data_15194 = 0x1068
00015198  int32_t data_15198 = 0xbb8
0001519c  int32_t data_1519c = 0x3ff80000

000152de                                                                                            00 00                                ..

000152e0  int32_t data_152e0 = 0x3ff40000
000152e4  void* data_152e4 = sub_2260
000152e8  int32_t data_152e8 = 0x208558
000152ec  int32_t data_152ec = 0x5dc
000152f0  int32_t data_152f0 = -0x2ee0
000152f4  int32_t data_152f4 = -0xaf0
000152f8  int32_t data_152f8 = -0x15e0
000152fc  int32_t data_152fc = 0x2bc1

00015300    int32_t sub_15300(int16_t arg1)

00015300  {
0001530a      *(uint16_t*)0x20d94c += arg1 * (uint16_t)*(uint8_t*)0x20d949;
00015312      int16_t result = *(uint16_t*)0x20d94e + arg1 * (uint16_t)*(uint8_t*)0x20d94a;
00015314      *(uint16_t*)0x20d94e = result;
00015316      return result;
00015300  }

00015318  int32_t data_15318 = 0x20d944

0001531a    int32_t sub_1531a(int32_t arg1 @ r4)

0001531a  {
0001531a      int32_t entry_r1;
0001531a      /* tailcall */
0001531a      return sub_1531c(arg1, entry_r1);
0001531a  }


0001531c    uint32_t sub_1531c(char* arg1, char* arg2)

0001531c  {
00015324      uint32_t r0 = (uint32_t)*(uint8_t*)0x20d974;
00015326      uint32_t result = 0;
0001532e      uint32_t i_1 = sub_12b2a(r0 + 1, 9);
00015338      int32_t r1 = sub_12b2a(r0 + 4, 9);
00015342      *(uint8_t*)arg1 = 0;
00015346      uint32_t result_2 = 0;
00015348      *(uint8_t*)arg2 = 0;
00015352      uint32_t i_2 = i_1;
00015354      uint32_t i = i_1;
00015356      uint32_t i_3 = i_1;
0001535a      uint32_t result_1 = (uint32_t)*(uint16_t*)((i_1 << 1) + 0x20d976);
0001535a      
00015382      while ((uint32_t)*(uint8_t*)0x20d974 != i)
00015382      {
00015364          uint32_t result_3 = (uint32_t)*(uint16_t*)((i << 1) + 0x20d976);
00015364          
00015368          if (result_3 >= result_2)
00015368          {
0001536a              result_2 = result_3;
0001536c              i_2 = i;
00015368          }
00015368          
00015370          if (result_3 <= result_1)
00015370          {
00015372              result_1 = result_3;
00015374              i_3 = i;
00015370          }
00015370          
00015378          i = (uint32_t)((uint8_t)i + 1);
00015378          
0001537c          if (i >= 9)
0001537e              i = 0;
00015382      }
00015382      
00015388      if (i_2 == r1)
00015388      {
0001538c          result = result_2;
0001538e          *(uint8_t*)arg1 = 1;
00015388      }
00015388      else if (i_3 == r1)
00015394      {
00015398          result = result_1;
0001539a          *(uint8_t*)arg2 = 1;
00015394      }
00015394      
0001539e      return result;
0001531c  }

000153a0  int32_t data_153a0 = 0x20d970

000153a4    int32_t sub_153a4(int32_t arg1)

000153a4  {
000153aa      *(uint8_t*)0x20d947 = (char)arg1;
000153ac      char result;
000153ac      
000153ac      result = arg1 == 2 ? 1 : 0;
000153ac      
000153b0      sub_1541c(result);
000153b4      return result;
000153a4  }

000153ba                                                                                00 00                                        ..

000153bc  int32_t data_153bc = 0x20d944

000153c0    int32_t sub_153c0(int32_t arg1)

000153c0  {
000153ce      void var_1c;
000153ce      0xff81b91a(&var_1c, 6, 0xff);
000153d6      int16_t var_28 = 0x33;  /* "2_V3.0" */
000153da      char var_26 = 6;
000153de      void* var_20 = &var_1c;
000153de      
000153e8      if (!sub_13f68(0x801400))
0001540e          return 1;
0001540e      
000153f6      uint16_t var_14;
000153f6      
000153f6      if (!sub_14380(0x801400, &var_28, &var_14))
00015412          return 2;
00015412      
00015404      0xff81b898(arg1, (uint32_t)var_14 + 0x801403, 6);
00015408      return 0;
000153c0  }

00015416                                                                    00 00                                                ..

00015418  int32_t data_15418 = 0x801400

0001541c    void sub_1541c(char arg1)

0001541c  {
0001541e      *(uint8_t*)0x208558 = arg1;
0001541c  }

00015422        00 00                                                                                        ..

00015424  int32_t data_15424 = 0x208558

00015428    int32_t sub_15428()

00015428  {
00015428      int32_t r3;
00015428      int32_t var_8 = r3;
00015428      int32_t r2;
00015428      int32_t var_c = r2;
00015428      int32_t r1;
00015428      int32_t var_10 = r1;
00015444      int32_t lr;
00015444      return 0xff7e1a56(0x23000000, "sdk lib version: %d.%d.%d.%d ,commit ID:%x ", 1, 2, 0, 
00015444          7, 0xc6e7bc3e, lr);
00015428  }

00015446                    00 00                                                                                ..

00015448  int32_t data_15448 = -0x391843c2

0001544c  data_1544c:
0001544c                                      73 64 6b 20 6c 69 62 20 76 65 72 73 69 6f 6e 3a 20 25 64 2e              sdk lib version: %d.
00015460  25 64 2e 25 64 2e 25 64 20 2c 63 6f 6d 6d 69 74 20 49 44 3a 25 78 20 00                          %d.%d.%d ,commit ID:%x .

00015478    void sub_15478(uint32_t arg1)

00015478  {
00015482      char r2_1 = *(uint8_t*)0x20daae + 1;
00015486      uint32_t r4 = (uint32_t)*(uint8_t*)0x20daad;
00015486      
0001548c      if (arg1 > 0x1000)
0001548c      {
0001548e          *(uint16_t*)0x20dab0 = 0;
00015490          *(uint16_t*)0x20dab4 = 0;
00015490          
00015494          if (r4 != 1)
00015494          {
0001549a              arg1 = (uint32_t)(*(uint16_t*)0x20dab2 + 1);
0001549c              *(uint16_t*)0x20dab2 = (int16_t)arg1;
0001549c              
000154a0              if (arg1 >= 0x64)
000154a0              {
000154c4                  *(uint8_t*)0x20daad = (char)1;
000154c6                  *(uint8_t*)0x20daae = r2_1;
000154a0              }
00015494          }
0001548c      }
0001548c      else if (arg1 >= 0xfffff000)
000154ac      {
000154ca          *(uint16_t*)0x20dab4 = 0;
000154cc          *(uint16_t*)0x20dab2 = 0;
000154cc          
000154d0          if (r4)
000154d0          {
000154d6              arg1 = (uint32_t)(*(uint16_t*)0x20dab0 + 1);
000154d8              *(uint16_t*)0x20dab0 = (int16_t)arg1;
000154d8              
000154dc              if (arg1 >= 0x64)
000154dc              {
000154de                  *(uint8_t*)0x20daad = 0;
000154c6                  *(uint8_t*)0x20daae = r2_1;
000154dc              }
000154d0          }
000154ac      }
000154ac      else
000154ac      {
000154ae          *(uint16_t*)0x20dab0 = 0;
000154b0          *(uint16_t*)0x20dab2 = 0;
000154b0          
000154b4          if (r4 != 2)
000154b4          {
000154ba              arg1 = (uint32_t)(*(uint16_t*)0x20dab4 + 1);
000154bc              *(uint16_t*)0x20dab4 = (int16_t)arg1;
000154bc              
000154c0              if (arg1 >= 0x64)
000154c0              {
000154c4                  *(uint8_t*)0x20daad = (char)2;
000154c6                  *(uint8_t*)0x20daae = r2_1;
000154c0              }
000154b4          }
000154ac      }
00015478  }

000154e2        00 00                                                                                        ..

000154e4  int32_t data_154e4 = 0x20daac

000154e6    int32_t j_sub_154e8()

000154e6  {
000154e6      /* tailcall */
000154e6      return sub_154e8();
000154e6  }


000154e8    int32_t sub_154e8()

000154e8  {
000154ee      if (!(uint32_t)*(uint8_t*)0x20b850)
000154f6          return 1;
000154f6      
000154f2      return 0;
000154e8  }

000154f8  int32_t data_154f8 = 0x20b850

000154fc    int32_t sub_154fc(int32_t arg1, int32_t arg2)

000154fc  {
00015502      int32_t result_1;
00015502      int32_t r1;
00015502      result_1 = sub_13be0(arg1, arg2);
00015506      int32_t result = result_1;
00015506      
0001550a      if (result_1)
0001550c          result_1 = 1;
0001550c      
0001551a      if ((0x7ff00000 - ((r1 | result_1) << 1 >> 1)) >> 0x1f)  /* "0117" */
0001551a      {
0001551e          int32_t r1_6;
0001551e          
0001551e          r1_6 = !arg1 ? 0 : 1;
0001551e          
00015530          if (!((0x7ff00000 - ((arg2 | r1_6) << 1 >> 1)) >> 0x1f))  /* "0117" */
00015534              sub_13a1c(1);
0001551a      }
0001551a      
0001553c      return result;
000154fc  }

0001553e                                                                                            00 00                                ..

00015540  int32_t data_15540 = 0x7ff00000

00015544    uint32_t sub_15544()

00015544  {
00015548      uint32_t result = (uint32_t)*(uint8_t*)0x20daae;
0001554a      *(uint8_t*)0x20daae = 0;
0001554c      return result;
00015544  }

0001554e                                            00 00                                                                ..

00015550  int32_t data_15550 = 0x20daac

00015554    void* sub_15554(int32_t* arg1)

00015554  {
0001555a      char* r2 = *(uint32_t*)0x20850c;
00015566      *(uint8_t*)0x208519 = r2[0xf68];
0001556a      *(uint8_t*)0x20851a = r2[0xf69];
0001556e      *(uint8_t*)0x208520 = *(uint8_t*)r2;
00015570      int32_t r2_1 = *(uint32_t*)(r2 + 8);
00015572      *(uint32_t*)0x20851c = r2_1;
00015576      int32_t r3 = *(uint32_t*)0x208520;
00015578      *(uint32_t*)arg1 = *(uint32_t*)0x208518;
00015578      arg1[1] = r2_1;
00015578      arg1[2] = r3;
0001557a      return &arg1[3];
00015554  }

0001557c  int32_t data_1557c = 0x208500

00015580    void* sub_15580(int32_t arg1, int32_t arg2, int16_t arg3)

00015580  {
00015586      uint32_t var_34 = 0;
0001558a      uint32_t r1 = (uint32_t)(uint8_t)arg2;
0001558e      uint32_t r0 = (uint32_t)*(uint8_t*)((char*)arg2)[3];
00015592      uint16_t r2 = (int16_t)(r0 << 2);
00015594      uint16_t r6 = (int16_t)(r0 << 1);
0001559a      int16_t r6_1;
0001559a      int16_t r7;
0001559a      
0001559a      if (r1 <= 0x19)  /* ".33_250117" */
0001559a      {
0001559e          r7 = 0x73 - r2 - (uint16_t)r0;
000155bc          r6_1 = 0x49 - r6;
0001559a      }
0001559a      else if (r1 <= 0x1e)  /* "50117" */
000155a6      {
000155aa          r7 = 0x73 - r6 - (uint16_t)r0;
000155bc          r6_1 = 0x4b - r6;
000155a6      }
000155a6      else if (r1 <= 0x23)
000155b2      {
000155b8          r7 = 0x75 - r6 - (uint16_t)r0;
000155bc          r6_1 = 0x4c - r6;
000155b2      }
000155b2      else if (r1 <= 0x28)
000155c2      {
000155c6          r7 = 0x78 - r2;
00015604          r6_1 = 0x50 - r6 - (uint16_t)r0;
000155c2      }
000155c2      else if (r1 <= 0x2d)
000155ce      {
000155d2          r7 = 0x7c - r6;
00015604          r6_1 = 0x51 - r6 - (uint16_t)r0;
000155ce      }
000155ce      else if (r1 <= 0x32)  /* "02_V3.0" */
000155da      {
000155dc          r7 = 0x80;
00015604          r6_1 = 0x52 - r6 - (uint16_t)r0;
000155da      }
000155da      else if (r1 <= 0x37)  /* ".0" */
000155e6      {
000155e8          r7 = 0x86;
000155ea          r6_1 = 0x54 - r2;
000155e6      }
000155e6      else if (r1 > 0x3c)
000155f0      {
000155fe          r7 = 0x94 - r6 - (uint16_t)r0;
00015604          r6_1 = 0x56 - r6 - (uint16_t)r0;
000155f0      }
000155f0      else
000155f0      {
000155f4          r7 = r6 + 0x89;
000155f6          r6_1 = 0x54 - r6;
000155f0      }
000155f0      
00015610      int32_t r4 = ((arg1 - 0x46) * 3) >> 1;
00015616      int32_t r4_1;
00015616      int32_t r5_1;
00015616      
00015616      if (arg1 >= 0x41)
00015616      {
0001562c          int32_t r1_9;
0001562c          
0001562c          if (arg1 <= 0x55)
0001562c          {
0001563c              r4_1 = r4 + 0x6e;
00015642              r1_9 = sub_12b2a(arg1, 0xa) + 0x44;
0001562c          }
0001562c          else
0001562c          {
00015630              r4_1 = r4 + 0x5f;
00015636              r1_9 = sub_12b2a(arg1, 0xa) + 0x49;
0001562c          }
0001562c          
00015644          r5_1 = r1_9;
00015616      }
00015616      else if (arg1 >= 0x3a)
0001561a      {
00015624          r5_1 = arg1 + 5;
00015626          r4_1 = r4 + 0x78;
0001561a      }
0001561a      else
0001561a      {
0001561e          r5_1 = arg1 + 0xf;
00015620          r4_1 = r4 + 0x82;
0001561a      }
0001561a      
00015648      if (r4_1 > 0x8c)
00015654          r4_1 = sub_12b2a(arg1, 0xa) + 0x87;
00015654      
00015658      uint32_t r0_7 = (uint32_t)*(uint8_t*)((char*)arg2)[1];
00015658      
0001565e      if (r0_7)
0001565e      {
00015662          uint32_t r0_8 = (uint32_t)*(uint8_t*)((char*)arg2)[2];
00015662          
00015666          if (r0_8)
00015676              var_34 = (uint32_t)sub_12b2a(0x13880 * r0_8, r0_7 * r0_7);
0001565e      }
0001565e      
0001567c      if (r1)
0001567c      {
00015682          if (!r0)
00015682          {
0001568e              if (r1 >= 0x23)
0001568e              {
000156c8                  r4_1 = (int32_t)(sub_12b3e(0x2e * (var_34 - 0xb8), 0x50)
000156c8                      + (int16_t)((r4_1 - 0x73) >> 1) + r7);  /* "sdk#####" */
000156d0                  r5_1 = (int32_t)((int16_t)((r5_1 - 0x4a) >> 1) + r6_1);
000156d0                  
000156dc                  if (r0_7 < 0xa5 && var_34 > 0xc8)
000156e0                      r4_1 = (int32_t)((uint16_t)r4_1 + 0xa);
0001568e              }
0001568e              else
0001568e              {
00015696                  r4_1 = (int32_t)((int16_t)((r4_1 - 0x73) >> 1) + r7);
0001569e                  r5_1 = (int32_t)((int16_t)((r5_1 - 0x4a) >> 1) + r6_1);
0001569e                  
000156ae                  if (var_34 && var_34 < 0xb8 && arg1 > 0x46)  /* "sdk#####" */
000156e0                      r4_1 = (int32_t)((uint16_t)r4_1 - 5);
0001568e              }
00015682          }
00015682          else if (r0 == 1)
00015686          {
000156e8              if (r1 >= 0x23)
000156e8              {
00015718                  r4_1 = (int32_t)((int16_t)((r4_1 - 0x6e) >> 1) + r7
00015718                      + (int16_t)((var_34 - 0xb8) >> 2));  /* "sdk#####" */
0001571e                  r5_1 = (int32_t)((int16_t)((r5_1 - 0x48) >> 1) + r6_1);
000156e8              }
000156e8              else
000156e8              {
000156f0                  r4_1 = (int32_t)((int16_t)((r4_1 - 0x6e) >> 2) + r7);
000156f8                  r5_1 = (int32_t)((int16_t)((r5_1 - 0x48) >> 2) + r6_1);
000156f8                  
00015702                  if (var_34 && var_34 < 0xb0)
000156e0                      r4_1 = (int32_t)((uint16_t)r4_1 - 5);
000156e8              }
00015686          }
0001567c      }
0001567c      
00015722      uint32_t r0_43 = (uint32_t)(uint8_t)arg3;
00015722      
00015726      if (r0_43)
00015726      {
0001572a          uint32_t r1_17 = (uint32_t)*(uint8_t*)((char*)arg3)[1];
0001572a          
0001572e          if (r1_17)
0001572e          {
00015734              if (!r0)
00015734              {
00015740                  r4_1 = (int32_t)((uint16_t)r0_43 + (uint16_t)r4_1 - 0x76);
00015750                  r5_1 = (int32_t)((uint16_t)r1_17 + (uint16_t)r5_1 - 0x4b);
00015734              }
00015734              else if (r0 == 1)
00015738              {
0001574a                  r4_1 = (int32_t)((uint16_t)r0_43 + (uint16_t)r4_1 - 0x70);
00015750                  r5_1 = (int32_t)((uint16_t)r1_17 + (uint16_t)r5_1 - 0x46);
00015738              }
0001572e          }
00015726      }
00015726      
0001575a      void* result = *(uint32_t*)0x20850c + 0xf60;
0001575c      *(uint8_t*)((char*)result + 8) = (char)r4_1;
0001575e      *(uint8_t*)((char*)result + 9) = (char)r5_1;
00015762      return result;
00015580  }

00015764  int32_t data_15764 = 0x13880
00015768  int32_t data_15768 = 0x208500

0001576c    int32_t sub_1576c(int32_t* arg1)

0001576c  {
0001576e      uint32_t i = 0;
00015770      int32_t r2 = 0;
00015772      int32_t r3 = 0;
00015772      
00015780      do
00015780      {
0001577a          r2 += arg1[i];
0001577c          i = (uint32_t)((uint8_t)i + 1);
00015780      } while (i < 0x10);  /* "RY02_3.00.33_250117" */
00015780      
00015782      int32_t r5 = r2 >> 4;
00015782      
000157a2      for (uint32_t i_1 = 0; i_1 < 0x10; i_1 = (uint32_t)((uint8_t)i_1 + 1))  /* "
000157a2          RY02_3.00.33_250117" */
000157a2      {
0001578c          int32_t r1_2 = arg1[i_1];
0001578e          int32_t r1_3 = r1_2 - r5;
0001578e          
00015790          if (r1_2 - r5 < 0)
00015792              r1_3 = 0 - r1_3;
00015792          
00015796          if (r1_3 > 0x7d0)  /* "17 10:58:10 2022" */
00015798              r1_3 = 0x7d0;  /* "17 10:58:10 2022" */
00015798          
0001579c          r3 += r1_3;
000157a2      }
000157a2      
000157a6      return r3 >> 4;
0001576c  }


000157a8    uint32_t sub_157a8(int32_t arg1, int32_t arg2, int32_t arg3)

000157a8  {
000157ae      void* r7 = *(uint32_t*)0x2084d0;
000157b8      int32_t r3_1 = *(uint32_t*)((char*)r7 + 0xd34) + 1;
000157bc      *(uint32_t*)((char*)r7 + 0xd34) = r3_1;
000157bc      
000157c0      if (r3_1 == 0x186a0)
000157c4          *(uint32_t*)((char*)r7 + 0xd34) = 0;
000157c4      
000157c6      int32_t r3_2 = arg1 >> 3;
000157ca      int32_t r5_1 = arg3 >> 3;
000157d8      int32_t r2_2 = (int32_t)((uint16_t)r3_2 - *(uint16_t*)((char*)r7 + 0xd84));
000157dc      int32_t r2_3 = *(uint32_t*)((char*)r7 + 0xd80);
000157de      *(uint32_t*)((char*)r7 + 0xd80) = r3_2;
000157e0      *(uint32_t*)((char*)r7 + 0xd84) = r2_3;
000157e2      int32_t r2_4 = *(uint32_t*)((char*)r7 + 0xd88);
000157f6      int32_t r6_3 =
000157f6          r2_2 - ((0xffffff93 * r2_4 + 0x33 * *(uint32_t*)((char*)r7 + 0xd8c)) >> 6);
000157f6          /* "2_V3.0" */
000157f8      *(uint32_t*)((char*)r7 + 0xd90) = r6_3;
000157fa      *(uint32_t*)((char*)r7 + 0xd88) = r6_3;
000157fc      *(uint32_t*)((char*)r7 + 0xd8c) = r2_4;
00015804      int32_t r2_10 = (int32_t)((uint16_t)r6_3 - *(uint16_t*)((char*)r7 + 0xd98));
00015808      int32_t r2_11 = *(uint32_t*)((char*)r7 + 0xd94);
0001580a      *(uint32_t*)((char*)r7 + 0xd94) = r6_3;
0001580c      *(uint32_t*)((char*)r7 + 0xd98) = r2_11;
0001580e      int32_t r2_12 = *(uint32_t*)((char*)r7 + 0xd9c);
00015822      int32_t r3_7 =
00015822          r2_10 - ((0xffffffad * r2_12 + 0x2a * *(uint32_t*)((char*)r7 + 0xda0)) >> 6);
00015824      *(uint32_t*)((char*)r7 + 0xda4) = r3_7;
00015826      *(uint32_t*)((char*)r7 + 0xda0) = r2_12;
00015828      *(uint32_t*)((char*)r7 + 0xd9c) = r3_7;
0001582c      int32_t r1 = arg2 >> 3;
00015830      int32_t r6_5 = (int32_t)((uint16_t)r1 - *(uint16_t*)((char*)r7 + 0xdac));
00015834      *(uint32_t*)((char*)r7 + 0xdac) = *(uint32_t*)((char*)r7 + 0xda8);
00015836      *(uint32_t*)((char*)r7 + 0xda8) = r1;
0001583a      int32_t r1_1 = *(uint32_t*)((char*)r7 + 0xdb0);
00015850      int32_t r6_9 =
00015850          r6_5 - ((0xffffff93 * r1_1 + 0x33 * *(uint32_t*)((char*)r7 + 0xdb4)) >> 6);
00015850          /* "2_V3.0" */
00015852      *(uint32_t*)((char*)r7 + 0xdb8) = r6_9;
00015854      *(uint32_t*)((char*)r7 + 0xdb0) = r6_9;
00015856      *(uint32_t*)((char*)r7 + 0xdb4) = r1_1;
0001585c      int32_t r1_7 = (int32_t)((uint16_t)r6_9 - (int16_t)*(uint32_t*)((char*)r7 + 0xdc0));
00015860      int32_t r1_8 = *(uint32_t*)((char*)r7 + 0xdbc);
00015862      *(uint32_t*)((char*)r7 + 0xdbc) = r6_9;
00015864      *(uint32_t*)((char*)r7 + 0xdc0) = r1_8;
00015866      int32_t r1_9 = *(uint32_t*)((char*)r7 + 0xdc4);
0001587c      int32_t r2_23 =
0001587c          r1_7 - ((0xffffffad * r1_9 + 0x2a * *(uint32_t*)((char*)r7 + 0xdc8)) >> 6);
0001587e      *(uint32_t*)((char*)r7 + 0xdcc) = r2_23;
00015880      *(uint32_t*)((char*)r7 + 0xdc8) = r1_9;
00015882      *(uint32_t*)((char*)r7 + 0xdc4) = r2_23;
0001588a      int32_t r1_15 = (int32_t)((uint16_t)r5_1 - (int16_t)*(uint32_t*)((char*)r7 + 0xdd4));
0001588e      int32_t r1_16 = *(uint32_t*)((char*)r7 + 0xdd0);
00015890      *(uint32_t*)((char*)r7 + 0xdd0) = r5_1;
00015892      *(uint32_t*)((char*)r7 + 0xdd4) = r1_16;
00015894      int32_t r1_17 = *(uint32_t*)((char*)r7 + 0xdd8);
000158a8      int32_t r6_14 =
000158a8          r1_15 - ((0xffffff93 * r1_17 + 0x33 * *(uint32_t*)((char*)r7 + 0xddc)) >> 6);
000158a8          /* "2_V3.0" */
000158aa      *(uint32_t*)((char*)r7 + 0xde0) = r6_14;
000158ac      *(uint32_t*)((char*)r7 + 0xdd8) = r6_14;
000158ae      *(uint32_t*)((char*)r7 + 0xddc) = r1_17;
000158b6      int32_t r1_23 = (int32_t)((uint16_t)r6_14 - (int16_t)*(uint32_t*)((char*)r7 + 0xde8));
000158ba      int32_t r1_24 = *(uint32_t*)((char*)r7 + 0xde4);
000158bc      *(uint32_t*)((char*)r7 + 0xde4) = r6_14;
000158be      *(uint32_t*)((char*)r7 + 0xde8) = r1_24;
000158c0      int32_t r1_25 = *(uint32_t*)((char*)r7 + 0xdec);
000158d4      int32_t r6_18 =
000158d4          r1_23 - ((0xffffffad * r1_25 + 0x2a * *(uint32_t*)((char*)r7 + 0xdf0)) >> 6);
000158d6      *(uint32_t*)((char*)r7 + 0xdf4) = r6_18;
000158da      *(uint32_t*)((char*)r7 + 0xdec) = r6_18;
000158dc      *(uint32_t*)((char*)r7 + 0xdf0) = r1_25;
000158e0      int32_t r0_3 = (int32_t)(int16_t)(r3_7 >> 2);
000158e2      int32_t r1_30 = (int32_t)(int16_t)(r2_23 >> 2);
000158e6      int32_t r2_25 = (int32_t)(int16_t)(r6_18 >> 2);
000158f2      int32_t r0_7;
000158f2      int32_t r1_32;
000158f2      r0_7 = sub_1351a(r0_3 * r0_3 + r1_30 * r1_30 + r2_25 * r2_25);
000158f6      int32_t r0_8;
000158f6      int32_t r1_33;
000158f6      r0_8 = sub_154fc(r0_7, r1_32);
000158fa      int16_t r0_9 = sub_13424(r0_8, r1_33);
00015900      uint32_t i = 4;
00015904      int32_t r3_8 = *(uint32_t*)0x2084d0;
00015904      
00015918      do
00015918      {
00015914          *(uint16_t*)((i << 1) + r3_8 + 0xcee) = *(uint16_t*)((i << 1) + r3_8 + 0xcec);
00015916          i = (i - 1) << 0x10 >> 0x10;  /* "RY02_3.00.33_250117" */
00015918      } while (i);
00015918      
0001591a      int32_t r5_5 = (int32_t)r0_9;
00015920      void* r3_9 = *(uint32_t*)0x2084d0;
00015926      *(uint16_t*)((char*)r3_9 + 0xcee) = (int16_t)r5_5;
00015928      int32_t r2_30 = (int32_t)*(uint16_t*)((char*)r3_9 + 0xcf2);
00015928      
00015942      if (r2_30 > (int32_t)*(uint16_t*)((char*)r3_9 + 0xcf6)
00015942          && r2_30 > (int32_t)*(uint16_t*)((char*)r3_9 + 0xcf4)
00015942          && r2_30 > (int32_t)*(uint16_t*)((char*)r3_9 + 0xcf0) && r2_30 > r5_5)
00015942      {
00015956          for (uint32_t i_1 = 3; i_1; i_1 = (i_1 - 1) << 0x10 >> 0x10)  /* "
00015956                  RY02_3.00.33_250117" */
00015952              *(uint16_t*)((i_1 << 1) + r3_9 + 0xd14) =
00015952                  *(uint16_t*)((i_1 << 1) + r3_9 + 0xd12);
00015952          
00015958          void* r1_39 = *(uint32_t*)0x2084d0;
00015960          *(uint16_t*)((char*)r1_39 + 0xd14) = *(uint16_t*)((char*)r1_39 + 0xcf2);
00015942      }
00015942      
00015962      void* r0_10 = *(uint32_t*)0x2084d0;
00015968      int32_t r2_36 = (int32_t)*(uint16_t*)((char*)r0_10 + 0xd1a);
00015968      
0001596c      if (r2_36)
00015982          *(uint16_t*)((char*)r0_10 + 0xd30) = (int16_t)((r2_36
00015982              + (int32_t)*(uint16_t*)((char*)r0_10 + 0xd18)
00015982              + (int32_t)*(uint16_t*)((char*)r0_10 + 0xd16)
00015982              + (int32_t)*(uint16_t*)((char*)r0_10 + 0xd14)) >> 2);
00015982      
00015986      int32_t r2_40 = (int32_t)*(uint16_t*)((char*)r0_10 + 0xd30);
00015986      
00015994      if (r2_40 < (uint32_t)*(uint8_t*)0x2084e0)
000159be          *(uint8_t*)((char*)r0_10 + 0xd6f) = 0;
00015994      else if (r2_40 < 0xc8)
000159be          *(uint8_t*)((char*)r0_10 + 0xd6f) = 1;
0001599c      else if (r2_40 - 0xc8 < 0x12c)
000159be          *(uint8_t*)((char*)r0_10 + 0xd6f) = 2;
000159ac      else if (r2_40 >= 0x1f4)
000159be          *(uint8_t*)((char*)r0_10 + 0xd6f) = 3;
000159be      
000159c4      return (uint32_t)*(uint8_t*)((char*)r0_10 + 0xd6f);
000157a8  }

000159c6                    00 00                                                                                ..

000159c8  int32_t data_159c8 = 0x2084b4
000159cc  int32_t data_159cc = 0x186a0

000159d0    int32_t sub_159d0()

000159d0  {
000159d4      uint32_t i = 0;
000159d8      void* r2 = *(uint32_t*)0x20850c;
000159d8      
000159ec      do
000159ec      {
000159e2          void* r4_2 = (i << 1) + r2 + 0xfc0;
000159e6          i = (uint32_t)((uint16_t)i + 1);
000159e8          *(uint16_t*)((char*)r4_2 + 0x24) = 0;
000159ec      } while (i < 5);
000159ec      
000159f0      *(uint16_t*)((char*)r2 + 0xfee) = 0;
000159f8      *(uint32_t*)((char*)r2 + 0xff4) = 0;
00015a00      *(uint8_t*)((char*)r2 + 0xff8) = 0;
00015a02      *(uint8_t*)((char*)r2 + 0xff9) = 0;
00015a04      *(uint8_t*)((char*)r2 + 0xffa) = 0;
00015a06      *(uint8_t*)((char*)r2 + 0xffb) = 0;
00015a08      *(uint8_t*)((char*)r2 + 0xffc) = 0;
00015a0a      *(uint8_t*)((char*)r2 + 0xffd) = 0;
00015a0c      *(uint8_t*)((char*)r2 + 0xffe) = 0;
00015a0e      *(uint8_t*)((char*)r2 + 0xfff) = 0;
00015a16      *(uint8_t*)((char*)r2 + 0x1000) = 0;
00015a18      *(uint8_t*)((char*)r2 + 0x1001) = 0;
00015a1a      *(uint8_t*)((char*)r2 + 0x1002) = 0;
00015a1c      *(uint8_t*)((char*)r2 + 0x1003) = 0;
00015a1e      *(uint8_t*)((char*)r2 + 0x1004) = 0;
00015a20      *(uint8_t*)((char*)r2 + 0x1005) = 0;
00015a22      __builtin_memset((char*)r2 + 0x1008, 0, 0x78);
00015a64      *(uint8_t*)((char*)r2 + 0x1087) = 0;
00015a66      *(uint8_t*)((char*)r2 + 0x1088) = 0;
00015a68      *(uint8_t*)((char*)r2 + 0x1089) = 0;
00015a6a      *(uint8_t*)((char*)r2 + 0x1080) = 0;
00015a6c      *(uint8_t*)((char*)r2 + 0x1081) = 0;
00015a6e      *(uint8_t*)((char*)r2 + 0x1082) = 0;
00015a6e      
00015a7e      for (uint32_t i_1 = 0; i_1 < 4; )
00015a7e      {
00015a74          void* r4_4 = (char*)r2 + i_1 + 0x1080;
00015a78          i_1 = (uint32_t)((uint16_t)i_1 + 1);
00015a7a          *(uint8_t*)((char*)r4_4 + 3) = 0;
00015a7e      }
00015a7e      
00015a82      return 1;
000159d0  }

00015a84  int32_t data_15a84 = 0x208500

00015a88    uint32_t sub_15a88(void* arg1, int32_t* arg2)

00015a88  {
00015a8e      int32_t var_40 = 0;
00015a92      int32_t r12 = 0;
00015a94      int32_t r1 = 0;
00015a96      int32_t r2 = 0;
00015a98      uint32_t i = arg2[5];
00015a9a      uint32_t r0 = 0x12;  /* "02_3.00.33_250117" */
00015a9e      uint32_t i_9 = i;
00015a9e      
00015aaa      for (; i > 0xf4240; i u>>= 2)
00015aa4          r0 = (uint32_t)((uint8_t)r0 + 1);
00015aa4      
00015aae      uint32_t i_1 = 0;
00015ab0      int32_t r6 = *(uint32_t*)0x20850c;
00015ab0      
00015ad8      do
00015ad8      {
00015ac2          int32_t r5_2 = *(uint32_t*)((i_1 << 3) + r6 + 0x208) >> r0;
00015ac6          int32_t r4_7 = *(uint32_t*)((i_1 << 3) + r6 + 0x20c) >> r0;
00015ad2          i_1 = (uint32_t)((uint16_t)i_1 + 1);
00015ad4          var_40 += r5_2 * r5_2 + r4_7 * r4_7;
00015ad8      } while (i_1 < 0x6e);
00015ad8      
00015adc      uint32_t r3_3 = (uint32_t)*(uint16_t*)((char*)arg1 + 0xa);
00015adc      
00015ae4      if (r3_3 - 7 <= 0x5f)
00015ae4      {
00015b10          for (uint32_t i_2 = (uint32_t)(uint16_t)(r3_3 - 7); r3_3 + 7 >= i_2; 
00015b10              i_2 = (uint32_t)((uint16_t)i_2 + 1))
00015b10          {
00015afe              int32_t r3_7 = *(uint32_t*)((i_2 << 3) + r6 + 0x208) >> r0;
00015b02              int32_t r4_16 = *(uint32_t*)((i_2 << 3) + r6 + 0x20c) >> r0;
00015b0a              r12 += r3_7 * r3_7 + r4_16 * r4_16;
00015b10          }
00015ae4      }
00015ae4      else if (r3_3 < 7)
00015b18      {
00015b42          for (uint32_t i_3 = 0; r3_3 + 7 >= i_3; i_3 = (uint32_t)((uint16_t)i_3 + 1))
00015b42          {
00015b30              int32_t r3_12 = *(uint32_t*)((i_3 << 3) + r6 + 0x208) >> r0;
00015b34              int32_t r4_24 = *(uint32_t*)((i_3 << 3) + r6 + 0x20c) >> r0;
00015b3c              r12 += r3_12 * r3_12 + r4_24 * r4_24;
00015b42          }
00015b18      }
00015b18      else if (r3_3 > 0x66)
00015b48      {
00015b70          for (uint32_t i_4 = (uint32_t)(uint16_t)(r3_3 - 7); i_4 < 0x6e; 
00015b70              i_4 = (uint32_t)((uint16_t)i_4 + 1))
00015b70          {
00015b5e              int32_t r3_17 = *(uint32_t*)((i_4 << 3) + r6 + 0x208) >> r0;
00015b62              int32_t r4_31 = *(uint32_t*)((i_4 << 3) + r6 + 0x20c) >> r0;
00015b6a              r12 += r3_17 * r3_17 + r4_31 * r4_31;
00015b70          }
00015b48      }
00015b48      
00015b7a      uint32_t r5_11 = (0x2ee * (r3_3 + 0x1b)) >> 9;  /* "3_250117" */
00015b7c      uint32_t i_5 = 0;
00015b80      uint32_t r5_12 = r5_11 << 1;
00015b80      
00015d18      do
00015d18      {
00015b8a          uint32_t r5_14 = (uint32_t)*(uint16_t*)((char*)arg1 + (i_5 << 1));
00015b96          uint32_t r5_17 = (0x2ee * (r5_14 + 0x1b)) >> 9;  /* "3_250117" */
00015b96          
00015bbe          if ((r5_12 - r5_17 + 3 <= 6 || (r5_17 << 1) - r5_11 + 3 <= 6)
00015bbe              && i_9 > arg2[i_5] << 1 && r5_14)
00015bbe          {
00015bc0              r1 = 0;
00015bc0              
00015bc6              if (r5_14 - 7 <= 0x5f)
00015bc6              {
00015bca                  uint32_t r7_6 = (uint32_t)(uint16_t)(r5_14 - 7);
00015bcc                  int32_t j = r5_14 + 7;
00015bce                  int32_t j_6 = j;
00015bce                  
00015bf4                  for (; j >= r7_6; j = j_6)
00015bf4                  {
00015be0                      int32_t r6_11 = *(uint32_t*)((r7_6 << 3) + r6 + 0x208) >> r0;
00015be4                      int32_t r5_32 = *(uint32_t*)((r7_6 << 3) + r6 + 0x20c) >> r0;
00015bea                      r1 += r6_11 * r6_11 + r5_32 * r5_32;
00015bee                      r7_6 = (uint32_t)((uint16_t)r7_6 + 1);
00015bf4                  }
00015bc6              }
00015bc6              else if (r5_14 < 7)
00015bfa              {
00015bfe                  uint32_t r7_7 = 0;
00015c00                  int32_t j_1 = r5_14 + 7;
00015c02                  int32_t j_7 = j_1;
00015c02                  
00015c28                  for (; j_1 >= r7_7; j_1 = j_7)
00015c28                  {
00015c14                      int32_t r6_14 = *(uint32_t*)((r7_7 << 3) + r6 + 0x208) >> r0;
00015c18                      int32_t r5_43 = *(uint32_t*)((r7_7 << 3) + r6 + 0x20c) >> r0;
00015c1e                      r1 += r6_14 * r6_14 + r5_43 * r5_43;
00015c22                      r7_7 = (uint32_t)((uint16_t)r7_7 + 1);
00015c28                  }
00015bfa              }
00015bfa              else if (r5_14 > 0x66)
00015c2e              {
00015c54                  for (uint32_t j_2 = (uint32_t)(uint16_t)(r5_14 - 7); j_2 < 0x6e; 
00015c54                      j_2 = (uint32_t)((uint16_t)j_2 + 1))
00015c54                  {
00015c42                      int32_t r6_17 = *(uint32_t*)((j_2 << 3) + r6 + 0x208) >> r0;
00015c46                      int32_t r5_53 = *(uint32_t*)((j_2 << 3) + r6 + 0x20c) >> r0;
00015c4c                      r1 += r6_17 * r6_17 + r5_53 * r5_53;
00015c54                  }
00015c2e              }
00015bbe          }
00015bbe          
00015c5a          uint32_t r5_57 = r3_3 - r5_14;
00015c5a          
00015c5c          if (r3_3 - r5_14 < 0)
00015c5e              r5_57 = 0 - r5_57;
00015c5e          
00015c60          int32_t r5_58 = r5_57 - 0xa;
00015c60          
00015c62          if (r5_57 - 0xa < 0)
00015c64              r5_58 = 0 - r5_58;
00015c64          
00015c7c          if (r5_58 <= 1 && i_9 > arg2[i_5] << 1 && r5_14)
00015c7c          {
00015c82              if (r5_14 - 3 <= 0x67)
00015c82              {
00015c86                  uint32_t r7_10 = (uint32_t)(uint16_t)(r5_14 - 3);
00015c88                  int32_t j_3 = r5_14 + 3;
00015c8a                  int32_t j_8 = j_3;
00015c8a                  
00015cb0                  for (; j_3 >= r7_10; j_3 = j_8)
00015cb0                  {
00015c9c                      int32_t r6_25 = *(uint32_t*)((r7_10 << 3) + r6 + 0x208) >> r0;
00015ca0                      int32_t r5_68 = *(uint32_t*)((r7_10 << 3) + r6 + 0x20c) >> r0;
00015ca6                      r2 += r6_25 * r6_25 + r5_68 * r5_68;
00015caa                      r7_10 = (uint32_t)((uint16_t)r7_10 + 1);
00015cb0                  }
00015c82              }
00015c82              else if (r5_14 < 3)
00015cb6              {
00015cba                  uint32_t r7_11 = 0;
00015cbc                  int32_t j_4 = r5_14 + 3;
00015cbe                  int32_t j_9 = j_4;
00015cbe                  
00015ce4                  for (; j_4 >= r7_11; j_4 = j_9)
00015ce4                  {
00015cd0                      int32_t r6_28 = *(uint32_t*)((r7_11 << 3) + r6 + 0x208) >> r0;
00015cd4                      int32_t r5_79 = *(uint32_t*)((r7_11 << 3) + r6 + 0x20c) >> r0;
00015cda                      r2 += r6_28 * r6_28 + r5_79 * r5_79;
00015cde                      r7_11 = (uint32_t)((uint16_t)r7_11 + 1);
00015ce4                  }
00015cb6              }
00015cb6              else if (r5_14 > 0x6a)
00015cea              {
00015d10                  for (uint32_t j_5 = (uint32_t)(uint16_t)(r5_14 - 3); j_5 < 0x6e; 
00015d10                      j_5 = (uint32_t)((uint16_t)j_5 + 1))
00015d10                  {
00015cfe                      int32_t r6_31 = *(uint32_t*)((j_5 << 3) + r6 + 0x208) >> r0;
00015d02                      int32_t r5_89 = *(uint32_t*)((j_5 << 3) + r6 + 0x20c) >> r0;
00015d08                      r2 += r6_31 * r6_31 + r5_89 * r5_89;
00015d10                  }
00015cea              }
00015c7c          }
00015c7c          
00015d14          i_5 = (uint32_t)((uint16_t)i_5 + 1);
00015d18      } while (i_5 < 5);
00015d18      
00015d20      uint32_t r6_33 = (uint32_t)*(uint16_t*)((char*)arg1 + 8);
00015d2a      uint32_t r3_25 = (0x2ee * (r6_33 + 0x1b)) >> 9;  /* "3_250117" */
00015d2a      
00015d42      if ((r5_12 - r3_25 + 4 <= 8 || (r3_25 << 1) - r5_11 + 4 <= 8) && !r1)
00015d42      {
00015d48          if (r6_33 - 7 <= 0x5f)
00015d48          {
00015d72              for (uint32_t i_6 = (uint32_t)(uint16_t)(r6_33 - 7); r6_33 + 7 >= i_6; 
00015d72                  i_6 = (uint32_t)((uint16_t)i_6 + 1))
00015d72              {
00015d60                  int32_t r4_40 = *(uint32_t*)((i_6 << 3) + r6 + 0x208) >> r0;
00015d64                  int32_t r5_97 = *(uint32_t*)((i_6 << 3) + r6 + 0x20c) >> r0;
00015d6a                  r1 += r4_40 * r4_40 + r5_97 * r5_97;
00015d72              }
00015d48          }
00015d48          else if (r6_33 < 7)
00015d78          {
00015da2              for (uint32_t i_7 = 0; r6_33 + 7 >= i_7; i_7 = (uint32_t)((uint16_t)i_7 + 1))
00015da2              {
00015d90                  int32_t r4_45 = *(uint32_t*)((i_7 << 3) + r6 + 0x208) >> r0;
00015d94                  int32_t r5_104 = *(uint32_t*)((i_7 << 3) + r6 + 0x20c) >> r0;
00015d9a                  r1 += r4_45 * r4_45 + r5_104 * r5_104;
00015da2              }
00015d78          }
00015d78          else if (r6_33 > 0x66)
00015da8          {
00015dd0              for (uint32_t i_8 = (uint32_t)(uint16_t)(r6_33 - 7); i_8 < 0x6e; 
00015dd0                  i_8 = (uint32_t)((uint16_t)i_8 + 1))
00015dd0              {
00015dbe                  int32_t r5_107 = *(uint32_t*)((i_8 << 3) + r6 + 0x208) >> r0;
00015dc2                  int32_t r4_54 = *(uint32_t*)((i_8 << 3) + r6 + 0x20c) >> r0;
00015dc8                  r1 += r5_107 * r5_107 + r4_54 * r4_54;
00015dd0              }
00015da8          }
00015d42      }
00015d42      
00015dd6      int32_t r0_4 = r12 + r1 + r2;
00015dd6      
00015de0      if (r0_4 + 0x40 < var_40)
00015de0      {
00015df2          uint32_t result = (uint32_t)sub_12b2a(r0_4, (var_40 - r12 - r1 - r2) >> 3);
00015df2          
00015df6          if (result <= 0x64)
00015df6          {
00015e00              if (result)
00015dfc                  return result;
00015dfc              
00015e02              return 1;
00015df6          }
00015de0      }
00015de0      
00015df8      return 0x64;
00015a88  }

00015e06                    00 00                                                                                ..

00015e08  int32_t data_15e08 = 0xf4240
00015e0c  int32_t data_15e0c = 0x208500
00015e10  int32_t data_15e10 = 0x2ee

00015e14    int32_t sub_15e14(int32_t arg1, int32_t arg2, int32_t arg3, int32_t arg4)

00015e14  {
00015e14      int32_t var_24 = arg1;
00015e16      int32_t r5 = arg1;
00015e1c      int32_t var_58 = 0;
00015e1e      uint32_t i_24 = 0;
00015e20      int32_t var_6c = 0;
00015e24      int32_t var_68 = 0;
00015e26      int32_t var_64 = 0;
00015e28      int32_t var_d8 = 0;
00015e2a      int32_t var_d4 = 0;
00015e2c      int16_t var_d0 = 0;
00015e32      void var_b4;
00015e32      0xff81b968(&var_b4, 0x14);  /* "_3.00.33_250117" */
00015e36      int32_t var_80 = 0;
00015e38      int32_t var_7c = 0;
00015e3a      int32_t var_78 = 0;
00015e3c      int32_t var_e4 = 0;
00015e3e      int32_t var_e0 = 0;
00015e44      int32_t var_dc = 0;
00015e46      int32_t var_cc[0x4];
00015e46      0xff81b968(&var_cc, 0x18);  /* "0.33_250117" */
00015e4c      int32_t var_ec = 0;
00015e4e      int32_t var_48_1;
00015e4e      __builtin_memset(&var_48_1, 0, 0x14);  /* "_3.00.33_250117" */
00015e50      uint32_t var_74 = 0;
00015e52      int32_t var_5c = 0;
00015e5a      int16_t var_70 = 0;
00015e5e      int32_t r7 = 0;
00015e60      uint32_t var_54 = 0;
00015e62      int32_t var_50 = 0;
00015e64      int16_t var_e8 = 0;
00015e66      int32_t var_60 = 0;
00015e6a      int32_t r0_3 = arg2 >> 4;
00015e70      int32_t r0_5 = arg3 >> 4;
00015e76      int32_t r0_7 = arg4 >> 4;
00015e7c      void* r4 = *(uint32_t*)0x20850c;
00015e80      *(uint32_t*)((char*)r4 + 0x40) = *(uint32_t*)((char*)r4 + 0x3c);
00015e82      int32_t r2 = *(uint32_t*)((char*)r4 + 0x38);  /* "0" */
00015e84      *(uint32_t*)((char*)r4 + 0x3c) = r2;
00015e86      int32_t r1 = *(uint32_t*)((char*)r4 + 0x34);  /* "_V3.0" */
00015e88      *(uint32_t*)((char*)r4 + 0x34) = r5;  /* "_V3.0" */
00015e8a      *(uint32_t*)((char*)r4 + 0x38) = r1;  /* "0" */
00015e8c      int32_t r0_9 = *(uint32_t*)((char*)r4 + 8);
00015e8c      
00015e90      if (r0_9 > 7)
00015e90      {
00015e92          int32_t r6_1 = r1 - r2;
00015e92          
00015eae          if ((r6_1 <= 0x4e20 || r1 - r5 <= 0x4e20)
00015eae                  && (r6_1 >= 0xffffb1e0 || r1 - r5 >= 0xffffb1e0))
00015eb6              r5 = r1;
00015eae          else
00015eae          {
00015eb0              r5 = r2;
00015eb2              *(uint32_t*)((char*)r4 + 0x38) = r2;  /* "0" */
00015eae          }
00015e90      }
00015e90      
00015eba      int32_t var_90;
00015eba      int32_t r1_5;
00015eba      
00015eba      if (r0_9 <= 9)
00015eba      {
00015edc          r1_5 = r5;
00015ede          var_90 = r5;
00015eba      }
00015eba      else
00015eba      {
00015ebe          int32_t r3 = *(uint32_t*)((char*)r4 + 0x48);
00015ec0          int32_t r1_2 = r5 - *(uint32_t*)((char*)r4 + 0x44);
00015ec2          int32_t r1_3 = r1_2 - r3;
00015ec2          
00015ec4          if (r1_2 - r3 < 0)
00015ec6              r1_3 = 0 - r1_3;
00015ec6          
00015ecc          int32_t r1_4;
00015ecc          
00015ecc          if (r1_3 > 0x4e20)
00015ecc          {
00015ed2              r1_4 = r5 - r3;
00015ed4              *(uint32_t*)((char*)r4 + 0x44) = r1_4;
00015ecc          }
00015ecc          else
00015ece              r1_4 = *(uint32_t*)((char*)r4 + 0x44);
00015ece          
00015ed6          r1_5 = r5 - r1_4;
00015ed8          var_90 = r1_5;
00015eba      }
00015eba      
00015ee0      *(uint32_t*)((char*)r4 + 0x48) = r1_5;
00015eea      int32_t r1_7 = *(uint32_t*)((char*)r4 + 0xf50);
00015eec      int32_t r1_8 = r5 - r1_7;
00015eec      
00015eee      if (r5 - r1_7 < 0)
00015ef0          r1_8 = 0 - r1_8;
00015ef0      
00015ef4      int32_t r3_1 = 0xc350;
00015efc      void* r6_4 = *(uint32_t*)0x20850c + 0xf40;
00015f00      uint32_t r1_9 = (uint32_t)*(uint8_t*)((char*)r6_4 + 0x14);  /* "_3.00.33_250117" */
00015f00      
00015f02      if (r1_8 > 0xc350)
00015f02      {
00015f06          if (r1_9 >= 0xa)
00015f06              goto label_15f16;
00015f06          
00015f08          r1_9 += 1;
00015f0a          goto label_15f12;
00015f02      }
00015f02      
00015f0e      if (!r1_9)
00015f0e      {
00015f26      label_15f26:
00015f26          uint32_t r1_12 = (uint32_t)*(uint8_t*)((char*)r6_4 + 0x15);
00015f26              /* "3.00.33_250117" */
00015f26          
00015f2a          if (r1_12)
00015f2e              *(uint8_t*)((char*)r6_4 + 0x15) = (uint8_t)r1_12 - 1;  /* "3.00.33_250117" */
00015f0e      }
00015f0e      else
00015f0e      {
00015f10          r1_9 -= 1;
00015f12      label_15f12:
00015f12          *(uint8_t*)((char*)r6_4 + 0x14) = (char)r1_9;  /* "_3.00.33_250117" */
00015f16      label_15f16:
00015f16          
00015f20          if ((uint32_t)(uint8_t)r1_9 < 5 || r0_9 <= 0x140)
00015f18              goto label_15f26;
00015f18          
00015f2e          *(uint8_t*)((char*)r6_4 + 0x15) = 0x32;  /* "3.00.33_250117" */  /* "02_V3.0" */
00015f0e      }
00015f0e      
00015f32      *(uint32_t*)((char*)r4 + 0xf50) = r5;
00015f32      
00015f36      if (r0_9 == 9)
00015f36      {
00015f48          int32_t r0_10 = *(uint32_t*)((char*)r4 + 0x38);  /* "0" */
00015f4a          *(uint32_t*)((char*)r4 + 0xc) = r0_10;
00015f4c          *(uint32_t*)((char*)r4 + 0x10) = r0_10;  /* "RY02_3.00.33_250117" */
00015f56          *(uint32_t*)((char*)r4 + 0x1008) = r0_3;
00015f5a          *(uint32_t*)((char*)r4 + 0x100c) = r0_3;
00015f5e          *(uint32_t*)((char*)r4 + 0x1030) = r0_5;
00015f62          *(uint32_t*)((char*)r4 + 0x1034) = r0_5;
00015f66          *(uint32_t*)((char*)r4 + 0x1058) = r0_7;
00015f6a          *(uint32_t*)((char*)r4 + 0x105c) = r0_7;
00015f36      }
00015f36      else
00015f36      {
00015f3a          if (r0_9 > 0x19)  /* ".33_250117" */
00015f3a          {
00015f3e              int32_t r1_14;
00015f3e              r1_14 = sub_12b2a(r0_9, 3);
00015f3e              
00015f44              if (!r1_14)
00015f44              {
00015f88                  uint32_t i;
00015f88                  
00015f88                  do
00015f88                  {
00015f7c                      *(uint32_t*)((i_24 << 2) + r4 + 0xf6c) =
00015f7c                          *(uint32_t*)((i_24 << 2) + r4 + 0xf70);
00015f82                      i = (uint32_t)((uint16_t)i_24 + 1);
00015f84                      i_24 = i;
00015f88                  } while (i < 0xf);
00015f94                  *(uint32_t*)((char*)r4 + 0xfa8) = var_90 >> 3;
00015f44              }
00015f3a          }
00015f3a          
00015f96          int32_t r0_14 = *(uint32_t*)((char*)r4 + 8);
00015f96          
00015f9a          if (r0_14 < 0x64)
00015f9a          {
00015ffc          label_15ffc:
00015ffc              
00015ffe              if (*(uint32_t*)(*(uint32_t*)0x20850c + 8) > 9)
00015ffe                  goto label_1600a;
00015f9a          }
00015f9a          else
00015f9a          {
00015fa0              int32_t r1_27;
00015fa0              r1_27 = sub_12b2a(r0_14, 0x19);  /* ".33_250117" */
00015fa0              
00015fa6              if (!r1_27)
00015fa6              {
00015fb2                  if ((uint32_t)*(uint8_t*)((char*)r4 + 0xf28))
00015fb6                      *(uint8_t*)((char*)r6_4 + 0x1c) = 0xff;  /* "_250117" */
00015fb6                  
00015fbc                  int32_t r0_18 = sub_1576c((char*)r4 + 0xf6c);
00015fc4                  void* r0_19 = *(uint32_t*)0x20850c;
00015fca                  *(uint32_t*)((char*)r0_19 + 0xfac) = r0_18;
00015fd0                  int32_t r0_21;
00015fd0                  
00015fd0                  if (*(uint32_t*)((char*)r0_19 + 8) == 0x64)
00015fd0                  {
0001608a                      for (uint32_t i_1 = 0; i_1 < 5; )
0001608a                      {
0001607c                          int32_t r4_3 = *(uint32_t*)((char*)r0_19 + 0xfac);
0001607e                          void* r5_12 = (i_1 << 2) + r0_19 + 0xf80;
00016082                          r7 += r4_3;
00016084                          i_1 = (uint32_t)((uint16_t)i_1 + 1);
00016086                          *(uint32_t*)((char*)r5_12 + 0x34) = r4_3;  /* "_V3.0" */
0001608a                      }
0001608a                      
0001608e                      r0_21 = r7;
00015fd0                  }
00015fd0                  else
00015fd0                  {
00015fe6                      for (uint32_t i_2 = 0; i_2 < 4; )
00015fe6                      {
00015fd8                          void* r3_4 = (i_2 << 2) + r0_19 + 0xf80;
00015fda                          int32_t r4_1 = *(uint32_t*)((char*)r3_4 + 0x38);  /* "0" */
00015fde                          r7 += r4_1;
00015fe0                          i_2 = (uint32_t)((uint16_t)i_2 + 1);
00015fe2                          *(uint32_t*)((char*)r3_4 + 0x34) = r4_1;  /* "_V3.0" */
00015fe6                      }
00015fe6                      
00015fe8                      int32_t r0_20 = *(uint32_t*)((char*)r0_19 + 0xfac);
00015fea                      *(uint32_t*)((char*)r0_19 + 0xfc4) = r0_20;
00015fec                      r0_21 = r0_20 + r7;
00015fd0                  }
00015fd0                  
00015ff0                  int32_t r0_22;
00015ff0                  r0_22 = sub_12b3e(r0_21, 5);
00015ff4                  *(uint32_t*)((char*)r0_19 + 0xfb0) = r0_22;
00015fd0                  goto label_15ffc;
00015fa6              }
00015fa6              
0001600a          label_1600a:
0001600a              
0001600a              if (arg2 | arg3 | arg4)
00016012                  sub_18100(r0_3, r0_5, r0_7, r3_1);
00016012              
0001601a              void* r4_2 = *(uint32_t*)0x20850c;
00016022              int32_t r2_7 = *(uint32_t*)((char*)r4_2 + 0x10);  /* "RY02_3.00.33_250117" */
00016028              int32_t r0_36;
00016028              
00016028              if (!(uint32_t)*(uint8_t*)((char*)r4_2 + 0xf28))
00016028              {
00016096                  *(uint32_t*)((char*)r4_2 + 0x10) = *(uint32_t*)((char*)r4_2 + 0xc);
00016096                      /* "RY02_3.00.33_250117" */
0001609a                  *(uint32_t*)((char*)r4_2 + 0xc) = var_90;
0001609c                  int32_t r2_14 = *(uint32_t*)((char*)r4_2 + 0x14);  /* "_3.00.33_250117" */
000160b0                  int32_t r0_38 = var_90 - r2_7 - ((0xffffff91 * r2_14
000160b0                      + 0x33 * *(uint32_t*)((char*)r4_2 + 0x18)) >> 6);
000160b0                      /* "0.33_250117" */  /* "2_V3.0" */
000160b2                  *(uint32_t*)((char*)r4_2 + 0x1c) = r0_38;  /* "_250117" */
000160b4                  *(uint32_t*)((char*)r4_2 + 0x18) = r2_14;  /* "0.33_250117" */
000160b6                  *(uint32_t*)((char*)r4_2 + 0x14) = r0_38;  /* "_3.00.33_250117" */
000160b8                  int32_t r2_15 = *(uint32_t*)((char*)r4_2 + 0x24);
000160bc                  *(uint32_t*)((char*)r4_2 + 0x24) = *(uint32_t*)((char*)r4_2 + 0x20);
000160bc                      /* "117" */
000160be                  *(uint32_t*)((char*)r4_2 + 0x20) = r0_38;  /* "117" */
000160c4                  int32_t r5_18 = *(uint32_t*)((char*)r4_2 + 0x28);
000160d2                  r0_36 = r0_38 - r2_15 - ((r5_18 * 0xffffffbc
000160d2                      + (*(uint32_t*)((char*)r4_2 + 0x2c) << 5)) >> 6);
000160d4                  *(uint32_t*)((char*)r4_2 + 0x2c) = r5_18;
000160d6                  *(uint32_t*)((char*)r4_2 + 0x30) = r0_36;  /* "RY02_V3.0" */
00016028              }
00016028              else
00016028              {
0001602e                  *(uint32_t*)((char*)r4_2 + 0x10) = *(uint32_t*)((char*)r4_2 + 0xc);
0001602e                      /* "RY02_3.00.33_250117" */
00016032                  *(uint32_t*)((char*)r4_2 + 0xc) = var_90;
00016034                  int32_t r0_33 = *(uint32_t*)((char*)r4_2 + 0x14);  /* "_3.00.33_250117" */
00016048                  int32_t r2_9 = var_90 - r2_7 - ((0xffffff93 * r0_33
00016048                      + 0x33 * *(uint32_t*)((char*)r4_2 + 0x18)) >> 6);
00016048                      /* "0.33_250117" */  /* "2_V3.0" */
0001604a                  *(uint32_t*)((char*)r4_2 + 0x1c) = r2_9;  /* "_250117" */
0001604c                  *(uint32_t*)((char*)r4_2 + 0x14) = r2_9;  /* "_3.00.33_250117" */
0001604e                  *(uint32_t*)((char*)r4_2 + 0x18) = r0_33;  /* "0.33_250117" */
00016050                  int32_t r0_34 = *(uint32_t*)((char*)r4_2 + 0x24);
00016054                  *(uint32_t*)((char*)r4_2 + 0x24) = *(uint32_t*)((char*)r4_2 + 0x20);
00016054                      /* "117" */
00016056                  *(uint32_t*)((char*)r4_2 + 0x20) = r2_9;  /* "117" */
0001605c                  int32_t r2_10 = *(uint32_t*)((char*)r4_2 + 0x28);
0001606c                  r0_36 = r2_9 - r0_34 - ((r2_10 * 0xffffffad
0001606c                      + 0x2a * *(uint32_t*)((char*)r4_2 + 0x2c)) >> 6);
0001606e                  *(uint32_t*)((char*)r4_2 + 0x2c) = r2_10;
00016070                  *(uint32_t*)((char*)r4_2 + 0x30) = r0_36;  /* "RY02_V3.0" */
00016028              }
00016028              
000160d8              *(uint32_t*)((char*)r4_2 + 0x28) = r0_36;
000160d8              
000160f0              for (uint32_t i_3 = 0; i_3 < 0xa; )
000160f0              {
000160e4                  void* r2_19 = (i_3 << 2) + r4_2 + 0x1080;
000160ea                  i_3 = (uint32_t)((uint16_t)i_3 + 1);
000160ec                  *(uint32_t*)((char*)r2_19 + 0xc) = *(uint32_t*)((char*)r2_19 + 0x10);
000160ec                      /* "RY02_3.00.33_250117" */
000160f0              }
000160f0              
000160f4              int32_t r2_20 = *(uint32_t*)((char*)r4_2 + 0x30);  /* "RY02_V3.0" */
000160f6              *(uint32_t*)((char*)r4_2 + 0x10b4) = r2_20;
000160fe              int32_t r0_43 = *(uint32_t*)((char*)r4_2 + 0x10a0);
000160fe              
00016136              if (r0_43 <= *(uint32_t*)((char*)r4_2 + 0x109c)
00016136                  || r0_43 <= *(uint32_t*)((char*)r4_2 + 0x1098)
00016136                  || r0_43 <= *(uint32_t*)((char*)r4_2 + 0x1094)
00016136                  || r0_43 <= *(uint32_t*)((char*)r4_2 + 0x1090)
00016136                  || r0_43 <= *(uint32_t*)((char*)r4_2 + 0x108c)
00016136                  || r0_43 <= *(uint32_t*)((char*)r4_2 + 0x10a4)
00016136                  || r0_43 <= *(uint32_t*)((char*)r4_2 + 0x10a8)
00016136                  || r0_43 <= *(uint32_t*)((char*)r4_2 + 0x10ac)
00016136                  || r0_43 <= *(uint32_t*)((char*)r4_2 + 0x10b0) || r0_43 <= r2_20)
00016136              {
000162b2              label_162b2:
000162b2                  
000162b2                  if (*(uint32_t*)(*(uint32_t*)0x20850c + 0x10b8))
000162b2                  {
000162b8                  label_162b8:
000162b8                      void* r1_61 = *(uint32_t*)0x20850c + 0x1080;
000162be                      *(uint32_t*)((char*)r1_61 + 0x38) -= 1;  /* "0" */
000162b2                  }
000162b2                  
000162ce                  if ((uint32_t)*(uint8_t*)(*(uint32_t*)0x20850c + 0xf28))
000162d8                      *(uint32_t*)(*(uint32_t*)0x20850c + 0x10c4) = 0;
00016136              }
00016136              else
00016136              {
0001613c                  if (*(uint32_t*)((char*)r4_2 + 0x10b8))
0001613c                      goto label_162b8;
0001613c                  
00016142                  if ((uint32_t)*(uint8_t*)((char*)r4_2 + 0xf28))
000162d8                      *(uint32_t*)(*(uint32_t*)0x20850c + 0x10c4) = 0;
00016142                  else
00016142                  {
00016144                      int32_t r2_21 = *(uint32_t*)((char*)r4_2 + 8);
00016144                      
00016148                      if (r2_21 >= 0x32)  /* "02_V3.0" */
00016148                      {
0001614c                          *(uint32_t*)((char*)r4_2 + 0x10bc) = r2_21 - 5;
0001614e                          int32_t r3_7 = *(uint32_t*)((char*)r4_2 + 0x10c0);
0001614e                          
00016152                          if (r3_7)
0001615a                              *(uint32_t*)((char*)r4_2 + 0x10c4) =
0001615a                                  0x28 * (r2_21 - 5 - r3_7);
0001615a                          
0001615c                          *(uint32_t*)((char*)r4_2 + 0x10c0) = r2_21 - 5;
0001615c                          
00016164                          if (r2_21 <= 0x12c)
000161aa                              *(uint32_t*)((char*)r4_2 + 0x10b8) = 0xa;
00016164                          else
00016164                          {
00016166                              uint32_t r0_47 = (uint32_t)*(uint8_t*)((char*)r4_2 + 1);
00016166                              
0001616e                              if (r0_47 - 0x32 > 0x64)  /* "02_V3.0" */
0001616e                              {
000161a6                                  *(uint32_t*)((char*)r4_2 + 0x10c4) = 0x320;
000161aa                                  *(uint32_t*)((char*)r4_2 + 0x10b8) = 0xa;
0001616e                              }
0001616e                              else
0001616e                              {
00016174                                  int32_t r0_49 = sub_12b2a(0x5dc, r0_47);
0001617c                                  *(uint32_t*)((char*)r4_2 + 0x10b8) = r0_49 - 5;
00016182                                  int32_t r0_51 = sub_12b2a(0x11940, r0_47);
00016186                                  int32_t r7_9 = *(uint32_t*)((char*)r4_2 + 0x10c4);
0001618a                                  int32_t r0_52;
0001618a                                  
0001618a                                  if (r0_51 >= r7_9)
00016190                                      r0_52 = sub_12b2a(&data_bb80, r0_47);
00016190                                  
00016196                                  if (r0_51 < r7_9 || r0_52 > r7_9)
0001619e                                      *(uint32_t*)((char*)r4_2 + 0x10c4) = 0x28 * r0_49;
0001616e                              }
00016164                          }
00016164                          
000161b6                          if (*(uint32_t*)((char*)r4_2 + 0x10c4) - 0x12d < 0x4af)
000161b6                          {
000161ca                              for (uint32_t i_4 = 0; i_4 < 0xf; )
000161ca                              {
000161be                                  void* r1_37 = (i_4 << 2) + r4_2 + 0x1080;
000161c4                                  i_4 = (uint32_t)((uint16_t)i_4 + 1);
000161c6                                  *(uint32_t*)((char*)r1_37 + 0x4c) =
000161c6                                      *(uint32_t*)((char*)r1_37 + 0x50);
000161ca                              }
000161ca                              
000161d4                              *(uint32_t*)((char*)r4_2 + 0x1108) =
000161d4                                  *(uint32_t*)((char*)r4_2 + 0x10c4);
000161b6                          }
000161b6                          
000161e0                          if (*(uint32_t*)((char*)r4_2 + 0x10c8) >= 0x14
000161e0                              && *(uint32_t*)((char*)r4_2 + 0x10cc))  /* "_3.00.33_250117" */
000161e0                          {
000161fa                              int32_t r1_44;
000161fa                              
000161fa                              for (uint32_t i_5 = 0; i_5 < 0x10; )  /* "RY02_3.00.33_250117"
000161fa                                  */
000161fa                              {
000161f2                                  r1_44 = (int32_t)(
000161f2                                      (int16_t)*(uint32_t*)((i_5 << 2) + r4_2 + 0x10cc)
000161f2                                      + var_70);
000161f4                                  i_5 = (uint32_t)((uint16_t)i_5 + 1);
000161f6                                  var_70 = (uint16_t)r1_44;
000161fa                              }
000161fa                              
000161fc                              int32_t r2_24 = r1_44 >> 4;
000161fc                              
00016248                              for (uint32_t i_6 = 0; i_6 < 0x10; 
00016248                                  i_6 = (uint32_t)((uint16_t)i_6 + 1))  /* "RY02_3.00.33_250117"
00016248                                  */
00016248                              {
0001620a                                  int32_t r3_10 = *(uint32_t*)((i_6 << 2) + r4_2 + 0x10cc);
0001620c                                  int32_t r1_47 = r3_10 - r2_24;
0001620c                                  
0001620e                                  if (r3_10 - r2_24 < 0)
00016210                                      r1_47 = 0 - r1_47;
00016210                                  
00016218                                  var_50 = (int32_t)((uint16_t)r1_47 + (uint16_t)var_50);
00016218                                  
0001621c                                  if (i_6)
0001621c                                  {
0001621e                                      int32_t r1_50 =
0001621e                                          *(uint32_t*)((i_6 << 2) + r4_2 + 0x10c8);
00016220                                      int32_t r1_51 = r3_10 - r1_50;
00016220                                      
00016222                                      if (r3_10 - r1_50 < 0)
00016224                                          r1_51 = 0 - r1_51;
00016224                                      
00016228                                      if (r1_51 < 8)
0001622a                                          r1_51 = 8;
00016228                                      else if (r1_51 > 0x6c)
00016238                                          r1_51 = 0x6c;
00016238                                      
00016240                                      var_60 += r1_51 * r1_51;
0001621c                                  }
00016248                              }
00016248                              
0001624e                              int32_t r0_66;
0001624e                              int32_t r1_54;
0001624e                              r0_66 = sub_1351a(var_60 >> 4);
00016252                              int32_t r0_67;
00016252                              int32_t r1_55;
00016252                              r0_67 = sub_154fc(r0_66, r1_54);
00016256                              uint32_t r0_68 = sub_13490(r0_67, r1_55);
00016262                              void* r4_4 = *(uint32_t*)0x20850c + 0x1100;
00016264                              *(uint32_t*)((char*)r4_4 + 0x10) = r0_68;
00016264                                  /* "RY02_3.00.33_250117" */
00016264                              
00016268                              if (r0_68 > 0x50)
00016294                                  *(uint32_t*)((char*)r4_4 + 0x10) =
00016294                                      sub_12b2a(r0_68, 0xa) + 0x50;  /* "RY02_3.00.33_250117" */
00016294                              
0001629a                              *(uint32_t*)((char*)r4_4 + 0xc) = var_50 >> 4;
000161e0                          }
000161e0                          
000162a0                          void* r1_58 = *(uint32_t*)0x20850c + 0x1080;
000162a6                          *(uint32_t*)((char*)r1_58 + 0x48) += 1;
00016164                          goto label_162b2;
00016148                      }
00016142                  }
00016136              }
00016136              
000162dc              void* r3_12 = *(uint32_t*)0x20850c;
000162dc              
000162e2              if (*(uint32_t*)((char*)r3_12 + 8) > 0x19)  /* ".33_250117" */
000162e2              {
00016390                  for (uint32_t i_7 = 0; i_7 < 0x6e; )
00016390                  {
000162fa                      uint32_t r1_65 = (uint32_t)(*(uint16_t*)((i_7 << 1) + r3_12 + 0x4e)
000162fa                          + (uint16_t)i_7 + 0x1c);  /* "_250117" */
00016300                      *(uint16_t*)((i_7 << 1) + r3_12 + 0x4e) = (int16_t)r1_65;
00016300                      
00016304                      if (r1_65 >= 0x400)
00016304                      {
00016306                          r1_65 -= 0x400;
00016308                          *(uint16_t*)((i_7 << 1) + r3_12 + 0x4e) = (int16_t)r1_65;
00016304                      }
00016304                      
0001630c                      uint32_t r4_7 = (uint32_t)(uint16_t)r1_65;
00016312                      uint32_t r0_86;
00016312                      
00016312                      r0_86 =
00016312                          r4_7 < 0x300 ? (uint32_t)(uint8_t)r4_7 : (uint32_t)(uint8_t)r4_7;
00016312                      
00016324                      uint32_t r0_87 = (uint32_t)*(uint8_t*)(0x83e7ef + r0_86);
00016326                      uint32_t r1_66 = (uint32_t)*(uint8_t*)(0x83e7ef + 0xff - r0_86);
00016326                      
00016328                      if (r4_7 > 0xff)
00016328                      {
00016330                          if (r4_7 < 0x200)
00016330                          {
00016332                              uint32_t r4_8 = r0_87;
00016334                              r0_87 = r1_66;
00016336                              r1_66 = 0 - r4_8;
00016330                          }
00016330                          else if (r4_7 >= 0x300)
0001633c                          {
00016344                              uint32_t r4_9 = r0_87;
00016346                              r0_87 = 0 - r1_66;
00016348                              r1_66 = r4_9;
0001633c                          }
0001633c                          else
0001633c                          {
0001633e                              r0_87 = 0 - r0_87;
00016340                              r1_66 = 0 - r1_66;
0001633c                          }
00016328                      }
00016328                      
0001634c                      void* r4_11 = (i_7 << 3) + r3_12;
00016360                      *(uint32_t*)((char*)r4_11 + 0x208) +=
00016360                          r1_66 * (*(uint32_t*)((char*)r3_12 + 0x30) >> 3);  /* "RY02_V3.0" */
0001636c                      *(uint32_t*)((char*)r4_11 + 0x20c) +=
0001636c                          r0_87 * (*(uint32_t*)((char*)r3_12 + 0x30) >> 3);  /* "RY02_V3.0" */
0001637e                      *(uint32_t*)((char*)r4_11 + 0x578) +=
0001637e                          r1_66 * *(uint32_t*)((char*)r3_12 + 0x102c);
0001638a                      i_7 = (uint32_t)((uint16_t)i_7 + 1);
0001638c                      *(uint32_t*)((char*)r4_11 + 0x57c) +=
0001638c                          r0_87 * *(uint32_t*)((char*)r3_12 + 0x102c);
00016390                  }
000162e2              }
00015f9a          }
00015f9a          
00016394          void* r0_89 = *(uint32_t*)0x20850c;
00016394          
0001639a          if (*(uint32_t*)((char*)r0_89 + 8) > 0xe1)
0001639a          {
0001647e              for (uint32_t i_8 = 0; i_8 < 0x6e; )
0001647e              {
000163b2                  uint32_t r4_20 = (uint32_t)(*(uint16_t*)((i_8 << 1) + r0_89 + 0x12a)
000163b2                      + (uint16_t)i_8 + 0x1c);  /* "_250117" */
000163b8                  *(uint16_t*)((i_8 << 1) + r0_89 + 0x12a) = (int16_t)r4_20;
000163b8                  
000163bc                  if (r4_20 >= 0x400)
000163bc                  {
000163be                      r4_20 -= 0x400;
000163c0                      *(uint16_t*)((i_8 << 1) + r0_89 + 0x12a) = (int16_t)r4_20;
000163bc                  }
000163bc                  
000163c4                  uint32_t r4_21 = (uint32_t)(uint16_t)r4_20;
000163ca                  uint32_t r1_75;
000163ca                  
000163ca                  r1_75 =
000163ca                      r4_21 < 0x300 ? (uint32_t)(uint8_t)r4_21 : (uint32_t)(uint8_t)r4_21;
000163ca                  
000163de                  uint32_t var_98_1 = (uint32_t)*(uint8_t*)(0x83e7ef + r1_75);
000163e0                  uint32_t r1_77 = (uint32_t)*(uint8_t*)(0x83e7ef + 0xff - r1_75);
000163e0                  
000163e2                  if (r4_21 > 0xff)
000163e2                  {
000163ea                      if (r4_21 >= 0x200)
000163ea                      {
000163f6                          uint32_t r4_23 = var_98_1;
000163f6                          
000163f8                          if (r4_21 >= 0x300)
000163f8                          {
00016404                              var_98_1 = 0 - r1_77;
00016406                              r1_77 = r4_23;
000163f8                          }
000163f8                          else
000163f8                          {
000163fc                              r1_77 = 0 - r1_77;
000163fe                              var_98_1 = 0 - r4_23;
000163f8                          }
000163ea                      }
000163ea                      else
000163ea                      {
000163ec                          uint32_t r4_22 = var_98_1;
000163ee                          var_98_1 = r1_77;
000163f0                          r1_77 = 0 - r4_22;
000163ea                      }
000163e2                  }
000163e2                  
00016410                  void* r7_14 = (i_8 << 3) + r0_89;
0001642a                  *(uint32_t*)((char*)r7_14 + 0x208) -= r1_77 * (*(uint32_t*)((
0001642a                      (uint32_t)*(uint8_t*)((char*)r0_89 + 0x4c) << 2) + r0_89 + 0x8e8) >> 3);
00016444                  *(uint32_t*)((char*)r7_14 + 0x20c) -= var_98_1 * (*(uint32_t*)((
00016444                      (uint32_t)*(uint8_t*)((char*)r0_89 + 0x4c) << 2) + r0_89 + 0x8e8) >> 3);
00016464                  *(uint32_t*)((char*)r7_14 + 0x578) -= r1_77 * *(uint32_t*)((
00016464                      (uint32_t)*(uint8_t*)((char*)r0_89 + 0x4c) << 2) + r0_89 + 0xc08);
00016474                  i_8 = (uint32_t)((uint16_t)i_8 + 1);
0001647a                  *(uint32_t*)((char*)r7_14 + 0x57c) -= var_98_1 * *(uint32_t*)((
0001647a                      (uint32_t)*(uint8_t*)((char*)r0_89 + 0x4c) << 2) + r0_89 + 0xc08);
0001647e              }
0001639a          }
0001639a          
00016484          if (*(uint32_t*)((char*)r0_89 + 8) > 0x19)  /* ".33_250117" */
00016484          {
00016498              *(uint32_t*)(((uint32_t)*(uint8_t*)((char*)r0_89 + 0x4c) << 2) + r0_89
00016498                  + 0x8e8) = *(uint32_t*)((char*)r0_89 + 0x30);  /* "RY02_V3.0" */
000164ae              *(uint32_t*)(((uint32_t)*(uint8_t*)((char*)r0_89 + 0x4c) << 2) + r0_89
000164ae                  + 0xc08) = *(uint32_t*)((char*)r0_89 + 0x102c);
000164b4              uint32_t r0_93 = (uint32_t)(*(uint8_t*)((char*)r0_89 + 0x4c) + 1);
000164b6              *(uint8_t*)((char*)r0_89 + 0x4c) = (char)r0_93;
000164b6              
000164ba              if (r0_93 > 0xc7)
000164be                  *(uint8_t*)((char*)r0_89 + 0x4c) = 0;
00016484          }
00015f36      }
00015f36      
000164c4      void* r4_44 = *(uint32_t*)0x20850c;
000164ca      uint32_t r2_34 = (uint32_t)*(uint8_t*)((char*)r4_44 + 0xff8);
000164d2      *(uint8_t*)((char*)r4_44 + 0xf28) = (char)r2_34;
000164d4      uint32_t r1_90 = (uint32_t)*(uint8_t*)((char*)r4_44 + 2);
000164d8      int32_t r3_19;
000164d8      
000164d8      if (r1_90 < 0x46)
000164da          r3_19 = 0x52;
000164d8      else if (r1_90 < 0x5a)
000164e2          r3_19 = 0x48;
000164e0      else if (r1_90 < 0x6e || r1_90 < 0x8c)
000164ee          r3_19 = 0x3e;
000164ec      else
000164f2          r3_19 = 0x32;  /* "02_V3.0" */
000164f2      
000164f6      uint32_t r3_20 = (uint32_t)*(uint8_t*)0x208501;
000164fa      int32_t var_60_1;
000164fa      
000164fa      if (r3_20 == 1)
000164fa      {
0001651e          if (r1_90 >= 0x82)
0001651e              goto label_16502;
0001651e          
0001650a          var_60_1 = 0x1e;  /* "50117" */
000164fa      }
000164fa      else if (r3_20 == 2 && r1_90 < 0x82)
0001650a          var_60_1 = 0x1e;  /* "50117" */
0001651e      else
0001651e      {
00016502      label_16502:
00016502          var_60_1 = 0x28;
00016502          
00016506          if (r2_34 >= 4)
0001650a              var_60_1 = 0x1e;  /* "50117" */
0001651e      }
0001651e      
0001650c      int32_t r0_94 = *(uint32_t*)((char*)r4_44 + 8);
0001650c      
00016524      if (!sub_12b2a(r0_94, 0x19) && r0_94 >= 0xe1)  /* ".33_250117" */
00016524      {
00016528          int32_t var_34_1 = 3;
0001652a          int32_t r0_95 = 0xd693a400;
0001652c          int32_t r2_35 = 0xdc898500;
0001652e          uint32_t i_9 = 0;
00016530          int32_t var_4c_1 = 0;
00016530          
000165be          do
000165be          {
00016540              int32_t r6_39 = *(uint32_t*)((i_9 << 3) + r4_44 + 0x578) >> 0x12;
00016540                  /* "02_3.00.33_250117" */
00016542              int32_t r3_24 = *(uint32_t*)((i_9 << 3) + r4_44 + 0x57c) >> 0x12;
00016542                  /* "02_3.00.33_250117" */
00016548              int32_t r3_26 = r6_39 * r6_39 + r3_24 * r3_24;
00016548              
00016550              if (r3_26 > var_4c_1)
00016552                  var_4c_1 = r3_26;
00016552              
0001655c              if (r3_26 < r0_95 && r0_95 >= r2_35)
0001655c              {
000165b2                  for (uint32_t j = 0; j < 5; j = (uint32_t)((uint16_t)j + 1))
000165b2                  {
00016560                      int32_t r6_42 = j << 2;
00016564                      int32_t r3_28 = *(uint32_t*)(&var_b4 + r6_42);
00016564                      
0001656c                      if (r3_28 < r0_95)
0001656c                      {
00016570                          if (j)
00016570                          {
00016572                              int32_t r3_29 = j << 1;
0001657c                              *(uint16_t*)(r3_29 + &var_6c - 2) =
0001657c                                  *(uint16_t*)(&var_6c + r3_29);
00016586                              *(uint32_t*)(&var_b4 + r6_42 - 4) = r3_28;
00016590                              *(uint16_t*)(r3_29 + &var_d8 - 2) =
00016590                                  *(uint16_t*)(&var_d8 + r3_29);
00016570                          }
00016570                          
00016592                          int32_t r3_32 = j << 1;
00016596                          *(uint16_t*)(&var_6c + r3_32) = (int16_t)i_9;
000165a4                          *(uint16_t*)(&var_d8 + r3_32) =
000165a4                              (int16_t)((0x17700 * (i_9 + 0x1b)) >> 0x10);
000165a4                              /* "RY02_3.00.33_250117" */  /* "3_250117" */
000165aa                          *(uint32_t*)(&var_b4 + r6_42) = r0_95;
0001656c                      }
000165b2                  }
0001655c              }
0001655c              
000165b4              r2_35 = r0_95;
000165b8              i_9 = (uint32_t)((uint16_t)i_9 + 1);
000165ba              r0_95 = r3_26;
000165be          } while (i_9 < 0x6e);
000165be          
000165c2          uint32_t r0_96 = (uint32_t)var_d0;
000165c4          uint32_t r3_34 = (uint32_t)*(uint8_t*)((char*)r4_44 + 0xf28);
000165c6          uint32_t r1_93 = (uint32_t)(uint8_t)r0_96;
000165ca          void* r6_50;
000165ca          
000165ca          if (r3_34 >= 4)
000165ca          {
000165ce              if (r1_93 > 0x64)
000165ce                  goto label_165dc;
000165ce              
000165d2              r1_93 = r1_93 << 0x19 >> 0x18;  /* "0.33_250117" */  /* ".33_250117" */
00016624          label_16624:
00016624              
00016624              if (r1_93 < 0x3c)
0001662e                  r1_93 = 0x3c << 1;
00016624              else if (r1_93 < 0x64)
0001662e                  r1_93 <<= 1;
0001662e              
00016638              char r1_103 = (char)((((r1_93 - 0x28) >> 0x1f >> 0x1e) + r1_93 - 0x28) >> 2);
00016638                  /* "50117" */  /* "0117" */
00016642              r6_50 = (char*)r4_44 + 0x1000;
00016644              *(uint8_t*)((char*)r6_50 + 3) = r1_103 - 0x7e;
00016648              *(uint8_t*)((char*)r6_50 + 4) = r1_103 + 0x50;
000165ca          }
000165ca          else if (!r3_34)
000165d8          {
000165fa              *(uint8_t*)((char*)r4_44 + 0x1003) = 0x6e;
000165fe              *(uint8_t*)((char*)r4_44 + 0x1004) = 0x3c;
000165d8          }
000165d8          else
000165d8          {
000165dc          label_165dc:
000165dc              
000165dc              if (r1_93 <= 0x3c)
000165e0                  r1_93 = r1_93 << 0x19 >> 0x18;  /* "0.33_250117" */  /* ".33_250117" */
000165e0              
000165e4              if (!r3_34)
000165e4              {
000165fa                  *(uint8_t*)((char*)r4_44 + 0x1003) = 0x6e;
000165fe                  *(uint8_t*)((char*)r4_44 + 0x1004) = 0x3c;
000165e4              }
000165e4              else
000165e4              {
000165e8                  if (r3_34 >= 4)
000165e8                      goto label_16624;
000165e8                  
000165ec                  if (r1_93 > 0x78)
000165ee                      r1_93 = 0x78;
000165ec                  else if (r1_93 < 0x3c)
00016606                      r1_93 = 0x3c;
00016606                  
00016610                  char r1_99 =
00016610                      (char)((((r1_93 - 0x28) >> 0x1f >> 0x1e) + r1_93 - 0x28) >> 2);
00016610                      /* "50117" */  /* "0117" */
0001661a                  r6_50 = (char*)r4_44 + 0x1000;
0001661c                  *(uint8_t*)((char*)r6_50 + 3) = r1_99 + 0x64;
00016648                  *(uint8_t*)((char*)r6_50 + 4) = r1_99 + 0x32;  /* "02_V3.0" */
000165e4              }
000165d8          }
000165d8          
000166ae          for (uint32_t i_10 = 0; i_10 < 5; i_10 = (uint32_t)((uint16_t)i_10 + 1))
000166ae          {
0001664e              if (r0_96 >= 0x8c)
0001664e              {
00016654                  uint32_t r2_37 = (uint32_t)*(uint16_t*)(&var_d8 + (i_10 << 1));
00016656                  uint32_t r3_43 = r0_96 >> 1;
00016658                  uint32_t r2_38 = r3_43 - r2_37;
00016658                  
0001665a                  if (r3_43 - r2_37 < 0)
0001665c                      r2_38 = 0 - r2_38;
0001665c                  
00016660                  if (r2_38 <= 3)
00016660                  {
00016664                      var_48_1 = 1;
0001666c                      *(uint16_t*)((char*)r4_44 + 0xf4a) = (int16_t)r3_43;
00016660                  }
0001664e              }
0001664e              else if (r0_96 >= 0x46)
00016672              {
0001667a                  uint32_t r2_41 = (uint32_t)*(uint16_t*)(&var_d8 + (i_10 << 1)) >> 1;
0001667c                  uint32_t r2_42 = r2_41 - r0_96;
0001667c                  
0001667e                  if (r2_41 - r0_96 < 0)
00016680                      r2_42 = 0 - r2_42;
00016680                  
00016684                  if (r2_42 <= 3)
00016684                  {
00016688                      var_48_1 = 1;
00016690                      *(uint16_t*)((char*)r4_44 + 0xf4a) = (int16_t)r0_96;
00016684                  }
00016672              }
000166ae          }
000166ae          
000166b2          if (r0_96 >= 0x8c)
000166b2          {
000166b6              uint32_t r1_105 = (uint32_t)*(uint16_t*)((char*)var_d4)[2];
000166b8              uint32_t r2_44 = r0_96 >> 1;
000166ba              uint32_t r1_106 = r2_44 - r1_105;
000166ba              
000166bc              if (r2_44 - r1_105 < 0)
000166be                  r1_106 = 0 - r1_106;
000166be              
000166c2              if (r1_106 <= 5)
000166c2              {
000166ca                  *(uint16_t*)((char*)r4_44 + 0xf4a) = (int16_t)r2_44;
000166f4              label_166f4:
000166f4                  
000166f6                  if ((uint32_t)*(uint8_t*)((char*)r4_44 + 0xf28) < 4)
000166f6                      goto label_16710;
000166f6                  
000166f6                  goto label_166fa;
000166c2              }
000166b2          }
000166b2          else if (r0_96 >= 0x46)
000166d0          {
000166d6              uint32_t r1_109 = (uint32_t)*(uint16_t*)((char*)var_d4)[2] >> 1;
000166d8              uint32_t r1_110 = r1_109 - r0_96;
000166d8              
000166da              if (r1_109 - r0_96 < 0)
000166dc                  r1_110 = 0 - r1_110;
000166dc              
000166e0              if (r1_110 <= 5)
000166e0              {
000166e8                  *(uint16_t*)((char*)r4_44 + 0xf4a) = (int16_t)r0_96;
000166ea                  goto label_166f4;
000166e0              }
000166d0          }
000166d0          
000166f6          int32_t var_70_1;
000166f6          uint32_t r1_116;
000166f6          
000166f6          if (!var_48_1 || (uint32_t)*(uint8_t*)((char*)r4_44 + 0xf28) < 4)
000166f6          {
00016710          label_16710:
00016710              var_70_1 = 0;
00016712              uint32_t r1_117 = (uint32_t)*(uint8_t*)((char*)r4_44 + 0xf39);
00016712              
00016716              if (!r1_117)
0001672a                  *(uint16_t*)((char*)r4_44 + 0xf4a) = 0;
00016716              else
00016716              {
00016718                  r1_116 = r1_117 - 1;
0001671a                  *(uint8_t*)((char*)r4_44 + 0xf39) = (char)r1_116;
0001671e              label_1671e:
0001671e                  
00016720                  if ((uint32_t)(uint8_t)r1_116 < 0xa)
0001672a                      *(uint16_t*)((char*)r4_44 + 0xf4a) = 0;
00016716              }
000166f6          }
000166f6          else
000166f6          {
000166fa          label_166fa:
000166fa              var_70_1 = 1;
00016700              r1_116 = (uint32_t)(*(uint8_t*)((char*)r4_44 + 0xf39) + 1);
00016702              *(uint8_t*)((char*)r4_44 + 0xf39) = (char)r1_116;
00016702              
00016706              if (r1_116 <= 0x14)  /* "_3.00.33_250117" */
00016706                  goto label_1671e;
00016706              
0001670a              *(uint8_t*)((char*)r4_44 + 0xf39) = 0x14;  /* "_3.00.33_250117" */
000166f6          }
00016740          int32_t var_a8;
00016740          int32_t var_40_1;
00016740          int32_t var_a4;
00016740          
00016740          if (r0_96 - (uint32_t)*(uint16_t*)((char*)r4_44 + 0xf3c) + 3 <= 6 && var_a8)
00016740          {
0001674a              if (var_a4 >> 2 > var_a8)
0001674a              {
0001676a              label_1676a:
0001676a                  var_40_1 = 1;
0001676a                  
0001676e                  if (r0_96 < 0x5a)
00016782                      *(uint16_t*)((char*)r4_44 + 0xf48) = (int16_t)r0_96;
0001676e                  else
00016778                      *(uint16_t*)((char*)r4_44 + 0xf48) = (int16_t)(r0_96 >> 1);
0001674a              }
0001674a              else
0001674a              {
0001674e                  uint32_t r6_53 = (uint32_t)*(uint16_t*)((char*)var_d4)[2];
00016750                  uint32_t r7_24 = r0_96 >> 1;
00016752                  uint32_t r1_126 = r7_24 - r6_53;
00016752                  
00016754                  if (r7_24 - r6_53 < 0)
00016756                      r1_126 = 0 - r1_126;
00016756                  
0001675a                  if (r1_126 <= 2)
0001675a                      goto label_1676a;
0001675a                  
0001675c                  uint32_t r1_127 = r6_53 >> 1;
0001675e                  uint32_t r1_128 = r1_127 - r0_96;
0001675e                  
00016760                  if (r1_127 - r0_96 < 0)
00016762                      r1_128 = 0 - r1_128;
00016762                  
00016766                  if (r1_128 <= 2)
00016766                      goto label_1676a;
0001674a              }
00016740          }
00016784          *(uint16_t*)((char*)r4_44 + 0xf3c) = (int16_t)r0_96;
0001678c          uint32_t r0_99;
0001678c          
0001678c          if (var_40_1 & ~var_70_1)
0001678e              r0_99 = (uint32_t)*(uint8_t*)((char*)r4_44 + 0xf28);
0001678e          
00016796          uint32_t r0_102;
00016796          
00016796          if (!(var_40_1 & ~var_70_1) || r0_99 <= 1 || r0_99 >= 4)
00016796          {
000167aa              uint32_t r0_103 = (uint32_t)*(uint8_t*)((char*)r4_44 + 0xf3a);
000167aa              
000167ae              if (!r0_103)
000167c2                  *(uint16_t*)((char*)r4_44 + 0xf48) = 0;
000167ae              else
000167ae              {
000167b0                  r0_102 = r0_103 - 1;
000167b2                  *(uint8_t*)((char*)r4_44 + 0xf3a) = (char)r0_102;
000167b6              label_167b6:
000167b6                  
000167b8                  if ((uint32_t)(uint8_t)r0_102 < 0xa)
000167c2                      *(uint16_t*)((char*)r4_44 + 0xf48) = 0;
000167ae              }
00016796          }
00016796          else
00016796          {
0001679c              r0_102 = (uint32_t)(*(uint8_t*)((char*)r4_44 + 0xf3a) + 1);
0001679e              *(uint8_t*)((char*)r4_44 + 0xf3a) = (char)r0_102;
0001679e              
000167a2              if (r0_102 <= 0x14)  /* "_3.00.33_250117" */
000167a2                  goto label_167b6;
000167a2              
000167a6              *(uint8_t*)((char*)r4_44 + 0xf3a) = 0x14;  /* "_3.00.33_250117" */
00016796          }
000167c4          uint32_t r0_106 = (uint32_t)*(uint8_t*)((char*)r4_44 + 1);
000167ca          uint32_t i_11 = 0;
000167ce          int32_t r0_107 = 0xd693a400;
000167d0          int32_t r7_25 = 0xdc898500;
000167d0          
000168c4          do
000168c4          {
000167e4              int32_t r3_48 = *(uint32_t*)((i_11 << 3) + r4_44 + 0x208) >> 0x12;
000167e4                  /* "02_3.00.33_250117" */
000167e6              int32_t r2_52 = *(uint32_t*)((i_11 << 3) + r4_44 + 0x20c) >> 0x12;
000167e6                  /* "02_3.00.33_250117" */
000167ec              int32_t r2_54 = r3_48 * r3_48 + r2_52 * r2_52;
000167fc              uint32_t r2_58 = (0x2ee * (i_11 + 0x1b)) >> 9;  /* "3_250117" */
0001680e              int32_t r6_57;
0001680e              
0001680e              if (r2_58 - r0_106 < r3_19 && r0_106 - r2_58 < var_60_1)
0001683e                  r6_57 = 1;
0001680e              else if (!(uint32_t)*(uint8_t*)((char*)r4_44 + 0xf29) || i_11 >= 0x50)
0001681a              {
00016826                  if (!(uint32_t)*(uint8_t*)((char*)r4_44 + 0xf28))
0001683e                      r6_57 = 1;
00016826                  else
00016828                      r6_57 = 0;
0001681a              }
0001681a              else if (i_11 > 0xa || !(uint32_t)*(uint8_t*)((char*)r4_44 + 0xf28))
0001683e                  r6_57 = 1;
0001681e              else
00016828                  r6_57 = 0;
00016828              
00016830              int32_t r2_59;
00016830              
00016830              if (!(uint32_t)*(uint8_t*)((char*)r4_44 + 0xf28))
00016830              {
00016848                  if (!r6_57 || r2_58 <= 0x28)
0001684a                      r2_59 = 0;
00016848                  else
0001683a                      r2_59 = 1;
00016830              }
00016830              else if (!r6_57 || r2_58 <= 0x32)  /* "02_V3.0" */
0001684a                  r2_59 = 0;
00016838              else
0001683a                  r2_59 = 1;
0001683a              
00016856              if (r2_54 < r0_107 && r0_107 >= r7_25 && r2_59)
00016856              {
000168b0                  for (uint32_t j_1 = 0; j_1 < 6; j_1 = (uint32_t)((uint16_t)j_1 + 1))
000168b0                  {
00016860                      int32_t r3_61 = var_cc[j_1];
00016860                      
00016866                      if (r3_61 < r0_107)
00016866                      {
0001686a                          if (j_1)
0001686a                          {
0001686c                              int32_t r3_62 = j_1 << 1;
00016876                              *(uint16_t*)(r3_62 + &var_80 - 2) =
00016876                                  *(uint16_t*)(&var_80 + r3_62);
00016884                              *(uint32_t*)(&var_cc[j_1] - 4) = r3_61;
00016890                              *(uint16_t*)(r3_62 + &var_e4 - 2) =
00016890                                  *(uint16_t*)(&var_e4 + r3_62);
0001686a                          }
0001686a                          
00016892                          int32_t r3_67 = j_1 << 1;
00016896                          *(uint16_t*)(&var_80 + r3_67) = (int16_t)i_11;
0001689c                          var_cc[j_1] = r0_107;
000168a8                          *(uint16_t*)(&var_e4 + r3_67) =
000168a8                              (int16_t)((0x17700 * (i_11 + 0x1b)) >> 0x10);
000168a8                              /* "RY02_3.00.33_250117" */  /* "3_250117" */
00016866                      }
000168b0                  }
00016856              }
00016856              
000168b4              r7_25 = r0_107;
000168b6              r0_107 = r2_54;
000168b6              
000168ba              if (r2_54 > var_58)
000168bc                  var_58 = r0_107;
000168bc              
000168c0              i_11 = (uint32_t)((uint16_t)i_11 + 1);
000168c4          } while (i_11 < 0x6e);
000168c4          
000168dc          if (!(uint32_t)*(uint8_t*)((char*)r4_44 + 0xf28) && (
000168dc                  *(uint32_t*)((char*)r4_44 + 8) <= 0x190 || (uint32_t)*(uint8_t*)0x208500))
000168e6              var_54 = sub_15a88(&var_80, &var_cc);
000168e6          
000168ea          int32_t r2_62 = 0xa;
000168ea          
000168fc          if (var_70_1 && (uint32_t)*(uint8_t*)(*(uint32_t*)0x20850c + 0xf39) >= 0xa)
00016900              r2_62 = 0x1f4;
00016900          
00016904          uint32_t i_12 = 0;
00016906          uint8_t* r4_45 = *(uint32_t*)0x20850c;
00016906          
00016960          do
00016960          {
0001690a              int32_t r3_68 = i_12 << 1;
0001690c              int32_t r12_7 = 0;
00016912              uint32_t j_2 = 6;
00016914              uint32_t r5_29 = (uint32_t)*(uint16_t*)(&var_80 + r3_68);
00016914              
00016958              do
00016958              {
00016944                  if (r5_29 && !r12_7 && (uint32_t)*(uint16_t*)(&var_e4 + r3_68)
00016944                      - (uint32_t)r4_45[j_2 + 0xf2c] + 5 <= 0xa && var_cc[i_12] >= r2_62)
00016944                  {
0001694c                      *(uint8_t*)(&var_ec + i_12) = r4_45[j_2 + 0xf32] + 1;
00016950                      r12_7 = 1;
00016944                  }
00016944                  
00016956                  j_2 = (j_2 - 1) << 0x10 >> 0x10;  /* "RY02_3.00.33_250117" */
00016958              } while (j_2);
00016958              
0001695c              i_12 = (uint32_t)((uint16_t)i_12 + 1);
00016960          } while (i_12 < 6);
00016960          
0001698a          for (uint32_t i_13 = 0; i_13 < 6; )
0001698a          {
00016970              if ((uint32_t)*(uint8_t*)(&var_ec + i_13) > 0x1e)  /* "50117" */
00016972                  *(uint8_t*)(&var_ec + i_13) = 0x1e;  /* "50117" */
00016972              
0001697c              void* r2_64 = &r4_45[i_13 + 0xf20];
0001697e              *(uint8_t*)((char*)r2_64 + 0xd) = *(uint8_t*)(&var_e4 + (i_13 << 1));
00016980              char r3_81 = *(uint8_t*)(&var_ec + i_13);
00016984              i_13 = (uint32_t)((uint16_t)i_13 + 1);
00016986              *(uint8_t*)((char*)r2_64 + 0x13) = r3_81;  /* "2_3.00.33_250117" */
0001698a          }
0001698a          
00016994          uint32_t r0_117 = (uint32_t)*(uint16_t*)((char*)var_dc)[2];
000169b6          int32_t var_bc;
000169b6          int32_t var_b8;
000169b6          uint32_t r3_95;
000169b6          
000169b6          if (r0_117 - (uint32_t)*(uint16_t*)(r4_45 + 0xf46) + 3 > 6 ||
000169b6              (var_b8 >> 2 < var_bc && (r0_117 << 1) - (uint32_t)(uint16_t)var_dc + 3 > 6))
000169b6          {
000169e8          label_169e8:
000169e8              r3_95 = (uint32_t)*(uint16_t*)(r4_45 + 0xf42);
000169e8              
000169ec              if (r3_95)
000169ec              {
000169ee                  r3_95 -= 1;
000169f0                  *(uint16_t*)(r4_45 + 0xf42) = (int16_t)r3_95;
000169ec              }
000169b6          }
000169b6          else
000169b6          {
000169ba              uint32_t r3_90 = (uint32_t)var_d0;
000169ba              
000169cc              if (r0_117 - r3_90 + 4 <= 8 || r0_117 - (r3_90 << 1) + 4 <= 8)
000169c2                  goto label_169e8;
000169c2              
000169ce              uint32_t r3_91 = r3_90 >> 1;
000169d0              uint32_t r3_92 = r0_117 - r3_91;
000169d0              
000169d2              if (r0_117 - r3_91 < 0)
000169d4                  r3_92 = 0 - r3_92;
000169d4              
000169d8              if (r3_92 < 5)
000169d8                  goto label_169e8;
000169d8              
000169e0              *(uint16_t*)(r4_45 + 0xf3e) = (int16_t)r0_117;
000169e4              r3_95 = (uint32_t)*(uint16_t*)(r4_45 + 0xf42) + 2;
000169f0              *(uint16_t*)(r4_45 + 0xf42) = (int16_t)r3_95;
000169b6          }
000169b6          
000169f4          *(uint16_t*)(r4_45 + 0xf46) = (int16_t)r0_117;
000169f4          
000169f8          if ((uint32_t)(uint16_t)r3_95 >= 0x14)  /* "_3.00.33_250117" */
000169fc              *(uint16_t*)(r4_45 + 0xf42) = 0x14;  /* "_3.00.33_250117" */
000169fc          
00016a12          if ((uint32_t)r4_45[0xf39] >= 5 || (uint32_t)r4_45[0xf3a] >= 5)
00016a16              *(uint16_t*)(r4_45 + 0xf42) = 0;
00016a16          
00016a1e          if (((uint32_t)r4_45[0xf39] < 5 && (uint32_t)r4_45[0xf3a] < 5)
00016a1e              || (uint32_t)r4_45[0xf3a] < 0xa)
00016a1e          {
00016b12              *(uint16_t*)(r4_45 + 0xf40) = 0;
00016aa6              *(uint16_t*)(r4_45 + 0xf44) = 0;
00016a1e          }
00016a1e          else
00016a1e          {
00016a20              uint32_t r1_143 = (uint32_t)r4_45[2];
00016a22              uint32_t r3_97 = (uint32_t)*(uint16_t*)(r4_45 + 0xf48);
00016a2e              int32_t var_3c_1;
00016a2e              
00016a2e              if (r1_143 > r3_97 && r1_143 < (r3_97 << 1) + 0xa)
00016a2e              {
00016a34                  uint32_t r2_66 = (uint32_t)*(uint16_t*)(r4_45 + 0xf48);
00016a34                  
00016a92                  for (uint32_t i_14 = 0; i_14 < 6; i_14 = (uint32_t)((uint16_t)i_14 + 1))
00016a92                  {
00016a46                      uint32_t r2_70 = (uint32_t)*(uint16_t*)(&var_e4 + (i_14 << 1));
00016a46                      
00016a4a                      if (r2_70 > (0xa * r2_66) >> 3)
00016a4a                      {
00016a4e                          uint32_t r7_32 = r2_66 << 1;
00016a4e                          
00016a5e                          if (r2_70 < r7_32 - 0xa
00016a5e                              && (uint32_t)*(uint8_t*)(&var_ec + i_14) >= 5)
00016a5e                          {
00016a60                              uint32_t r6_77 = r2_70 - r7_32;
00016a60                              
00016a62                              if (r2_70 - r7_32 < 0)
00016a64                                  r6_77 = 0 - r6_77;
00016a64                              
00016a66                              int32_t r6_78 = r6_77 - 0xb;
00016a66                              
00016a68                              if (r6_77 - 0xb < 0)
00016a6a                                  r6_78 = 0 - r6_78;
00016a6a                              
00016a6e                              if (r6_78 > 2)
00016a6e                              {
00016a74                                  int32_t r6_79 = var_cc[i_14];
00016a74                                  
00016a82                                  if (r6_79 > var_58 >> 2 && r6_79 > 0x1770)
00016a82                                  {
00016a86                                      *(uint16_t*)(r4_45 + 0xf40) = (int16_t)r2_70;
00016a8a                                      var_3c_1 = 1;
00016a82                                  }
00016a6e                              }
00016a5e                          }
00016a4a                      }
00016a92                  }
00016a2e              }
00016a2e              
00016a98              if (r1_143 <= r3_97 || r1_143 >= (r3_97 << 1) + 0xa || !var_3c_1)
00016a98              {
00016a9e                  uint32_t r1_147 = (uint32_t)*(uint16_t*)(r4_45 + 0xf44);
00016a9e                  
00016aa2                  if (r1_147)
00016aa6                      *(uint16_t*)(r4_45 + 0xf44) = (uint16_t)r1_147 - 1;
00016a98              }
00016a98              else
00016aa6                  *(uint16_t*)(r4_45 + 0xf44) = 5;
00016a1e          }
00016a1e          
00016aac          int32_t var_44_1;
00016aac          
00016aac          if (var_58 <= 0x32)  /* "02_V3.0" */
00016ab0              var_44_1 = 1;
00016ab0          
00016ab2          int32_t r2_71 = *(uint32_t*)(r4_45 + 8);
00016ab2          
00016abe          if (r2_71 > 0x274)
00016abe          {
00016ad4              for (uint32_t i_15 = 0; i_15 < 6; i_15 = (uint32_t)((uint16_t)i_15 + 1))
00016ad4              {
00016ac4                  uint32_t r6_81 = (uint32_t)*(uint8_t*)(&var_ec + i_15);
00016aca                  uint32_t var_38_1;
00016aca                  
00016aca                  if (r6_81 > var_38_1)
00016acc                      var_38_1 = r6_81;
00016ad4              }
00016abe          }
00016abe          
00016ad8          uint32_t r2_74 = (uint32_t)r4_45[0xf2a];
00016ad8          
00016adc          if (r2_74 > 0xa)
00016ae0              var_44_1 = 0;
00016ae0          
00016ae4          if (r2_74 > 0x14)  /* "_3.00.33_250117" */
00016aea              r4_45[0xf2a] = 0;
00016aea          
00016aec          uint32_t r2_75 = (uint32_t)r4_45[1];
00016aee          r4_45[2] = (char)r2_75;
00016af4          uint32_t r2_77 = (uint32_t)r4_45[0xf28];
00016af4          
00016b02          if (r2_77 < 4 || (uint32_t)r4_45[0xf39] <= 5)
00016b02          {
00016b16              uint32_t r2_82 = (uint32_t)r4_45[0xf4c];
00016b16              
00016b1a              if (r2_82 > 1)
00016b1e                  r4_45[0xf4c] = (uint8_t)r2_82 - 2;
00016b02          }
00016b02          else
00016b02          {
00016b04              uint32_t r2_80 = (uint32_t)r4_45[0xf4c];
00016b04              
00016b08              if (r2_80 < 0x3c)
00016b1e                  r4_45[0xf4c] = (uint8_t)r2_80 + 1;
00016b02          }
00016b02          
00016b28          if (r2_71 == 0x1db)
00016b2c              *(uint8_t*)0x208503 = 1;
00016b2c          
00016b34          uint32_t var_88_4;
00016b34          
00016b34          if ((uint32_t)r4_45[0xf29] != 1)
00016b34          {
00016b3c              if (r2_77)
00016b3c                  goto label_16b46;
00016b3c              
00016c58              if (r2_71 > 0x280 && r0_117 - 0x3c >= 0x29)
00016c58              {
00016c74                  uint32_t r2_101;
00016c74                  
00016c74                  r2_101 = var_b8 <= 0xfa0 || (uint32_t)*(uint8_t*)((char*)var_e8)[1] <= 5
00016c74                      || var_b8 <= var_bc << 1 ? r2_75 : (uint32_t)(uint8_t)r0_117;
00016c74                  
00016c7c                  var_88_4 = r2_101;
00016c7c                  
00016c8e                  if ((uint32_t)*(uint8_t*)((char*)var_e8)[1] > 0x14
00016c8e                          && var_b8 > var_bc << 1)  /* "_3.00.33_250117" */
00016c9e                      var_88_4 = (uint32_t)(uint8_t)r0_117;
00016c58              }
00016c58              else if ((uint32_t)*(uint16_t*)((char*)var_78)[2])
00016c9e                  var_88_4 = (uint32_t)(uint8_t)r0_117;
00016c9a              else
00016c9e                  var_88_4 = 0x50;
00016c9e              
00016ca2              uint32_t r2_106 = (uint32_t)(uint16_t)var_dc;
00016ca2              
00016cba              if (r0_117 - (r2_106 << 1) + 3 <= 6 && var_b8 < var_bc << 1 && r2_106 < 0x37)
00016cba                      /* ".0" */
00016cbe                  var_88_4 = (uint32_t)(uint8_t)r2_106;
00016cbe              
00016cde              if ((uint32_t)*(uint8_t*)0x208501 == 1 && var_88_4 < 0x5a
00016cde                  && r2_75 - 0xa > var_88_4 && r2_71 > 0x320)
00016cde              {
00016d20                  for (uint32_t i_16 = 0; i_16 < 6; i_16 = (uint32_t)((uint16_t)i_16 + 1))
00016d20                  {
00016ce8                      uint32_t r2_109 = (uint32_t)*(uint16_t*)(&var_e4 + (i_16 << 1));
00016ce8                      
00016d14                      if (r2_109 - (r0_117 << 1) + 3 > 6 && r2_109 > r0_117 && r2_109 > 0x5a
00016d14                              && r2_109 < 0x8c && 6 * var_cc[i_16] > var_b8)
00016d18                          var_88_4 = (uint32_t)(uint8_t)r2_109;
00016d20                  }
00016cde              }
00016cde              
00016d26              r4_45[0xf2a] = 0;
00016b34          }
00016b34          else if (!r2_77)
00016b44          {
00016c1e              var_88_4 = (uint32_t)(uint8_t)r0_117;
00016c1e              
00016c24              if (var_44_1)
00016c24              {
00016c44                  for (uint32_t i_17 = 0; i_17 < 6; i_17 = (uint32_t)((uint16_t)i_17 + 1))
00016c44                  {
00016c2c                      uint32_t r2_93 = (uint32_t)*(uint16_t*)(&var_e4 + (i_17 << 1));
00016c2c                      
00016c30                      if (r2_93 <= 0x64)
00016c34                          var_88_4 = (uint32_t)(uint8_t)r2_93;
00016c44                  }
00016c24              }
00016b44          }
00016b44          else
00016b44          {
00016b46          label_16b46:
00016b46              uint32_t i_18 = 0;
00016b48              int32_t var_50_3 = 0;
00016b48              
00017234              do
00017234              {
00016b4a                  int32_t r3_100 = i_18 << 1;
00016b50                  int32_t var_88_3 = 0;
00016b50                  
00016b58                  if ((uint32_t)*(uint16_t*)(&var_80 + r3_100))
00016b58                  {
00016b5c                      uint32_t j_3 = 0;
00016b5e                      uint32_t r3_101 = (uint32_t)*(uint8_t*)0x208501;
00016b5e                      
00016bf4                      do
00016bf4                      {
00016b6c                          if (r3_101 == 1)
00016b6c                          {
00016d4e                              if ((uint32_t)r4_45[0xf3a] < 0xa
00016d4e                                      && (uint32_t)r4_45[0xf39] < 0xa
00016d4e                                      && *(uint32_t*)(r4_45 + 8) > 0x7d0
00016d4e                                      && (uint32_t)*(uint16_t*)(&var_e4 + r3_100) < 0x50)  /* "
00016d4e                                      17 10:58:10 2022" */
00016d52                                  var_88_3 = 1;
00016d52                              
00016d54                              uint32_t r3_133 = j_3 << 1;
00016d54                              
00016d6c                              if (((uint32_t)*(uint16_t*)(&var_6c + r3_133)
00016d6c                                  && (uint32_t)*(uint16_t*)(&var_d8 + r3_133) < 0x5a)
00016d6c                                  || (uint32_t)*(uint16_t*)(&var_d8 + r3_133) > 0x87)
00016d6c                              {
00016d74                                  uint32_t r7_39 = (uint32_t)*(uint16_t*)(&var_e4 + r3_100);
00016d78                                  uint32_t r3_134 =
00016d78                                      (uint32_t)*(uint16_t*)(&var_d8 + r3_133);
00016d7a                                  uint32_t r3_135 = r7_39 - r3_134;
00016d7a                                  
00016d7c                                  if (r7_39 - r3_134 < 0)
00016d7e                                      r3_135 = 0 - r3_135;
00016d7e                                  
00016da0                                  if (r3_135 <= var_34_1 && (var_cc[i_18] <= var_58 >> 3
00016da0                                          || *(uint32_t*)(&var_b4 + (j_3 << 2))
00016da0                                          >= var_4c_1 >> 4))
00016bec                                      var_88_3 = 1;
00016d6c                              }
00016b6c                          }
00016b6c                          else
00016b6c                          {
00016b6e                              int32_t r3_104 = j_3 << 1;
00016b6e                              
00016b76                              if ((uint32_t)*(uint16_t*)(&var_6c + r3_104))
00016b76                              {
00016b7c                                  uint32_t r7_37 = (uint32_t)*(uint16_t*)(&var_e4 + r3_100);
00016b80                                  uint32_t r3_105 =
00016b80                                      (uint32_t)*(uint16_t*)(&var_d8 + r3_104);
00016b84                                  uint32_t r3_106 = r7_37 - r3_105;
00016b84                                  
00016b86                                  if (r7_37 - r3_105 < 0)
00016b88                                      r3_106 = 0 - r3_106;
00016b88                                  
00016b8e                                  if (r3_106 <= var_34_1)
00016b92                                      var_88_3 = 1;
00016b92                                  
00016b96                                  if (j_3 != 4)
00016b96                                  {
00016b9e                                      uint32_t r3_108 = (uint32_t)var_d0;
00016b9e                                      
00016be8                                      if ((r3_105 << 1) - r3_108 + 2 > 4
00016be8                                              && r3_105 - (r3_108 << 1) + 2 > 4
00016be8                                              && var_cc[i_18] > var_58 >> 3
00016be8                                              && *(uint32_t*)(&var_b4 + (j_3 << 2))
00016be8                                              < var_4c_1 >> 4)
00016bec                                          var_88_3 = 0;
00016b96                                  }
00016b76                              }
00016b6c                          }
00016b6c                          
00016bf0                          j_3 = (uint32_t)((uint16_t)j_3 + 1);
00016bf4                      } while (j_3 < 5);
00016bf4                      
00016bf8                      uint32_t r2_87 = (uint32_t)var_d0;
00016bf8                      
00016bfe                      if (r2_87 <= 0x8c)
00016bfe                      {
00016dc0                          if (r2_87 < 0x5a && r2_77 >= 4
00016dc0                                  && (uint32_t)*(uint16_t*)(&var_e4 + r3_100)
00016dc0                                  - (r2_87 << 1) + 2 <= 4)
00016dc4                              var_88_3 = 1;
00016bfe                      }
00016bfe                      else if (r2_77 >= 4)
00016c04                      {
00016c0a                          uint32_t r2_90 = (uint32_t)*(uint16_t*)(&var_e4 + r3_100);
00016c0e                          uint32_t r3_118 = r2_87 >> 1;
00016c10                          uint32_t r2_91 = r2_90 - r3_118;
00016c10                          
00016c12                          if (r2_90 - r3_118 < 0)
00016c14                              r2_91 = 0 - r2_91;
00016c14                          
00016c18                          if (r2_91 <= 2)
00016dc4                              var_88_3 = 1;
00016c04                      }
00016c04                      
00016dda                      if (var_58 <= 0x64
00016dda                              && (uint32_t)*(uint16_t*)(&var_e4 + r3_100) - r2_75 + 9
00016dda                              > 0x12)  /* "02_3.00.33_250117" */
00016dde                          var_88_3 = 1;
00016dde                      
00016dfa                      if ((uint32_t)*(uint16_t*)(r4_45 + 0xf42) > 4
00016dfa                              && (uint32_t)*(uint16_t*)(&var_e4 + r3_100)
00016dfa                              - (uint32_t)*(uint16_t*)(r4_45 + 0xf3e) + 9 > 0x12)  /* "
00016dfa                              02_3.00.33_250117" */
00016dfe                          var_88_3 = 1;
00016dfe                      
00016e0c                      if ((uint32_t)r4_45[0xf3a] >= 0xa
00016e0c                          && !(uint32_t)*(uint16_t*)(r4_45 + 0xf44))
00016e0c                      {
00016e0e                          uint32_t r2_129 = (uint32_t)*(uint16_t*)(r4_45 + 0xf48);
00016e10                          uint32_t r7_40 = r2_129 << 1;
00016e10                          
00016e14                          if (r2_75 <= r7_40)
00016e14                          {
00016e1a                              uint32_t r3_145 = (uint32_t)*(uint16_t*)(&var_e4 + r3_100);
00016e1a                              
00016e2c                              if (r3_145 < (0xa * r2_129) >> 3 || r3_145 > r7_40
00016e2c                                      || r3_145 > 0x8c)
00016e30                                  var_88_3 = 1;
00016e14                          }
00016e0c                      }
00016e0c                      
00016e34                      uint32_t r2_133 = (uint32_t)r4_45[0xf39];
00016e3a                      uint32_t r2_134;
00016e3a                      uint32_t r7_42;
00016e3a                      
00016e3a                      if (r2_133 >= 0xa)
00016e3a                      {
00016e40                          r2_134 = (uint32_t)*(uint16_t*)(&var_e4 + r3_100);
00016e42                          uint32_t r7_41 = (uint32_t)*(uint16_t*)(r4_45 + 0xf4a);
00016e44                          uint32_t r3_147 = r2_134 - r7_41;
00016e44                          
00016e46                          if (r2_134 - r7_41 < 0)
00016e48                              r3_147 = 0 - r3_147;
00016e48                          
00016e4a                          int32_t r3_148 = r3_147 - 0xb;
00016e4a                          
00016e4c                          if (r3_147 - 0xb < 0)
00016e4e                              r3_148 = 0 - r3_148;
00016e4e                          
00016e68                          if (r3_148 <= 2 && var_cc[i_18] < var_b8 >> 3
00016e68                                  && (uint32_t)*(uint8_t*)(&var_ec + i_18) > 0xa)
00016e6c                              var_88_3 = 1;
00016e6c                          
00016e6e                          r7_42 = r7_41 << 1;
00016e70                          uint32_t r3_151 = r2_134 - r7_42;
00016e70                          
00016e72                          if (r2_134 - r7_42 < 0)
00016e74                              r3_151 = 0 - r3_151;
00016e74                          
00016e76                          int32_t r3_152 = r3_151 - 0xb;
00016e76                          
00016e78                          if (r3_151 - 0xb < 0)
00016e7a                              r3_152 = 0 - r3_152;
00016e7a                          
00016e94                          if (r3_152 <= 2 && var_cc[i_18] < var_b8 >> 3
00016e94                                  && (uint32_t)*(uint8_t*)(&var_ec + i_18) > 0xa)
00016e98                              var_88_3 = 1;
00016e3a                      }
00016e3a                      
00016e9e                      if (r2_133 >= 0xa && r2_75 >= 0x8c)
00016e9e                      {
00016eaa                          if (r2_134 <= 0x82 && (uint32_t)*(uint8_t*)(&var_ec + i_18) < 0xa)
00016eae                              var_88_3 = 1;
00016eae                          
00016eb2                          if (i_18 != 5)
00016eb2                              goto label_17014;
00016eb2                          
00016ec8                          if (r0_117 - r7_42 + 1 <= 2 && var_74 < 2
00016ec8                                  && (uint32_t)*(uint8_t*)((char*)var_e8)[1] >= 0xa)
00016ecc                              var_88_3 = 0;
00016ecc                          
00016ed8                          if (!var_88_3)
00016ed8                              goto label_1700a;
00016ed8                          
00016ed8                          goto label_16f12;
00016e9e                      }
00016e9e                      
00016ed8                      if (i_18 == 5 && var_88_3)
00016ed8                      {
00016f12                      label_16f12:
00016f12                          
00016f12                          if ((var_74 < 4 || (uint32_t)*(uint16_t*)(&var_e4 + (var_74 << 1))
00016f12                                  < 0x78) && var_cc[var_74] << 2 < var_b8
00016f12                                  && r0_117 - r2_75 + 0xa <= 0x14
00016f12                                  && (uint32_t)*(uint16_t*)(&var_e4 + (var_74 << 1))
00016f12                                  < r2_75 - 0xa)  /* "_3.00.33_250117" */
00016f16                              var_88_3 = 0;
00016f16                          
00016f3e                          if (var_cc[var_74] << 3 < var_b8 && r2_77 >= 4
00016f3e                                  && r0_117 - r2_75 + 0xa <= 0x14 && r0_117 > 0x96
00016f3e                                  && r0_117 < 0xbe)  /* "_3.00.33_250117" */
00016f42                              var_88_3 = 0;
00016f42                          
00016f46                          uint32_t r6_122 = r0_117 - r2_75;
00016f46                          
00016f50                          if (r6_122 + 0x14 <= 0x28)  /* "_3.00.33_250117" */
00016f50                          {
00016f56                              uint32_t r2_159 =
00016f56                                  (uint32_t)*(uint16_t*)(&var_e4 + (var_74 << 1));
00016f56                              
00016f6c                              if (r2_159 < r2_75 - 5 && r0_117 > 0x8c && r2_159 < 0x78
00016f6c                                      && r2_77 >= 4)
00016f70                                  var_88_3 = 0;
00016f70                              
00016f7e                              if (r0_117 > 0x5a && r2_77 && r2_77 < 4)
00016f7e                              {
00016f88                                  if (var_74 <= 2 || r2_159 < 0x46)
00016f8c                                      var_88_3 = 0;
00016f88                                  else if (r3_101 == 2 && r0_117 > 0x78
00016f88                                          && r2_159 - r2_75 + 0x14 > 0x28)  /* "_3.00.33_250117" */
00016f8c                                      var_88_3 = 0;
00016f7e                              }
00016f7e                              
00016fbc                              if (r2_159 < r2_75 - 0x14 && r2_77 >= 4 && r2_133 >= 0xa)
00016fbc                                      /* "_3.00.33_250117" */
00016fc0                                  var_88_3 = 0;
00016f50                          }
00016f50                          
00016fda                          if (r6_122 + 0xa <= 0x14
00016fda                              && (uint32_t)*(uint16_t*)(&var_e4 + (var_74 << 1)) - r2_75
00016fda                              + 0x14 > 0x28)  /* "_3.00.33_250117" */
00016fda                          {
00016fe0                              if (r2_77 < 4)
00016fe0                              {
00016fea                                  if (r0_117 > 0x5a)
00016fee                                      var_88_3 = 0;
00016fe0                              }
00016fe0                              else if (r0_117 > 0x8c)
00016fee                                  var_88_3 = 0;
00016fda                          }
00016fda                          
00017002                          if (r2_75 > 0x5a && r0_117 > 0x50
00017002                                  && (uint32_t)*(uint16_t*)(&var_e4 + (var_74 << 1))
00017002                                  < 0x50)
00017006                              var_88_3 = 0;
00016ed8                      }
00016ed8                      
0001700a                  label_1700a:
0001700a                      
0001700c                      if (r2_133 < 0xa)
0001700c                      {
0001702c                      label_1702c:
0001702c                          uint32_t r2_166 = (uint32_t)*(uint16_t*)(&var_e4 + r3_100);
0001702c                          
00017042                          if (r2_166 > 0xb4 && r2_166 - r2_75 + 0xa > 0x14
00017042                                  && (uint32_t)*(uint8_t*)(&var_ec + i_18) <= 0xa)  /* "
00017042                                  _3.00.33_250117" */
00017046                              var_88_3 = 1;
0001700c                      }
0001700c                      else
0001700c                      {
00017014                      label_17014:
00017014                          
00017016                          if ((uint32_t)*(uint16_t*)(&var_e4 + r3_100) >= 0xb4)
00017016                          {
00017022                              if (i_18 < 4 && (uint32_t)*(uint8_t*)(&var_ec + i_18) <= 0xa)
00017026                                  var_88_3 = 1;
00017026                              
00017022                              goto label_1702c;
00017016                          }
0001700c                      }
0001700c                      
00017048                      uint32_t r2_170 = (uint32_t)r4_45[0xf4c];
00017048                      
0001707e                      if (r2_170 >= 0x1e && r2_133 >= 0xa && r2_77 >= 4 && var_74
0001707e                              && (uint32_t)*(uint16_t*)(&var_e4 + (var_74 << 1))
0001707e                              >= r2_75 - 0x14
0001707e                              && (uint32_t)*(uint16_t*)(&var_e4 + r3_100) < r2_75 - 0x14
0001707e                              && r2_75 > 0x78)  /* "_3.00.33_250117" */  /* "50117" */
00017082                          var_88_3 = 1;
00017082                      
00017088                      uint32_t r7_43 = (uint32_t)*(uint16_t*)(&var_e4 + r3_100);
0001708c                      uint32_t r3_203 = r7_43 - r2_87;
0001708c                      
0001708e                      if (r7_43 - r2_87 < 0)
00017090                          r3_203 = 0 - r3_203;
00017090                      
00017092                      int32_t r3_204 = r3_203 - 5;
00017092                      
00017094                      if (r3_203 - 5 < 0)
00017096                          r3_204 = 0 - r3_204;
00017096                      
000170b2                      if (r3_204 <= 3 && var_cc[i_18] << 2 < var_b8
000170b2                              && r7_43 - r2_75 + 0xa > 0x14)  /* "_3.00.33_250117" */
000170b6                          var_88_3 = 1;
000170b6                      
000170c0                      if (r2_77 - 1 < 3)
000170c0                      {
000170d0                          if (r7_43 > 0x6e && (uint32_t)*(uint8_t*)(&var_ec + i_18) <= 6
000170d0                                  && i_18 < 3)
000170d4                              var_88_3 = 1;
000170d4                          
000170e0                          if (r7_43 > 0x96 && r2_75 < r7_43 - 0x1e)  /* "50117" */
000170e4                              var_88_3 = 1;
000170c0                      }
000170c0                      
000170fe                      if (r2_77 >= 4
000170fe                          && (uint32_t)*(uint16_t*)(&var_e4 + (var_74 << 1)) > r2_75
000170fe                          && r7_43 < r2_75 - 0xa)
000170fe                      {
00017100                          uint32_t r3_218 = r7_43 - r0_117;
00017100                          
00017102                          if (r7_43 - r0_117 < 0)
00017104                              r3_218 = 0 - r3_218;
00017104                          
00017106                          int32_t r3_219 = r3_218 - 0xa;
00017106                          
00017108                          if (r3_218 - 0xa < 0)
0001710a                              r3_219 = 0 - r3_219;
0001710a                          
00017112                          if (r3_219 <= 2 && r0_117 < 0x78)
00017116                              var_88_3 = 1;
000170fe                      }
000170fe                      
00017120                      if (r2_170 <= 0x14 || r2_77 < 4)  /* "_3.00.33_250117" */
00017120                      {
0001713e                          if (r2_170 > 5 && r2_77 >= 4 && r2_75 < 0x6e
0001713e                                  && r7_43 < r2_75 - 0xa)
00017142                              var_88_3 = 1;
00017120                      }
00017120                      else if (r7_43 < r2_170 + 0x32)  /* "02_V3.0" */
00017142                          var_88_3 = 1;
00017142                      
00017148                      if (r2_77 - 1 < 3)
00017148                      {
0001714e                          if (r2_75 <= 0xa0)
0001714e                          {
00017158                              if (r2_75 <= 0x8c)
00017158                              {
00017164                                  if (r7_43 > 0x96)
00017168                                      var_88_3 = 1;
00017158                              }
00017158                              else if (r7_43 > r2_75 + 0xa)
00017168                                  var_88_3 = 1;
0001714e                          }
0001714e                          else if (r7_43 > r2_75)
00017168                              var_88_3 = 1;
00017148                      }
00017148                      
0001716e                      if (r3_101 == 1)
0001716e                      {
000171bc                          if (r2_77 && (uint32_t)*(uint16_t*)(&var_e4 + (var_74 << 1))
000171bc                                  > r2_75 - 0xf && var_cc[var_74] << 1 > var_b8
000171bc                                  && r7_43 <= r2_75 - 0xf)
000171c0                              var_88_3 = 1;
000171c0                          
000171c8                          uint32_t r2_190 = (uint32_t)r4_45[0x1005];
000171c8                          
000171de                          if ((r2_190 >= 0xa && r7_43 < 0x5a)
000171de                                  || (r2_190 > 0x14 && r7_43 < 0x64))  /* "_3.00.33_250117" */
000171d4                              var_88_3 = 1;
000171de                          else if (r2_190 > 0x1e && r7_43 < 0x6e)  /* "50117" */
000171d4                              var_88_3 = 1;
0001716e                      }
0001716e                      else
0001716e                      {
00017186                          if (r2_77 - 1 < 3 && r2_87 > 0x64
00017186                                  && (r7_43 << 1) - r2_87 + 2 <= 4)
0001718a                              var_88_3 = 1;
0001718a                          
000171fa                          if (r3_101 == 5 && (uint32_t)r4_45[0xfe3] >= 0x28 && r2_77 >= 3)
000171fa                          {
00017202                              if (r7_43 < 0x5a || r7_43 < 0x6e)
00017206                                  var_88_3 = 1;
00017206                              
00017214                              if (r7_43 + 0xa < r2_75 && r2_75 < 0x82)
000171d4                                  var_88_3 = 1;
000171fa                          }
0001716e                      }
0001716e                      
0001721c                      if (!(var_88_3 | var_50_3))
0001721c                      {
00017228                          var_50_3 = 1;
0001722c                          var_74 = (uint32_t)(uint8_t)i_18;
0001721c                      }
0001721c                      else if (!var_88_3)
0001722c                          var_74 = (uint32_t)(uint8_t)i_18;
00016b58                  }
00016b58                  
00017230                  i_18 = (uint32_t)((uint16_t)i_18 + 1);
00017234              } while (i_18 < 6);
00017234              
0001723c              if (!var_50_3)
0001723c              {
0001727e                  uint32_t r0_131;
0001727e                  
0001727e                  if (r2_77 < 4 || (uint32_t)r4_45[0xf39] < 0xa || r2_75 >= 0x8c)
00017286                      r0_131 = r2_75;
0001727e                  else
00017282                      r0_131 = (uint32_t)((uint8_t)r2_75 + 1);
00017282                  
00017288                  var_88_4 = r0_131;
00017292                  r4_45[0xf2c] += 1;
0001729c                  r4_45[0xf2a] += 1;
0001723c              }
0001723c              else
0001723c              {
0001724c                  uint32_t r0_124;
0001724c                  
0001724c                  if (!(uint32_t)r4_45[0xf55] || r2_71 <= 0x140)
00017258                      r0_124 = (uint32_t)*(uint8_t*)(&var_e4 + (var_74 << 1));
0001724c                  else
0001724e                      r0_124 = r2_75;
0001724e                  
0001725a                  var_88_4 = r0_124;
00017260                  r4_45[0xf2a] = 0;
00017264                  r4_45[0xf2b] = 0;
00017268                  r4_45[0xf2c] = 0;
0001723c              }
0001723c              
000172a6              r4_45[0x1081] = 0;
000172a8              r4_45[0x1080] = 0;
000172aa              r4_45[0x1082] = 0;
000172aa              
000172b0              if (!var_50_3)
000172b0              {
000173c6                  for (uint32_t i_19 = 3; i_19; i_19 = (i_19 - 1) << 0x10 >> 0x10)  /* "
000173c6                          RY02_3.00.33_250117" */
000173c2                      r4_45[i_19 + 0x1083] = r4_45[i_19 + 0x1082];
000173c2                  
000173c8                  r4_45[0x1083] = 0;
000173ca                  r4_45[0x1081] = 0;
000173cc                  r4_45[0x1080] = 0;
000173ce                  r4_45[0x1082] = 0;
000173d6                  uint32_t r1_178 = (uint32_t)(r4_45[0x1088] + 1);
000173d8                  r4_45[0x1088] = (char)r1_178;
000173d8                  
000173dc                  if (r1_178 >= 3)
000173dc                  {
000173de                      r4_45[0x1088] = 0;
000173e0                      r4_45[0x1087] = 0;
000173dc                  }
000172b0              }
000172b0              else
000172b0              {
000172b6                  if (var_74 >= 5)
000172d4                      r4_45[0x1081] = 1;
000172b6                  else
000172b6                  {
000172bc                      int32_t r0_140 = var_cc[var_74];
000172bc                      
000172c4                      if (r0_140 << 1 > var_b8)
000172d4                          r4_45[0x1081] = 2;
000172c4                      else if (r0_140 << 3 > var_b8)
000172d4                          r4_45[0x1081] = 1;
000172ce                      else
000172d0                          r4_45[0x1081] = 0;
000172b6                  }
000172b6                  
000172e6                  uint32_t i_20;
000172e6                  
000172e6                  for (i_20 = 3; i_20; i_20 = (i_20 - 1) << 0x10 >> 0x10)  /* "
000172e6                          RY02_3.00.33_250117" */
000172e2                      r4_45[i_20 + 0x1083] = r4_45[i_20 + 0x1082];
000172e2                  
000172ee                  uint32_t r2_205 = (uint32_t)*(uint8_t*)(&var_e4 + (var_74 << 1));
000172f0                  r4_45[0x1083] = (char)r2_205;
000172f0                  
0001730e                  if (r2_205 - (uint32_t)r4_45[0x1084] + 3 <= 6 || (
0001730e                      r2_205 - (uint32_t)r4_45[0x1085] + 5 <= 0xa
0001730e                      && r2_205 - (uint32_t)r4_45[0x1086] + 8 <= 0x10))  /* "
0001730e                      RY02_3.00.33_250117" */
0001730e                  {
00017312                      r4_45[0x1080] = 1;
00017318                      uint32_t r2_210 = (uint32_t)(r4_45[0x1087] + 1);
0001731a                      r4_45[0x1087] = (char)r2_210;
0001731a                      
0001731e                      if (r2_210 >= 0xa)
0001731e                      {
00017322                          r4_45[0x1087] = 0xa;
0001732e                          r4_45[0x1088] = 0;
0001731e                      }
0001731e                      else if (r2_210 >= 3)
0001732e                          r4_45[0x1088] = 0;
0001730e                  }
0001730e                  else
0001730e                  {
00017332                      r4_45[0x1080] = 0;
0001733a                      uint32_t r3_241 = (uint32_t)(r4_45[0x1088] + 1);
0001733c                      r4_45[0x1088] = (char)r3_241;
0001733c                      
00017340                      if (r3_241 >= 3)
00017340                      {
00017342                          r4_45[0x1088] = 0;
00017344                          r4_45[0x1087] = 0;
00017340                      }
0001730e                  }
0001730e                  
00017346                  r4_45[0x1089] = 0;
00017346                  
0001734c                  if (var_74 >= 5)
00017376                      r4_45[0x1089] = 3;
0001734c                  else
0001734c                  {
00017370                      for (; i_20 < var_74; i_20 = (uint32_t)((uint16_t)i_20 + 1))
00017370                      {
00017360                          if (var_cc[i_20] << 1 > var_cc[var_74])
00017366                              r4_45[0x1089] += 1;
00017370                      }
0001734c                  }
0001734c                  
0001737c                  uint32_t r0_147 = (uint32_t)r4_45[0x1081];
0001737e                  int32_t r0_149;
0001737e                  int32_t r1_172;
0001737e                  
0001737e                  if ((uint32_t)r4_45[0x1083] >= 0xaa)
0001737e                  {
000173a2                      r1_172 = 6 - (uint32_t)r4_45[0x1089];
000173a4                      r0_149 = 0xa * r0_147 + ((uint32_t)r4_45[0x1087] << 1) - 0xa;
0001737e                  }
0001737e                  else
0001737e                  {
0001738a                      r0_149 = 0xa * r0_147 + ((uint32_t)r4_45[0x1087] << 1);
0001738e                      r1_172 = 6 - (uint32_t)r4_45[0x1089];
0001737e                  }
0001737e                  
000173b2                  r4_45[0x1082] = sub_12b3e((uint32_t)r4_45[0x1080] * r1_172 * r0_149, 6);
000172b0              }
00016b44          }
00016b44          
000173e8          if ((uint32_t)r4_45[0xf2c] > 0x64)
000173ee              r4_45[0xf2c] = 0x64;
000173ee          
000173f6          r4_45[1] = (char)var_88_4;
000173fc          uint32_t r3_244 = (uint32_t)r4_45[0xfff];
000173fe          uint32_t r1_180 = (uint32_t)r4_45[0xff8];
000173fe          
00017404          if (r3_244 != r1_180)
00017404          {
0001740c              r4_45[0x1000] = (char)r3_244;
00017412              r4_45[0xfff] = (uint8_t)r1_180;
00017416              r4_45[0x1001] = 0;
00017418              r4_45[0x1002] = 0;
00017404          }
00017404          
0001741e          uint32_t r2_217 = (uint32_t)r4_45[0xfff];
00017426          uint32_t r7_47 = (uint32_t)r4_45[0x1000];
00017426          
0001742a          if (r2_217 > r7_47)
0001742a          {
00017430              uint32_t r6_138 = (uint32_t)(r4_45[0x1001] + 1);
00017432              r4_45[0x1001] = (char)r6_138;
00017432              
00017436              if (r6_138 >= 0x20)  /* "117" */
00017438                  r4_45[0x1001] = 0x20;  /* "117" */
00017438              
0001743c              r4_45[0x1002] = 0;
0001742a          }
0001742a          
00017440          if (r2_217 < r7_47)
00017440          {
00017444              r4_45[0x1001] = 0;
0001744a              uint32_t r2_220 = (uint32_t)(r4_45[0x1002] + 1);
0001744c              r4_45[0x1002] = (char)r2_220;
0001744c              
00017450              if (r2_220 >= 0x20)  /* "117" */
00017452                  r4_45[0x1002] = 0x20;  /* "117" */
00017440          }
00017440          
00017456          uint32_t r2_222 = (uint32_t)r4_45[0xf28];
0001745c          int32_t r6_139;
0001745c          int32_t r7_48;
0001745c          
0001745c          if (!r2_222)
0001745c          {
00017474              uint32_t r1_187 = (uint32_t)r4_45[2];
00017474              
00017478              if (r1_187 < 0x46)
00017478              {
0001747a                  r6_139 = 2;
00017582                  r7_48 = 1;
00017478              }
00017478              else if (r1_187 <= 0x64)
00017480              {
00017496                  r6_139 = 2;
00017498                  r7_48 = 2;
00017480              }
00017480              else
00017480              {
00017482                  r6_139 = 1;
00017498                  r7_48 = 2;
00017480              }
0001745c          }
0001745c          else if (r2_222 >= 4)
00017460          {
000174bc              uint32_t r2_226 = (uint32_t)r4_45[0x1082];
000174bc              
000174c0              if (r2_226 >= 0x23)
000174c0              {
000174c2                  uint32_t r2_227 = (uint32_t)r4_45[2];
000174c2                  
000174c6                  r6_139 = r2_227 <= 0x82 ? 4 : 3;
000174c6                  
000174d0                  r7_48 = 2;
000174d0                  
000174d4                  if (r2_227 >= (uint32_t)r4_45[0x1003])
000174d6                      r6_139 = 2;
000174d6                  
000174da                  if (r2_227 > 0xaa)
000174dc                      r6_139 = 1;
000174c0              }
000174c0              else if (r2_226 - 0x14 >= 0xf)  /* "_3.00.33_250117" */
000174e4              {
00017510                  uint32_t r2_230 = (uint32_t)r4_45[2];
00017510                  
00017514                  if (r2_230 >= 0x6e)
00017514                  {
00017526                      if (r2_230 >= 0x8c)
00017526                      {
00017538                          if (r2_230 <= (uint32_t)r4_45[0x1003] + 0xa)
0001753e                              r6_139 = 1;
00017538                          else
0001753a                              r6_139 = 0;
0001753a                          
00017540                          r7_48 = 1;
00017540                          goto label_17546;
00017526                      }
00017526                      
00017528                  label_17528:
00017528                      r6_139 = 2;
0001752a                      r7_48 = 1;
0001752a                      
0001752e                      if (r2_230 > 0x78)
0001752e                      {
00017546                      label_17546:
00017546                          
00017548                          if (var_88_4 - r2_230 + 2 <= 4)
00017548                          {
0001754a                              r6_139 = 1;
0001750c                              r7_48 = 1;
00017548                          }
0001752e                      }
00017514                  }
00017514                  else
00017514                  {
0001751c                      if ((uint32_t)r4_45[0xf39] < 0xa)
0001751c                          goto label_17528;
0001751c                      
0001751e                      r6_139 = 3;
00017520                      r7_48 = 0xffffffff;
00017514                  }
000174e4              }
000174e4              else
000174e4              {
000174e6                  uint32_t r3_250 = (uint32_t)r4_45[0x1003];
000174e8                  uint32_t r2_229 = (uint32_t)r4_45[0x1004];
000174ee                  uint32_t r1_191 = (uint32_t)r4_45[2];
000174ee                  
000174f2                  if ((r3_250 + r2_229) >> 1 < r1_191)
000174f4                      r6_139 = 2;
000174f2                  else if (r1_191 > r2_229)
00017502                      r6_139 = 3;
000174fc                  else
000174fe                      r6_139 = 5;
000174fe                  
00017506                  r7_48 = r1_191 < r3_250 ? 1 : 2;
000174e4              }
000174e4              
00017550              uint32_t r1_198 = (uint32_t)var_d0;
00017550              
00017554              if (r1_198 < 0x5a)
00017554              {
00017556                  uint32_t r1_199 = r1_198 << 1;
00017558                  uint32_t r1_200 = var_88_4 - r1_199;
0001755a                  uint32_t r2_231 = r1_200;
0001755a                  
0001755c                  if (var_88_4 - r1_199 < 0)
0001755e                      r1_200 = 0 - r2_231;
0001755e                  
00017560                  int32_t r1_201 = r1_200 - 0xa;
00017560                  
00017562                  if (r1_200 - 0xa < 0)
00017564                      r1_201 = 0 - r1_201;
00017564                  
0001756e                  if (r1_201 <= 2 || r2_231 + 3 <= 6)
0001756e                  {
0001757a                      if (!(uint32_t)r4_45[0xf6a])
0001757a                      {
00017588                          r4_45[0xf6a] = 1;
0001758a                          r6_139 = 0;
0001758c                          r7_48 = 0;
0001757a                      }
0001757a                      else
0001757a                      {
0001757e                          r4_45[0xf6a] = 0;
00017580                          r6_139 = 1;
00017582                          r7_48 = 1;
0001757a                      }
0001756e                  }
00017554              }
00017460          }
00017460          else
00017460          {
00017468              uint32_t r2_224 = (uint32_t)r4_45[2];
0001746a              uint32_t r1_186 = ((uint32_t)r4_45[0x1003] + (uint32_t)r4_45[0x1004]) >> 1;
0001746a              
0001746e              r6_139 = r1_186 >= r2_224 ? 2 : 1;
0001746e              
0001748e              uint32_t r3_247 = (uint32_t)r4_45[0x1082];
00017490              r7_48 = 1;
00017490              
00017494              if (r3_247 >= 0x23)
00017494              {
00017496                  r6_139 = 2;
00017498                  r7_48 = 2;
00017494              }
00017494              else if (r3_247 < 0xa)
0001749e              {
000174a6                  if (r1_186 + 0xa < r2_224)
000174a8                      r6_139 = 0;
000174a6                  else if (r1_186 - 0xa > r2_224)
000174b0                  {
000174b2                      r6_139 = 1;
0001758c                      r7_48 = 0;
000174b0                  }
0001749e              }
00017460          }
00017460          
00017590          uint32_t r1_203 = (uint32_t)*(uint8_t*)0x208501;
00017590          
00017596          if (r1_203 == 1)
00017596          {
000175b2              if (r2_222)
000175b2              {
000175b8                  if ((uint32_t)r4_45[2] >= 0x78)
000175be                      r6_139 = 1;
000175b8                  else
000175ba                      r6_139 = 2;
000175ba                  
000175c0                  r7_48 = 1;
000175b2              }
000175b2              
000175b2              goto label_175c4;
00017596          }
00017596          
0001759a          if (r1_203 == 2)
0001759a          {
000175d4              if (r2_222)
000175d4              {
000175da                  if ((uint32_t)r4_45[2] >= 0x78)
000175e0                      r6_139 = 1;
000175da                  else
000175dc                      r6_139 = 2;
000175dc                  
000175e2                  r7_48 = 1;
000175d4              }
000175d4              
000175d4              goto label_175e6;
0001759a          }
0001759a          
0001759e          if (r1_203 == 4)
0001759e          {
000175fe              if (r2_222)
000175fe              {
00017600                  uint32_t r2_234 = (uint32_t)r4_45[2];
00017600                  
00017604                  if (r2_222 >= 4)
00017604                  {
00017620                      if (r2_234 > 0xa * r2_222 + 0x64)
00017622                          r6_139 = 1;
00017604                  }
00017604                  else if (r2_234 > 0x64)
00017622                      r6_139 = 1;
00017608                  else if (r2_234 > 0xa * r2_222 + 0x64)
00017614                      r6_139 = 0;
000175fe              }
000175fe              
000175fe              goto label_17676;
0001759e          }
0001759e          
000175a2          if (r1_203 == 5)
000175a2          {
0001762a              if (r2_222 > 1)
0001762a              {
0001762c                  uint32_t r1_219 = (uint32_t)r4_45[2];
0001762c                  
00017630                  if (r1_219 >= 0x64)
00017630                  {
0001763c                      if (r1_219 >= 0x78)
0001763c                      {
00017660                          if (r1_219 >= 0x8c || r2_222 == 2)
00017660                          {
00017662                              r6_139 = 2;
00017664                              r7_48 = 1;
00017660                          }
00017660                          else
00017660                          {
0001764e                              r6_139 = 3;
00017664                              r7_48 = 1;
00017660                          }
0001763c                      }
0001763c                      else if (r2_222 == 2)
00017642                      {
0001764e                          r6_139 = 3;
00017664                          r7_48 = 1;
00017642                      }
00017642                      else if (r2_222 == 3)
00017646                      {
00017652                          r6_139 = 3;
00017654                          r7_48 = 0;
00017646                      }
00017646                      else
00017646                      {
00017648                          r6_139 = 3;
0001764a                          r7_48 = 0xffffffff;
00017646                      }
00017630                  }
00017630                  else if (r2_222 == 2)
00017636                  {
00017652                      r6_139 = 3;
00017654                      r7_48 = 0;
00017636                  }
00017636                  else
00017636                  {
00017648                      r6_139 = 3;
0001764a                      r7_48 = 0xffffffff;
00017636                  }
0001762a              }
0001762a              
0001762a              goto label_17676;
000175a2          }
000175a2          
000175a6          if (r1_203 == 1)
000175a6          {
000175c4          label_175c4:
000175c4              
000175cc              if ((uint32_t)r4_45[0xf4d] > 2 && r2_222)
000175f6                  r7_48 = 0;
000175a6          }
000175a6          else if (r1_203 == 2)
000175aa          {
000175e6          label_175e6:
000175e6              
000175f4              if ((uint32_t)r4_45[0xf4d] > 2 && r2_222 && (uint32_t)r4_45[2] < 0x6e)
000175f6                  r7_48 = 0;
000175aa          }
000175aa          else
000175aa          {
00017676          label_17676:
00017676              
00017676              if ((uint32_t)r4_45[0xf4c] > 0x14 && (uint32_t)r4_45[0xf4d] > 3
00017676                  && r2_222 >= 4)  /* "_3.00.33_250117" */
00017676              {
00017678                  uint32_t r1_226 = (uint32_t)r4_45[2];
00017678                  
0001767c                  if (r1_226 < 0x78)
00017680                      r7_48 = 0xffffffff;
0001767c                  else if (r1_226 < 0x8c)
00017688                      r7_48 = 0;
00017676              }
00017676              
0001768e              if (r1_203 == 5)
0001768e              {
00017698                  if (r1_180 >= 4 || r1_180 >= 3)
00017698                  {
0001769c                      uint32_t r1_230 = (uint32_t)r4_45[0xfe3];
0001769c                      
000176a0                      if (r1_230 < 0x3c)
000176b4                          r4_45[0xfe0 + 3] = (uint8_t)r1_230 + 1;
00017698                  }
00017698                  else
00017698                  {
000176aa                      uint32_t r1_233 = (uint32_t)r4_45[0xfe3];
000176aa                      
000176ae                      if (r1_233)
000176b4                          r4_45[0xfe0 + 3] = (uint8_t)r1_233 - 2;
00017698                  }
00017698                  
000176ba                  if (r2_222 >= 3)
000176ba                  {
000176c2                      if ((uint32_t)r4_45[0xfe3] >= 0x28)
000176c2                      {
000176c4                          uint32_t r1_237 = (uint32_t)r4_45[2];
000176c4                          
000176c8                          if (r1_237 < 0x64)
000176c8                          {
000176ca                              r6_139 = 3;
000176cc                              r7_48 = 0xffffffff;
000176c8                          }
000176c8                          else if (r1_237 < 0x78)
000176d2                          {
000176d4                              r6_139 = 3;
000175f6                              r7_48 = 0;
000176d2                          }
000176d2                          else if (r1_237 < 0x8c)
000176da                          {
000176dc                              r6_139 = 3;
000176de                              r7_48 = 1;
000176da                          }
000176da                          else if (r1_237 > 0xa0 && var_88_4 > r1_237 + 0xa)
000176ea                          {
000176f0                              if (r2_222 >= 4)
000176fa                                  r6_139 = 1;
000176f0                              else
000176f2                                  r6_139 = 0;
000176ea                          }
000176c2                      }
000176c2                      else if (r6_139 > 1)
000176fa                          r6_139 = 1;
000176ba                  }
0001768e              }
000175aa          }
000175aa          
000176fc          int32_t r1_240 = *(uint32_t*)(r4_45 + 8);
000176fc          
00017702          if (r1_240 == 0xe1)
00017702          {
0001770a              if (r1_203 == 4)
0001770a              {
0001771a                  if (!r2_222 && var_54 > 0x10)  /* "RY02_3.00.33_250117" */
0001771a                  {
0001771e                      if (var_88_4 <= 0x78)
0001771e                          goto label_17742;
0001771e                      
0001775a                      r4_45[1] = sub_12b2a(var_88_4, 0xa) + 0x78;
0001771a                  }
0001771a                  else if (var_88_4 <= 0x64)
00017736                  {
00017742                  label_17742:
00017742                      
00017744                      if (var_88_4 < 0x4b)
0001775a                          r4_45[1] = sub_12b2a(var_88_4, 0xa) + 0x46;
00017736                  }
00017736                  else
0001775a                      r4_45[1] = sub_12b2a(var_88_4, 0xa) + 0x64;
0001770a              }
0001770a              else if ((r2_222 || var_54 <= 0x10) && var_88_4 > 0x5f)  /* "
0001770a                      RY02_3.00.33_250117" */
0001775a                  r4_45[1] = sub_12b2a(var_88_4, 0xa) + 0x5a;
0001775a              
00017760              r4_45[0xf29] = 0;
00017766              r4_45[2] = r4_45[1];
0001776a              *(uint8_t*)0x208502 = 2;
00017702          }
00017702          
00017770          if (!r2_222)
00017770          {
0001778a              if (r1_240 == 0xe1)
0001778a              {
000177f0                  for (uint32_t i_21 = 0; i_21 < 5; )
000177f0                  {
000177e2                      *(uint32_t*)((i_21 << 2) + r4_45 + 0xfc8) = var_54;
000177ea                      i_21 = (uint32_t)((uint16_t)i_21 + 1);
000177ec                      var_5c += var_54;
000177f0                  }
000177f0                  
000177c8                  r4_45[0xf6b] = sub_12b3e(var_5c, 5);
0001778a              }
0001778a              else if (r1_240 > 0xe1 && var_54)
00017792              {
000177b0                  for (uint32_t i_22 = 0; i_22 < 4; )
000177b0                  {
000177a0                      int32_t r2_238 = *(uint32_t*)((i_22 << 2) + r4_45 + 0xfcc);
000177a2                      *(uint32_t*)((i_22 << 2) + r4_45 + 0xfc8) = r2_238;
000177aa                      i_22 = (uint32_t)((uint16_t)i_22 + 1);
000177ac                      var_5c += r2_238;
000177b0                  }
000177b0                  
000177b6                  *(uint32_t*)(r4_45 + 0xfd8) = var_54;
000177c8                  r4_45[0xf6b] = sub_12b3e(var_54 + var_5c, 5);
00017792              }
00017792              
00017778              r4_45[0xf5c] = r4_45[0xf6b];
00017770          }
00017770          else if (r2_222 != 1)
00017778              r4_45[0xf5c] = -1;
00017774          else if (r1_240 == 0xe1)
000177fc          {
00017814              for (uint32_t i_23 = 0; i_23 < 5; )
00017814              {
0001780a                  void* r3_257 = &r4_45[(i_23 << 2) + 0xf80];
0001780e                  i_23 = (uint32_t)((uint16_t)i_23 + 1);
00017810                  *(uint32_t*)((char*)r3_257 + 0x48) = 0xa;
00017814              }
00017814              
0001781c              r4_45[0xf6b] = 0xa;
000177fc          }
000177fc          
00017780          if (!(uint32_t)r4_45[0xf29])
00017780          {
00017820              uint32_t r1_260 = (uint32_t)r4_45[2];
00017822              uint32_t r2_239 = (uint32_t)r4_45[1];
00017824              uint32_t r0_165 = r1_260 - r7_48;
00017824              
00017828              if (r0_165 > r2_239)
00017830                  r4_45[1] = (char)r0_165;
00017828              else
00017828              {
0001782a                  r0_165 = r1_260 + r6_139;
0001782a                  
0001782e                  if (r0_165 < r2_239)
00017830                      r4_45[1] = (char)r0_165;
00017828              }
00017780          }
00017780          else
00017830              r4_45[1] = (char)var_88_4;
00017830          
0001783a          if (r1_203 != 1 && r1_203 != 2)
0001783a          {
00017848              if ((uint32_t)r4_45[0xf4c] <= 0x14
00017848                      || (uint32_t)r4_45[1] >= (uint32_t)r4_45[2])  /* "_3.00.33_250117" */
00017840                  goto label_17864;
00017840              
00017840              goto label_1784a;
0001783a          }
0001783a          
00017862          if ((uint32_t)r4_45[1] >= (uint32_t)r4_45[2] || !(uint32_t)r4_45[0xf28])
00017862          {
00017864          label_17864:
00017864              uint32_t r0_185 = (uint32_t)r4_45[0xf4d];
00017864              
00017868              if (r0_185)
0001786c                  r4_45[0xf4d] = (uint8_t)r0_185 - 1;
00017862          }
00017862          else
00017862          {
0001784a          label_1784a:
0001784a              uint32_t r0_180 = (uint32_t)r4_45[0xf4d];
0001784a              
0001784e              if (r0_180 < 0xa)
0001786c                  r4_45[0xf4d] = (uint8_t)r0_180 + 1;
00017862          }
00017862          
00017870          int32_t r6_141 = *(uint32_t*)(r4_45 + 8);
00017870          
00017874          if (r6_141 > 0x2ee)
00017874          {
0001787a              int32_t r0_186;
0001787a              
0001787a              if (r6_141 < 0x3a98)
0001787c                  r0_186 = 6;
0001787a              else if (r6_141 >= 0xafc8)
0001788a                  r0_186 = 0xa;
00017884              else
00017886                  r0_186 = 8;
00017886              
0001788c              uint32_t r1_263 = (uint32_t)r4_45[1];
00017890              void* r0_187;
00017890              
00017890              if (r1_263 < 0x50)
00017890              {
00017896                  r0_187 = &r4_45[0xf00];
000178ac                  *(uint32_t*)((char*)r0_187 + 0x60) += 0xf;
00017890              }
00017890              else if (r1_263 >= 0x64)
000178a0              {
000178b2                  int32_t r0_188;
000178b2                  void* r1_267;
000178b2                  int32_t r3_258;
000178b2                  
000178b2                  if (r1_263 < 0x78)
000178b2                  {
000178b8                      r1_267 = &r4_45[0xf00];
000178bc                      r3_258 = *(uint32_t*)((char*)r1_267 + 0x60);
000178f6                      r0_188 = 0xa * r0_186;
000178b2                  }
000178b2                  else if (r1_263 >= 0x8c)
000178c2                  {
000178d4                      int32_t r5_32;
000178d4                      
000178d4                      if (r1_263 < 0xa0)
000178d4                      {
000178da                          r1_267 = &r4_45[0xf00];
000178dc                          r5_32 = 0x14;  /* "_3.00.33_250117" */
000178de                          r3_258 = *(uint32_t*)((char*)r1_267 + 0x60);
000178d4                      }
000178d4                      else if (r1_263 >= 0xb4)
000178e6                      {
000178f0                          r1_267 = &r4_45[0xf00];
000178f2                          r3_258 = *(uint32_t*)((char*)r1_267 + 0x60);
000178f4                          r5_32 = 0x19;  /* ".33_250117" */
000178e6                      }
000178e6                      else
000178e6                      {
000178e8                          r1_267 = &r4_45[0xf00];
000178ea                          r5_32 = 0x16;  /* ".00.33_250117" */
000178ec                          r3_258 = *(uint32_t*)((char*)r1_267 + 0x60);
000178e6                      }
000178e6                      
000178f6                      r0_188 = r5_32 * r0_186;
000178c2                  }
000178c2                  else
000178c2                  {
000178c8                      r1_267 = &r4_45[0xf00];
000178cc                      r0_188 = r0_186 * 0xf;
000178ce                      r3_258 = *(uint32_t*)((char*)r1_267 + 0x60);
000178c2                  }
000178c2                  
000178fa                  *(uint32_t*)((char*)r1_267 + 0x60) = r3_258 + r0_188;
000178a0              }
000178a0              else
000178a0              {
000178a6                  r0_187 = &r4_45[0xf00];
000178ac                  *(uint32_t*)((char*)r0_187 + 0x60) += 0x14;  /* "_3.00.33_250117" */
000178a0              }
00017874          }
00017874          
00017902          uint32_t r5_34 = (uint32_t)r4_45[1];
00017902          
00017908          if (r5_34 > (uint32_t)*(uint16_t*)(r4_45 + 0xfdc))
0001790a              *(uint16_t*)(r4_45 + 0xfdc) = (int16_t)r5_34;
0001790a          
00017910          if (r5_34 < (uint32_t)*(uint16_t*)(r4_45 + 0xfde))
00017912              *(uint16_t*)(r4_45 + 0xfde) = (int16_t)r5_34;
00017912          
00017916          int16_t r1_270;
00017916          
00017916          if (r5_34 < 0x4b)
00017918              r1_270 = 0;
00017916          else if (r5_34 >= 0x5f)
00017926              r1_270 = 0x14;  /* "_3.00.33_250117" */
0001791e          else
00017922              r1_270 = (uint16_t)r5_34 - 0x4b;
00017922          
00017928          *(uint16_t*)(r4_45 + 0xfe0) = r1_270;
0001792a          uint32_t r2_240 = (uint32_t)*(uint16_t*)(r4_45 + 0xfdc);
0001792c          uint32_t r1_272 = (uint32_t)*(uint16_t*)(r4_45 + 0xfde);
0001792c          
0001793c          if (r2_240 > r1_272 && r1_272 && r6_141 > 0x1f4)
0001793c          {
0001794c              uint32_t r0_193 = (uint32_t)((char)(r5_34 >> 2) + (char)(r5_34 << 1)
0001794c                  - (uint8_t)r2_240 - (uint8_t)r1_272 + (char)*(uint16_t*)(r4_45 + 0xfe0));
00017952              r4_45[0xfe2] = (char)r0_193;
00017952              
00017954              if (r0_193 < 0x14)  /* "_3.00.33_250117" */
00017960                  r4_45[0xfe2] = sub_12b2a(r0_193, 0xa) + 0x14;  /* "_3.00.33_250117" */
00017960              
00017964              uint32_t r0_196 = (uint32_t)r4_45[0xfe2];
00017964              
00017968              if (r0_196 > 0x3c)
00017974                  r4_45[0xfe2] = sub_12b2a(r0_196, 0xa) + 0x3c;
0001793c          }
0001793c          
00017976          uint32_t r0_198 = (uint32_t)*(uint16_t*)(r4_45 + 4);
0001797c          uint32_t r0_202;
0001797c          
0001797c          r0_202 = !r0_198 ? r5_34 << 3 : (r0_198 * 3 + (r5_34 << 3)) << 0xe >> 0x10;
0001797c              /* "RY02_3.00.33_250117" */
0001797c          
000179a0          *(uint16_t*)(r4_45 + 4) = (int16_t)r0_202;
000179a4          uint32_t r0_204 = r0_202 << 0x15 >> 0x18;
000179a4              /* "3.00.33_250117" */  /* "0.33_250117" */
000179aa          *(uint8_t*)r4_45 = (char)r0_204;
000179aa          
000179be          if (r6_141 > 0x190 && r0_204 && !(uint32_t)r4_45[0xf68])
000179ca              sub_15580(r0_204, *(uint32_t*)0x208510, (int16_t)*(uint32_t*)0x208514);
00016524      }
00016524      
000179d2      *(uint8_t*)0x208508 = 0;
000179d4      uint32_t r2_243 = (uint32_t)*(uint8_t*)0x208504;
000179d4      
000179d8      if (r2_243 == 1)
000179d8      {
000179e0          void* r2_244 = *(uint32_t*)0x20850c;
000179e0          
000179e6          if (*(uint32_t*)((char*)r2_244 + 8) < 0x64)
000179e6          {
00017a54          label_17a54:
00017a56              *(uint8_t*)0x208508 = 6;
00017a3c              *(uint8_t*)0x208507 = 0;
000179e6          }
000179e6          else
000179e6          {
000179ec              *(uint8_t*)0x208508 = 1;
000179ec              
000179f8              if (*(uint32_t*)((char*)r2_244 + 0xfb0) < (uint32_t)*(uint8_t*)0x208506)
000179f8              {
00017a12                  *(uint8_t*)0x208508 = 4;
00017a3c                  *(uint8_t*)0x208507 = 2;
000179f8              }
000179f8              else
000179f8              {
000179fc                  *(uint8_t*)0x208508 = 2;
000179fc                  
00017a0a                  if ((uint32_t)*(uint8_t*)((char*)r2_244 + 0xf5c)
00017a0a                      >= (uint32_t)*(uint8_t*)0x208505)
00017a0a                  {
00017a56                      *(uint8_t*)0x208508 = 3;
00017a3c                      *(uint8_t*)0x208507 = 1;
00017a0a                  }
000179f8              }
000179e6          }
000179d8      }
000179d8      else
000179d8      {
000179dc          if (r2_243 != 2)
000179dc              goto label_17a54;
000179dc          
00017a18          void* r2_248 = *(uint32_t*)0x20850c;
00017a18          
00017a1e          if (*(uint32_t*)((char*)r2_248 + 8) < 0x64)
00017a1e              goto label_17a54;
00017a1e          
00017a22          *(uint8_t*)0x208508 = 5;
00017a32          uint32_t r1_288;
00017a32          uint32_t r2_249;
00017a32          
00017a32          if (*(uint32_t*)((char*)r2_248 + 0xfb0) < (uint32_t)*(uint8_t*)0x208506)
00017a32          {
00017a44              r1_288 = (uint32_t)*(uint8_t*)((char*)r2_248 + 0xf5c);
00017a4a              r2_249 = ((uint32_t)*(uint8_t*)0x208505 * 3) >> 1;
00017a32          }
00017a32          else
00017a32          {
00017a36              r1_288 = (uint32_t)*(uint8_t*)((char*)r2_248 + 0xf5c);
00017a38              r2_249 = (uint32_t)*(uint8_t*)0x208505;
00017a32          }
00017a32          
00017a4e          if (r1_288 >= r2_249)
00017a3c              *(uint8_t*)0x208507 = 1;
000179d8      }
000179d8      
00017a5a      void* r0_205 = *(uint32_t*)0x20850c;
00017a60      *(uint32_t*)((char*)r0_205 + 8) += 1;
00017a66      return 1;
00015e14  }

00016274  int32_t data_16274 = 0x208500
00016278  void* data_16278 = data_4e20
0001627c  int32_t data_1627c = 0xc350
00016280  int32_t data_16280 = 0xf6c
00016284  int32_t data_16284 = 0x5dc
00016288  int32_t data_16288 = 0x11940
0001628c  char const (* data_1628c)[0x2] = data_bb80 {"}""}
00016290  int32_t data_16290 = 0x4af
00016698  int32_t data_16698 = 0x208500
0001669c  int32_t data_1669c = 0x83e7ef
000166a0  int32_t data_166a0 = -0x296c5c00
000166a4  int32_t data_166a4 = -0x23767b00
000166a8  int32_t data_166a8 = 0x17700

00016b0e                                            ff e7                                                                ..

00016bc0  int32_t data_16bc0 = -0x296c5c00
00016bc4  int32_t data_16bc4 = -0x23767b00
00016bc8  int32_t data_16bc8 = 0x2ee
00016bcc  int32_t data_16bcc = 0x17700
00016bd0  int32_t data_16bd0 = 0x208500
00016bd4  int32_t data_16bd4 = 0x1770
00017988  int32_t data_17988 = 0x208500
0001798c  int32_t data_1798c = 0x2ee
00017990  int32_t data_17990 = 0x3a98
00017994  int32_t data_17994 = 0xafc8
00017998  int32_t data_17998 = 0xf00
00017a68  int32_t data_17a68 = 0x208500
00017a6c  int32_t data_17a6c = 0xf40

00017a70    int32_t sub_17a70()

00017a70  {
00017a76      if (*(uint32_t*)0x20850c)
00017a7a          *(uint32_t*)0x20850c = 0;
00017a7a      
00017a7c      return 0x208500;
00017a70  }

00017a7e                                                                                            00 00                                ..

00017a80  int32_t data_17a80 = 0x208500

00017a84    int32_t sub_17a84(int32_t arg1)

00017a84  {
00017a8e      uint8_t var_38;
00017a8e      0xff81b968(&var_38, 0x28);
00017a96      uint32_t r0_1 = (uint32_t)*(uint8_t*)0x208502;
00017a98      var_38 = (char)r0_1;
00017a9a      uint32_t r3 = (uint32_t)*(uint8_t*)0x208507;
00017a9c      uint8_t var_37 = (char)r3;
00017a9e      char* r1 = *(uint32_t*)0x20850c;
00017aa2      int32_t var_34 = *(uint32_t*)(r1 + 8);
00017aae      char var_2c = r1[0xf5c];
00017ab8      int32_t var_28 = *(uint32_t*)(r1 + 0xfb0);
00017ab8      
00017ac6      if (r0_1 != 2 || (r3 != 1 && (uint32_t)*(uint8_t*)0x208504))
00017ac6      {
00017acc          char var_30 = 0;
00017ace          int16_t var_2e = 0;
00017ad2          char var_14 = 0;
00017ac6      }
00017ac6      else
00017ac6      {
00017afc          char var_30_1 = *(uint8_t*)r1;
00017b0c          uint16_t var_2e_1 = (int16_t)(*(uint32_t*)(r1 + 0xf60) << 6 >> 0x10);
00017b0c              /* "RY02_3.00.33_250117" */
00017b18          char var_14_1 = r1[0xfe2];
00017ac6      }
00017ac6      
00017adc      int32_t var_24 = *(uint32_t*)(r1 + 0x10c4);
00017ae0      int32_t var_20 = *(uint32_t*)(r1 + 0x10c8);
00017aea      int32_t var_18 = *(uint32_t*)(r1 + 0x1110);
00017aec      int32_t r1_2 = *(uint32_t*)(r1 + 0x110c);
00017aec      
00017af2      if (r1_2 - 1 <= 0x27)
00017b32          int32_t var_1c_1 = r1_2 + 0x5b;
00017af2      else if (r1_2 - 0x29 <= 0x1c)  /* "_250117" */
00017b32          var_1c_1 = r1_2 + 0x45;
00017b22      else if (r1_2 - 0x46 <= 0x1e)  /* "50117" */
00017b32          var_1c_1 = r1_2 + 0x26;
00017b2e      else if (r1_2 > 0x64)
00017b3c          int32_t var_1c_2 = 0x8b;
00017b3c      
00017b4a      return 0xff7dc2f8(arg1, &var_38, 0x28);
00017a84  }

00017b4c  int32_t data_17b4c = 0x208500

00017b50    int32_t sub_17b50()

00017b50  {
00017b56      *(uint8_t*)0x208502 = 1;
00017b5a      *(uint8_t*)0x208507 = 0;
00017b5e      *(uint32_t*)0x20850c = 0x20c194;
00017b60      *(uint8_t*)0x20c194 = 0;
00017b64      *(uint8_t*)0x20c195 = 0x48;
00017b66      *(uint8_t*)0x20c196 = 0x48;
00017b68      *(uint16_t*)0x20c198 = 0;
00017b6a      *(uint32_t*)0x20c19c = 0;
00017b70      __builtin_memset(0x20c1a8, 0, 0x39);
00017b70      
00017bba      for (uint32_t i = 0; i < 0x6e; )
00017bba      {
00017b98          *(uint16_t*)((i << 1) + 0x20c1e2) = 0;
00017b9e          *(uint16_t*)((i << 1) + 0x20c2be) = 0;
00017baa          *(uint32_t*)((i << 3) + 0x20c39c) = 0;
00017bac          *(uint32_t*)((i << 3) + 0x20c3a0) = 0;
00017bae          void* r3_9 = (i << 3) + 0x20c694;
00017bb2          *(uint32_t*)((char*)r3_9 + 0x78) = 0;
00017bb4          i = (uint32_t)((uint16_t)i + 1);
00017bb6          *(uint32_t*)((char*)r3_9 + 0x7c) = 0;
00017bba      }
00017bba      
00017bd8      for (uint32_t i_1 = 0; i_1 < 0xc8; )
00017bd8      {
00017bcc          void* r3_12 = (i_1 << 2) + 0x20cd94;
00017bd0          *(uint32_t*)((i_1 << 2) + 0x20ca7c) = 0;
00017bd2          i_1 = (uint32_t)((uint16_t)i_1 + 1);
00017bd4          *(uint32_t*)((char*)r3_12 + 8) = 0;
00017bd8      }
00017bd8      
00017be0      *(uint8_t*)0x20d0bc = 0;
00017be2      *(uint8_t*)0x20d0bd = 1;
00017be4      *(uint8_t*)0x20d0be = 0;
00017be6      *(uint8_t*)0x20d0bf = 0;
00017be8      *(uint8_t*)0x20d0c0 = 0;
00017be8      
00017bfa      for (uint32_t i_2 = 0; i_2 < 6; )
00017bfa      {
00017bee          void* r5_3 = i_2 + 0x20d0b4;
00017bf2          *(uint8_t*)((char*)r5_3 + 0xd) = 0;
00017bf4          i_2 = (uint32_t)((uint16_t)i_2 + 1);
00017bf6          *(uint8_t*)((char*)r5_3 + 0x13) = 0;  /* "2_3.00.33_250117" */
00017bfa      }
00017bfa      
00017bfe      *(uint8_t*)0x20d0cd = 0;
00017c02      *(uint8_t*)0x20d0ce = 0;
00017c0a      __builtin_memset(0x20d0d0, 0, 0x12);  /* "02_3.00.33_250117" */
00017c20      *(uint32_t*)0x20d0e4 = 0;
00017c22      *(uint8_t*)0x20d0e8 = 0;
00017c24      *(uint8_t*)0x20d0e9 = 0;
00017c28      *(uint8_t*)0x20d0ea = 0x50;
00017c2a      *(uint8_t*)0x20d0eb = 0x50;
00017c2a      
00017c3a      for (uint32_t i_3 = 0; i_3 < 4; )
00017c3a      {
00017c30          void* r6_2 = i_3 + 0x20d0d4;
00017c34          i_3 = (uint32_t)((uint16_t)i_3 + 1);
00017c36          *(uint8_t*)((char*)r6_2 + 0x18) = 0;  /* "0.33_250117" */
00017c3a      }
00017c3a      
00017c3e      *(uint8_t*)0x20d0f0 = 4;
00017c42      *(uint32_t*)0x20d0f4 = 0;
00017c48      *(uint32_t*)0x20d0f8 = 0;
00017c4a      *(uint8_t*)0x20d0fc = 0;
00017c4c      *(uint8_t*)0x20d0fd = 0;
00017c4e      *(uint8_t*)0x20d0fe = 0;
00017c52      *(uint8_t*)0x20d0ff = 0x14;  /* "_3.00.33_250117" */
00017c52      
00017c64      for (uint32_t i_4 = 0; i_4 < 0x10; )  /* "RY02_3.00.33_250117" */
00017c64      {
00017c5a          void* r3_15 = (i_4 << 2) + 0x20d094;
00017c5e          i_4 = (uint32_t)((uint16_t)i_4 + 1);
00017c60          *(uint32_t*)((char*)r3_15 + 0x6c) = 0;
00017c64      }
00017c64      
00017c6c      *(uint32_t*)0x20d140 = 0;
00017c6e      *(uint32_t*)0x20d144 = 0;
00017c6e      
00017c82      for (uint32_t i_5 = 0; i_5 < 5; )
00017c82      {
00017c76          void* r4_5 = (i_5 << 2) + 0x20d114;
00017c7a          *(uint32_t*)((char*)r4_5 + 0x34) = 0;  /* "_V3.0" */
00017c7c          i_5 = (uint32_t)((uint16_t)i_5 + 1);
00017c7e          *(uint32_t*)((char*)r4_5 + 0x48) = 0;
00017c82      }
00017c82      
00017c8e      *(uint8_t*)0x20d177 = 0;
00017c92      *(uint16_t*)0x20d170 = 0;
00017c96      *(uint16_t*)0x20d172 = 0xc8;
00017c98      *(uint16_t*)0x20d174 = 0;
00017c9a      *(uint8_t*)0x20d176 = 0;
00017c9a      
00017cb0      for (uint32_t i_6 = 0; i_6 < 0xb; )
00017cb0      {
00017ca6          void* r4_7 = (i_6 << 2) + 0x20d214;
00017caa          i_6 = (uint32_t)((uint16_t)i_6 + 1);
00017cac          *(uint32_t*)((char*)r4_7 + 0xc) = 0;
00017cb0      }
00017cb0      
00017cb4      __builtin_memset(0x20d24c, 0, 0x14);  /* "_3.00.33_250117" */
00017cb4      
00017cce      for (uint32_t i_7 = 0; i_7 < 0x10; )  /* "RY02_3.00.33_250117" */
00017cce      {
00017cc4          void* r4_9 = (i_7 << 2) + 0x20d214;
00017cc8          i_7 = (uint32_t)((uint16_t)i_7 + 1);
00017cca          *(uint32_t*)((char*)r4_9 + 0x4c) = 0;
00017cce      }
00017cce      
00017cd6      *(uint32_t*)0x20d2a0 = 0;
00017cd8      *(uint32_t*)0x20d2a4 = 0;
00017cda      sub_159d0();
00017ce0      return 1;
00017b50  }

00017ce2        00 00                                                                                        ..

00017ce4  int32_t data_17ce4 = 0x208500
00017ce8  int32_t data_17ce8 = 0x20c194

00017cec    int32_t sub_17cec()

00017cec  {
00017cee      sub_17b50();
00017cf4      return 1;
00017cec  }

00017cf6                                                                    00 00                                                ..

00017cf8    int32_t sub_17cf8(int32_t* arg1, int32_t arg2, void* arg3, void* arg4, void* arg5)

00017cf8  {
00017cf8      void* var_1c = arg3;
00017cf8      int32_t var_20 = arg2;
00017cf8      int32_t* var_24 = arg1;
00017cfe      uint32_t i = 0;
00017d00      int32_t result = *(uint32_t*)0x20850c;
00017d00      
00017d0a      if (!result)
00017d4a          return result;
00017d4a      
00017d0e      if (!arg3)
00017d0e      {
00017d26          for (; i < arg2; i = (uint32_t)((uint8_t)i + 1))
00017d1c              sub_15e14(arg1[i], 0, 0, 0);
00017d0e      }
00017d0e      else
00017d0e      {
00017d44          for (; i < arg2; i = (uint32_t)((uint8_t)i + 1))
00017d44          {
00017d2c              int32_t r0_2 = i << 1;
00017d3a              sub_15e14(arg1[i], (int32_t)*(uint16_t*)((char*)arg3 + r0_2), 
00017d3a                  (int32_t)*(uint16_t*)((char*)arg4 + r0_2), 
00017d3a                  (int32_t)*(uint16_t*)((char*)arg5 + r0_2));
00017d44          }
00017d0e      }
00017d0e      
00017d46      return 1;
00017cf8  }

00017d4c  int32_t data_17d4c = 0x208500

00017d50    void sub_17d50(char arg1, char arg2, char arg3)

00017d50  {
00017d52      *(uint8_t*)0x208504 = arg1;
00017d54      *(uint8_t*)0x208505 = arg2;
00017d56      *(uint8_t*)0x208506 = arg3;
00017d50  }

00017d5a                                                                                00 00                                        ..

00017d5c  int32_t data_17d5c = 0x208500

00017d60    uint32_t sub_17d60()

00017d60  {
00017d66      uint32_t i_10 = 0;
00017d68      int32_t var_2c = 0;
00017d6a      int32_t var_38 = 0;
00017d6c      int16_t var_34 = 0;
00017d72      int32_t var_50[0x5];
00017d72      0xff81b968(&var_50, 0x18);  /* "0.33_250117" */
00017d7a      int32_t var_28 = 0;
00017d7c      int32_t r12 = 0;
00017d7e      int32_t r1 = 0;
00017d80      int32_t r3 = 0;
00017d82      void* r2 = *(uint32_t*)0x2084d0;
00017d84      int32_t r0_1 = 0xd693a400;
00017d86      int32_t r6 = 0xdc898500;
00017e12      uint32_t i;
00017e12      
00017e12      do
00017e12      {
00017d92          void* r2_3 = (i_10 << 3) + r2;
00017da2          int32_t r4_4 = *(uint32_t*)((char*)r2_3 + 0x6fc) >> 0xf;
00017da4          int32_t r2_6 = *(uint32_t*)((char*)r2_3 + 0x700) >> 0xf;
00017daa          int32_t r4_6 = r4_4 * r4_4 + r2_6 * r2_6;
00017db0          var_28 += r4_6;
00017db0          
00017db8          if (r4_6 < r0_1 && r0_1 >= r6)
00017db8          {
00017dfa              for (uint32_t j = 0; j < 6; j = (uint32_t)((uint16_t)j + 1))
00017dfa              {
00017dca                  int32_t r5_5 = var_50[j];
00017dca                  
00017dce                  if (r5_5 < r0_1)
00017dce                  {
00017dd2                      if (j)
00017dd2                      {
00017ddc                          *(uint8_t*)(&var_38 + j - 1) = *(uint8_t*)(&var_38 + j);
00017de6                          *(uint32_t*)(&var_50[j] - 4) = r5_5;
00017dd2                      }
00017dd2                      
00017dec                      *(uint8_t*)(&var_38 + j) = (uint8_t)i_10 - 1;
00017df2                      var_50[j] = r0_1;
00017dce                  }
00017dfa              }
00017db8          }
00017db8          
00017dfe          r6 = r0_1;
00017e00          r0_1 = r4_6;
00017e00          
00017e04          if (r4_6 > var_2c)
00017e06              var_2c = r0_1;
00017e06          
00017e0c          i = (uint32_t)((uint16_t)i_10 + 1);
00017e0e          i_10 = i;
00017e12      } while (i < 0x64);
00017e20      int32_t var_3c;
00017e20      *(uint32_t*)((char*)r2 + 0xc8c) = var_3c;
00017e24      uint32_t r7_3 = (uint32_t)*(uint8_t*)((char*)var_34)[1];
00017e24      
00017e34      if (r7_3 - 0xa <= 0x4f)
00017e34      {
00017e68          for (uint32_t i_1 = (uint32_t)(uint16_t)(r7_3 - 0xa); r7_3 + 0xa >= i_1; 
00017e68              i_1 = (uint32_t)((uint16_t)i_1 + 1))
00017e68          {
00017e48              void* r0_11 = (i_1 << 3) + r2;
00017e54              int32_t r4_10 = *(uint32_t*)((char*)r0_11 + 0x6fc) >> 0xf;
00017e56              int32_t r0_14 = *(uint32_t*)((char*)r0_11 + 0x700) >> 0xf;
00017e5e              r12 += r4_10 * r4_10 + r0_14 * r0_14;
00017e68          }
00017e34      }
00017e34      else if (r7_3 < 0xa)
00017e6e      {
00017ea4          for (uint32_t i_2 = 0; r7_3 + 0xa >= i_2; i_2 = (uint32_t)((uint16_t)i_2 + 1))
00017ea4          {
00017e84              void* r0_22 = (i_2 << 3) + r2;
00017e90              int32_t r4_14 = *(uint32_t*)((char*)r0_22 + 0x6fc) >> 0xf;
00017e92              int32_t r0_25 = *(uint32_t*)((char*)r0_22 + 0x700) >> 0xf;
00017e9a              r12 += r4_14 * r4_14 + r0_25 * r0_25;
00017ea4          }
00017e6e      }
00017e6e      else if (r7_3 > 0x59)
00017eaa      {
00017eae          uint32_t i_3 = (uint32_t)(uint16_t)(r7_3 - 0xa);
00017eb8          int16_t var_30_2 = (uint16_t)i_3;
00017eb8          
00017ede          while (i_3 < 0x64)
00017ede          {
00017ebe              void* r0_31 = (i_3 << 3) + r2;
00017ec8              int32_t r4_18 = *(uint32_t*)((char*)r0_31 + 0x6fc) >> 0xf;
00017eca              int32_t r0_34 = *(uint32_t*)((char*)r0_31 + 0x700) >> 0xf;
00017ed2              r12 += r4_18 * r4_18 + r0_34 * r0_34;
00017ed8              i_3 = (uint32_t)(var_30_2 + 1);
00017eda              var_30_2 = (uint16_t)i_3;
00017ede          }
00017eaa      }
00017eaa      
00017ee0      uint32_t r2_14 = 0;
00017ee4      int32_t r4_21 = (r7_3 << 1) + 0x5a;
00017ee8      int32_t var_20_2 = r4_21;
00017ee8      
00017eec      while (true)
00017eec      {
00017eec          uint32_t r5_11 = (uint32_t)*(uint8_t*)(&var_38 + r2_14);
00017eec          
00017f16          if ((r4_21 - r5_11 - 0x29 <= 8 || (r5_11 << 1) + 0x5a - r7_3 - 0x29 <= 8)
00017f16              && var_3c > var_50[r2_14] << 1 && r5_11)
00017f16          {
00017f18              r1 = 0;
00017f18              
00017f1e              if (r5_11 - 0xa <= 0x4f)
00017f1e              {
00017f5a                  for (uint32_t i_4 = (uint32_t)(uint16_t)(r5_11 - 0xa); 
00017f5a                      r5_11 + 0xa >= i_4; i_4 = (uint32_t)((uint16_t)i_4 + 1))
00017f5a                  {
00017f34                      void* r4_36 = (i_4 << 3) + r2;
00017f40                      int32_t r5_15 = *(uint32_t*)((char*)r4_36 + 0x6fc) >> 0xf;
00017f42                      int32_t r4_39 = *(uint32_t*)((char*)r4_36 + 0x700) >> 0xf;
00017f4a                      r1 += r5_15 * r5_15 + r4_39 * r4_39;
00017f5a                  }
00017f1e              }
00017f1e              else if (r5_11 < 0xa)
00017f62              {
00017f9e                  for (uint32_t i_5 = 0; r5_11 + 0xa >= i_5; 
00017f9e                      i_5 = (uint32_t)((uint16_t)i_5 + 1))
00017f9e                  {
00017f78                      void* r4_49 = (i_5 << 3) + r2;
00017f84                      int32_t r5_21 = *(uint32_t*)((char*)r4_49 + 0x6fc) >> 0xf;
00017f86                      int32_t r4_52 = *(uint32_t*)((char*)r4_49 + 0x700) >> 0xf;
00017f8e                      r1 += r5_21 * r5_21 + r4_52 * r4_52;
00017f9e                  }
00017f62              }
00017f62              else if (r5_11 > 0x59)
00017fa4              {
00017fa6                  uint32_t i_6 = (uint32_t)(uint16_t)(r5_11 - 0xa);
00017fac                  int16_t var_30_3 = (uint16_t)i_6;
00017fac                  
00017fd6                  while (i_6 < 0x64)
00017fd6                  {
00017fb4                      void* r4_60 = (i_6 << 3) + r2;
00017fc0                      int32_t r5_26 = *(uint32_t*)((char*)r4_60 + 0x6fc) >> 0xf;
00017fc2                      int32_t r4_63 = *(uint32_t*)((char*)r4_60 + 0x700) >> 0xf;
00017fca                      r1 += r5_26 * r5_26 + r4_63 * r4_63;
00017fd0                      i_6 = (uint32_t)(var_30_3 + 1);
00017fd2                      var_30_3 = (uint16_t)i_6;
00017fd6                  }
00017fa4              }
00017f16          }
00017f16          
00017fda          uint32_t r4_69 = r7_3 - r5_11;
00017fda          
00017fdc          if (r7_3 - r5_11 < 0)
00017fde              r4_69 = 0 - r4_69;
00017fde          
00017fe0          int32_t r4_70 = r4_69 - 0xe;
00017fe0          
00017fe2          if (r4_69 - 0xe < 0)
00017fe4              r4_70 = 0 - r4_70;
00017fe4          
00017ffc          if (r4_70 <= 2 && var_3c > var_50[r2_14] << 1 && r5_11)
00017ffc          {
00018002              if (r5_11 - 5 <= 0x59)
00018002              {
00018006                  uint32_t i_11 = (uint32_t)(uint16_t)(r5_11 - 5);
00018012                  uint32_t i_7 = i_11;
00018012                  
0001803c                  while (r5_11 + 5 >= i_7)
0001803c                  {
0001801a                      void* r4_79 = (i_7 << 3) + r2;
00018026                      int32_t r5_31 = *(uint32_t*)((char*)r4_79 + 0x6fc) >> 0xf;
00018028                      int32_t r4_82 = *(uint32_t*)((char*)r4_79 + 0x700) >> 0xf;
00018030                      r3 += r5_31 * r5_31 + r4_82 * r4_82;
00018036                      i_7 = (uint32_t)((uint16_t)i_11 + 1);
00018038                      i_11 = i_7;
0001803c                  }
00018002              }
00018002              else if (r5_11 < 5)
00018044              {
0001807c                  for (uint32_t i_8 = 0; r5_11 + 5 >= i_8; 
0001807c                      i_8 = (uint32_t)((uint16_t)i_8 + 1))
0001807c                  {
00018058                      void* r4_89 = (i_8 << 3) + r2;
00018064                      int32_t r5_36 = *(uint32_t*)((char*)r4_89 + 0x6fc) >> 0xf;
00018066                      int32_t r4_92 = *(uint32_t*)((char*)r4_89 + 0x700) >> 0xf;
0001806e                      r3 += r5_36 * r5_36 + r4_92 * r4_92;
0001807c                  }
00018044              }
00018044              else if (r5_11 > 0x5e)
00018082              {
00018084                  uint32_t i_9 = (uint32_t)(uint16_t)(r5_11 - 5);
00018088                  int16_t lr_4 = (uint16_t)i_9;
00018088                  
000180b4                  while (i_9 < 0x64)
000180b4                  {
00018092                      void* r4_99 = (i_9 << 3) + r2;
0001809e                      int32_t r5_41 = *(uint32_t*)((char*)r4_99 + 0x6fc) >> 0xf;
000180a0                      int32_t r4_102 = *(uint32_t*)((char*)r4_99 + 0x700) >> 0xf;
000180a8                      r3 += r5_41 * r5_41 + r4_102 * r4_102;
000180ae                      i_9 = (uint32_t)(lr_4 + 1);
000180b0                      lr_4 = (uint16_t)i_9;
000180b4                  }
00018082              }
00017ffc          }
00017ffc          
000180b8          r2_14 = (uint32_t)((uint16_t)r2_14 + 1);
000180b8          
000180bc          if (r2_14 >= 5)
000180bc              break;
000180bc          
000180be          r4_21 = var_20_2;
00017eec      }
00017eec      
000180c6      int32_t r0_42 = r12 + r1 + r3;
000180c6      
000180d0      if (r0_42 + 8 >= var_28)
000180ea          *(uint16_t*)((char*)r2 + 0xc92) = 0xa0;
000180d0      else
000180e2          *(uint16_t*)((char*)r2 + 0xc92) = sub_12b2a(r0_42, (var_28 - r12 - r1 - r3) >> 3);
000180e2      
000180f0      return (uint32_t)((uint8_t)r7_3 + 0x2d);
00017d60  }

000180f2                                                        00 00                                                        ..

000180f4  int32_t data_180f4 = -0x296c5c00
000180f8  int32_t data_180f8 = -0x23767b00
000180fc  int32_t data_180fc = 0x2084b4

00018100    int32_t sub_18100(int32_t arg1, int32_t arg2, int32_t arg3, int32_t arg4)

00018100  {
00018108      void* r4 = *(uint32_t*)0x20850c;
00018112      int32_t r2_1 = *(uint32_t*)((char*)r4 + 0xff4) + 1;
00018116      *(uint32_t*)((char*)r4 + 0xff4) = r2_1;
00018116      
0001811a      if (r2_1 == 0x186a0)
0001811c          *(uint32_t*)((char*)r4 + 0xff4) = 0;
0001811c      
00018128      int32_t r2_4 = (int32_t)((uint16_t)arg1 - *(uint16_t*)((char*)r4 + 0x100c));
0001812e      *(uint32_t*)((char*)r4 + 0x100c) = *(uint32_t*)((char*)r4 + 0x1008);
00018130      *(uint32_t*)((char*)r4 + 0x1008) = arg1;
00018132      int32_t r0 = *(uint32_t*)((char*)r4 + 0x1010);
00018148      int32_t r2_7 =
00018148          r2_4 - ((0xffffff93 * r0 + 0x33 * *(uint32_t*)((char*)r4 + 0x1014)) >> 6);
00018148          /* "2_V3.0" */
0001814a      *(uint32_t*)((char*)r4 + 0x1018) = r2_7;
0001814c      *(uint32_t*)((char*)r4 + 0x1014) = r0;
0001814e      *(uint32_t*)((char*)r4 + 0x1010) = r2_7;
00018154      int32_t r4_2 = (int32_t)((uint16_t)r2_7 - *(uint16_t*)((char*)r4 + 0x1020));
00018156      int32_t r0_6 = *(uint32_t*)((char*)r4 + 0x101c);
00018158      *(uint32_t*)((char*)r4 + 0x101c) = r2_7;
0001815a      *(uint32_t*)((char*)r4 + 0x1020) = r0_6;
0001815e      int32_t r4_3 = *(uint32_t*)((char*)r4 + 0x1024);
00018174      int32_t r0_11 =
00018174          r4_2 - ((0xffffffad * r4_3 + 0x2a * *(uint32_t*)((char*)r4 + 0x1028)) >> 6);
00018176      *(uint32_t*)((char*)r4 + 0x102c) = r0_11;
00018178      *(uint32_t*)((char*)r4 + 0x1028) = r4_3;
0001817a      *(uint32_t*)((char*)r4 + 0x1024) = r0_11;
00018180      int32_t r2_10 = (int32_t)((uint16_t)arg2 - *(uint16_t*)((char*)r4 + 0x1034));
00018186      *(uint32_t*)((char*)r4 + 0x1034) = *(uint32_t*)((char*)r4 + 0x1030);
00018188      *(uint32_t*)((char*)r4 + 0x1030) = arg2;
0001818a      int32_t r1 = *(uint32_t*)((char*)r4 + 0x1038);
000181a0      int32_t r2_13 =
000181a0          r2_10 - ((0xffffff93 * r1 + 0x33 * *(uint32_t*)((char*)r4 + 0x103c)) >> 6);
000181a0          /* "2_V3.0" */
000181a2      *(uint32_t*)((char*)r4 + 0x1040) = r2_13;
000181a4      *(uint32_t*)((char*)r4 + 0x103c) = r1;
000181a6      *(uint32_t*)((char*)r4 + 0x1038) = r2_13;
000181ac      int32_t r4_7 = (int32_t)((uint16_t)r2_13 - (int16_t)*(uint32_t*)((char*)r4 + 0x1048));
000181ae      int32_t r1_6 = *(uint32_t*)((char*)r4 + 0x1044);
000181b2      *(uint32_t*)((char*)r4 + 0x1044) = r2_13;
000181b4      *(uint32_t*)((char*)r4 + 0x1048) = r1_6;
000181b6      int32_t r4_8 = *(uint32_t*)((char*)r4 + 0x104c);
000181cc      int32_t r1_11 =
000181cc          r4_7 - ((0xffffffad * r4_8 + 0x2a * *(uint32_t*)((char*)r4 + 0x1050)) >> 6);
000181ce      *(uint32_t*)((char*)r4 + 0x1054) = r1_11;
000181d0      *(uint32_t*)((char*)r4 + 0x1050) = r4_8;
000181d2      *(uint32_t*)((char*)r4 + 0x104c) = r1_11;
000181da      int32_t r4_12 = (int32_t)((uint16_t)arg3 - (int16_t)*(uint32_t*)((char*)r4 + 0x105c));
000181de      *(uint32_t*)((char*)r4 + 0x105c) = *(uint32_t*)((char*)r4 + 0x1058);
000181e2      *(uint32_t*)((char*)r4 + 0x1058) = arg3;
000181e6      int32_t r2_18 = *(uint32_t*)((char*)r4 + 0x1060);
000181fc      int32_t r4_16 =
000181fc          r4_12 - ((0xffffff93 * r2_18 + 0x33 * *(uint32_t*)((char*)r4 + 0x1064)) >> 6);
000181fc          /* "2_V3.0" */
000181fe      *(uint32_t*)((char*)r4 + 0x1068) = r4_16;
00018202      *(uint32_t*)((char*)r4 + 0x1060) = r4_16;
00018204      *(uint32_t*)((char*)r4 + 0x1064) = r2_18;
00018208      int32_t r0_12 = (int32_t)(int16_t)r0_11;
0001820c      int32_t r6_6 = (int32_t)((uint16_t)r4_16 - (int16_t)*(uint32_t*)((char*)r4 + 0x1070));
0001820e      int32_t r2_25 = *(uint32_t*)((char*)r4 + 0x106c);
00018210      *(uint32_t*)((char*)r4 + 0x106c) = r4_16;
00018212      *(uint32_t*)((char*)r4 + 0x1070) = r2_25;
00018214      int32_t r2_26 = *(uint32_t*)((char*)r4 + 0x1074);
0001822c      int32_t r4_19 =
0001822c          r6_6 - ((0xffffffad * r2_26 + 0x2a * *(uint32_t*)((char*)r4 + 0x1078)) >> 6);
0001822e      *(uint32_t*)((char*)r4 + 0x107c) = r4_19;
00018232      *(uint32_t*)((char*)r4 + 0x1074) = r4_19;
00018234      int32_t r1_12 = (int32_t)(int16_t)r1_11;
00018236      *(uint32_t*)((char*)r4 + 0x1078) = r2_26;
00018238      int32_t r2_31 = (int32_t)(int16_t)r4_19;
00018244      int32_t r0_16;
00018244      int32_t r1_14;
00018244      r0_16 = sub_1351a(r0_12 * r0_12 + r1_12 * r1_12 + r2_31 * r2_31);
00018248      int32_t r0_17;
00018248      int32_t r1_15;
00018248      r0_17 = sub_154fc(r0_16, r1_14);
0001824c      int16_t r0_18 = sub_13424(r0_17, r1_15);
00018252      uint32_t i = 4;
00018254      char const* const r4_20 = *(uint32_t*)0x20850c;
00018254      
0001826a      do
0001826a      {
00018266          *(uint16_t*)((i << 1) + r4_20 + 0xfe4) = *(uint16_t*)((i << 1) + r4_20 + 0xfe2);
00018268          i = (i - 1) << 0x10 >> 0x10;  /* "RY02_3.00.33_250117" */
0001826a      } while (i);
0001826a      
0001826c      int32_t r3_5 = (int32_t)r0_18;
00018270      *(uint16_t*)(r4_20 + 0xfe4) = (int16_t)r3_5;
00018276      int32_t r1_18 = (int32_t)*(uint16_t*)(r4_20 + 0xfe8);
00018278      int32_t r6_9 = (int32_t)*(uint16_t*)(r4_20 + 0xfec);
00018278      
00018290      if (r1_18 > r6_9 && r1_18 > (int32_t)*(uint16_t*)(r4_20 + 0xfea)
00018290              && r1_18 > (int32_t)*(uint16_t*)(r4_20 + 0xfe6) && r1_18 > r3_5)
000182ae          *(uint16_t*)(r4_20 + 0xfee) = (int16_t)r1_18;
00018290      else if (r1_18 == r6_9 && r1_18 == (int32_t)*(uint16_t*)(r4_20 + 0xfea)
00018290              && r1_18 == (int32_t)*(uint16_t*)(r4_20 + 0xfe6) && r1_18 == r3_5
00018290              && r1_18 <= 0x14)  /* "_3.00.33_250117" */
000182ae          *(uint16_t*)(r4_20 + 0xfee) = (int16_t)r1_18;
000182ae      
000182b4      int32_t r1_19 = (int32_t)*(uint16_t*)(r4_20 + 0xfee);
000182ba      int32_t r2_37 = (int32_t)*(uint16_t*)(r4_20 + 0xff0);
000182be      int16_t r1_21;
000182be      
000182be      r1_21 = r1_19 <= 0x1f4 ? (int16_t)((r2_37 * 0xf + r1_19) >> 4)
000182be          : (int16_t)((r2_37 * 0x7f + r1_19) >> 7);
000182be      
000182d2      *(uint16_t*)(r4_20 + 0xff0) = r1_21;
000182da      int32_t r1_23 = (int32_t)r1_21;
000182e0      int32_t r1_24;
000182e0      
000182e0      if (r1_23 < (uint32_t)*(uint16_t*)0x20850a)
000182e0      {
000182e4          uint32_t r2_41 = (uint32_t)r4_20[0xffa];
000182e6          r1_24 = 0;
000182e6          
000182ea          if (r2_41)
000182ee              r4_20[0xffa] = (uint8_t)r2_41 - 1;
000182ee          
000182f0          uint32_t r2_43 = (uint32_t)r4_20[0xff9];
000182f0          
000182f4          if (r2_43 < 0x19)  /* ".33_250117" */
000182f8              r4_20[0xff9] = (uint8_t)r2_43 + 1;
000182f8          
000182f4          goto label_18350;
000182e0      }
000182e0      
000182fe      if (r1_23 < 0x1f4)
00018300          r1_24 = 1;
000182fe      else if (r1_23 < 0x5dc)
0001830a          r1_24 = 2;
00018308      else if (r1_23 < 0xfa0)
00018316          r1_24 = 3;
00018314      else if (r1_23 >= 0x1f40)
00018326          r1_24 = 5;
00018320      else
00018322          r1_24 = 4;
00018322      
0001832a      uint32_t r3_7 = (uint32_t)r4_20[0xffa];
0001832a      
0001832e      if (r3_7 < 0x19)  /* ".33_250117" */
00018332          r4_20[0xffa] = (uint8_t)r3_7 + 1;
00018332      
00018334      uint32_t r3_9 = (uint32_t)r4_20[0xff9];
00018334      
00018338      if (r3_9)
0001833c          r4_20[0xff9] = (uint8_t)r3_9 - 1;
0001833c      
00018340      if (r1_24 <= 1)
00018340      {
00018350      label_18350:
00018350          uint32_t r2_46 = (uint32_t)r4_20[0xffb];
00018350          
00018354          if (r2_46)
00018358              r4_20[0xffb] = (uint8_t)r2_46 - 1;
00018340      }
00018340      else
00018340      {
00018342          uint32_t r3_11 = (uint32_t)r4_20[0xffb];
00018342          
00018346          if (r3_11 < 0x19)  /* ".33_250117" */
0001834a              r4_20[0xffb] = (uint8_t)r3_11 + 1;
00018340      }
00018340      
0001835c      void* r3_14;
0001835c      
0001835c      if (r1_24 <= 2)
0001835c      {
0001836a          r3_14 = &r4_20[0xfe0];
0001836c          uint32_t r2_50 = (uint32_t)*(uint8_t*)((char*)r3_14 + 0x1c);  /* "_250117" */
0001836c          
00018370          if (r2_50)
00018374              *(uint8_t*)((char*)r3_14 + 0x1c) = (uint8_t)r2_50 - 1;  /* "_250117" */
0001835c      }
0001835c      else
0001835c      {
0001835e          r3_14 = &r4_20[0xfe0];
00018360          uint32_t r2_48 = (uint32_t)*(uint8_t*)((char*)r3_14 + 0x1c);  /* "_250117" */
00018360          
00018364          if (r2_48 < 0x19)  /* ".33_250117" */
00018374              *(uint8_t*)((char*)r3_14 + 0x1c) = (uint8_t)r2_48 + 1;  /* "_250117" */
0001835c      }
00018378      void* r3_15;
00018378      
00018378      if (r1_24 <= 3)
00018378      {
00018386          r3_15 = &r4_20[0xfe0];
00018388          uint32_t r2_53 = (uint32_t)*(uint8_t*)((char*)r3_15 + 0x1d);  /* "250117" */
00018388          
0001838c          if (r2_53)
00018390              *(uint8_t*)((char*)r3_15 + 0x1d) = (uint8_t)r2_53 - 1;  /* "250117" */
00018378      }
00018378      else
00018378      {
0001837a          r3_15 = &r4_20[0xfe0];
0001837c          uint32_t r2_51 = (uint32_t)*(uint8_t*)((char*)r3_15 + 0x1d);  /* "250117" */
0001837c          
00018380          if (r2_51 < 0x19)  /* ".33_250117" */
00018390              *(uint8_t*)((char*)r3_15 + 0x1d) = (uint8_t)r2_51 + 1;  /* "250117" */
00018378      }
00018394      void* r2_54;
00018394      
00018394      if (r1_24 <= 4)
00018394      {
000183a2          r2_54 = &r4_20[0xfe0];
000183a4          uint32_t r1_27 = (uint32_t)*(uint8_t*)((char*)r2_54 + 0x1e);  /* "50117" */
000183a4          
000183a8          if (r1_27)
000183ac              *(uint8_t*)((char*)r2_54 + 0x1e) = (uint8_t)r1_27 - 1;  /* "50117" */
00018394      }
00018394      else
00018394      {
00018396          r2_54 = &r4_20[0xfe0];
00018398          uint32_t r1_25 = (uint32_t)*(uint8_t*)((char*)r2_54 + 0x1e);  /* "50117" */
00018398          
0001839c          if (r1_25 < 0x19)  /* ".33_250117" */
000183ac              *(uint8_t*)((char*)r2_54 + 0x1e) = (uint8_t)r1_25 + 1;  /* "50117" */
00018394      }
000183ae      void* r6_12 = &r4_20[0xfe0];
000183ae      
000183b4      if ((uint32_t)*(uint8_t*)((char*)r6_12 + 0x19) >= 0x19)  /* ".33_250117" */
000183e2          *(uint8_t*)((char*)r6_12 + 0x18) = 0;  /* "0.33_250117" */
000183b4      else
000183b4      {
000183b6          uint32_t r2_55 = (uint32_t)*(uint8_t*)((char*)r6_12 + 0x18);  /* "0.33_250117" */
000183be          int32_t r0_21;
000183be          int32_t r2_56;
000183be          r0_21 = sub_13f18(1, 4, r2_55, r2_55, arg4);
000183c2          r6_12 = r0_21 << 0x10;  /* "RY02_3.00.33_250117" */
000183c6          r4_20 = ".33_250117";
000183c6          
000183ce          if ((uint32_t)*(uint8_t*)((char*)r6_12 + 0x1a) == 0x19)  /* ".33_250117" */  /* "
000183ce                  33_250117" */
000183d0              *(uint8_t*)((char*)r6_12 + 0x18) = (char)r0_21;  /* "0.33_250117" */
000183b4      }
000183b4      
0001842a      int32_t r1_29;
0001842a      int32_t r2_58;
0001842a      r1_29 = sub_12b2a(*(uint32_t*)(r4_20 + 8), 0x19);  /* ".33_250117" */
0001842a      
00018430      if (!r1_29)
00018430      {
00018432          uint32_t r0_23 = (uint32_t)*(uint8_t*)((char*)r6_12 + 0x18);  /* "0.33_250117" */
00018436          int32_t r0_24;
00018436          int32_t r1_30;
00018436          r0_24 = sub_13f18(r0_23, r1_29, r2_58, r0_23, arg4);
00018444          uint32_t r0_25 = (uint32_t)r4_20[0x1005];
00018444          
00018448          if (r0_25)
00018448          {
0001844c              char r0_26;
0001844c              
0001844c              if (r0_25 < 0xa)
0001847a                  r0_26 = (uint8_t)r0_25 - 1;
0001844c              else if (r0_25 < 0x32)  /* "02_V3.0" */
00018464                  r0_26 = (uint8_t)r0_25 - 2;
00018450              else
00018452                  r0_26 = (uint8_t)r0_25 - 3;
00018452              
00018454              r4_20[0x1005] = r0_26;
00018448          }
00018430      }
00018430      
000184a8      return 1;
00018100  }

000183d4                                                              b0 7e 00 28 03 d0 f0 7e 19 28 10 d0                      .~.(...~.(..
000183e0  21 e0                                                                                            !.
000183e6                    f1 7e 00 29 f1 d0 30 7f 19 28 12 d0 18 e0                                            .~.)..0..(....

000183f4    int32_t sub_183f4(int32_t arg1, char arg2, void* arg3 @ r4, int32_t arg4 @ r5, void* arg5 @ r6, int32_t arg6, int32_t arg7, int32_t arg8, int32_t arg9, int32_t arg10)

000183f4  {
000183f8      if (!(uint32_t)*(uint8_t*)((char*)arg5 + 0x1c))  /* "_250117" */
000183d0          *(uint8_t*)((char*)arg5 + 0x18) = 2;  /* "0.33_250117" */
000183f8      else if ((uint32_t)*(uint8_t*)((char*)arg5 + 0x1d) == 0x19)  /* ".33_250117" */  /* "
000183f8              250117" */
00018406          *(uint8_t*)((char*)arg5 + 0x18) = arg2;  /* "0.33_250117" */
00018406      
0001842a      int32_t r1;
0001842a      int32_t r2;
0001842a      r1 = sub_12b2a(*(uint32_t*)((char*)arg3 + 8), 0x19);  /* ".33_250117" */
0001842a      
00018430      if (!r1)
00018430      {
00018432          uint32_t r0_2 = (uint32_t)*(uint8_t*)((char*)arg5 + 0x18);  /* "0.33_250117" */
00018436          int32_t r0_3;
00018436          int32_t r1_1;
00018436          r0_3 = sub_13f18(r0_2, r1, r2, r0_2);
00018442          void* r1_2 = (char*)arg3 + arg4;
00018444          uint32_t r0_4 = (uint32_t)*(uint8_t*)((char*)r1_2 + 5);
00018444          
00018448          if (r0_4)
00018448          {
0001844c              char r0_5;
0001844c              
0001844c              if (r0_4 < 0xa)
0001847a                  r0_5 = (uint8_t)r0_4 - 1;
0001844c              else if (r0_4 < 0x32)  /* "02_V3.0" */
00018464                  r0_5 = (uint8_t)r0_4 - 2;
00018450              else
00018452                  r0_5 = (uint8_t)r0_4 - 3;
00018452              
00018454              *(uint8_t*)((char*)r1_2 + 5) = r0_5;
00018448          }
00018430      }
00018430      
000184a8      return 1;
000183f4  }


0001840a    int32_t sub_1840a(void* arg1 @ r4, int32_t arg2 @ r5, void* arg3 @ r6, int32_t arg4, int32_t arg5, int32_t arg6, int32_t arg7, int32_t arg8)

0001840a  {
0001840e      if (!(uint32_t)*(uint8_t*)((char*)arg3 + 0x1d))  /* "250117" */
000183d0          *(uint8_t*)((char*)arg3 + 0x18) = 3;  /* "0.33_250117" */
0001840e      else if ((uint32_t)*(uint8_t*)((char*)arg3 + 0x1e) == 0x19)  /* ".33_250117" */  /* "
0001840e              50117" */
000183d0          *(uint8_t*)((char*)arg3 + 0x18) = 5;  /* "0.33_250117" */
000183d0      
0001842a      int32_t r1;
0001842a      int32_t r2;
0001842a      r1 = sub_12b2a(*(uint32_t*)((char*)arg1 + 8), 0x19);  /* ".33_250117" */
0001842a      
00018430      if (!r1)
00018430      {
00018432          uint32_t r0_3 = (uint32_t)*(uint8_t*)((char*)arg3 + 0x18);  /* "0.33_250117" */
00018436          int32_t r0_4;
00018436          int32_t r1_1;
00018436          r0_4 = sub_13f18(r0_3, r1, r2, r0_3);
00018442          void* r1_2 = (char*)arg1 + arg2;
00018444          uint32_t r0_5 = (uint32_t)*(uint8_t*)((char*)r1_2 + 5);
00018444          
00018448          if (r0_5)
00018448          {
0001844c              char r0_6;
0001844c              
0001844c              if (r0_5 < 0xa)
0001847a                  r0_6 = (uint8_t)r0_5 - 1;
0001844c              else if (r0_5 < 0x32)  /* "02_V3.0" */
00018464                  r0_6 = (uint8_t)r0_5 - 2;
00018450              else
00018452                  r0_6 = (uint8_t)r0_5 - 3;
00018452              
00018454              *(uint8_t*)((char*)r1_2 + 5) = r0_6;
00018448          }
00018430      }
00018430      
000184a8      return 1;
0001840a  }

00018420  b0 7f 00 28 ef d0                                                                                ...(..

00018458    int32_t sub_18458(void* arg1 @ r4, int32_t arg2 @ r5, int32_t arg3, int32_t arg4, int32_t arg5, int32_t arg6, int32_t arg7)

00018458  {
00018458      void* r1 = (char*)arg1 + arg2;
0001845a      uint32_t r0 = (uint32_t)*(uint8_t*)((char*)r1 + 5);
0001845e      char r0_1;
0001845e      
0001845e      if (r0 < 0xa)
0001848e          r0_1 = (uint8_t)r0 + 1;
0001845e      else if (r0 < 0x28)
0001847a          r0_1 = (uint8_t)r0 - 1;
00018462      else
00018464          r0_1 = (uint8_t)r0 - 2;
00018464      
00018454      *(uint8_t*)((char*)r1 + 5) = r0_1;
000184a8      return 1;
00018458  }

00018468                          61 19 48 79 14 28 0e d3 f6 e7 61 19 48 79 28 28 13 d3                            a.Hy.(....a.Hy((..

0001847e    int32_t sub_1847e(void* arg1 @ r4, int32_t arg2 @ r5, int32_t arg3, int32_t arg4, int32_t arg5, int32_t arg6, int32_t arg7)

0001847e  {
0001847e      void* r1 = (char*)arg1 + arg2;
00018480      uint32_t r0 = (uint32_t)*(uint8_t*)((char*)r1 + 5);
00018480      
00018484      if (r0 < 0x3c)
00018454          *(uint8_t*)((char*)r1 + 5) = (uint8_t)r0 + 3;
00018484      else if (r0 < 0x50)
00018454          *(uint8_t*)((char*)r1 + 5) = (uint8_t)r0 + 2;
00018488      else if (r0 < 0x64)
00018454          *(uint8_t*)((char*)r1 + 5) = (uint8_t)r0 + 1;
00018454      
000184a8      return 1;
0001847e  }

00018492                                                        61 19 48 79 46 28 01 d2                                      a.HyF(..
0001849e                                                                                            5a 28                                Z(
000184a0  f3 d2                                                                                            ..
000184aa                                00 00                                                                        ..

000184ac  int32_t data_184ac = 0x208500
000184b0  int32_t data_184b0 = 0x186a0
000184b4  char const (* data_184b4)[0xa] = data_30
000184b8  int32_t data_184b8 = 0x5dc

000184bc    int32_t sub_184bc(int32_t arg1, int32_t arg2, int32_t arg3, int32_t arg4, int32_t arg5, int32_t arg6, int32_t arg7)

000184bc  {
000184bc      int32_t var_18 = arg4;
000184bc      int32_t var_1c = arg3;
000184bc      int32_t var_24 = arg1;
000184be      int32_t r6 = 0;
000184c2      int32_t r4 = arg1;
000184c6      int32_t var_50 = 1;
000184c8      int32_t var_38 = 1;
000184ca      int32_t var_4c = 1;
000184cc      int32_t var_3c = 0;
000184ce      int32_t var_44 = 0;
000184d0      int32_t var_48 = 0;
000184d2      int32_t var_40 = 1;
000184d8      void* r7 = *(uint32_t*)0x2084d0;
000184e0      *(uint8_t*)((char*)r7 + 0xc87) = (char)arg4;
000184e2      *(uint8_t*)((char*)r7 + 0xc86) = (char)arg3;
000184e2      
00018502      for (uint32_t i = 3; i; i = (i - 1) << 0x10 >> 0x10)  /* "RY02_3.00.33_250117" */
00018502      {
000184ea          int32_t r2 = i << 2;
000184f2          *(uint32_t*)(0x20dab8 + r2) = *(uint32_t*)(r2 + 0x20dab4);
000184fe          *(uint32_t*)(0x20dac8 + r2) = *(uint32_t*)(r2 + 0x20dac4);
00018502      }
00018502      
00018506      *(uint32_t*)0x20dab8 = r4;
0001850c      *(uint32_t*)0x20dac8 = arg2;
0001850c      
00018516      if ((uint32_t)*(uint8_t*)0x2084b8 == 1)
00018566          *(uint8_t*)0x2084b4 = sub_157a8(arg5, arg6, arg7);
00018516      else
00018516      {
00018522          *(uint8_t*)((char*)r7 + 0xd6f) = 0;
00018524          *(uint8_t*)0x2084b4 = 0;
00018516      }
00018516      
00018528      void* r0_4 = *(uint32_t*)0x2084d0;
0001852a      int32_t r2_2 = *(uint32_t*)((char*)r0_4 + 4);
0001852e      int32_t var_5c;
0001852e      int32_t var_58;
0001852e      
0001852e      if (r2_2 > 0x1e)  /* "50117" */
0001852e      {
00018534          int32_t r1_1 = *(uint32_t*)0x20dabc;
00018536          int32_t r2_3 = *(uint32_t*)0x20dac0;
0001853a          int32_t r3_6 = *(uint32_t*)0x2084e8;
0001853c          int32_t r5 = r1_1 - r2_3;
0001853c          
00018552          if ((r5 <= r3_6 || r1_1 - r4 <= r3_6)
00018552                  && (r5 >= 0 - r3_6 || r1_1 - r4 >= 0 - r3_6))
0001856a              r4 = r1_1;
00018552          else
00018552          {
00018556              r4 = r2_3;
00018558              *(uint32_t*)0x20dabc = r2_3;
00018552          }
00018552          
00018570          int32_t r1_3 = *(uint32_t*)0x20dacc;
00018572          int32_t r2_5 = *(uint32_t*)0x20dad0;
00018574          int32_t r5_1 = r1_3 - r2_5;
00018574          
00018580          if (r5_1 > r3_6 && r1_3 - arg2 > r3_6)
00018580          {
00018592              r1_3 = r2_5;
00018596              *(uint32_t*)0x20dacc = r2_5;
00018580          }
00018580          else if (r5_1 < 0 - r3_6 && r1_3 - arg2 < 0 - r3_6)
0001858e          {
00018592              r1_3 = r2_5;
00018596              *(uint32_t*)0x20dacc = r2_5;
0001858e          }
0001858e          
0001859c          int32_t r5_4 = *(uint32_t*)0x2084c0;
0001859e          int32_t r3_9 = r4 - *(uint32_t*)0x2084c8;
000185a0          int32_t r3_10 = r3_9 - r5_4;
000185a0          
000185a2          if (r3_9 - r5_4 < 0)
000185a4              r3_10 = 0 - r3_10;
000185a4          
000185aa          int32_t r2_6 = *(uint32_t*)0x2084ec;
000185aa          
000185ae          if (r3_10 > r2_6)
000185b2              *(uint32_t*)0x2084c8 = r4 - r5_4;
000185b2          
000185b8          int32_t r5_7 = r4 - *(uint32_t*)0x2084c8;
000185ba          var_5c = r5_7;
000185bc          *(uint32_t*)0x2084c0 = r5_7;
000185c0          int32_t r7_5 = *(uint32_t*)0x2084c4;
000185c2          int32_t r5_9 = r1_3 - *(uint32_t*)0x2084cc;
000185c4          int32_t r5_10 = r5_9 - r7_5;
000185c4          
000185c6          if (r5_9 - r7_5 < 0)
000185c8              r5_10 = 0 - r5_10;
000185c8          
000185cc          int32_t r2_7;
000185cc          
000185cc          if (r5_10 > r2_6)
000185cc          {
000185d2              r2_7 = r1_3 - r7_5;
000185d4              *(uint32_t*)0x2084cc = r2_7;
000185cc          }
000185cc          else
000185ce              r2_7 = *(uint32_t*)0x2084cc;
000185ce          
000185d6          int32_t r1_4 = r1_3 - r2_7;
000185d8          var_58 = r1_4;
000185da          *(uint32_t*)0x2084c4 = r1_4;
00018578          goto label_185fc;
0001852e      }
0001852e      
000185e0      int32_t r3_11 = *(uint32_t*)0x20dabc;
000185e4      var_5c = r3_11;
000185e6      int32_t r5_11 = *(uint32_t*)0x20dacc;
000185ea      var_58 = r5_11;
000185ec      *(uint32_t*)0x2084c4 = r5_11;
000185ee      *(uint32_t*)0x2084c0 = r3_11;
000185ee      
000185f2      if (r2_2 == 0x1e)  /* "50117" */
000185f2      {
000186ca          *(uint32_t*)((char*)r0_4 + 0x34) = var_58;  /* "_V3.0" */
000186cc          *(uint32_t*)((char*)r0_4 + 0x38) = var_58;  /* "0" */
00018ae6      label_18ae6:
00018ae6          void* r1_70 = *(uint32_t*)0x2084d0;
00018ae8          *(uint32_t*)((char*)r1_70 + 0xc) = var_5c;
00018aea          *(uint32_t*)((char*)r1_70 + 0x10) = var_5c;  /* "RY02_3.00.33_250117" */
000185f2      }
000185f2      else
000185f2      {
000185f4          if (r2_2 > 0x1e)  /* "50117" */
000185f4          {
000185fc          label_185fc:
000185fc              int32_t r1_6 = var_58 - *(uint32_t*)((char*)r0_4 + 0x38);  /* "0" */
00018600              *(uint32_t*)((char*)r0_4 + 0x38) = *(uint32_t*)((char*)r0_4 + 0x34);
00018600                  /* "_V3.0" */  /* "0" */
00018604              *(uint32_t*)((char*)r0_4 + 0x34) = var_58;  /* "_V3.0" */
00018606              int32_t r2_11 = *(uint32_t*)((char*)r0_4 + 0x3c);
00018618              int32_t r1_7 = r1_6
00018618                  - ((0xffffff8f * r2_11 + 0x34 * *(uint32_t*)((char*)r0_4 + 0x40)) >> 6);
00018618                  /* "_V3.0" */
0001861a              *(uint32_t*)((char*)r0_4 + 0x44) = r1_7;
0001861c              *(uint32_t*)((char*)r0_4 + 0x40) = r2_11;
0001861e              *(uint32_t*)((char*)r0_4 + 0x3c) = r1_7;
00018620              int32_t r2_12 = *(uint32_t*)((char*)r0_4 + 0x4c);
00018624              *(uint32_t*)((char*)r0_4 + 0x4c) = *(uint32_t*)((char*)r0_4 + 0x48);
00018626              *(uint32_t*)((char*)r0_4 + 0x48) = r1_7;
0001862c              int32_t r1_8 = *(uint32_t*)((char*)r0_4 + 0x50);
0001863c              int32_t r2_14 = r1_7 - r2_12
0001863c                  - ((r1_8 * 0xffffffb2 + 0x24 * *(uint32_t*)((char*)r0_4 + 0x54)) >> 6);
0001863e              *(uint32_t*)((char*)r0_4 + 0x58) = r2_14;
00018640              *(uint32_t*)((char*)r0_4 + 0x50) = r2_14;
00018642              *(uint32_t*)((char*)r0_4 + 0x54) = r1_8;
0001865a              uint32_t i_1;
0001865a              
0001865a              for (i_1 = 7; i_1; i_1 = (i_1 - 1) << 0x10 >> 0x10)  /* "RY02_3.00.33_250117"
0001865a                      */
00018656                  *(uint32_t*)((i_1 << 2) + r0_4 + 0x288) =
00018656                      *(uint32_t*)((i_1 << 2) + r0_4 + 0x284);
00018656              
0001865e              void* r0_7 = *(uint32_t*)0x2084d0;
00018664              *(uint32_t*)((char*)r0_7 + 0x288) = *(uint32_t*)((char*)r0_7 + 0x58);
00018664              
00018676              do
00018676              {
00018670                  r6 += *(uint32_t*)((i_1 << 2) + r0_7 + 0x288);
00018672                  i_1 = (uint32_t)((uint16_t)i_1 + 1);
00018676              } while (i_1 < 8);
00018676              
00018680              *(uint32_t*)((char*)r0_7 + 0x320) = r6 >> 3;
00018698              uint32_t i_2;
00018698              
00018698              for (i_2 = 6; i_2; i_2 = (i_2 - 1) << 0x10 >> 0x10)  /* "RY02_3.00.33_250117"
00018698                      */
00018694                  *(uint32_t*)((i_2 << 2) + r0_7 + 0x250) =
00018694                      *(uint32_t*)((i_2 << 2) + r0_7 + 0x24c);
00018694              
0001869c              void* r0_8 = *(uint32_t*)0x2084d0;
000186a2              int32_t r7_6 = *(uint32_t*)((char*)r0_8 + 0x320);
000186aa              *(uint32_t*)((char*)r0_8 + 0x250) = r7_6;
000186ac              int32_t r3_33 = *(uint32_t*)((char*)r0_8 + 0x25c);
000186ac              
000186c0              while (true)
000186c0              {
000186c0                  if (r3_33 < *(uint32_t*)((i_2 << 2) + r0_8 + 0x250) || r3_33 < 0)
000186c0                  {
000186c4                      var_50 = 0;
000186c6                      break;
000186c0                  }
000186c0                  
000186d2                  i_2 = (uint32_t)((uint16_t)i_2 + 1);
000186d2                  
000186d6                  if (i_2 >= 7)
000186d6                      break;
000186d6                  
000186d6                  continue;
000186c0              }
000186c0              
000186d8              int32_t r3_34 = *(uint32_t*)((char*)r0_8 + 0x25c);
000186da              uint32_t r1_17 = 0;
000186da              
000186ee              while (true)
000186ee              {
000186ee                  if (r3_34 > *(uint32_t*)((r1_17 << 2) + r0_8 + 0x250) || r3_34 > 0)
000186ee                  {
000186f6                      var_38 = 0;
000186f8                      break;
000186ee                  }
000186ee                  
000186fc                  r1_17 = (uint32_t)((uint16_t)r1_17 + 1);
000186fc                  
00018700                  if (r1_17 >= 7)
00018700                      break;
00018700                  
00018700                  continue;
000186ee              }
000186ee              
00018706              if (var_50)
00018710                  *(uint32_t*)((char*)r0_8 + 0x39c) = *(uint32_t*)((char*)r0_8 + 0x25c);
00018710              
00018716              if (var_38)
00018720                  *(uint32_t*)((char*)r0_8 + 0x3a0) = *(uint32_t*)((char*)r0_8 + 0x25c);
00018720              
00018726              if (var_50)
00018726              {
00018732                  int32_t r1_26 =
00018732                      *(uint32_t*)((char*)r0_8 + 0x39c) - *(uint32_t*)((char*)r0_8 + 0x3a0);
00018736                  *(uint32_t*)((char*)r0_8 + 0x330) = r1_26;
0001873c                  *(uint32_t*)((char*)r0_8 + 0x334) = r1_26 >> 5;
00018726              }
00018726              
0001873e              int32_t r1_28 = r7_6 >> 7;
0001873e              
00018746              if (*(uint32_t*)((char*)r0_8 + 4) > 0x32)  /* "02_V3.0" */
00018746              {
000187f0                  for (uint32_t i_3 = 0; i_3 < 0x64; )
000187f0                  {
0001875c                      uint32_t r2_27 = (uint32_t)(*(uint16_t*)((i_3 << 1) + r0_8 + 0x56c)
0001875c                          + (uint16_t)i_3 + 0x2d);
00018760                      *(uint16_t*)((i_3 << 1) + r0_8 + 0x56c) = (int16_t)r2_27;
00018760                      
00018764                      if (r2_27 >= 0x5dc)
00018764                      {
00018768                          r2_27 -= 0x5dc;
0001876a                          *(uint16_t*)((i_3 << 1) + r0_8 + 0x56c) = (int16_t)r2_27;
00018764                      }
00018764                      
0001876e                      uint32_t r5_32 = (uint32_t)(uint16_t)r2_27;
00018772                      uint32_t r1_33;
00018772                      
00018772                      if (r5_32 >= 0x465)
00018780                          r1_33 = r5_32 - 0x465;
00018772                      else if (r5_32 >= 0x2ee)
00018780                          r1_33 = r5_32 - 0x2ee;
0001877c                      else if (r5_32 < 0x177)
00018790                          r1_33 = r5_32;
0001878a                      else
0001878c                          r1_33 = r5_32 - 0x177;
0001878c                      
0001879a                      uint32_t r1_34 = (uint32_t)*(uint8_t*)(0x83e678 + r1_33);
0001879c                      uint32_t r2_29 = (uint32_t)*(uint8_t*)(0x83e678 + 0x176 - r1_33);
0001879c                      
000187a4                      if (r5_32 >= 0x177)
000187a4                      {
000187aa                          if (r5_32 < 0x2ee)
000187aa                          {
000187ac                              uint32_t r5_33 = r1_34;
000187ae                              r1_34 = r2_29;
000187b0                              r2_29 = 0 - r5_33;
000187aa                          }
000187aa                          else if (r5_32 >= 0x465)
000187b6                          {
000187be                              uint32_t r5_34 = r1_34;
000187c0                              r1_34 = 0 - r2_29;
000187c2                              r2_29 = r5_34;
000187b6                          }
000187b6                          else
000187b6                          {
000187b8                              r1_34 = 0 - r1_34;
000187ba                              r2_29 = 0 - r2_29;
000187b6                          }
000187a4                      }
000187a4                      
000187c6                      void* r6_2 = (i_3 << 3) + r0_8;
000187d8                      *(uint32_t*)((char*)r6_2 + 0x6fc) += r1_28 * r2_29;
000187ea                      i_3 = (uint32_t)((uint16_t)i_3 + 1);
000187ec                      *(uint32_t*)(0x700 + r6_2) += r1_28 * r1_34;
000187f0                  }
00018746              }
00018746              
000187f4              void* r3_37 = *(uint32_t*)0x2084d0;
000187f4              
000187fa              if (*(uint32_t*)((char*)r3_37 + 4) > 0xc8)
000187fa              {
000188c8                  for (uint32_t i_4 = 0; i_4 < 0x64; )
000188c8                  {
00018818                      uint32_t r0_15 = (uint32_t)(*(uint16_t*)((i_4 << 1) + r3_37 + 0x634)
00018818                          + (uint16_t)i_4 + 0x2d);
0001881c                      *(uint16_t*)((i_4 << 1) + r3_37 + 0x634) = (int16_t)r0_15;
0001881c                      
00018820                      if (r0_15 >= 0x5dc)
00018820                      {
00018824                          r0_15 -= 0x5dc;
00018826                          *(uint16_t*)((i_4 << 1) + r3_37 + 0x634) = (int16_t)r0_15;
00018820                      }
00018820                      
0001882a                      uint32_t r5_39 = (uint32_t)(uint16_t)r0_15;
0001882e                      uint32_t r0_17;
0001882e                      
0001882e                      if (r5_39 >= 0x465)
0001883c                          r0_17 = r5_39 - 0x465;
0001882e                      else if (r5_39 < 0x2ee)
00018838                      {
00018846                          r0_17 = r5_39;
00018846                          
00018848                          if (r5_39 >= 0x177)
0001884c                              r0_17 -= 0x177;
00018838                      }
00018838                      else
0001883c                          r0_17 = r5_39 - 0x2ee;
0001883c                      
00018856                      uint32_t r0_19 = (uint32_t)*(uint8_t*)(0x83e678 + r0_17);
00018858                      uint32_t r1_40 = (uint32_t)*(uint8_t*)(0x83e678 + 0x176 - r0_17);
00018858                      
00018860                      if (r5_39 >= 0x177)
00018860                      {
00018866                          if (r5_39 < 0x2ee)
00018866                          {
00018868                              uint32_t r5_40 = r0_19;
0001886a                              r0_19 = r1_40;
0001886c                              r1_40 = 0 - r5_40;
00018866                          }
00018866                          else if (r5_39 >= 0x465)
00018872                          {
0001887a                              uint32_t r5_41 = r0_19;
0001887c                              r0_19 = 0 - r1_40;
0001887e                              r1_40 = r5_41;
00018872                          }
00018872                          else
00018872                          {
00018874                              r0_19 = 0 - r0_19;
00018876                              r1_40 = 0 - r1_40;
00018872                          }
00018860                      }
00018860                      
00018882                      void* r6_5 = (i_4 << 3) + r3_37;
000188a8                      *(uint32_t*)((char*)r6_5 + 0x6fc) -= r1_40 * *(uint32_t*)((
000188a8                          (uint32_t)*(uint8_t*)((char*)r3_37 + 0xc90) << 2) + r3_37 + 0xa1c);
000188c2                      i_4 = (uint32_t)((uint16_t)i_4 + 1);
000188c4                      *(uint32_t*)(0x700 + r6_5) -= r0_19 * *(uint32_t*)((
000188c4                          (uint32_t)*(uint8_t*)((char*)r3_37 + 0xc90) << 2) + r3_37 + 0xa1c);
000188c8                  }
000187fa              }
000187fa              
000188cc              void* r0_21 = *(uint32_t*)0x2084d0;
000188cc              
000188ec              if (*(uint32_t*)((char*)r0_21 + 4) <= 0x32)  /* "02_V3.0" */
000188ec                  goto label_18a06;
000188ec              
00018902              *(uint32_t*)(((uint32_t)*(uint8_t*)((char*)r0_21 + 0xc90) << 2) + r0_21
00018902                  + 0xa1c) = r1_28;
00018904              void* r2_38 = *(uint32_t*)0x2084d0;
0001890c              uint32_t r1_47 = (uint32_t)(*(uint8_t*)((char*)r2_38 + 0xc90) + 1);
0001890e              *(uint8_t*)((char*)r2_38 + 0xc90) = (char)r1_47;
0001890e              
00018912              if (r1_47 > 0x95)
00018916                  *(uint8_t*)((char*)r2_38 + 0xc90) = 0;
00018916              
00018918              int32_t r0_24 = *(uint32_t*)((char*)r2_38 + 4);
00018918              
0001891c              if (r0_24 < 0xc8)
0001891c                  goto label_18a06;
0001891c              
00018926              if (sub_12b2a(r0_24, 0x19))  /* ".33_250117" */
00018926                  goto label_18a12;
00018926              
00018928              uint32_t r0_25 = sub_17d60();
0001892c              void* r7_16 = *(uint32_t*)0x2084d0;
00018932              *(uint8_t*)((char*)r7_16 + 0xc88) = (char)r0_25;
00018932              
0001893c              if ((uint32_t)*(uint8_t*)0x2084b4)
0001893c              {
000189a0              label_189a0:
0001898e                  *(uint8_t*)((char*)r7_16 + 0xca0) = 0x37;  /* ".0" */
0001893c              }
0001893c              else
0001893c              {
0001893e                  uint32_t r3_39 = (uint32_t)*(uint16_t*)((char*)r7_16 + 0xc92);
00018942                  int32_t r3_40;
00018942                  
00018942                  if (r3_39 < 0x32)  /* "02_V3.0" */
00018942                  {
0001894a                      if (r3_39 >= 0x18)  /* "0.33_250117" */
0001894a                      {
0001894c                          r3_40 = 2;
0001894e                          goto label_1895a;
0001894a                      }
0001894a                      
00018952                      if (r3_39 >= 0xa)
00018952                      {
00018954                          r3_40 = 1;
00018954                          goto label_1895a;
00018952                      }
00018952                      
00018974                  label_18974:
00018974                      int32_t r3_42 = (int32_t)*(uint8_t*)((char*)r7_16 + 0xca0);
00018974                      
00018978                      if (r3_42 <= 0)
00018978                          goto label_18982;
00018978                      
0001897c                      if (r3_42 != 0x37)  /* ".0" */
0001897c                      {
00018980                          *(uint8_t*)((char*)r7_16 + 0xca0) = (uint8_t)r3_42 - 1;
00018980                          goto label_18982;
0001897c                      }
00018942                  }
00018942                  else
00018942                  {
00018944                      r3_40 = 3;
0001895a                  label_1895a:
0001895a                      int32_t r5_49 = (int32_t)*(uint8_t*)((char*)r7_16 + 0xca0);
0001895a                      
0001895e                      if (r5_49 >= 0x10)  /* "RY02_3.00.33_250117" */
0001895e                      {
00018968                          if (!r3_40)
00018968                              goto label_18974;
00018968                          
0001896c                          if (r3_40 == 0x37)  /* ".0" */
0001896c                              goto label_189a0;
0001896c                          
0001896c                          goto label_18982;
0001895e                      }
0001895e                      
00018962                      *(uint8_t*)((char*)r7_16 + 0xca0) = (uint8_t)r5_49 + (uint8_t)r3_40;
00018982                  label_18982:
00018982                      char* r1_49 = (char*)r7_16 + 0xca0;
00018982                      
0001898a                      if ((int32_t)*(uint8_t*)r1_49 < 0)
0001898e                          *(uint8_t*)r1_49 = 0;
00018942                  }
0001893c              }
0001893c              
00018990              int32_t r1_50 = *(uint32_t*)((char*)r7_16 + 4);
00018990              
00018994              if (r1_50 == 0xc8)
00018994              {
000189b2                  if ((uint32_t)*(uint16_t*)((char*)r7_16 + 0xc92) > 0x1e
000189b2                          || r0_25 - 0x47 < 0x13)  /* "2_3.00.33_250117" */  /* "50117" */
000189b4                      *(uint8_t*)((char*)r7_16 + 0xc89) = (char)r0_25;
000189b2                  else
000189be                      *(uint8_t*)((char*)r7_16 + 0xc89) = 0x50;
00018994              }
00018994              else if (r1_50 > 0xc8 && !(uint32_t)*(uint8_t*)((char*)r7_16 + 0xc89))
000189be                  *(uint8_t*)((char*)r7_16 + 0xc89) = 0x4e;
000189be              
000189c0              uint32_t r1_56 = (uint32_t)*(uint16_t*)((char*)r7_16 + 0xc92);
000189c4              int32_t r1_57;
000189c4              
000189c4              if (r1_56 > 0x28)
000189c6                  r1_57 = 4;
000189c4              else if (r1_56 > 0x1e)  /* "50117" */
000189ce                  r1_57 = 2;
000189cc              else if (r1_56 <= 0x14)  /* "_3.00.33_250117" */
000189dc                  r1_57 = 0;
000189d6              else
000189d8                  r1_57 = 1;
000189d8              
000189de              uint32_t r3_46 = (uint32_t)*(uint8_t*)((char*)r7_16 + 0xc89);
000189e0              int32_t r5_51 = r3_46 + r1_57;
000189e0              
000189e8              if (r0_25 <= r5_51 || !r0_25)
000189e8              {
000189ee                  int32_t r1_58 = r3_46 - r1_57;
000189ee                  
000189f6                  if (r0_25 >= r1_58 || !r0_25)
000189fc                      *(uint8_t*)((char*)r7_16 + 0xc88) = (char)r3_46;
000189f6                  else
000189f8                      *(uint8_t*)((char*)r7_16 + 0xc88) = (char)r1_58;
000189e8              }
000189e8              else
000189ea                  *(uint8_t*)((char*)r7_16 + 0xc88) = (char)r5_51;
000189ea              
00018a00              *(uint8_t*)((char*)r7_16 + 0xc89) = *(uint8_t*)((char*)r7_16 + 0xc88);
00018994              goto label_18a06;
000185f4          }
000185f4          
00018a06      label_18a06:
00018a06          int32_t r0_28 = *(uint32_t*)(*(uint32_t*)0x2084d0 + 4);
00018a06          
00018a0a          if (r0_28 == 0x1e)  /* "50117" */
00018a0a              goto label_18ae6;
00018a0a          
00018a0c          if (r0_28 > 0x1e)  /* "50117" */
00018a0c          {
00018a12          label_18a12:
00018a12              void* r0_29 = *(uint32_t*)0x2084d0;
00018a1a              int32_t r1_61 = var_5c - *(uint32_t*)((char*)r0_29 + 0x10);
00018a1a                  /* "RY02_3.00.33_250117" */
00018a1e              *(uint32_t*)((char*)r0_29 + 0x10) = *(uint32_t*)((char*)r0_29 + 0xc);
00018a1e                  /* "RY02_3.00.33_250117" */
00018a22              *(uint32_t*)((char*)r0_29 + 0xc) = var_5c;
00018a26              int32_t r3_50 = *(uint32_t*)((char*)r0_29 + 0x14);  /* "_3.00.33_250117" */
00018a32              int32_t r1_62 = r1_61
00018a32                  - ((r3_50 * 0xffffff8f + 0x34 * *(uint32_t*)((char*)r0_29 + 0x18)) >> 6);
00018a32                  /* "0.33_250117" */  /* "_V3.0" */
00018a34              *(uint32_t*)((char*)r0_29 + 0x1c) = r1_62;  /* "_250117" */
00018a36              *(uint32_t*)((char*)r0_29 + 0x18) = r3_50;  /* "0.33_250117" */
00018a38              *(uint32_t*)((char*)r0_29 + 0x14) = r1_62;  /* "_3.00.33_250117" */
00018a3a              int32_t r3_51 = *(uint32_t*)((char*)r0_29 + 0x24);
00018a3e              *(uint32_t*)((char*)r0_29 + 0x24) = *(uint32_t*)((char*)r0_29 + 0x20);
00018a3e                  /* "117" */
00018a40              *(uint32_t*)((char*)r0_29 + 0x20) = r1_62;  /* "117" */
00018a46              int32_t r1_63 = *(uint32_t*)((char*)r0_29 + 0x28);
00018a56              int32_t r3_53 = r1_62 - r3_51
00018a56                  - ((r1_63 * 0xffffffb2 + 0x24 * *(uint32_t*)((char*)r0_29 + 0x2c)) >> 6);
00018a58              *(uint32_t*)((char*)r0_29 + 0x30) = r3_53;  /* "RY02_V3.0" */
00018a5a              *(uint32_t*)((char*)r0_29 + 0x28) = r3_53;
00018a5c              *(uint32_t*)((char*)r0_29 + 0x2c) = r1_63;
00018a74              uint32_t i_5;
00018a74              
00018a74              for (i_5 = 7; i_5; i_5 = (i_5 - 1) << 0x10 >> 0x10)  /* "RY02_3.00.33_250117"
00018a74                      */
00018a70                  *(uint32_t*)((i_5 << 2) + r0_29 + 0x2d4) =
00018a70                      *(uint32_t*)((i_5 << 2) + r0_29 + 0x2d0);
00018a70              
00018a76              void* r0_30 = *(uint32_t*)0x2084d0;
00018a7c              *(uint32_t*)((char*)r0_30 + 0x2d4) = *(uint32_t*)((char*)r0_30 + 0x30);
00018a7c                  /* "RY02_V3.0" */
00018a92              int32_t r5_66;
00018a92              
00018a92              do
00018a92              {
00018a8a                  r5_66 = *(uint32_t*)((i_5 << 2) + r0_30 + 0x2d4) + var_3c;
00018a8c                  i_5 = (uint32_t)((uint16_t)i_5 + 1);
00018a8e                  var_3c = r5_66;
00018a92              } while (i_5 < 8);
00018a92              
00018a9c              *(uint32_t*)((char*)r0_30 + 0x348) = r5_66 >> 3;
00018ab4              uint32_t i_6;
00018ab4              
00018ab4              for (i_6 = 6; i_6; i_6 = (i_6 - 1) << 0x10 >> 0x10)  /* "RY02_3.00.33_250117"
00018ab4                      */
00018ab0                  *(uint32_t*)((i_6 << 2) + r0_30 + 0x26c) =
00018ab0                      *(uint32_t*)((i_6 << 2) + r0_30 + 0x268);
00018ab0              
00018ab6              void* r0_31 = *(uint32_t*)0x2084d0;
00018ac2              *(uint32_t*)((char*)r0_31 + 0x26c) = *(uint32_t*)((char*)r0_31 + 0x348);
00018ac4              int32_t r3_55 = *(uint32_t*)((char*)r0_31 + 0x278);
00018ac4              
00018ada              while (true)
00018ada              {
00018ada                  if (r3_55 < *(uint32_t*)((i_6 << 2) + r0_31 + 0x26c) || r3_55 < 0)
00018ada                  {
00018ade                      var_4c = 0;
00018ae0                      break;
00018ada                  }
00018ada                  
00018af0                  i_6 = (uint32_t)((uint16_t)i_6 + 1);
00018af0                  
00018af4                  if (i_6 >= 7)
00018af4                      break;
00018af4                  
00018af4                  continue;
00018ada              }
00018ada              
00018af6              int32_t r3_56 = *(uint32_t*)((char*)r0_31 + 0x278);
00018af8              uint32_t r1_72 = 0;
00018af8              
00018b0c              while (true)
00018b0c              {
00018b0c                  if (r3_56 > *(uint32_t*)((r1_72 << 2) + r0_31 + 0x26c) || r3_56 > 0)
00018b0c                  {
00018b10                      var_40 = 0;
00018b12                      break;
00018b0c                  }
00018b0c                  
00018b16                  r1_72 = (uint32_t)((uint16_t)r1_72 + 1);
00018b16                  
00018b1a                  if (r1_72 >= 7)
00018b1a                      break;
00018b1a                  
00018b1a                  continue;
00018b0c              }
00018b0c              
00018b20              if (var_4c)
00018b2a                  *(uint32_t*)((char*)r0_31 + 0x394) = *(uint32_t*)((char*)r0_31 + 0x278);
00018b2a              
00018b30              if (var_40)
00018b3a                  *(uint32_t*)((char*)r0_31 + 0x398) = *(uint32_t*)((char*)r0_31 + 0x278);
00018b3a              
00018b40              if (var_4c)
00018b40              {
00018b4c                  int32_t r0_35 = *(uint32_t*)((char*)r0_31 + 0x394)
00018b4c                      - *(uint32_t*)((char*)r0_31 + 0x398);
00018b4e                  *(uint32_t*)((char*)r0_31 + 0x358) = r0_35;
00018b52                  *(uint32_t*)((char*)r0_31 + 0x35c) = r0_35 >> 5;
00018b40              }
00018a0c          }
000185f2      }
000185f2      
00018b5c      if ((uint32_t)*(uint8_t*)0x2084b6 == 1)
00018b5c      {
00018b60          uint32_t i_7 = 0;
00018b62          int32_t r2_44 = *(uint32_t*)0x2084d0;
00018b62          
00018b72          do
00018b72          {
00018b66              void* r1_81 = (i_7 << 2) + r2_44;
00018b6c              i_7 = (uint32_t)((uint16_t)i_7 + 1);
00018b6e              *(uint32_t*)((char*)r1_81 + 0x5c) = *(uint32_t*)((char*)r1_81 + 0x60);
00018b72          } while (i_7 < 0x31);  /* "Y02_V3.0" */
00018b72          
00018b74          void* r0_39 = *(uint32_t*)0x2084d0;
00018b7c          *(uint32_t*)((char*)r0_39 + 0x120) = *(uint32_t*)((char*)r0_39 + 0x124);
00018b7c          
00018b92          for (uint32_t i_8 = 0; i_8 < 0x31; )  /* "Y02_V3.0" */
00018b92          {
00018b86              void* r2_49 = (i_8 << 2) + r0_39 + 0x100;
00018b8c              i_8 = (uint32_t)((uint16_t)i_8 + 1);
00018b8e              *(uint32_t*)((char*)r2_49 + 0x24) = *(uint32_t*)((char*)r2_49 + 0x28);
00018b92          }
00018b92          
00018b96          void* r5_85 = *(uint32_t*)0x2084d0;
00018ba2          *(uint32_t*)(&data_1e8 + r5_85) = *(uint32_t*)((char*)r5_85 + 0x348);
00018ba4          int32_t r0_41 = *(uint32_t*)((char*)r5_85 + 4);
00018ba4          
00018ba8          if (r0_41 >= 0x96 && !sub_12b2a(r0_41, 0x19))  /* ".33_250117" */
00018ba8          {
00018bc4              sub_19768((char*)r5_85 + 0x5c, (char*)r5_85 + 0x124, (char*)r5_85 + 0x1ec, 
00018bc4                  0x32);  /* "02_V3.0" */
00018bd6              *(uint32_t*)(*(uint32_t*)0x2084d0 + 0x370) =
00018bd6                  sub_195e8(*(uint32_t*)0x2084d0 + 0x1ec);
00018ba8          }
00018b5c      }
00018b5c      
00018bda      uint32_t i_9 = 0;
00018bdc      int32_t r3_60 = *(uint32_t*)0x2084d0;
00018bdc      
00018bfc      do
00018bfc      {
00018be6          void* r5_86 = (i_9 << 2) + r3_60;
00018bee          *(uint32_t*)((char*)r5_86 + 0x3a4) = *(uint32_t*)((char*)r5_86 + 0x3a8);
00018bf6          i_9 = (uint32_t)((uint16_t)i_9 + 1);
00018bf8          *(uint32_t*)((char*)r5_86 + 0x408) = *(uint32_t*)((char*)r5_86 + 0x40c);
00018bfc      } while (i_9 < 0x18);  /* "0.33_250117" */
00018bfc      
00018c02      void* r5_88 = *(uint32_t*)0x2084d0;
00018c10      *(uint32_t*)((char*)r5_88 + 0x404) = *(uint32_t*)((char*)r5_88 + 0x35c);
00018c14      *(uint32_t*)((char*)r5_88 + 0x468) = *(uint32_t*)((char*)r5_88 + 0x334);
00018c28      *(uint32_t*)((char*)r5_88 + 0x340) =
00018c28          (0x1fbd0 * (uint32_t)*(uint8_t*)((char*)r5_88 + 0xc87) + var_58) >> 0xa;
00018c36      *(uint32_t*)((char*)r5_88 + 0x368) =
00018c36          (0x1fbd0 * (uint32_t)*(uint8_t*)((char*)r5_88 + 0xc86) + var_5c) >> 0xa;
00018c36      
00018c5a      if ((uint32_t)*(uint16_t*)((char*)r5_88 + 0xc92) < (uint32_t)*(uint8_t*)0x2084d5
00018c5a              || (uint32_t)*(uint8_t*)((char*)r5_88 + 0xd6f)
00018c5a              || *(uint32_t*)((char*)r5_88 + 0x370) < (uint32_t)*(uint8_t*)0x2084d4)
00018c6c          *(uint8_t*)((char*)r5_88 + 0xc95) = *(uint8_t*)0x2084d6;
00018c5a      else
00018c5a      {
00018c64          uint32_t r0_51 = (uint32_t)*(uint8_t*)((char*)r5_88 + 0xc95);
00018c64          
00018c68          if (r0_51)
00018c6c              *(uint8_t*)((char*)r5_88 + 0xc95) = (uint8_t)r0_51 - 1;
00018c5a      }
00018c5a      
00018c6e      int32_t r0_53 = *(uint32_t*)((char*)r5_88 + 4);
00018c6e      
00018c86      if (!sub_12b2a(r0_53, 0x19) && !(uint32_t)*(uint8_t*)((char*)r5_88 + 0xc95)
00018c86          && r0_53 >= 0x96)  /* ".33_250117" */
00018c86      {
00018d02          for (uint32_t i_10 = 0; i_10 < 0x19; i_10 = (uint32_t)((uint16_t)i_10 + 1))  /* "
00018d02              .33_250117" */
00018d02          {
00018c8e              void* r1_106 = (i_10 << 2) + r5_88;
00018c94              int32_t r6_23 = *(uint32_t*)((char*)r1_106 + 0x3a4);
00018c94              
00018c98              if (r6_23 > 0)
00018c98              {
00018ca2                  int32_t r1_108 = *(uint32_t*)((char*)r1_106 + 0x408);
00018ca2                  
00018cb2                  if (r1_108 > 0 && r6_23 < r1_108 << 2 && r6_23 > r1_108 >> 2)
00018cb2                  {
00018cbe                      int32_t r7_22 = *(uint32_t*)((char*)r5_88 + 0x36c) << 1;
00018cbe                      
00018cd4                      if (r6_23 > r7_22 && *(uint32_t*)(((uint32_t)*(uint16_t*)0x2084e4
00018cd4                              << 2) + r5_88 + 0x468) > 0)
00018cd6                          *(uint32_t*)((char*)r1_106 + 0x3a4) = r7_22;
00018cd6                      
00018cdc                      int32_t r2_64 = *(uint32_t*)((char*)r5_88 + 0x344) << 1;
00018cdc                      
00018cf6                      if (r1_108 > r2_64 && *(uint32_t*)(((uint32_t)*(uint16_t*)0x2084e4
00018cf6                              << 2) + r5_88 + 0x4e8) > 0)
00018cfa                          *(uint32_t*)((char*)r1_106 + 0x408) = r2_64;
00018cb2                  }
00018c98              }
00018d02          }
00018d02          
00018d10          int32_t r0_59 = sub_13d8a(*(uint32_t*)0x2084d0 + 0x408, 0x19);  /* ".33_250117" */
00018d20          int32_t r0_62 = sub_13d8a(*(uint32_t*)0x2084d0 + 0x3a4, 0x19);  /* ".33_250117" */
00018d28          char r12_5 = 0;
00018d2c          void* r0_63 = *(uint32_t*)0x2084d0;
00018eae          int32_t i_11;
00018eae          
00018eae          do
00018eae          {
00018d36              if (*(uint32_t*)((char*)r0_63 + 0x4a8) > 0)
00018d36              {
00018d38                  uint32_t j = *(uint32_t*)((char*)r0_63 + 0x4e8);
00018d38                  
00018d3c                  if (!j)
00018d3c                  {
00018d64                      do
00018d64                      {
00018d44                          void* r3_65 = (j << 2) + r0_63;
00018d56                          var_44 += *(uint32_t*)((char*)r3_65 + 0x46c);
00018d5c                          j = (uint32_t)((uint16_t)j + 1);
00018d60                          var_48 += *(uint32_t*)((char*)r3_65 + 0x4ec);
00018d64                      } while (j < 0x10);  /* "RY02_3.00.33_250117" */
00018d64                      
00018d8e                      for (uint32_t j_1 = 0x10; j_1 < 0x20; )  /* "RY02_3.00.33_250117" */
00018d8e                          /* "117" */
00018d8e                      {
00018d72                          void* r6_29 = (j_1 << 2) + r0_63;
00018d7e                          *(uint32_t*)((char*)r6_29 + 0x46c) = var_44 >> 4;
00018d88                          j_1 = (uint32_t)((uint16_t)j_1 + 1);
00018d8a                          *(uint32_t*)((char*)r6_29 + 0x4ec) = var_48 >> 4;
00018d8e                      }
00018d3c                  }
00018d36              }
00018d36              
00018db6              int32_t r3_75;
00018db6              int32_t r5_95;
00018db6              
00018db6              if ((uint32_t)*(uint16_t*)((char*)r0_63 + 0xc92)
00018db6                  <= ((uint32_t)*(uint8_t*)0x2084d5 * 3) >> 1
00018db6                  || *(uint32_t*)((char*)r0_63 + 0x370)
00018db6                  <= (uint32_t)*(uint8_t*)0x2084d4 + 5)
00018db6              {
00018e4e                  int32_t r3_76 = 0;
00018e50                  int32_t r5_96 = 0;
00018e50                  
00018e78                  for (uint32_t j_2 = 0x1f; j_2; j_2 = (j_2 - 1) << 0x10 >> 0x10)  /* "
00018e78                      RY02_3.00.33_250117" */  /* "0117" */
00018e78                  {
00018e56                      void* r6_49 = (j_2 << 2) + r0_63;
00018e60                      int32_t r6_50 = *(uint32_t*)((char*)r6_49 + 0x4e8);
00018e62                      *(uint32_t*)((char*)r6_49 + 0x4ec) = r6_50;
00018e68                      r3_76 += r6_50;
00018e6c                      int32_t r6_51 = *(uint32_t*)((char*)r6_49 + 0x468);
00018e6e                      *(uint32_t*)((char*)r6_49 + 0x46c) = r6_51;
00018e70                      r5_96 += r6_51;
00018e78                  }
00018e78                  
00018e7e                  r3_75 = r0_59 + r3_76;
00018e80                  *(uint32_t*)((char*)r0_63 + 0x4ec) = r0_59;
00018e88                  *(uint32_t*)((char*)r0_63 + 0x46c) = r0_62;
00018e8a                  r5_95 = r0_62 + r5_96;
00018db6              }
00018db6              else
00018db6              {
00018db8                  r3_75 = 0;
00018dba                  r5_95 = 0;
00018dba                  
00018de0                  for (uint32_t j_3 = 0x1f; j_3; j_3 = (j_3 - 1) << 0x10 >> 0x10)  /* "
00018de0                      RY02_3.00.33_250117" */  /* "0117" */
00018de0                  {
00018dc0                      void* r6_33 = (j_3 << 2) + r0_63;
00018dcc                      *(uint32_t*)((char*)r6_33 + 0x4ec) =
00018dcc                          *(uint32_t*)((char*)r6_33 + 0x4e8);
00018ddc                      *(uint32_t*)((char*)r6_33 + 0x46c) =
00018ddc                          *(uint32_t*)((char*)r6_33 + 0x468);
00018de0                  }
00018de0                  
00018de6                  *(uint32_t*)((char*)r0_63 + 0x4ec) = r0_59;
00018df0                  *(uint32_t*)((char*)r0_63 + 0x46c) = r0_62;
00018e20                  uint32_t j_4;
00018e20                  
00018e20                  for (j_4 = 0x1f; j_4; j_4 = (j_4 - 1) << 0x10 >> 0x10)  /* "
00018e20                      RY02_3.00.33_250117" */  /* "0117" */
00018e20                  {
00018df6                      void* r6_38 = (j_4 << 2) + r0_63;
00018e0c                      *(uint32_t*)((char*)r6_38 + 0x4ec) =
00018e0c                          *(uint32_t*)((char*)r6_38 + 0x4e8);
00018e1c                      *(uint32_t*)((char*)r6_38 + 0x46c) =
00018e1c                          *(uint32_t*)((char*)r6_38 + 0x468);
00018e20                  }
00018e20                  
00018e24                  *(uint32_t*)((char*)r0_63 + 0x4ec) = r0_59;
00018e2a                  *(uint32_t*)((char*)r0_63 + 0x46c) = r0_62;
00018e2a                  
00018e4a                  do
00018e4a                  {
00018e30                      void* r6_45 = (j_4 << 2) + r0_63;
00018e3a                      r3_75 += *(uint32_t*)((char*)r6_45 + 0x4ec);
00018e44                      j_4 = (uint32_t)((uint16_t)j_4 + 1);
00018e46                      r5_95 += *(uint32_t*)((char*)r6_45 + 0x46c);
00018e4a                  } while (j_4 < 0x20);  /* "117" */
00018db6              }
00018db6              
00018e94              *(uint32_t*)((char*)r0_63 + 0x374) = 5;
00018e94              
00018e9a              if (*(uint32_t*)((char*)r0_63 + 0x4e8) > 0)
00018e9a              {
00018ea0                  *(uint32_t*)((char*)r0_63 + 0x36c) = r5_95 >> 5;
00018ea2                  *(uint32_t*)((char*)r0_63 + 0x344) = r3_75 >> 5;
00018e9a              }
00018e9a              
00018ea8              i_11 = (int32_t)(r12_5 + 1);
00018eaa              r12_5 = (uint8_t)i_11;
00018eae          } while (i_11 < 6);
00018c86      }
00018c86      
00018eb6      void* r5_98 = *(uint32_t*)0x2084d0;
00018eba      int32_t r0_64 = *(uint32_t*)((char*)r5_98 + 4);
00018eba      
00018ec0      if (r0_64 < 0x12c)
00018ec0      {
000192f8          *(uint32_t*)((char*)r5_98 + 0x380) = 0;
000192fa          *(uint32_t*)((char*)r5_98 + 0x384) = 0;
00019300          *(uint8_t*)((char*)r5_98 + 8) = 0;
00019304          *(uint8_t*)((char*)r5_98 + 0xc88) = 0;
00019306          *(uint8_t*)((char*)r5_98 + 0xc8a) = 0;
00019308          *(uint8_t*)((char*)r5_98 + 0xc8b) = 0;
00018ec0      }
00018ec0      else if (!sub_12b2a(r0_64, 0x19))  /* ".33_250117" */
00018eca      {
00018ed4          int32_t r0_66 = *(uint32_t*)((char*)r5_98 + 0x344);
00018edc          char r0_125;
00018edc          void* r1_171;
00018edc          
00018edc          if (r0_66 <= 0x20)  /* "117" */
00018edc          {
000190f8              if ((uint32_t)*(uint8_t*)((char*)r5_98 + 0xc95))
000190f8                  goto label_190fc;
000190f8              
0001910a          label_1910a:
0001910a              r1_171 = (char*)r5_98 + 0xc80;
0001910c              uint32_t r0_126 = (uint32_t)*(uint8_t*)((char*)r1_171 + 0x14);
0001910c                  /* "_3.00.33_250117" */
0001910c              
00019110              if (r0_126)
00019110              {
00019112                  r0_125 = (uint8_t)r0_126 - 1;
00019112                  goto label_19114;
00019110              }
00018edc          }
00018edc          else
00018edc          {
00018ee4              if (!(uint32_t)*(uint8_t*)((char*)r5_98 + 0xc95))
00018ee4              {
00018ee8                  int32_t r6_54 = *(uint32_t*)((char*)r5_98 + 0x340);
00018ee8                  
00018eec                  if (r6_54 > 0)
00018eec                  {
00018eee                      int32_t r0_69 = *(uint32_t*)((char*)r5_98 + 0x368);
00018eee                      
00018ef4                      if (r0_69 > 0)
00018ef4                      {
00018efe                          int32_t r1_137 = *(uint32_t*)0x2084dc;
00018f16                          int32_t r6_55 = sub_12b2a(
00018f16                              r6_54 * sub_12b2a(
00018f16                                  r1_137 * (*(uint32_t*)((char*)r5_98 + 0x36c) >> 5), 
00018f16                                  r0_66 >> 5), 
00018f16                              r0_69);
00018f1c                          int32_t r0_78 = sub_12b2a(r1_137, 0x14);  /* "_3.00.33_250117" */
00018f28                          int32_t r0_79 = (uint32_t)*(uint8_t*)0x2084fb * r0_78;
00018f28                          
00018f2c                          if (r0_79 < r6_55)
00018f2e                              r6_55 = r0_79;
00018f2e                          
00018f34                          int32_t r0_81 = (uint32_t)*(uint8_t*)0x2084fc * r0_78;
00018f34                          
00018f38                          if (r0_81 > r6_55)
00018f3a                              r6_55 = r0_81;
00018f3a                          
00018f42                          int32_t r0_84;
00018f42                          uint32_t r1_144;
00018f42                          
00018f42                          if (r0_64 <= (uint32_t)*(uint16_t*)0x2084f0)
00018f42                          {
00018f4c                              r1_144 = (uint32_t)*(uint16_t*)0x2084f2;
00018f4e                              r0_84 = *(uint32_t*)((char*)r5_98 + 0x38c);
00018f42                          }
00018f42                          
00018f56                          if (r0_64 > (uint32_t)*(uint16_t*)0x2084f0
00018f56                              || r0_84 + (r1_144 << 3) >= r6_55)
00018f56                          {
00018fc4                              void* r0_91 = (char*)r5_98 + 0x380;
00018fc6                              uint32_t r3_79 = (uint32_t)*(uint16_t*)0x2084f4;
00018fc8                              int32_t r1_159 = *(uint32_t*)((char*)r0_91 + 0xc);
00018fd0                              int32_t r1_145;
00018fd0                              
00018fd0                              r1_145 = r1_159 + (r3_79 << 3) >= r6_55
00018fd0                                  ? (r1_159 * 7 + r6_55) >> 3 : r1_159 + r3_79;
00018fd0                              
00018fe2                              *(uint32_t*)((char*)r0_91 + 0xc) = r1_145;
00018f56                          }
00018f56                          else if ((uint32_t)*(uint8_t*)0x2084b7 == 1)
00018f60                          {
00018f86                              if ((uint32_t)*(uint16_t*)((char*)r5_98 + 0xc92)
00018f86                                      > ((uint32_t)*(uint8_t*)0x2084d5 * 3) >> 1
00018f86                                      && *(uint32_t*)((char*)r5_98 + 0x370)
00018f86                                      > (uint32_t)*(uint8_t*)0x2084d4 + 5)
00018fe2                                  *(uint32_t*)((char*)r5_98 + 0x38c) =
00018fe2                                      (r0_84 * 3 + r6_55) >> 2;
00018f86                              else if (r0_84 >= r6_55)
00018fe2                                  *(uint32_t*)((char*)r5_98 + 0x38c) =
00018fe2                                      (r0_84 * 7 + r6_55) >> 3;
00018f94                              else
00018f94                              {
00018f9e                                  int32_t r1_156 = (r0_84 * 7 + r6_55) >> 3;
00018fa0                                  int32_t r0_88 = r0_84 + 0x1f4;
00018fa0                                  
00018fa4                                  if (r1_156 <= r0_88)
00018fa6                                      r0_88 = r1_156;
00018fa6                                  
00018faa                                  *(uint32_t*)((char*)r5_98 + 0x38c) = r0_88;
00018f94                              }
00018f60                          }
00018f60                          else
00018fe2                              *(uint32_t*)((char*)r5_98 + 0x38c) = r0_84 + r1_144;
00018fe2                          
00018fec                          int32_t r6_56 = *(uint32_t*)((char*)r5_98 + 0x38c);
00018ff0                          int32_t r0_93 = *(uint32_t*)((char*)r5_98 + 0xc98);
00018ff6                          int32_t r0_96;
00018ff6                          
00018ff6                          if (r6_56 <= r0_93 + 0x1388)
00019016                              r0_96 = (*(uint32_t*)0x2084d8 + r0_93 * 0xf - 0x18e70) >> 4;
00018ff6                          else
00019002                              r0_96 = (r6_56 + r0_93 * 0x1ff - 0x1388) >> 9;
00019002                          
00019020                          *(uint32_t*)((char*)r5_98 + 0xc98) = r0_96;
00019020                          
0001902a                          if (r6_56 > r0_96 + 0x1388 && r6_56 < r0_96 + 0x2710)
00019070                              *(uint32_t*)((char*)r5_98 + 0xc9c) =
00019070                                  r0_96 - *(uint32_t*)0x2084d8 + 0x18e70;
0001902a                          else if (r6_56 >= r0_96 + 0x2710 && r6_56 < r0_96 + 0x4e20)
00019070                              *(uint32_t*)((char*)r5_98 + 0xc9c) = sub_12b3e(
00019070                                  0x2710 * (r0_96 - *(uint32_t*)0x2084d8 + 0x18e70), 
00019070                                  r6_56 - r0_96);
00019044                          else if (r6_56 >= r0_96 + 0x4e20)
00019070                              *(uint32_t*)((char*)r5_98 + 0xc9c) =
00019070                                  (r0_96 - *(uint32_t*)0x2084d8 + 0x18e70) >> 1;
00019070                          
00019080                          if (r0_64 - 0x258 <= 0x578)
00019080                          {
00019086                              int32_t r0_108 = *(uint32_t*)((char*)r5_98 + 0x390);
00019086                              
0001908c                              if (r6_56 < r0_108 - 0x19258)
0001908c                              {
0001909a                                  int32_t r1_165 = (r6_56 + r0_108 * 0xf + 0x19258) >> 4;
0001909e                                  *(uint32_t*)((char*)r5_98 + 0x390) = r1_165;
000190aa                                  int32_t r0_113 = *(uint32_t*)0x2084d8 - 0x1388;
000190aa                                  
000190ae                                  if (r1_165 < r0_113)
000190b2                                      *(uint32_t*)((char*)r5_98 + 0x390) = r0_113;
0001908c                              }
00019080                          }
00019080                          
000190bc                          if (r0_64 > 0x7d0)  /* "17 10:58:10 2022" */
000190bc                          {
000190c2                              int32_t r0_116 = *(uint32_t*)((char*)r5_98 + 0x390);
000190c2                              
000190c8                              if (r6_56 > r0_116 - 0x14c08)
000190c8                              {
000190d6                                  int32_t r1_169 = (r6_56 + r0_116 * 0x3f + 0x14c08) >> 6;
000190da                                  *(uint32_t*)((char*)r5_98 + 0x390) = r1_169;
000190e6                                  int32_t r0_121 = *(uint32_t*)0x2084d8 + 0xbb8;
000190e6                                  
000190ea                                  if (r1_169 > r0_121)
000190ee                                      *(uint32_t*)((char*)r5_98 + 0x390) = r0_121;
000190c8                              }
000190bc                          }
00018ef4                      }
00018eec                  }
00018eec                  
00018eec                  goto label_1910a;
00018ee4              }
00018ee4              
000190fc          label_190fc:
000190fc              r1_171 = (char*)r5_98 + 0xc80;
000190fe              uint32_t r0_124 = (uint32_t)*(uint8_t*)((char*)r1_171 + 0x14);
000190fe                  /* "_3.00.33_250117" */
000190fe              
00019102              if (r0_124 < 0xa)
00019102              {
00019104                  r0_125 = (uint8_t)r0_124 + 1;
00019114              label_19114:
00019114                  *(uint8_t*)((char*)r1_171 + 0x14) = r0_125;  /* "_3.00.33_250117" */
00019102              }
00019102              
00019124              if ((uint32_t)*(uint8_t*)((char*)r5_98 + 0xc94) > 8
00019124                  && (uint32_t)*(uint8_t*)((char*)r5_98 + 0xc95))
00019124              {
0001912e                  int32_t r2_88 = *(uint32_t*)((char*)r5_98 + 0x390);
00019130                  int32_t r0_129 = *(uint32_t*)((char*)r5_98 + 0x38c);
00019130                  
0001913e                  if (r0_129 > r2_88 - 0x17ed0 && r0_129 <= r2_88 - 0x17318)
00019154                      *(uint32_t*)((char*)r5_98 + 0x38c) =
00019154                          (r2_88 + r0_129 * 7 - 0x17ed0) >> 3;
0001913e                  else if (r0_129 > r2_88 - 0x17318)
00019154                      *(uint32_t*)((char*)r5_98 + 0x38c) = r0_129 - 0x96;
00019124              }
00018edc          }
00019160          void* r0_135;
00019160          int32_t r1_175;
00019160          
00019160          if ((uint32_t)*(uint8_t*)0x2084fa == 1)
00019160          {
0001917e              r0_135 = (char*)r5_98 + 0x380;
0001918c              r1_175 = *(uint32_t*)((char*)r0_135 + 0x10)
0001918c                  - *(uint32_t*)((char*)r0_135 + 0xc) + *(uint32_t*)((char*)r5_98 + 0xc9c);
0001918c                  /* "RY02_3.00.33_250117" */
00019160          }
00019160          else
00019160          {
00019162              r0_135 = (char*)r5_98 + 0x380;
00019168              r1_175 =
00019168                  *(uint32_t*)((char*)r0_135 + 0x10) - *(uint32_t*)((char*)r0_135 + 0xc);
00019168                  /* "RY02_3.00.33_250117" */
00019160          }
00019160          
0001916c          *(uint32_t*)r0_135 = r1_175 >> 0xa;
00019174          int32_t r1_177 = *(uint32_t*)((char*)r5_98 + 0x380);
00019174          
00019178          if (r1_177 >= 0x63)
0001917a              *(uint32_t*)((char*)r5_98 + 0x380) = 0x63;
00019178          else if (r1_177 <= 0x46)
00019196              *(uint32_t*)((char*)r5_98 + 0x380) = 0x46;
00019196          
0001919c          uint32_t r1_181 =
0001919c              (uint32_t)*(uint8_t*)(*(uint32_t*)((char*)r5_98 + 0x380) + 0x83e614);
0001919e          *(uint32_t*)((char*)r5_98 + 0x380) = r1_181;
000191a0          int32_t r2_94 = *(uint32_t*)((char*)r5_98 + 0x388);
000191a4          int32_t r1_184;
000191a4          
000191a4          r1_184 = r1_181 < 0x5f ? (r2_94 + (r1_181 << 6)) >> 1
000191a4              : (r2_94 * 3 + (r1_181 << 6)) >> 2;
000191a4          
000191b8          *(uint32_t*)((char*)r5_98 + 0x388) = r1_184;
000191ca          char r0_139;
000191ca          
000191ca          r0_139 = r1_184 - (((r1_184 >> 0x1f >> 0x1a) + r1_184) >> 6 << 6) < 0x20
000191ca              ? (char)(r1_184 >> 6) : (char)(r1_184 >> 6) + 1;
000191ca              /* "33_250117" */  /* "0117" */  /* "117" */
000191ca          
000191d4          *(uint8_t*)((char*)r5_98 + 8) = r0_139;
000191d6          uint32_t r0_140 = (uint32_t)r0_139;
000191d6          
000191da          if (r0_140 > 0x63)
000191da          {
000191dc              *(uint8_t*)((char*)r5_98 + 8) = 0x63;
000191e8          label_191e8:
000191e8              int32_t r1_193 = sub_12b2a(r0_64, 0x96);
000191f0              uint32_t r0_145;
000191f0              
000191f0              if (!r1_193)
000191f0              {
000191f4                  if (r4 > 0)
00019200                      *(uint8_t*)((char*)r5_98 + 8) = 0x63 - sub_12b3e(r4, 3);
000191f4                  else if (r4 < 0)
00019212                      *(uint8_t*)((char*)r5_98 + 8) = sub_12b3e(r4, 3) + 0x63;
00019212                  
00019214                  r0_145 = (uint32_t)*(uint8_t*)((char*)r5_98 + 8);
00019216                  *(uint8_t*)((char*)r5_98 + 9) = (char)r0_145;
000191f0              }
000191f0              
0001921a              if ((r1_193 || r0_145 == 0x63) && r1_193)
00019224                  *(uint8_t*)((char*)r5_98 + 8) = *(uint8_t*)((char*)r5_98 + 9);
000191da          }
000191da          else if (r0_140 == 0x63)
000191e2              goto label_191e8;
000191e2          
00019240          if ((uint32_t)*(uint8_t*)((char*)r5_98 + 0xc95)
00019240              || *(uint32_t*)((char*)r5_98 + 0xc8c) <= (uint32_t)*(uint16_t*)0x2084f8
00019240              || r0_66 <= (uint32_t)*(uint16_t*)0x2084f6)
00019240          {
0001925c              uint32_t r1_205 = (uint32_t)*(uint8_t*)((char*)r5_98 + 0xc8a);
0001925c              
00019260              if (r1_205)
00019264                  *(uint8_t*)((char*)r5_98 + 0xc8a) = (uint8_t)r1_205 - 1;
00019240          }
00019240          else
00019240          {
00019246              uint32_t r1_203 = (uint32_t)(*(uint8_t*)((char*)r5_98 + 0xc8a) + 2);
00019248              *(uint8_t*)((char*)r5_98 + 0xc8a) = (char)r1_203;
00019248              
00019256              if (r1_203 >= 6 && r0_64 >= 0x177)
00019258                  *(uint8_t*)((char*)r5_98 + 2) = 3;
00019240          }
00019240          
00019288          if (r0_64 < 0x190 || (uint32_t)*(uint8_t*)((char*)r5_98 + 8) < 0x5f
00019288              || (uint32_t)*(uint8_t*)((char*)r5_98 + 0xd6f)
00019288              || *(uint32_t*)((char*)r5_98 + 0xc8c) <= (uint32_t)*(uint16_t*)0x2084f8)
00019288          {
000192cc              uint32_t r1_215 = (uint32_t)*(uint8_t*)((char*)r5_98 + 0xc8b);
000192cc              
000192d0              if (r1_215)
000192d4                  *(uint8_t*)((char*)r5_98 + 0xc8b) = (uint8_t)r1_215 - 1;
00019288          }
00019288          else
00019288          {
0001928e              uint32_t r1_214 = (uint32_t)(*(uint8_t*)((char*)r5_98 + 0xc8b) + 2);
00019290              *(uint8_t*)((char*)r5_98 + 0xc8b) = (char)r1_214;
00019290              
00019294              if (r1_214 >= 4)
00019296                  *(uint8_t*)((char*)r5_98 + 2) = 3;
00019288          }
00019288          
000192e4          if (r0_64 == 0x1f4 && (uint32_t)*(uint8_t*)((char*)r5_98 + 2) != 3)
000192e8              *(uint8_t*)((char*)r5_98 + 2) = 4;
000192e8          
000192ec          *(uint8_t*)((char*)r5_98 + 0xc89) = *(uint8_t*)((char*)r5_98 + 0xc88);
00018eca      }
00018eca      
0001930e      *(uint32_t*)((char*)r5_98 + 4) = r0_64 + 1;
00019314      return 1;
000184bc  }

000188d0  int32_t data_188d0 = 0x2084b4
000188d4  int32_t data_188d4 = 0x20dab8
000188d8  int32_t data_188d8 = 0x5dc
000188dc  int32_t data_188dc = 0x465
000188e0  int32_t data_188e0 = 0x2ee
000188e4  int32_t data_188e4 = 0x83e678
00018dfc  int32_t data_18dfc = 0x2084b4
00018e00  int32_t data_18e00 = 0x1fbd0

0001929a                                                                                00 00                                        ..

0001929c  int32_t data_1929c = 0x2084b4
000192a0  int32_t data_192a0 = 0xc80
000192a4  int32_t data_192a4 = 0x1388
000192a8  int32_t data_192a8 = -0x18e70
000192ac  int32_t data_192ac = 0x2710
000192b0  void* data_192b0 = data_4e20
000192b4  int32_t data_192b4 = -0x19258
000192b8  int32_t data_192b8 = -0x14c08
000192bc  int32_t data_192bc = -0x17ed0
000192c0  int32_t data_192c0 = -0x17318
000192c4  int32_t data_192c4 = 0x380
000192c8  int32_t data_192c8 = 0x83e614

00019316                                                                    00 00                                                ..

00019318    int32_t sub_19318()

00019318  {
0001931e      if (*(uint32_t*)0x2084d0)
00019322          *(uint32_t*)0x2084d0 = 0;
00019322      
00019324      return 0x2084b4;
00019318  }

00019326                    00 00                                                                                ..

00019328  int32_t data_19328 = 0x2084b4

0001932c    int32_t sub_1932c(int32_t* arg1)

0001932c  {
0001932c      int32_t r3;
0001932c      int32_t var_14 = r3;
0001932c      int32_t r2;
0001932c      int32_t var_18_1 = r2;
0001932c      int32_t r1;
0001932c      int32_t var_1c_1 = r1;
0001932c      int32_t* var_20 = arg1;
0001932e      char r2_1 = 0;
00019332      int32_t result = 0;
00019334      int32_t var_18 = 0;
00019338      void* r1_1 = *(uint32_t*)0x2084d0;
0001933c      uint32_t r3_1 = (uint32_t)*(uint8_t*)((char*)r1_1 + 2);
0001933e      (uint8_t)result = (char)r3_1;
00019340      int32_t r4 = *(uint32_t*)((char*)r1_1 + 4);
0001934c      *(uint8_t*)((char*)var_18)[2] = *(uint8_t*)((char*)r1_1 + 0xc95);
00019358      *(uint8_t*)((char*)var_18)[3] = *(uint8_t*)((char*)r1_1 + 0xca0);
00019358      
00019360      if (r3_1 == 3 || r3_1 == 4)
00019360      {
00019372          (uint8_t)var_18 = *(uint8_t*)((char*)r1_1 + 8);
00019376          r2_1 = *(uint8_t*)((char*)r1_1 + 0xc88);
00019360      }
00019360      else
00019364          (uint8_t)var_18 = 0;
00019364      
00019366      *(uint8_t*)((char*)var_18)[1] = r2_1;
0001936c      *(uint32_t*)arg1 = result;
0001936c      arg1[1] = r4;
0001936c      arg1[2] = var_18;
0001936c      arg1[3] = 0;
0001936e      return result;
0001932c  }

0001937a                                                                                00 00                                        ..

0001937c  int32_t data_1937c = 0x2084b4

00019380    int32_t sub_19380()

00019380  {
00019388      *(uint32_t*)0x2084d0 = 0x20c194;
0001938a      *(uint8_t*)0x20c196 = 1;
0001938c      uint32_t i = 0;
0001938e      *(uint32_t*)0x20c198 = 0;
00019392      *(uint8_t*)0x20c19c = 0;
00019396      *(uint8_t*)0x20c19e = 0;
0001939c      *(uint8_t*)0x20ce34 = 4;
0001939e      *(uint8_t*)0x20ce35 = 0;
000193b2      int16_t r1_1 = sub_12b2a(*(uint32_t*)0x2084bc, 3) + 0x61;
000193b2      
000193cc      do
000193cc      {
000193ba          *(uint32_t*)((i << 2) + 0x20c41c) = 0;
000193bc          *(uint32_t*)((i << 2) + 0x20c468) = 0;
000193c2          void* r2_6 = (i << 1) + 0x20cdd4;
000193c6          i = (uint32_t)((uint16_t)i + 1);
000193c8          *(uint16_t*)((char*)r2_6 + 0x34) = r1_1;  /* "_V3.0" */
000193cc      } while (i < 8);
000193cc      
000193ce      int32_t r2_7 = *(uint32_t*)0x2084d0;
000193ce      
000193e2      for (uint32_t i_1 = 0; i_1 < 8; )
000193e2      {
000193d6          void* r3_3 = (i_1 << 2) + r2_7 + 0x280;
000193da          *(uint32_t*)((char*)r3_3 + 0x28) = 0;
000193dc          i_1 = (uint32_t)((uint16_t)i_1 + 1);
000193de          *(uint32_t*)((char*)r3_3 + 0x74) = 0;
000193e2      }
000193e2      
000193e4      int32_t r0_1 = *(uint32_t*)0x2084d0;
000193e6      uint32_t i_2 = 0;
000193fc      __builtin_memset(r0_1 + 0xc, 0, 0x50);
000193fc      
00019424      do
00019424      {
00019418          void* r2_12 = (i_2 << 2) + r0_1 + 0x200;
0001941c          *(uint32_t*)((char*)r2_12 + 0x50) = 0;
0001941e          i_2 = (uint32_t)((uint16_t)i_2 + 1);
00019420          *(uint32_t*)((char*)r2_12 + 0x6c) = 0;
00019424      } while (i_2 < 7);
00019424      
0001942a      void* r5 = *(uint32_t*)0x2084d0;
00019432      __builtin_memset((char*)r5 + 0x320, 0, 0x20);  /* "117" */
00019442      __builtin_memset((char*)r5 + 0x344, 0, 0x24);
00019454      __builtin_memset((char*)r5 + 0x36c, 0, 0x14);  /* "_3.00.33_250117" */
00019466      *(uint32_t*)((char*)r5 + 0x380) = 0;
00019472      *(uint32_t*)((char*)r5 + 0x384) = sub_12b2a(*(uint32_t*)0x2084bc, 3) + 0x61;
00019474      *(uint8_t*)((char*)r5 + 9) = 0x63;
0001947a      *(uint32_t*)((char*)r5 + 0x388) = 0x1880;
00019482      int32_t r6_1 = *(uint32_t*)0x2084d8;
00019486      *(uint32_t*)((char*)r5 + 0x390) = r6_1;
0001948a      *(uint32_t*)((char*)r5 + 0x38c) = r6_1 - 0x18e70;
0001948e      *(uint8_t*)0x2084b5 = 0;
00019490      *(uint32_t*)((char*)r5 + 0x394) = 0;
00019492      *(uint32_t*)((char*)r5 + 0x398) = 0;
00019494      *(uint32_t*)((char*)r5 + 0x39c) = 0;
00019496      *(uint32_t*)((char*)r5 + 0x3a0) = 0;
00019496      
000194b2      for (uint32_t i_3 = 0; i_3 < 0x20; )  /* "117" */
000194b2      {
000194a2          void* r2_14 = (i_3 << 2) + r5;
000194aa          *(uint32_t*)((char*)r2_14 + 0x46c) = 0;
000194ac          i_3 = (uint32_t)((uint16_t)i_3 + 1);
000194ae          *(uint32_t*)((char*)r2_14 + 0x4ec) = 0;
000194b2      }
000194b2      
000194b6      uint32_t i_4 = 0;
000194b8      int32_t r2_16 = *(uint32_t*)0x2084d0;
000194b8      
000194d0      do
000194d0      {
000194be          void* r3_6 = (i_4 << 2) + r2_16;
000194c8          *(uint32_t*)((char*)r3_6 + 0x3a4) = 0;
000194ca          i_4 = (uint32_t)((uint16_t)i_4 + 1);
000194cc          *(uint32_t*)((char*)r3_6 + 0x408) = 0;
000194d0      } while (i_4 < 0x19);  /* ".33_250117" */
000194d0      
000194d4      void* r1_6 = *(uint32_t*)0x2084d0;
000194da      *(uint8_t*)((char*)r1_6 + 0xc86) = 0;
000194dc      *(uint8_t*)((char*)r1_6 + 0xc87) = 0;
000194de      *(uint8_t*)((char*)r1_6 + 0xc88) = 0;
000194e0      *(uint8_t*)((char*)r1_6 + 0xc89) = 0;
000194e2      *(uint8_t*)((char*)r1_6 + 0xc8a) = 0;
000194e4      *(uint8_t*)((char*)r1_6 + 0xc8b) = 0;
000194e6      *(uint32_t*)((char*)r1_6 + 0xc8c) = 0;
000194e6      
00019518      for (uint32_t i_5 = 0; i_5 < 0x64; )
00019518      {
000194ee          void* r2_18 = (i_5 << 1) + r1_6;
000194f4          *(uint16_t*)((char*)r2_18 + 0x56c) = 0;
000194fc          *(uint16_t*)((char*)r2_18 + 0x634) = 0;
00019502          void* r2_21 = (i_5 << 3) + r1_6;
00019508          *(uint32_t*)((char*)r2_21 + 0x6fc) = 0;
00019512          i_5 = (uint32_t)((uint16_t)i_5 + 1);
00019514          *(uint32_t*)((char*)r2_21 + 0x700) = 0;
00019518      }
00019518      
0001951a      uint32_t i_6 = 0;
0001951e      int32_t r1_7 = *(uint32_t*)0x2084d0;
0001951e      
00019530      do
00019530      {
00019526          void* r3_12 = (i_6 << 2) + r1_7 + 0xa00;
0001952a          i_6 = (uint32_t)((uint16_t)i_6 + 1);
0001952c          *(uint32_t*)((char*)r3_12 + 0x1c) = 0;  /* "_250117" */
00019530      } while (i_6 < 0x96);
00019530      
00019532      void* r1_8 = *(uint32_t*)0x2084d0;
00019536      *(uint8_t*)((char*)r1_8 + 0xc90) = 0;
00019538      *(uint16_t*)((char*)r1_8 + 0xc92) = 0;
0001953a      *(uint8_t*)((char*)r1_8 + 0xc94) = 0;
0001953a      
0001954e      for (uint32_t i_7 = 0; i_7 < 0x64; )
0001954e      {
00019544          void* r3_15 = (char*)r1_8 + i_7 + 0x1e0;
00019548          i_7 = (uint32_t)((uint16_t)i_7 + 1);
0001954a          *(uint8_t*)((char*)r3_15 + 0xc) = 0x40;
0001954e      }
0001954e      
00019550      int32_t r3_16 = *(uint32_t*)0x2084d0;
00019550      
00019566      for (uint32_t i_8 = 0; i_8 < 0x32; )  /* "02_V3.0" */
00019566      {
00019556          void* r1_10 = (i_8 << 2) + r3_16;
00019558          *(uint32_t*)((char*)r1_10 + 0x5c) = 0;
00019560          i_8 = (uint32_t)((uint16_t)i_8 + 1);
00019562          *(uint32_t*)((char*)r1_10 + 0x124) = 0;
00019566      }
00019566      
00019568      void* r1_13 = *(uint32_t*)0x2084d0;
00019570      *(uint8_t*)((char*)r1_13 + 0xc95) = 0;
00019574      *(uint32_t*)((char*)r1_13 + 0x370) = 0x40;
00019578      *(uint32_t*)((char*)r1_13 + 0xc9c) = 0;
0001957c      *(uint32_t*)((char*)r1_13 + 0xc98) = r6_1 - 0x18a88;
0001957e      sub_1964c();
00019584      return 1;
00019380  }

00019586                    00 00                                                                                ..

00019588  int32_t data_19588 = 0x20c194
0001958c  int32_t data_1958c = 0x2084b4
00019590  int32_t data_19590 = -0x18e70
00019594  int32_t data_19594 = -0x18a88

00019598    int32_t sub_19598()

00019598  {
0001959e      return sub_19380();
00019598  }


000195a0    int32_t sub_195a0(int32_t* arg1, int32_t* arg2, int32_t arg3, int32_t arg4, int32_t arg5, void* arg6, void* arg7, void* arg8)

000195a0  {
000195a0      int32_t* var_20 = arg2;
000195a0      int32_t* var_24 = arg1;
000195a8      int32_t result = *(uint32_t*)0x2084d0;
000195aa      uint32_t i = 0;
000195aa      
000195b2      if (!result)
000195e2          return result;
000195e2      
000195dc      for (; i < arg5; i = (uint32_t)((uint8_t)i + 1))
000195dc      {
000195b8          int32_t r0 = i << 1;
000195d2          sub_184bc(arg1[i], arg2[i], arg3, arg4, (int32_t)*(uint16_t*)((char*)arg6 + r0), 
000195d2              (int32_t)*(uint16_t*)((char*)arg7 + r0), 
000195d2              (int32_t)*(uint16_t*)((char*)arg8 + r0));
000195dc      }
000195dc      
000195de      return 1;
000195a0  }

000195e4  int32_t data_195e4 = 0x2084b4

000195e8    uint32_t sub_195e8(void* arg1)

000195e8  {
000195ea      int32_t r1 = (int32_t)*(uint8_t*)arg1;
000195ea      
000195fa      for (int32_t i = 0; i < 0x64; i += 1)
000195fa      {
000195ee          int32_t r3_1 = (int32_t)*(uint8_t*)((char*)arg1 + i);
000195ee          
000195f2          if (r3_1 > r1)
000195f4              r1 = r3_1;
000195fa      }
000195fa      
000195fe      return (uint32_t)(uint8_t)r1;
000195e8  }


00019600    int32_t sub_19600(int16_t arg1, int32_t arg2, int32_t arg3, int16_t arg4, int16_t arg5, int16_t arg6, int16_t arg7, int16_t arg8, char arg9, char arg10, char arg11)

00019600  {
0001960a      *(uint16_t*)0x2084e4 = arg1;
0001960c      *(uint32_t*)0x2084ec = arg3;
0001960e      *(uint32_t*)0x2084e8 = arg2;
00019610      *(uint16_t*)0x2084f0 = arg4;
00019614      *(uint16_t*)0x2084f2 = arg5;
00019616      *(uint16_t*)0x2084f4 = arg6;
00019618      *(uint16_t*)0x2084f6 = arg7;
0001961c      *(uint16_t*)0x2084f8 = arg8;
00019620      *(uint8_t*)0x2084fa = arg9;
00019622      *(uint8_t*)0x2084fb = arg10;
00019626      *(uint8_t*)0x2084fc = arg11;
00019628      return arg11;
00019600  }

0001962a                                00 00                                                                        ..

0001962c  int32_t data_1962c = 0x2084e4

00019630    void sub_19630(char arg1, char arg2, char arg3, int32_t arg4, int32_t arg5, char arg6)

00019630  {
00019638      *(uint8_t*)0x2084d4 = arg1;
0001963a      *(uint8_t*)0x2084d5 = arg2;
0001963c      *(uint8_t*)0x2084d6 = arg3;
0001963e      *(uint32_t*)0x2084dc = arg5;
00019640      *(uint32_t*)0x2084d8 = arg4;
00019642      *(uint8_t*)0x2084e0 = arg6;
00019630  }

00019646                    00 00                                                                                ..

00019648  int32_t data_19648 = 0x2084d4

0001964c    int32_t sub_1964c()

0001964c  {
00019650      uint32_t i = 0;
00019654      int32_t r4 = *(uint32_t*)0x2084d0;
00019654      
0001966a      do
0001966a      {
0001965e          void* r2_3 = (i << 1) + r4 + 0xc80;
00019662          *(uint16_t*)((char*)r2_3 + 0x24) = 0;
00019664          i = (uint32_t)((uint16_t)i + 1);
00019666          *(uint16_t*)((char*)r2_3 + 0x3a) = 0;
0001966a      } while (i < 0xb);
0001966a      
0001966c      uint32_t i_1 = 0;
00019670      int32_t r3 = *(uint32_t*)0x2084d0;
00019670      
00019684      do
00019684      {
00019678          void* r2_6 = (i_1 << 1) + r3 + 0xd40;
0001967c          *(uint16_t*)((char*)r2_6 + 8) = 0;
0001967e          i_1 = (uint32_t)((uint16_t)i_1 + 1);
00019680          *(uint16_t*)((char*)r2_6 + 0x18) = 0;  /* "0.33_250117" */
00019684      } while (i_1 < 8);
00019684      
00019686      uint32_t i_2 = 0;
0001968a      int32_t r4_1 = *(uint32_t*)0x2084d0;
0001968a      
000196a0      do
000196a0      {
00019692          void* r2_9 = (i_2 << 1) + r4_1 + 0xcc0;
00019694          *(uint16_t*)((char*)r2_9 + 0x10) = 0;  /* "RY02_3.00.33_250117" */
00019698          *(uint16_t*)((char*)r2_9 + 0x1a) = 0;  /* "33_250117" */
0001969a          i_2 = (uint32_t)((uint16_t)i_2 + 1);
0001969c          *(uint16_t*)((char*)r2_9 + 0x24) = 0;
000196a0      } while (i_2 < 5);
000196a0      
000196a2      uint32_t i_3 = 0;
000196a6      int32_t r4_2 = *(uint32_t*)0x2084d0;
000196a6      
000196ba      do
000196ba      {
000196ae          void* r5_3 = (i_3 << 1) + r4_2 + 0xd00;
000196b2          *(uint16_t*)((char*)r5_3 + 4) = 0;
000196b4          i_3 = (uint32_t)((uint16_t)i_3 + 1);
000196b6          *(uint16_t*)((char*)r5_3 + 0x14) = 0;  /* "_3.00.33_250117" */
000196ba      } while (i_3 < 4);
000196ba      
000196bc      int32_t r4_3 = *(uint32_t*)0x2084d0;
000196bc      
000196ce      for (uint32_t i_4 = 0; i_4 < 6; )
000196ce      {
000196c4          void* r5_6 = (i_4 << 1) + r4_3 + 0xd00;
000196c8          i_4 = (uint32_t)((uint16_t)i_4 + 1);
000196ca          *(uint16_t*)((char*)r5_6 + 0x1c) = 0;  /* "_250117" */
000196ce      }
000196ce      
000196d0      int32_t r4_4 = *(uint32_t*)0x2084d0;
000196d0      
000196e2      for (uint32_t i_5 = 0; i_5 < 4; )
000196e2      {
000196d8          void* r5_9 = (i_5 << 1) + r4_4 + 0xd00;
000196dc          i_5 = (uint32_t)((uint16_t)i_5 + 1);
000196de          *(uint16_t*)((char*)r5_9 + 0x28) = 0;
000196e2      }
000196e2      
000196e4      void* r2_13 = *(uint32_t*)0x2084d0;
000196e8      *(uint16_t*)((char*)r2_13 + 0xcf8) = 0;
000196ea      *(uint16_t*)((char*)r2_13 + 0xcfa) = 0;
000196ec      *(uint16_t*)((char*)r2_13 + 0xcfc) = 0;
000196f0      *(uint32_t*)((char*)r2_13 + 0xd34) = 0;
000196f2      *(uint16_t*)((char*)r2_13 + 0xd38) = 0;
000196f4      *(uint16_t*)((char*)r2_13 + 0xd3a) = 0;
000196f6      *(uint16_t*)((char*)r2_13 + 0xd3c) = 0;
000196f8      *(uint16_t*)((char*)r2_13 + 0xd3e) = 0;
000196fe      *(uint16_t*)((char*)r2_13 + 0xd40) = 0x1e;  /* "50117" */
00019700      *(uint32_t*)((char*)r2_13 + 0xd44) = 0;
00019702      *(uint32_t*)((char*)r2_13 + 0xd68) = 0;
0001970a      *(uint8_t*)((char*)r2_13 + 0xd6c) = 0;
0001970c      *(uint8_t*)((char*)r2_13 + 0xd6d) = 0;
0001970e      *(uint8_t*)((char*)r2_13 + 0xd6e) = 0;
00019710      *(uint8_t*)((char*)r2_13 + 0xd6f) = 0;
00019712      *(uint8_t*)((char*)r2_13 + 0xd75) = 0;
00019714      *(uint8_t*)((char*)r2_13 + 0xd72) = 0;
00019716      *(uint8_t*)((char*)r2_13 + 0xd73) = 0;
00019718      *(uint8_t*)((char*)r2_13 + 0xd74) = 0;
0001971a      *(uint8_t*)((char*)r2_13 + 0xd71) = 0;
0001971c      *(uint8_t*)((char*)r2_13 + 0xd76) = 0;
00019724      __builtin_memset((char*)r2_13 + 0xd80, 0, 0x78);
00019762      return 1;
0001964c  }

00019764  int32_t data_19764 = 0x2084b4

00019768    int32_t sub_19768(int32_t* arg1, int32_t* arg2, char* arg3, int32_t arg4)

00019768  {
00019768      int32_t var_18 = arg4;
0001976c      int32_t r0 = 0;
00019770      int32_t var_2c = 0;
00019772      int32_t var_30 = 0;
00019772      
00019798      while (r0 < arg4)
00019798      {
0001977e          int32_t r1_2 = arg1[r0] >> 0xa;
00019788          var_2c += r1_2 * r1_2;
0001978a          int32_t r2_2 = arg2[r0] >> 0xa;
00019792          r0 += 1;
00019794          var_30 += r2_2 * r2_2;
00019798      }
00019798      
0001979c      int32_t r6 = arg4 << 1;
0001979c      
000197a6      if (!var_2c || !var_30)
000197a6      {
00019866          for (int32_t i = 0; r6 > i; i += 1)
00019860              arg3[i] = 0;
000197a6      }
000197a6      else
000197a6      {
00019854          for (int32_t i_1 = 0; r6 > i_1; i_1 += 1)
00019854          {
000197ae              if (i_1 < arg4)
000197ae              {
000197b0                  int32_t r7_1 = 0;
000197b0                  
000197e0                  for (int32_t j = 0; j < i_1 + 1; j += 1)
000197da                      r7_1 += ((arg1[j] >> 9)
000197da                          * (*(uint32_t*)(&arg2[arg4 - i_1 + j] - 4) >> 9)) >> 2;
000197da                  
000197f4                  arg3[i_1] = sub_12b3e(r7_1 * sub_12b3e(r7_1 << 6, var_2c), var_30);
000197ae              }
000197ae              
000197f8              if (i_1 >= arg4)
000197f8              {
000197fe                  char r0_8;
000197fe                  
000197fe                  if (r6 - 1 != i_1)
000197fe                  {
00019806                      int32_t j_1 = 0;
0001980e                      int32_t var_28_1 = 0;
0001980e                      
00019836                      while (r6 - i_1 - 1 > j_1)
00019836                      {
0001982e                          int32_t r2_13 = (((arg1[i_1 - arg4 + j_1 + 1] >> 9)
0001982e                              * (arg2[j_1] >> 9)) >> 2) + var_28_1;
00019830                          j_1 += 1;
00019832                          var_28_1 = r2_13;
00019836                      }
00019836                      
00019848                      r0_8 = sub_12b3e(var_28_1 * sub_12b3e(var_28_1 << 6, var_2c), var_30);
000197fe                  }
000197fe                  else
00019800                      r0_8 = 0;
00019800                  
0001984e                  arg3[i_1] = r0_8;
000197f8              }
00019854          }
000197a6      }
000197a6      
0001986c      return 0;
00019768  }

0001986e                                            00 00                                                                ..

00019870    void sub_19870(int32_t arg1, int32_t arg2, int32_t arg3, int32_t arg4)

00019870  {
00019876      int32_t r5 = 0x100000;
00019878      int32_t r4_1 = arg4 | arg2;
00019878      
0001987a      if (r4_1 < 0)
0001987a      {
000198a0          if (r4_1 + 0x100000 < 0)
000198aa              return;
000198aa          
000198b0          r5 = 0x200000;
000198b2          int32_t r4_2 = arg4 << 1;
000198b2          
000198b6          if (r4_2 + 0x200000 >= r4_2)
000198b6          {
000198b8              int32_t r4_3 = arg2 << 1;
000198b8              
000198bc              if (r4_3 + 0x200000 >= r4_3)
000198c0                  return;
000198b6          }
0001987a      }
0001987a      else
0001987a      {
0001987e          if (r4_1 + 0x100000 >= 0)
00019888              return;
00019888          
00019894          if (arg4 + 0x100000 >= 0 && arg2 + 0x100000 >= 0)
00019898              return;
0001987a      }
0001987a      
000198ca      int32_t var_14_1 = r5;
000198cc      sub_13b50(arg3, arg4, arg1, arg2, 0x4160019);
00019870  }

000198d4  int32_t data_198d4 = 0x4160019

000198d8    uint32_t sub_198d8(int32_t arg1, int32_t arg2, int32_t arg3, int32_t arg4, int32_t arg5 @ r4, int32_t arg6 @ r6, int32_t arg7, int32_t arg8)

000198d8  {
000198d8      int32_t lr;
000198d8      int32_t var_4 = lr;
000198d8      int32_t var_8 = arg6;
000198d8      int32_t r5;
000198d8      int32_t var_c = r5;
000198d8      
000198e2      if ((arg1 ^ arg2) >= 0)
000198e2          /* tailcall */
000198e2          return sub_198e4(arg1, arg2, 0x80000000, arg3, arg4, arg5);
000198e2      
00019928      int32_t r1_2;
00019928      int32_t r2_1;
00019928      int32_t r3_1;
00019928      r1_2 = sub_19a20(arg1, arg2 ^ 0x80000000, 0x80000000, arg3, arg4, arg5);
0001990a      int32_t r0_1 = 0x800000;
0001990a      
0001990c      if (TEST_BIT(0x80000001, 7))
0001990e          r0_1 = 0x800001;
0001990e      
00019918      int32_t result = r0_1 + (arg6 << 0x17);  /* "00.33_250117" */
00019918      
0001991c      if (r2_1 + 1 >= 0xff)
00019924          return result >> 0x17 << 0x17;  /* "00.33_250117" */
00019924      
0001991e      return result;
000198d8  }


000198e4    void sub_198e4(int32_t arg1, int32_t arg2, int32_t arg3 @ r5, int32_t arg4, int32_t arg5, int32_t arg6) __pure

000198e4  {
000198e4      int32_t r4_10 = arg1 - arg2;
000198e4      
000198e6      if (arg1 < arg2)
000198e6      {
000198e8          arg1 -= r4_10;
000198ea          arg2 += r4_10;
000198e6      }
000198e6      
000198f0      uint32_t r2 = (uint32_t)(uint8_t)(arg1 >> 0x17);  /* "00.33_250117" */
000198f0      
000198f4      if (r2 == 0xff)
0001994e          return;
0001994e      
000198f6      uint32_t r3_1 = arg2 << 1 >> 0x18;  /* "0.33_250117" */
000198f6      
000198f8      if (!r3_1)
000198fe          return;
000198fe      
00019904      int32_t r0_1 = arg1 << 8 | arg3;
00019904      
00019908      if (r0_1 + ((arg2 << 8 | arg3) >> (r2 - r3_1)) < r0_1)
00019932          r2 += 1;
000198e4  }

0001995e                                                                                            00 bf                                ..

00019960  int32_t data_19960 = 0x7fc00000

00019964    int32_t sub_19964(int32_t arg1, int32_t arg2, int32_t arg3 @ r4) __pure

00019964  {
00019964      int32_t var_10 = arg3;
0001996a      int32_t r3 = arg2 << 1;
0001996c      int32_t r4_1 = arg3 + arg3 + r3;
0001996e      uint32_t r2_1 = arg1 << 1 >> 0x18;  /* "0.33_250117" */
00019970      uint32_t r3_1;
00019970      
00019970      if (!r2_1)
00019970      {
000199e6          r3_1 = r3 >> 0x18;  /* "0.33_250117" */
000199e8      label_199e8:
000199e8          
000199ee          if (r2_1 != 0xff && r3_1 != 0xff)
000199f2              return r4_1 << 0x1f;  /* "0117" */
00019970      }
00019970      else
00019970      {
00019972          r3_1 = r3 >> 0x18;  /* "0.33_250117" */
00019972          
00019974          if (!r3_1)
00019974              goto label_199e8;
00019974          
0001997c          if (r2_1 != 0xff && r3_1 != 0xff)
0001997c          {
00019982              uint32_t r0_1 = arg1 << 9 >> 9;
00019984              uint32_t r1_1 = arg2 << 9 >> 9;
0001998a              int32_t r6_2 = r1_1 * r0_1;
00019992              int32_t r0_3 = (r1_1 >> 8) * (r0_1 >> 8);
00019996              int32_t r2_3 = r2_1 + r3_1 - 0x7f;
000199a0              int32_t r3_3 =
000199a0                  r0_3 + ((r0_1 + r1_1) << 7) + ((r6_2 - (r0_3 << 0x10)) >> 0x10);
000199a0                  /* "RY02_3.00.33_250117" */
000199a0              
000199a4              if (r3_3 >> 0x1e)  /* "50117" */
000199a4              {
000199ac                  r3_3 = (r3_3 >> 1) - 0x20000000;
000199ae                  r2_3 += 1;
000199a4              }
000199a4              
000199b0              uint32_t r0_5 = r3_3 >> 7;
000199b0              
000199b2              if (TEST_BIT(r3_3, 6))
000199b2              {
000199b4                  r0_5 += 1;
000199b4                  
000199bc                  if (!(r6_2 << 0xf) && !(r3_3 << 0x1a))  /* "33_250117" */
000199d0                      r0_5 &= 0xfffffffe;
000199b2              }
000199b2              
000199c0              if (r2_3 < 0xff)
000199c0              {
000199c2                  int32_t r5_4 = r2_3 << 0x17;  /* "00.33_250117" */
000199c2                  
000199c4                  if (r5_4)
000199cc                      return (r0_5 | r4_1 << 0x1f) + r5_4;  /* "0117" */
000199c0              }
000199c0              
000199d6              if (r2_3 <= 0)
000199da                  return r4_1 << 0x1f;  /* "0117" */
000199da              
000199e4              return (0xff | r4_1 << 8) << 0x17;  /* "00.33_250117" */
0001997c          }
00019970      }
00019970      
00019a08      if (arg1 << 1 <= 0xff000000 && arg2 << 1 <= 0xff000000 && r2_1 + r3_1 != 0xff)
000199e4          return (0xff | r4_1 << 8) << 0x17;  /* "00.33_250117" */
000199e4      
00019a0e      return 0x7fc00000;
00019964  }

00019a10  int32_t data_19a10 = 0x7fc00000

00019a14    int32_t sub_19a14(int32_t arg1, int32_t arg2, int32_t arg3, int32_t arg4, int32_t arg5 @ r4, int32_t arg6, int32_t arg7)

00019a14  {
00019a14      int32_t lr;
00019a14      int32_t var_4 = lr;
00019a14      int32_t r6;
00019a14      int32_t var_8 = r6;
00019a14      int32_t r5;
00019a14      int32_t var_c = r5;
00019a1c      int32_t r4_1 = arg1 ^ arg2;
00019a1c      
00019a1e      if (r4_1 >= 0)
00019a1e          /* tailcall */
00019a1e          return sub_19a20(arg1, arg2, 0x80000000, arg3, arg4, arg5);
00019a1e      
00019a68      int32_t r0_1;
00019a68      int32_t r1_2;
00019a68      int32_t r3_1;
00019a68      r0_1 = sub_198e4(arg1, arg2 ^ 0x80000000, 0x80000000, arg3, arg4, arg5);
00019a68      
00019a74      if (!((r1_2 << 8 ^ r4_1 << r3_1) << 1))
00019a7e          return r0_1 & 0xfffffffe;
00019a7e      
00019a78      return r0_1 - 1;
00019a14  }


00019a20    void sub_19a20(int32_t arg1, int32_t arg2, int32_t arg3 @ r5, int32_t arg4, int32_t arg5, int32_t arg6) __pure

00019a20  {
00019a22      if (arg1 < arg2)
00019a22      {
00019a24          int32_t r4 = (arg1 - arg2) ^ arg3;
00019a26          arg1 -= r4;
00019a28          arg2 += r4;
00019a22      }
00019a22      
00019a2e      uint32_t r2 = (uint32_t)(uint8_t)(arg1 >> 0x17);  /* "00.33_250117" */
00019a2e      
00019a32      if (r2 == 0xff)
00019ad8          return;
00019ad8      
00019a34      uint32_t r3_1 = arg2 << 1 >> 0x18;  /* "0.33_250117" */
00019a34      
00019a36      if (!r3_1)
00019adc          return;
00019adc      
00019a40      uint32_t r4_3 = (arg2 << 8 | arg3) >> (r2 - r3_1);
00019a42      int32_t r0_1 = arg1 << 8 & ~arg3;
00019a42      
00019a46      if (r0_1 - r4_3 >= 0)
00019a46      {
00019a56      label_19a56:
00019a78          return;
00019a46      }
00019a46      
00019a4a      if (!TEST_BIT(r0_1 - r4_3, 0x1e))  /* "50117" */
00019a4c          return;
00019a4c      
00019a52      if (r2 == 1)
00019aca          return;
00019aca      
00019a52      goto label_19a56;
00019a20  }

00019ae0  int32_t data_19ae0 = 0x7fc00000

00019ae4              61 70 70 5f 73 65 6e 64 5f 6d 73 67 5f 74 6f 5f 61 70 70 74 61 73 6b 00 61 70 70 5f      app_send_msg_to_apptask.app_
00019b00  6d 61 69 6e 5f 74 61 73 6b 00 73 65 6e 64 5f 6d 73 67 5f 74 6f 5f 68 75 62 5f 74 61 73 6b 00 68  main_task.send_msg_to_hub_task.h
00019b20  75 62 5f 74 61 73 6b 00 00 1e aa 41 82 55 96 00 80 de                                            ub_task....A.U....

00019b32    void sub_19b32(int32_t arg1 @ r4, int32_t arg2 @ r5) __noreturn

00019b32  {
00019b38      trap(0x80);
00019b32  }

00019b3a                                                                                28 00 00 8d 27 00                            (...'.
00019b40  80 de 28 00 00 8d 27 00 80 de 28 00 80 de 28 00 00 8d 27 00 80 de 28 00 00 8d 27 00 80 de 28 00  ..(...'...(...(...'...(...'...(.
00019b60  80 de 28 00 80 3b 26 00 80 de 28 00 00 8d 27 00 80 de 28 00 00 8d 27 00 80 de 28 00 80 de 28 00  ..(..;&...(...'...(...'...(...(.
00019b80  00 8d 27 00 80 de 28 00 00 8d 27 00 80 de 28 00 11 62 82 00 31 63 82 00 49 63 82 00 5f 63 82 00  ..'...(...'...(..b..1c..Ic.._c..
00019ba0  65 63 82 00 13 67 82 00 83 67 82 00 99 67 82 00 af 67 82 00 00 00 00 00 d2 0f 7e 0f 25 0f f4 0e  ec...g...g...g...g........~.%...
00019bc0  c7 0e 9a 0e 6f 0e 43 0e 11 0e cb 0d b2 0c 00 00 ff 00 00 00 ff 00 00 00 02 82 ff 01 81 ff 03 83  ....o.C.........................
00019be0  ff 00 00 00 02 08 00 28 0a 18 00 00 00 00 00 00 00 00 00 00 00 00 02 00 00 00 00 00 01 00 00 00  .......(........................
00019c00  02 00 03 28 02 00 00 00 00 00 00 00 00 00 00 00 00 00 01 00 00 00 00 00 01 00 00 00 04 00 25 2a  ...(..........................%*
00019c20  00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 01 00 00 00 02 00 03 28 02 00 00 00  ...........................(....
00019c40  00 00 00 00 00 00 00 00 00 00 01 00 00 00 00 00 01 00 00 00 04 00 27 2a 00 00 00 00 00 00 00 00  ......................'*........
00019c60  00 00 00 00 00 00 00 00 00 00 00 00 01 00 00 00 02 00 03 28 02 00 00 00 00 00 00 00 00 00 00 00  ...................(............
00019c80  00 00 01 00 00 00 00 00 01 00 00 00 04 00 26 2a 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ..............&*................
00019ca0  00 00 00 00 01 00 00 00 02 00 03 28 02 00 00 00 00 00 00 00 00 00 00 00 00 00 01 00 00 00 00 00  ...........(....................
00019cc0  01 00 00 00 04 00 23 2a 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 01 00 00 00  ......#*........................
00019ce0  27 a0 82 00 00 00 00 00 00 00 00 00 c7 5d 2a 01 e3 65 26 af 47 4e 11 d7 28 f7 5b de 00 08 00 28  '............]*..e&.GN..(.[....(
00019d00  00 00 00 00 00 00 00 00 00 00 00 00 00 00 10 00 9c dc 83 00 01 00 00 00 02 00 03 28 0c 00 00 00  ...........................(....
00019d20  00 00 00 00 00 00 00 00 00 00 01 00 00 00 00 00 01 00 00 00 05 00 c7 5d 2a 01 e3 65 26 af 47 4e  .......................]*..e&.GN
00019d40  11 d7 2a f7 5b de 00 00 00 00 00 00                                                              ..*.[.......

00019d4c  char const (* data_19d4c)[0x14] = 0x10

00019d50                                                  02 00 03 28                                                      ...(

00019d54  char const (* data_19d54)[0x14] = 0x10

00019d58                                                                          00 00 00 00 00 00 00 00                          ........
00019d60  00 00 01 00 00 00 00 00 01 00 00 00 05 00 c7 5d 2a 01 e3 65 26 af 47 4e 11 d7 29 f7 5b de 00 00  ...............]*..e&.GN..).[...
00019d80  00 00 00 00 00 01 00 00 12 00 02 29 00 00 00 00 00 00 00 00 00 00 00 00 00 00 02 00 00 00 00 00  ...........)....................

00019da0  char const (* data_19da0)[0x13] = 0x11

00019da4              4d a1 82 00 77 a1 82 00 dd a1 82 00 9e ca dc 24 0e e5 a9 e0 93 f3 a3 b5 f0 ff 40 6e      M...w..........$..........@n
00019dc0  00 08 00 28 00 00 00 00 00 00 00 00 00 00 00 00 00 00 10 00 60 dd 83 00 01 00 00 00 02 00 03 28  ...(................`..........(
00019de0  0c 00 00 00 00 00 00 00 00 00 00 00 00 00 01 00 00 00 00 00 01 00 00 00 05 00 9e ca dc 24 0e e5  .............................$..
00019e00  a9 e0 93 f3 a3 b5 02 00 40 6e 00 00 00 00 00 00                                                  ........@n......

00019e10  char const (* data_19e10)[0x14] = 0x10

00019e14                                                              02 00 03 28                                              ...(

00019e18  char const (* data_19e18)[0x14] = 0x10

00019e1c                                                                                      00 00 00 00                              ....
00019e20  00 00 00 00 00 00 01 00 00 00 00 00 01 00 00 00 05 00 9e ca dc 24 0e e5 a9 e0 93 f3 a3 b5 03 00  .....................$..........
00019e40  40 6e 00 00 00 00 00 00 00 01 00 00 12 00 02 29 00 00 00 00 00 00 00 00 00 00 00 00 00 00 02 00  @n.............)................
00019e60  00 00 00 00                                                                                      ....

00019e64  char const (* data_19e64)[0x13] = 0x11

00019e68                          75 a2 82 00 9f a2 82 00 f3 a2 82 00 02 08 00 28                                  u..............(

00019e78  char const (* data_19e78)[0x4] = data_fee7 {"CXc0"}

00019e7c                                                                                      00 00 00 00                              ....
00019e80  00 00 00 00 00 00 02 00 00 00 00 00 01 00 00 00 02 00 03 28                                      ...................(

00019e94  char const (* data_19e94)[0x12] = data_12

00019e98                                                                          00 00 00 00 00 00 00 00                          ........
00019ea0  00 00 01 00 00 00 00 00 01 00 00 00 04 00 a1 fe 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................................
00019ec0  00 00 00 00 01 00 00 00 12 00 02 29 00 00 00 00 00 00 00 00 00 00 00 00 00 00 02 00 00 00 00 00  ...........)....................

00019ee0  char const (* data_19ee0)[0x13] = 0x11

00019ee4              02 00 03 28 02 00 00 00 00 00 00 00 00 00 00 00 00 00 01 00 00 00 00 00 01 00 00 00      ...(........................
00019f00  04 00 c9 fe 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 01 00 00 00 02 00 03 28  ...............................(
00019f20  2a 00 00 00 00 00 00 00 00 00 00 00 00 00 01 00 00 00 00 00 01 00 00 00 04 00 a2 fe 00 00 00 00  *...............................
00019f40  00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00                                                  ................

00019f50  char const (* data_19f50)[0x13] = 0x11

00019f54                                                              12 00 02 29 00 00 00 00 00 00 00 00                      ...)........
00019f60  00 00 00 00 00 00 02 00 00 00 00 00                                                              ............

00019f6c  char const (* data_19f6c)[0x13] = 0x11

00019f70                                                  c7 a3 82 00 71 a4 82 00 df a4 82 00 00 00 c1 c0                  ....q...........
00019f80  81 c1 40 01 01 c3 c0 03 80 02 41 c2 01 c6 c0 06 80 07 41 c7 00 05 c1 c5 81 c4 40 04 01 cc c0 0c  ..@.......A.......A.......@.....
00019fa0  80 0d 41 cd 00 0f c1 cf 81 ce 40 0e 00 0a c1 ca 81 cb 40 0b 01 c9 c0 09 80 08 41 c8 01 d8 c0 18  ..A.......@.......@.......A.....
00019fc0  80 19 41 d9 00 1b c1 db 81 da 40 1a 00 1e c1 de 81 df 40 1f 01 dd c0 1d 80 1c 41 dc 00 14 c1 d4  ..A.......@.......@.......A.....
00019fe0  81 d5 40 15 01 d7 c0 17 80 16 41 d6 01 d2 c0 12 80 13 41 d3 00 11 c1 d1 81 d0 40 10 01 f0 c0 30  ..@.......A.......A.......@....0
0001a000  80 31 41 f1 00 33 c1 f3 81 f2 40 32 00 36 c1 f6 81 f7 40 37 01 f5 c0 35 80 34 41 f4 00 3c c1 fc  .1A..3....@2.6....@7...5.4A..<..
0001a020  81 fd 40 3d 01 ff c0 3f 80 3e 41 fe 01 fa c0 3a 80 3b 41 fb 00 39 c1 f9 81 f8 40 38 00 28 c1 e8  ..@=...?.>A....:.;A..9....@8.(..
0001a040  81 e9 40 29 01 eb c0 2b 80 2a 41 ea 01 ee c0 2e 80 2f 41 ef 00 2d c1 ed 81 ec 40 2c 01 e4 c0 24  ..@)...+.*A....../A..-....@,...$
0001a060  80 25 41 e5 00 27 c1 e7 81 e6 40 26 00 22 c1 e2 81 e3 40 23 01 e1 c0 21 80 20 41 e0 01 a0 c0 60  .%A..'....@&."....@#...!. A....`
0001a080  80 61 41 a1 00 63 c1 a3 81 a2 40 62 00 66 c1 a6 81 a7 40 67 01 a5 c0 65 80 64 41 a4 00 6c c1 ac  .aA..c....@b.f....@g...e.dA..l..
0001a0a0  81 ad 40 6d 01 af c0 6f 80 6e 41 ae 01 aa c0 6a 80 6b 41 ab 00 69 c1 a9 81 a8 40 68 00 78 c1 b8  ..@m...o.nA....j.kA..i....@h.x..
0001a0c0  81 b9 40 79 01 bb c0 7b 80 7a 41 ba 01 be c0 7e 80 7f 41 bf 00 7d c1 bd 81 bc 40 7c 01 b4 c0 74  ..@y...{.zA....~..A..}....@|...t
0001a0e0  80 75 41 b5 00 77 c1 b7 81 b6 40 76 00 72 c1 b2 81 b3 40 73 01 b1 c0 71 80 70 41 b0 00 50 c1 90  .uA..w....@v.r....@s...q.pA..P..
0001a100  81 91 40 51 01 93 c0 53 80 52 41 92 01 96 c0 56 80 57 41 97 00 55 c1 95 81 94 40 54 01 9c c0 5c  ..@Q...S.RA....V.WA..U....@T...\
0001a120  80 5d 41 9d 00 5f c1 9f 81 9e 40 5e 00 5a c1 9a 81 9b 40 5b 01 99 c0 59 80 58 41 98 01 88 c0 48  .]A.._....@^.Z....@[...Y.XA....H
0001a140  80 49 41 89 00 4b c1 8b 81 8a 40 4a 00 4e c1 8e 81 8f 40 4f 01 8d c0 4d 80 4c 41 8c 00 44 c1 84  .IA..K....@J.N....@O...M.LA..D..
0001a160  81 85 40 45 01 87 c0 47 80 46 41 86 01 82 c0 42 80 43 41 83 00 41 c1 81 81 80 40 40 00 01 06 06  ..@E...G.FA....B.CA..A....@@....
0001a180  00 01 0a 0c 00 01 0a 1e 00 00 0a 14 00 00 0f 1e 00 00 14 28 04 00 50 64 05 00 c8 fa 44 55 4b 2d  ...................(..Pd....DUK-
0001a1a0  41 4c 32 30 00 00 00 00 00 00 0a 0c 56 4f 47 2d 41 4c 30 30 00 00 00 00 00 01 0a 0c 53 4d 2d 47  AL20........VOG-AL00........SM-G
0001a1c0  39 37 35 55 00 00 00 00 00 00 0a 0c 53 4d 2d 4e 39 37 30 55 00 00 00 00 00 00 0a 0c 43 4c 54 2d  975U........SM-N970U........CLT-
0001a1e0  41 4c 30 30 00 00 00 00 00 00 0f 14 50 33 33 33 21 31 50 33 33 0a 30 33 50 33 33 31 1f 33 50 33  AL00........P333!1P33.03P331.3P3
0001a200  33 3c 2d 0b 50 33 33 3c 1f 31 50 33 33 3c 1f 32 50 33 33 32 33 32 50 33 33 32 1f 3c 50 33 33 33  3<-.P33<.1P33<.2P33232P332.<P333
0001a220  32 0a 1e 2d 33 33 50 33 33 33 33 1e 14 32 33 33 50 33 33 33 33 1e 14 32 33 33 5a 33 33 28 33 33  2..-33P3333..233P3333..233Z33(33
0001a240  14 28 33 28 33 33 33 33 33 28 32 33 33 33 33 28 35 33 33 33 33 28 32 46 33 46 33 28 33 46 33 46  .(3(33333(23333(53333(2F3F3(3F3F
0001a260  33 28 32 46 5a 46 37 28 32 46 5a 46 32 28 37 46 5a 46 32 2e 38 46 5a 46 33 28 33 46 00 40 87 00  3(2FZF7(2FZF2(7FZF2.8FZF3(3F.@..
0001a280  00 20 00 00 00 10 00 02 00 60 87 00 00 10 00 00 00 08 80 00 d9 d3 82 00 77 d4 82 00 8d d4 82 00  . .......`..............w.......
0001a2a0  a3 d4 82 00 e9 d4 82 00 1b f2 82 00 35 f2 82 00 5d f2 82 00 27 f2 82 00 31 f2 82 00 00 70 87 00  ............5...]...'...1....p..
0001a2c0  00 10 00 00 00 08 80 00 00 80 87 00 00 20 00 00 00 10 00 02                                      ............. ......

0001a2d4  char const (* data_1a2d4)[0x10] = 0x14
0001a2d8  char const (* data_1a2d8)[0x6] = &data_18[0x6] {0000001e} {"50117"}

0001a2dc                                                                                      28 00 00 00                              (...

0001a2e0  char const (* data_1a2e0)[0x8] = 0x32
0001a2e4  void* data_1a2e4 = data_3c

0001a2e8                          f6 ff ff ff 05 00 00 00 0f 00 00 00                                              ............

0001a2f4  char const (* data_1a2f4)[0x10] = 0x14
0001a2f8  char const (* data_1a2f8)[0xb] = &data_18[0x1] {00000019} {".33_250117"}
0001a2fc  char const (* data_1a2fc)[0x6] = &data_18[0x6] {0000001e} {"50117"}

0001a300  00 b0 87 00 00 10 00 00 00 08 00 01 00 c0 87 00 00 10 00 00 00 08 00 01 20 20 08 08              ........................  ..

0001a31c  char const (* data_1a31c)[0x11] = data_7d0 {"17 10:58:10 2022"}
0001a320  char const (* data_1a320)[0x11] = data_7d0 {"17 10:58:10 2022"}

0001a324              b8 0b 00 00 01 d1 85 0e 01 00 00 00 00 00 00 00 6d 61 6c 6c 6f 63 00 63 61 6c 6c 6f      ................malloc.callo
0001a340  63 00 72 65 61 6c 6c 6f 63 00 00 00 a8 eb 83 00 48 ec 83 00 9c eb 83 00 50 ec 83 00 e8 eb 83 00  c.realloc.......H.......P.......
0001a360  68 ec 83 00 5c ec 83 00 d8 eb 83 00 d8 eb 83 00 d8 eb 83 00 d8 eb 83 00 8c eb 83 00 3c ec 83 00  h...\.......................<...
0001a380  d8 eb 83 00 b8 eb 83 00 0c ec 83 00 20 ec 83 00 90 eb 83 00 7c eb 83 00 2c eb 83 00 08 eb 83 00  ............ .......|...,.......
0001a3a0  28 ec 83 00 d0 eb 83 00 c8 eb 83 00 60 eb 83 00 58 eb 83 00 74 eb 83 00 d4 ea 83 00 90 ea 83 00  (...........`...X...t...........
0001a3c0  88 eb 83 00 88 ea 83 00 cc ea 83 00 80 ea 83 00 c4 ea 83 00 84 eb 83 00 14 ec 83 00 98 ea 83 00  ................................
0001a3e0  dc ea 83 00 10 eb 83 00 34 eb 83 00 b4 ea 83 00 f8 ea 83 00 44 eb 83 00 20 eb 83 00 b4 eb 83 00  ........4...........D... .......
0001a400  ec ea 83 00 a8 ea 83 00 d8 eb 83 00 50 eb 83 00 6c eb 83 00 00 ec 83 00 e0 eb 83 00 34 ec 83 00  ............P...l...........4...
0001a420  c0 eb 83 00 a0 eb 83 00 74 ec 83 00 f4 eb 83 00 94 eb 83 00 e0 00 e2 00 e4 00 e6 00 e8 00 a0 00  ........t.......................
0001a440  a2 00 a4 00 ea 00 ec 00 ee 00 f0 00 f2 00 80 00 82 00 84 00 c0 00 c2 00 c4 00 c6 00 c8 00 ca 00  ................................
0001a460  cc 00 ce 00 86 00 88 00 8a 00 8c 00 8e 00 90 00 92 00 00 00 a6 00 a8 00 aa 00 ac 00 d0 00 96 00  ................................
0001a480  98 00 f4 00 f4 10 f4 20 f4 30 f4 40 ae 00 ae 10 ae 20 f4 50 f4 60 f4 70 f4 80 f4 90 9a 00 9a 10  ....... .0.@..... .P.`.p........
0001a4a0  9a 20 d2 00 d2 10 d2 20 d2 30 d2 40 d2 50 d2 60 d2 70 9a 30 9a 40 9a 50 9a 60 9a 70 9a 80 9a 90  . ..... .0.@.P.`.p.0.@.P.`.p....
0001a4c0  00 00 ae 30 ae 40 ae 50 ae 60 d2 80 9a b0 9a c0 02 08 00 28 0a a0 00 00 00 00 00 00 00 00 00 00  ...0.@.P.`.........(............
0001a4e0  00 00 02 00 00 00 00 00 01 00 00 00 02 00 03 28 02 00 00 00 00 00 00 00 00 00 00 00 00 00 01 00  ...............(................
0001a500  00 00 00 00 01 00 00 00 04 00 01 b0 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................................
0001a520  01 00 00 00 08 00 01 29 00 00 00 00 00 00 00 00 00 00 00 00 00 00 16 00 8a 84 20 00 01 00 00 00  .......).................. .....
0001a540  02 00 03 28 0c 00 00 00 00 00 00 00 00 00 00 00 00 00 01 00 00 00 00 00 01 00 00 00 04 00 02 b0  ...(............................
0001a560  00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00                                      ....................

0001a574  char const (* data_1a574)[0x14] = 0x10

0001a578                                                                          02 00 03 28                                      ...(

0001a57c  char const (* data_1a57c)[0x14] = 0x10

0001a580  00 00 00 00 00 00 00 00 00 00 01 00 00 00 00 00 01 00 00 00 04 00 03 b0 00 00 00 00 00 00 00 00  ................................
0001a5a0  00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 12 00 02 29 00 00 00 00 00 00 00 00 00 00 00 00  ...................)............
0001a5c0  00 00 02 00 00 00 00 00                                                                          ........

0001a5c8  char const (* data_1a5c8)[0x13] = 0x11

0001a5cc                                      02 00 03 28                                                              ...(

0001a5d0  char const (* data_1a5d0)[0x4] = &data_18[0x8] {00000020} {"117"}

0001a5d4                                                              00 00 00 00 00 00 00 00 00 00 01 00                      ............
0001a5e0  00 00 00 00 01 00 00 00 04 00 04 b0 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................................
0001a600  00 00 00 00 12 00 02 29 00 00 00 00 00 00 00 00 00 00 00 00 00 00 02 00 00 00 00 00              .......)....................

0001a61c  char const (* data_1a61c)[0x13] = 0x11

0001a620  bd 49 83 00 21 4a 83 00 e7 4a 83 00 02 08 00 28 0f 18 00 00 00 00 00 00 00 00 00 00 00 00 02 00  .I..!J...J.....(................
0001a640  00 00 00 00 01 00 00 00 02 00 03 28                                                              ...........(

0001a64c  char const (* data_1a64c)[0x12] = data_12

0001a650                                                  00 00 00 00 00 00 00 00 00 00 01 00 00 00 00 00                  ................
0001a660  01 00 00 00 04 00 19 2a 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 01 00 00 00  .......*........................
0001a680  12 00 02 29 00 00 00 00 00 00 00 00 00 00 00 00 00 00 02 00 00 00 00 00                          ...)....................

0001a698  char const (* data_1a698)[0x13] = 0x11

0001a69c                                                                                      13 4c 83 00                              .L..
0001a6a0  00 00 00 00 6d 4c 83 00 4e 4f 4f 50 50 51 51 52 52 53 53 54 54 55 55 56 57 58 58 59 5a 5b 5c 5d  ....mL..NOOPPQQRRSSTTUUVWXXYZ[\]
0001a6c0  5e 5f 5f 60 61 62 62 63 00 01 02 03 04 05 06 07 09 0a 0b 0c 0d 0e 0f 10 11 12 13 14 15 16 17 19  ^__`abbc........................
0001a6e0  1a 1b 1c 1d 1e 1f 20 21 22 23 24 25 26 27 28 29 2b 2c 2d 2e 2f 30 31 32 33 34 35 36 37 38 39 3a  ...... !"#$%&'()+,-./0123456789:
0001a700  3b 3c 3d 3e 3f 40 41 43 44 45 46 47 48 49 4a 4b 4c 4d 4e 4f 50 51 52 53 54 55 56 57 58 59 5a 5b  ;<=>?@ACDEFGHIJKLMNOPQRSTUVWXYZ[
0001a720  5c 5d 5e 5f 60 61 62 63 64 65 66 67 68 69 6a 6b 6c 6d 6e 6f 6f 70 71 72 73 74 75 76 77 78 79 7a  \]^_`abcdefghijklmnoopqrstuvwxyz
0001a740  7b 7c 7d 7e 7f 7f 80 81 82 83 84 85 86 87 88 89 8a 8a 8b 8c 8d 8e 8f 90 91 92 92 93 94 95 96 97  {|}~............................
0001a760  98 98 99 9a 9b 9c 9d 9e 9e 9f a0 a1 a2 a3 a3 a4 a5 a6 a7 a7 a8 a9 aa ab ab ac ad ae af af b0 b1  ................................
0001a780  b2 b2 b3 b4 b5 b5 b6 b7 b8 b8 b9 ba bb bb bc bd be be bf c0 c0 c1 c2 c2 c3 c4 c4 c5 c6 c7 c7 c8  ................................
0001a7a0  c9 c9 ca ca cb cc cc cd ce ce cf d0 d0 d1 d1 d2 d3 d3 d4 d4 d5 d6 d6 d7 d7 d8 d8 d9 da da db db  ................................
0001a7c0  dc dc dd dd de de df df e0 e0 e1 e1 e2 e2 e3 e3 e4 e4 e5 e5 e6 e6 e7 e7 e8 e8 e9 e9 e9 ea ea eb  ................................
0001a7e0  eb eb ec ec ed ed ed ee ee ef ef ef f0 f0 f0 f1 f1 f2 f2 f2 f3 f3 f3 f3 f4 f4 f4 f5 f5 f5 f6 f6  ................................
0001a800  f6 f6 f7 f7 f7 f8 f8 f8 f8 f9 f9 f9 f9 f9 fa fa fa fa fa fb fb fb fb fb fc fc fc fc fc fc fd fd  ................................
0001a820  fd fd fd fd fd fd fe fe fe fe fe fe fe fe fe fe fe ff ff ff ff ff ff ff ff ff ff ff ff ff ff 00  ................................
0001a840  01 03 04 06 07 09 0a 0c 0e 0f 11 12 14 15 17 19 1a 1c 1d 1f 20 22 24 25 27 28 2a 2b 2d 2e 30 31  .................... "$%'(*+-.01
0001a860  33 35 36 38 39 3b 3c 3e 3f 41 42 44 45 47 48 4a 4b 4d 4e 50 51 53 54 56 57 59 5a 5c 5d 5f 60 61  35689;<>?ABDEGHJKMNPQSTVWYZ\]_`a
0001a880  63 64 66 67 69 6a 6c 6d 6e 70 71 73 74 75 77 78 7a 7b 7c 7e 7f 80 82 83 84 86 87 88 8a 8b 8c 8e  cdfgijlmnpqstuwxz{|~............
0001a8a0  8f 90 92 93 94 95 97 98 99 9b 9c 9d 9e 9f a1 a2 a3 a4 a6 a7 a8 a9 aa ab ad ae af b0 b1 b2 b3 b5  ................................
0001a8c0  b6 b7 b8 b9 ba bb bc bd be bf c0 c1 c2 c3 c4 c5 c6 c7 c8 c9 ca cb cc cd ce cf d0 d1 d2 d3 d3 d4  ................................
0001a8e0  d5 d6 d7 d8 d9 d9 da db dc dd dd de df e0 e1 e1 e2 e3 e3 e4 e5 e6 e6 e7 e8 e8 e9 ea ea eb eb ec  ................................
0001a900  ed ed ee ee ef ef f0 f1 f1 f2 f2 f3 f3 f4 f4 f4 f5 f5 f6 f6 f7 f7 f7 f8 f8 f9 f9 f9 fa fa fa fb  ................................
0001a920  fb fb fb fc fc fc fc fd fd fd fd fe fe fe fe fe fe ff ff ff ff ff ff ff ff ff ff ff ff ff ff 6c  ...............................l
0001a940  65 5f 76 65 6e 64 6f 72 5f 64 72 6f 70 5f 61 63 6c 5f 64 61 74 61 00 6c 65 5f 76 65 6e 64 6f 72  e_vendor_drop_acl_data.le_vendor
0001a960  5f 75 70 64 61 74 65 5f 63 6f 6e 6e 5f 70 61 72 61 6d 00 6c 65 5f 76 65 6e 64 6f 72 5f 73 65 74  _update_conn_param.le_vendor_set
0001a980  5f 70 72 69 6f 72 69 74 79 00 5f 63 66 67 5f 77 72 69 74 65 5f 74 6f 5f 66 6c 61 73 68 00 63 66  _priority._cfg_write_to_flash.cf
0001a9a0  67 5f 61 64 64 5f 69 74 65 6d 00 63 66 67 5f 64 65 6c 5f 69 74 65 6d 00                          g_add_item.cfg_del_item.
0001a9b8  data_1a9b8:
0001a9b8                                                                          30 31 32 33 34 35 36 37                          01234567
0001a9c0  38 39 41 42 43 44 45 46 40 30 58 00                                                              89ABCDEF@0X.
0001a9cc  data_1a9cc:
0001a9cc                                      30 31 32 33 34 35 36 37 38 39 61 62 63 64 65 66 40 30 78 00              0123456789abcdef@0x.
0001a9e0  data_1a9e0:
0001a9e0  04 00 00 08 00 00 00 00 00 00 00 02 00 01 00 00 10                                               .................
0001a9f1  data_1a9f1:
0001a9f1                                                     80 80 7f 7e 7d 7c 7b 7a 79 78 77 76 76 75 74                   ...~}|{zyxwvvut
0001aa00  73 72 71 71 70 6f 6e 6e 6d 6c 6c 6b 6a 6a 69 68 68 67 66 66 65 64 64 63 63 62 61 61 60 60 5f 5f  srqqponnmllkjjihhgffeddccbaa``__
0001aa20  5e 5e 5d 5d 5c 5c 5b 5b 5a 5a 59 59 58 58 57 57 56 56 55 55 55 54 54 53 53 52 52 52 51 51 50 50  ^^]]\\[[ZZYYXXWWVVUUUTTSSRRRQQPP
0001aa40  50 4f 4f 4f 4e 4e 4d 4d 4d 4c 4c 4c 4b 4b 4b 4a 4a 4a 49 49 49 48 48 48 47 47 47 47 46 46 46 45  POOONNMMMLLLKKKJJJIIIHHHGGGGFFFE
0001aa60  45 45 44 44 44 44 43 43 43 43 42 42 42 42 41 41 41                                               EEDDDDCCCCBBBBAAA
0001aa71  data_1aa71:
0001aa71                                                     81 82 83 84 85 86 87 88 89 8b 8c 8d 8e 8f 91                   ...............
0001aa80  92 93 95 96 97 99 9a 9c 9d 9f a0 a2 a3 a5 a7 a8 aa ac ae b0 b2 b3 b5 b7 b9 bc be c0 c2 c5 c7 c9  ................................
0001aaa0  cc ce d1 d4 d7 d9 dc df e2 e6 e9 ec f0 f3 f7 fa fe 00 00 00 53 63 65 6e 65 5f 42 00 53 63 65 6e  ....................Scene_B.Scen
0001aac0  65 5f 43 00 42 6f 6f 74 4f 6e 63 65 00 00 00 00 49 32 43 30 00 00 00 00 53 50 49 30 00 00 00 00  e_C.BootOnce....I2C0....SPI0....
0001aae0  55 41 52 54                                                                                      UART

0001aae4  char const (* data_1aae4)[0xa] = data_30

0001aae8                          47 44 4d 41 30 20 43 68 61 6e 6e 65 6c 30 00 00 47 50 49 4f 5f 47 72 6f          GDMA0 Channel0..GPIO_Gro
0001ab00  75 70 30 00 45 6e 68 61 6e 63 65 64 5f 54 69 6d 65 72 30 00 49 32 43 31 00 00 00 00 53 50 49 31  up0.Enhanced_Timer0.I2C1....SPI1
0001ab20  00 00 00 00 55 41 52 54                                                                          ....UART

0001ab28  char const (* data_1ab28)[0x9] = data_31

0001ab2c                                      47 44 4d 41 30 20 43 68 61 6e 6e 65 6c 31 00 00 47 50 49 4f              GDMA0 Channel1..GPIO
0001ab40  5f 47 72 6f 75 70 31 00 45 6e 68 61 6e 63 65 64 5f 54 69 6d 65 72 31 00 54 49 4d 32 00 00 00 00  _Group1.Enhanced_Timer1.TIM2....
0001ab60  47 44 4d 41 30 20 43 68 61 6e 6e 65 6c 32 00 00 47 50 49 4f 5f 47 72 6f 75 70 32 00 54 49 4d 33  GDMA0 Channel2..GPIO_Group2.TIM3
0001ab80  00 00 00 00 47 44 4d 41 30 20 43 68 61 6e 6e 65 6c 33 00 00 47 50 49 4f 5f 47 72 6f 75 70 33 00  ....GDMA0 Channel3..GPIO_Group3.
0001aba0  54 49 4d 34 00 00 00 00 47 50 49 4f                                                              TIM4....GPIO

0001abac  char const (* data_1abac)[0x6] = 0x34

0001abb0                                                  54 69 6d 65 72 34 2d 35 00 00 00 00 54 49 4d 35                  Timer4-5....TIM5
0001abc0  00 00 00 00 47 50 49 4f                                                                          ....GPIO

0001abc8  char const (* data_1abc8)[0x5] = data_35 {"V3.0"}

0001abcc                                      42 54 4d 41 43 00 00 00 41 44 43 00 52 54 43 00 53 56 43 00              BTMAC...ADC.RTC.SVC.
0001abe0  57 44 47 00 54 52 4e 47 00 00 00 00 4e 4d 49 00 4c 50 43 4f 4d 50 00 00 49 6e 69 74 69 61 6c 53  WDG.TRNG....NMI.LPCOMP..InitialS
0001ac00  50 00 00 00 49 52 00 00 50 65 6e 64                                                              P...IR..Pend

0001ac0c  char const (* data_1ac0c)[0x3] = data_5653 {"hqJ"}

0001ac10                                                  53 50 49 32 57 00 00 00 49 32 53 30 5f 52 58 00                  SPI2W...I2S0_RX.
0001ac20  49 32 53 30 5f 54 58 00 52 73 76 64 00 00 00 00 51 64 65 63 6f 64 65 00 4d 65 6d 4d 61 6e 61 67  I2S0_TX.Rsvd....Qdecode.MemManag
0001ac40  65 00 00 00 43 41 50 5f 54 6f 75 63 68 00 00 00 53 50 49 5f 46 6c 61 73 68 00 00 00 53 79 73 54  e...CAP_Touch...SPI_Flash...SysT
0001ac60  69 63 6b 00 50 65 72 69 70 68 65 72 61 6c 00 00 53 79 73 74 65 6d 00 00 50 6c 61 74 66 6f 72 6d  ick.Peripheral..System..Platform
0001ac80  00 00 00 00 4b 65 79 73 63 61 6e 00 44 65 62 75 67 4d 6f 6e 00 00 00 00 52 65 73 65 74 00 00 00  ....Keyscan.DebugMon....Reset...
0001aca0  48 61 72 64 46 61 75 6c 74 00 00 00 55 73 61 67 65 46 61 75                                      HardFault...UsageFau

0001acb4  void* data_1acb4 = sub_746c

0001acb8                                                                          42 75 73 46 61 75 6c 74                          BusFault
0001acc0  00 00 00 00 50 54 41 5f 4d 61 69 6c 62 6f 78 00 00 38 20 00 01 44 82 00 59 33 83 00 59 33 83 00  ....PTA_Mailbox..8 ..D..Y3..Y3..
0001ace0  59 33 83 00 59 33 83 00 59 33 83 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 59 33 83 00  Y3..Y3..Y3..................Y3..
0001ad00  00 00 00 00 00 00 00 00 59 33 83 00 59 33 83 00 c5 b7 82 00 59 33 83 00 59 33 83 00 59 33 83 00  ........Y3..Y3......Y3..Y3..Y3..
0001ad20  59 33 83 00 59 33 83 00 59 33 83 00 59 33 83 00 59 33 83 00 59 33 83 00 59 33 83 00 59 33 83 00  Y3..Y3..Y3..Y3..Y3..Y3..Y3..Y3..
0001ad40  59 33 83 00 6f 57 82 00 59 33 83 00 59 33 83 00 59 33 83 00 59 33 83 00 59 33 83 00 59 33 83 00  Y3..oW..Y3..Y3..Y3..Y3..Y3..Y3..
0001ad60  59 33 83 00 59 33 83 00 59 33 83 00 59 33 83 00 59 33 83 00 59 33 83 00 45 7c 20 00 8d 7c 20 00  Y3..Y3..Y3..Y3..Y3..Y3..E| ..| .
0001ad80  59 33 83 00 d5 7c 20 00 15 7d 20 00 00 00 00 00 59 33 83 00 01 7c 20 00 59 33 83 00 59 33 83 00  Y3...| ..} .....Y3...| .Y3..Y3..
0001ada0  59 33 83 00 59 33 83 00 59 33 83 00 59 33 83 00 59 33 83 00 59 33 83 00 1c b5 0d 4c e1 68 20 46  Y3..Y3..Y3..Y3..Y3..Y3.....L.h F
0001adc0  00 21 2c f2 71 f6 00 20 00 90 01 90 19 20 69 46 08 80 68 46 1c f2 38 f6 00 28 04 d1 00 22 05 49  .!,.q.. ..... iF..hF..8..(...".I
0001ade0  05 48 fd f5 3d ff 01 21 20 46 2c f2 5d f6 1c bd 64 20 00 40 60 04 80 08 00 30 10 23 10 b5 43 48  .H..=..! F,.]...d .@`....0.#..CH
0001ae00  04 68 20 07 01 d5 2b f2 83 f3 20 06 01 d5 2b f2 7f f3 20 05 01 d5 2b f2 7b f3 20 04 01 d5 2b f2  .h ...+... ...+... ...+.{. ...+.
0001ae20  77 f3 20 03 01 d5 2b f2 73 f3 20 02 01 d5 2b f2 6f f3 20 01 01 d5 2b f2 6b f3 00 2c 01 da 2b f2  w. ...+.s. ...+.o. ...+.k..,..+.
0001ae40  67 f3 10 bd                                                                                      g...

0001ae44    int32_t sub_1ae44()

0001ae44  {
0001ae48      int32_t r4 = *(uint32_t*)0x40001040;
0001ae4a      int32_t r0 = r4 << 0x1d;  /* "250117" */
0001ae4a      
0001ae4c      if (r0 < 0)
0001ae4e          0x646510(r0);
0001ae4e      
0001ae52      int32_t r0_1 = r4 << 0x19;  /* ".33_250117" */
0001ae52      
0001ae54      if (r0_1 < 0)
0001ae56          0x646510(r0_1);
0001ae56      
0001ae5a      int32_t r0_2 = r4 << 0x15;  /* "3.00.33_250117" */
0001ae5a      
0001ae5c      if (r0_2 < 0)
0001ae5e          0x646510(r0_2);
0001ae5e      
0001ae62      int32_t r0_3 = r4 << 0x11;  /* "Y02_3.00.33_250117" */
0001ae62      
0001ae64      if (r0_3 < 0)
0001ae66          0x646510(r0_3);
0001ae66      
0001ae6a      int32_t r0_4 = r4 << 0xd;
0001ae6a      
0001ae6c      if (r0_4 < 0)
0001ae6e          0x646510(r0_4);
0001ae6e      
0001ae72      int32_t r0_5 = r4 << 9;
0001ae72      
0001ae74      if (r0_5 < 0)
0001ae76          0x64065e(r0_5);
0001ae76      
0001ae7a      int32_t r0_6 = r4 << 5;
0001ae7a      
0001ae7c      if (r0_6 < 0)
0001ae7e          0x646510(r0_6);
0001ae7e      
0001ae82      int32_t result = r4 << 1;
0001ae82      
0001ae84      if (result >= 0)
0001ae8a          return result;
0001ae8a      
0001ae86      return 0x646510(result);
0001ae44  }


0001ae8c    int32_t sub_1ae8c()

0001ae8c  {
0001ae90      int32_t r4 = *(uint32_t*)0x40001040;
0001ae92      int32_t r0 = r4 << 0x1e;  /* "50117" */
0001ae92      
0001ae94      if (r0 < 0)
0001ae96          0x646510(r0);
0001ae96      
0001ae9a      int32_t r0_1 = r4 << 0x16;  /* ".00.33_250117" */
0001ae9a      
0001ae9c      if (r0_1 < 0)
0001ae9e          0x646510(r0_1);
0001ae9e      
0001aea2      int32_t r0_2 = r4 << 0x12;  /* "02_3.00.33_250117" */
0001aea2      
0001aea4      if (r0_2 < 0)
0001aea6          0x639534(r0_2);
0001aea6      
0001aeaa      int32_t r0_3 = r4 << 0xe;
0001aeaa      
0001aeac      if (r0_3 < 0)
0001aeae          0x646510(r0_3);
0001aeae      
0001aeb2      int32_t r0_4 = r4 << 0xa;
0001aeb2      
0001aeb4      if (r0_4 < 0)
0001aeb6          0x646510(r0_4);
0001aeb6      
0001aeba      int32_t r0_5 = r4 << 6;
0001aeba      
0001aebc      if (r0_5 < 0)
0001aebe          0x646510(r0_5);
0001aebe      
0001aec2      int32_t result = r4 << 2;
0001aec2      
0001aec4      if (result >= 0)
0001aeca          return result;
0001aeca      
0001aec6      return 0x64243c(result);
0001ae8c  }


0001aecc    int32_t sub_1aecc()

0001aecc  {
0001aed0      int32_t r4 = *(uint32_t*)0x40001040;
0001aed2      int32_t r0 = r4 << 0x1f;  /* "0117" */
0001aed2      
0001aed4      if (r0)
0001aed6          0x646510(r0);
0001aed6      
0001aeda      int32_t r0_1 = r4 << 0x17;  /* "00.33_250117" */
0001aeda      
0001aedc      if (r0_1 < 0)
0001aede          0x646510(r0_1);
0001aede      
0001aee2      int32_t r0_2 = r4 << 0x13;  /* "2_3.00.33_250117" */
0001aee2      
0001aee4      if (r0_2 < 0)
0001aee6          0x646510(r0_2);
0001aee6      
0001aeea      int32_t r0_3 = r4 << 0xf;
0001aeea      
0001aeec      if (r0_3 < 0)
0001aeee          0x646510(r0_3);
0001aeee      
0001aef2      int32_t r0_4 = r4 << 0xb;
0001aef2      
0001aef4      if (r0_4 < 0)
0001aef6          0x646510(r0_4);
0001aef6      
0001aefa      int32_t r0_5 = r4 << 7;
0001aefa      
0001aefc      if (r0_5 < 0)
0001aefe          0x646510(r0_5);
0001aefe      
0001af02      int32_t result = r4 << 3;
0001af02      
0001af04      if (result >= 0)
0001af0a          return result;
0001af0a      
0001af06      return 0x646510(result);
0001aecc  }

0001af0c  int32_t data_1af0c = 0x40001040

0001af10    int32_t sub_1af10()

0001af10  {
0001af1a      *(uint32_t*)0x4000020c |= 0x4000000;
0001af22      *(uint32_t*)0x4000020c |= 0x10000000;
0001af2a      *(uint32_t*)0x4000021c |= 1;
0001af34      *(uint32_t*)0x40000238 |= 0x3000000;
0001af3e      *(uint32_t*)0x4001000c = *(uint32_t*)0x4001000c >> 5 << 5;
0001af48      *(uint32_t*)0x40010050 = *(uint32_t*)0x20d690;
0001af50      *(uint32_t*)0x40010008 = *(uint32_t*)0x40010008 >> 0x10 << 0x10;
0001af50          /* "RY02_3.00.33_250117" */
0001af54      *(uint32_t*)0x40010010 = *(uint32_t*)0x20d670;
0001af58      *(uint32_t*)0x40010014 = *(uint32_t*)0x20d674;
0001af5c      *(uint32_t*)0x40010018 = *(uint32_t*)0x20d678;
0001af60      *(uint32_t*)0x4001001c = *(uint32_t*)0x20d67c;
0001af64      *(uint32_t*)0x40010020 = *(uint32_t*)0x20d680;
0001af68      *(uint32_t*)0x40010024 = *(uint32_t*)0x20d684;
0001af6c      *(uint32_t*)0x40010028 = *(uint32_t*)0x20d688;
0001af70      *(uint32_t*)0x4001002c = *(uint32_t*)0x20d68c;
0001af74      *(uint32_t*)0x40010008 = *(uint32_t*)0x20d668;
0001af7c      *(uint32_t*)0x40010004 = *(uint32_t*)0x20d664 >> 2 << 2;
0001af80      *(uint32_t*)0x40010054 = *(uint32_t*)0x20d694;
0001af84      *(uint32_t*)0x40010058 = *(uint32_t*)0x20d698;
0001af88      *(uint32_t*)0x4001005c = *(uint32_t*)0x20d69c;
0001af8e      *(uint32_t*)0x40010004 |= 0x4000000;
0001af96      int32_t r2_3 = *(uint32_t*)0x4001000c | 0x1f00;
0001af98      *(uint32_t*)0x4001000c = r2_3;
0001af9a      int32_t r1_11 = *(uint32_t*)0x20d66c;
0001af9c      *(uint32_t*)0x4001000c = r1_11;
0001afb4      return 0xffe46192(0x110, (uint32_t)0xffe4614c(0x110, r1_11, r2_3, 0x1f00) | 4);
0001af10  }


0001afb6    int32_t sub_1afb6()

0001afb6  {
0001afbe      *(uint32_t*)0x40000210 |= 0x10000;
0001afc8      *(uint32_t*)0x40000230 |= 0xc000;
0001afd0      *(uint32_t*)0x20d768 = *(uint32_t*)0x40002000;
0001afd4      *(uint32_t*)0x20d76c = *(uint32_t*)0x40002008;
0001afdc      *(uint32_t*)0x20d770 = *(uint32_t*)0x400020b0;
0001afe0      *(uint32_t*)0x20d774 = *(uint32_t*)0x40002014;
0001afe4      *(uint32_t*)0x20d778 = *(uint32_t*)0x4000201c;
0001afe8      *(uint32_t*)0x20d77c = *(uint32_t*)0x400020b4;
0001afec      *(uint32_t*)0x20d780 = *(uint32_t*)0x40002028;
0001aff0      *(uint32_t*)0x20d784 = *(uint32_t*)0x40002030;
0001aff4      *(uint32_t*)0x20d788 = *(uint32_t*)0x400020b8;
0001aff8      *(uint32_t*)0x20d78c = *(uint32_t*)0x4000203c;
0001b000      *(uint32_t*)0x20d790 = *(uint32_t*)0x40002044;
0001b004      *(uint32_t*)0x20d794 = *(uint32_t*)0x400020bc;
0001b008      *(uint32_t*)0x20d798 = *(uint32_t*)0x40002050;
0001b00c      *(uint32_t*)0x20d79c = *(uint32_t*)0x40002058;
0001b014      *(uint32_t*)0x20d7a0 = *(uint32_t*)0x400020c0;
0001b018      *(uint32_t*)0x20d7a4 = *(uint32_t*)0x40002064;
0001b01c      *(uint32_t*)0x20d7a8 = *(uint32_t*)0x4000206c;
0001b020      *(uint32_t*)0x20d7ac = *(uint32_t*)0x400020c4;
0001b026      *(uint32_t*)0x20d7b0 = *(uint32_t*)0x40000360;
0001b02c      *(uint32_t*)0x20d7b4 = *(uint32_t*)0x4000600c;
0001b034      *(uint32_t*)0x20d7b8 = *(uint32_t*)0x40000384;
0001b036      int32_t result = *(uint32_t*)0x40000364;
0001b03c      *(uint32_t*)0x20d638 = result;
0001b03e      return result;
0001afb6  }


0001b040    int32_t sub_1b040()

0001b040  {
0001b040      int32_t r3;
0001b040      int32_t var_14 = r3;
0001b040      int32_t r2;
0001b040      int32_t var_18 = r2;
0001b048      *(uint32_t*)0xe000e180 = 1;
0001b054      *(uint32_t*)0x20d7d8 = *(uint32_t*)0xe000e100;
0001b05c      *(uint32_t*)0x20d7dc = *(uint32_t*)0xe000e200;
0001b05c      
0001b072      for (int32_t i = 0; i < 8; i += 1)
0001b072      {
0001b066          int32_t r1_1 = i << 2;
0001b06c          *(uint32_t*)(0x20d7e4 + r1_1) = *(uint32_t*)(r1_1 - 0x1fff1c00);
0001b072      }
0001b072      
0001b078      *(uint32_t*)0x20d7e0 = *(uint32_t*)0xe000ed08;
0001b082      *(uint32_t*)0x20d634 = *(uint32_t*)0x4000600c;
0001b082      
0001b09c      for (uint32_t i_1 = 0; i_1 < 0xa; i_1 = (uint32_t)((uint8_t)i_1 + 1))
0001b09c      {
0001b08e          int32_t r1_2 = i_1 << 2;
0001b094          *(uint32_t*)(0x20d63c + r1_2) = *(uint32_t*)(r1_2 + 0x40000280);
0001b09c      }
0001b09c      
0001b09e      int32_t r0_5 = *(uint32_t*)0x20d62c;
0001b09e      
0001b0a2      if (r0_5)
0001b0a4          r0_5();
0001b0a4      
0001b0a6      sub_1b1e0();
0001b0aa      sub_1b262();
0001b0ae      sub_1b334();
0001b0b2      sub_1b414();
0001b0b6      sub_1afb6();
0001b0b6      
0001b0c0      if ((uint32_t)*(uint8_t*)0x200334 << 0x1f)  /* "0117" */
0001b0c0      {
0001b0ce          0x646824(8, 0, 1, 1, 0, 0);
0001b0de          0x646824(9, 0, 1, 1, 0, 0);
0001b0c0      }
0001b0c0      
0001b0fa      return 0x646824((uint32_t)*(uint8_t*)0x200398 << 0x1a >> 0x1a, 0, 1, 0, 0, 0);
0001b0fa          /* "33_250117" */
0001b040  }


0001b0fc    int32_t sub_1b0fc()

0001b0fc  {
0001b118      for (uint32_t i = 0; i < 0xa; i = (uint32_t)((uint8_t)i + 1))
0001b118      {
0001b10a          int32_t r1_1 = i << 2;
0001b110          *(uint32_t*)(r1_1 + 0x40000280) = *(uint32_t*)(0x20d63c + r1_1);
0001b118      }
0001b118      
0001b11e      int32_t var_28 = 0;
0001b130      0x646824((uint32_t)*(uint8_t*)0x200398 << 0x1a >> 0x1a, 1, 1, 2, var_28, 0);
0001b130          /* "33_250117" */
0001b130      
0001b13a      if ((uint32_t)*(uint8_t*)0x200334 << 0x1f)  /* "0117" */
0001b13a      {
0001b13e          var_28 = 0;
0001b148          0x646824(8, 1, 1, 0, var_28, 0);
0001b14e          var_28 = 0;
0001b158          0x646824(9, 1, 1, 0, var_28, 0);
0001b13a      }
0001b13a      
0001b15c      sub_1af10();
0001b160      sub_1b2ac();
0001b164      sub_1b3a4();
0001b168      sub_1b486();
0001b16c      sub_1b4f8();
0001b174      int32_t r0_6 = *(uint32_t*)0x20d630;
0001b174      
0001b178      if (r0_6)
0001b17a          r0_6();
0001b17a      
0001b17e      char var_20 = 0;
0001b182      char var_18 = 1;
0001b186      int32_t var_1c = 3;
0001b18a      0x646710(&var_20, &var_28);
0001b18a      
0001b198      if (*(uint32_t*)0x20d7d8 & *(uint32_t*)0x20d7dc)
0001b1a2          0xffe18c60(0x23100101, 0x8801664, 1, *(uint32_t*)0x20d7dc);
0001b1a2      
0001b1b6      *(uint32_t*)0xe000e400 |= *(uint32_t*)0x20d7e4 >> 0x18 << 0x18;  /* "0.33_250117" */
0001b1b6      
0001b1c6      for (int32_t i_1 = 1; i_1 < 8; i_1 += 1)
0001b1c6      {
0001b1ba          int32_t r1_8 = i_1 << 2;
0001b1c0          *(uint32_t*)(r1_8 - 0x1fff1c00) = *(uint32_t*)(0x20d7e4 + r1_8);
0001b1c6      }
0001b1c6      
0001b1cc      *(uint32_t*)0xe000ed08 = *(uint32_t*)0x20d7e0;
0001b1d2      *(uint32_t*)0x4000600c = *(uint32_t*)0x20d634;
0001b1d4      int32_t result = *(uint32_t*)0x20d7d8;
0001b1da      *(uint32_t*)0xe000e100 = result;
0001b1de      return result;
0001b0fc  }


0001b1e0    int32_t sub_1b1e0()

0001b1e0  {
0001b1ea      *(uint32_t*)0x4000020c |= 0x4000000;
0001b1f2      *(uint32_t*)0x4000020c |= 0x10000000;
0001b1fa      *(uint32_t*)0x4000021c |= 1;
0001b204      *(uint32_t*)0x40000238 |= 0x3000000;
0001b20c      *(uint32_t*)0x20d664 = *(uint32_t*)0x40010004;
0001b210      *(uint32_t*)0x20d668 = *(uint32_t*)0x40010008;
0001b214      *(uint32_t*)0x20d66c = *(uint32_t*)0x4001000c;
0001b218      *(uint32_t*)0x20d670 = *(uint32_t*)0x40010010;
0001b21c      *(uint32_t*)0x20d674 = *(uint32_t*)0x40010014;
0001b220      *(uint32_t*)0x20d678 = *(uint32_t*)0x40010018;
0001b224      *(uint32_t*)0x20d67c = *(uint32_t*)0x4001001c;
0001b228      *(uint32_t*)0x20d680 = *(uint32_t*)0x40010020;
0001b22c      *(uint32_t*)0x20d684 = *(uint32_t*)0x40010024;
0001b230      *(uint32_t*)0x20d688 = *(uint32_t*)0x40010028;
0001b234      *(uint32_t*)0x20d68c = *(uint32_t*)0x4001002c;
0001b23c      *(uint32_t*)0x20d690 = *(uint32_t*)0x40010050;
0001b240      *(uint32_t*)0x20d694 = *(uint32_t*)0x40010054;
0001b244      *(uint32_t*)0x20d698 = *(uint32_t*)0x40010058;
0001b248      *(uint32_t*)0x20d69c = *(uint32_t*)0x4001005c;
0001b260      return 0xffe46192(0x110, (uint32_t)0xffe4614c(0x110) & 0xfb);
0001b1e0  }


0001b262    int32_t sub_1b262()

0001b262  {
0001b26a      *(uint32_t*)0x4000021c |= 0x100;
0001b274      *(uint32_t*)0x40000230 |= 0x3000000;
0001b27e      *(uint32_t*)0x20d6a0 = *(uint32_t*)0x40001000;
0001b282      *(uint32_t*)0x20d6a4 = *(uint32_t*)0x40001004;
0001b286      *(uint32_t*)0x20d6a8 = *(uint32_t*)0x40001008;
0001b28a      *(uint32_t*)0x20d6ac = *(uint32_t*)0x40001030;
0001b28e      *(uint32_t*)0x20d6b0 = *(uint32_t*)0x40001034;
0001b292      *(uint32_t*)0x20d6b4 = *(uint32_t*)0x40001038;
0001b296      *(uint32_t*)0x20d6b8 = *(uint32_t*)0x4000103c;
0001b29e      *(uint32_t*)0x20d6bc = *(uint32_t*)0x40001048;
0001b2a4      *(uint32_t*)0x20d6c0 = *(uint32_t*)0x40000344;
0001b2a8      *(uint32_t*)0x20d6c4 = *(uint32_t*)0x40001068;
0001b2aa      return 0x20d6a0;
0001b262  }


0001b2ac    int32_t sub_1b2ac()

0001b2ac  {
0001b2b4      *(uint32_t*)0x4000021c |= 0x100;
0001b2be      *(uint32_t*)0x40000230 |= 0x3000000;
0001b2c8      *(uint32_t*)0x40001004 = *(uint32_t*)0x20d6a4;
0001b2cc      *(uint32_t*)0x40001008 = *(uint32_t*)0x20d6a8;
0001b2d0      *(uint32_t*)0x40001034 = *(uint32_t*)0x20d6b0;
0001b2d4      *(uint32_t*)0x40001038 = *(uint32_t*)0x20d6b4;
0001b2d8      *(uint32_t*)0x4000103c = *(uint32_t*)0x20d6b8;
0001b2e0      *(uint32_t*)0x40001048 = *(uint32_t*)0x20d6bc;
0001b2e4      *(uint32_t*)0x40001000 = *(uint32_t*)0x20d6a0;
0001b2ea      *(uint32_t*)0x4000104c = ~*(uint32_t*)0x20d6a4;
0001b2ee      *(uint32_t*)0x40001030 = *(uint32_t*)0x20d6ac;
0001b2f4      *(uint32_t*)0x40000344 = *(uint32_t*)0x20d6c0;
0001b2f8      *(uint32_t*)0x40001068 = *(uint32_t*)0x20d6c4;
0001b2f8      /* tailcall */
0001b2f8      return sub_1b2fa();
0001b2ac  }


0001b2fa    int32_t sub_1b2fa() __pure

0001b2fa  {
0001b2fa      return;
0001b2fa  }

0001b2fc  int32_t data_1b2fc = 0x40000200
0001b300  int32_t data_1b300 = 0x40010000
0001b304  int32_t data_1b304 = 0x20d664
0001b308  int32_t data_1b308 = 0x40002000
0001b30c  int32_t data_1b30c = 0x20d768
0001b310  int32_t data_1b310 = 0x40000340
0001b314  int32_t data_1b314 = 0x40006000
0001b318  int32_t data_1b318 = -0x1fff1e80
0001b31c  int32_t data_1b31c = -0x1fff1c00
0001b320  int32_t data_1b320 = -0x1fff1300
0001b324  int32_t data_1b324 = 0x200320
0001b328  int32_t data_1b328 = 0x8801664
0001b32c  int32_t data_1b32c = 0x23100101
0001b330  int32_t data_1b330 = 0x40001000

0001b334    int32_t sub_1b334()

0001b334  {
0001b33c      *(uint32_t*)0x40000238 |= 3;
0001b344      *(uint32_t*)0x40000218 |= 0x10000;
0001b34c      *(uint32_t*)0x20d6c8 = *(uint32_t*)0x40015000;
0001b350      *(uint32_t*)0x20d6cc = *(uint32_t*)0x40015004;
0001b354      *(uint32_t*)0x20d6d0 = *(uint32_t*)0x40015008;
0001b358      *(uint32_t*)0x20d6d4 = *(uint32_t*)0x4001500c;
0001b35c      *(uint32_t*)0x20d6d8 = *(uint32_t*)0x40015014;
0001b360      *(uint32_t*)0x20d6dc = *(uint32_t*)0x40015018;
0001b364      *(uint32_t*)0x20d6e0 = *(uint32_t*)0x4001501c;
0001b368      *(uint32_t*)0x20d6e4 = *(uint32_t*)0x40015020;
0001b36c      *(uint32_t*)0x20d6e8 = *(uint32_t*)0x40015024;
0001b370      *(uint32_t*)0x20d6ec = *(uint32_t*)0x40015028;
0001b374      *(uint32_t*)0x20d6f0 = *(uint32_t*)0x40015030;
0001b378      *(uint32_t*)0x20d6f4 = *(uint32_t*)0x40015038;
0001b37c      *(uint32_t*)0x20d6f8 = *(uint32_t*)0x4001503c;
0001b384      *(uint32_t*)0x20d6fc = *(uint32_t*)0x4001506c;
0001b388      *(uint32_t*)0x20d700 = *(uint32_t*)0x4001507c;
0001b390      *(uint32_t*)0x20d704 = *(uint32_t*)0x40015084;
0001b394      *(uint32_t*)0x20d708 = *(uint32_t*)0x40015088;
0001b398      *(uint32_t*)0x20d70c = *(uint32_t*)0x4001508c;
0001b39c      *(uint32_t*)0x20d710 = *(uint32_t*)0x40015090;
0001b3a0      *(uint32_t*)0x20d714 = *(uint32_t*)0x40015094;
0001b3a2      /* tailcall */
0001b3a2      return sub_1b2fa();
0001b334  }


0001b3a4    int32_t sub_1b3a4()

0001b3a4  {
0001b3ac      *(uint32_t*)0x40000238 |= 3;
0001b3b4      *(uint32_t*)0x40000218 |= 0x10000;
0001b3bc      *(uint32_t*)0x40015000 = *(uint32_t*)0x20d6c8;
0001b3c0      *(uint32_t*)0x40015004 = *(uint32_t*)0x20d6cc;
0001b3c4      *(uint32_t*)0x40015008 = *(uint32_t*)0x20d6d0;
0001b3c8      *(uint32_t*)0x4001500c = *(uint32_t*)0x20d6d4;
0001b3cc      *(uint32_t*)0x40015014 = *(uint32_t*)0x20d6d8;
0001b3d0      *(uint32_t*)0x40015018 = *(uint32_t*)0x20d6dc;
0001b3d4      *(uint32_t*)0x4001501c = *(uint32_t*)0x20d6e0;
0001b3d8      *(uint32_t*)0x40015020 = *(uint32_t*)0x20d6e4;
0001b3dc      *(uint32_t*)0x40015024 = *(uint32_t*)0x20d6e8;
0001b3e0      *(uint32_t*)0x40015028 = *(uint32_t*)0x20d6ec;
0001b3e4      *(uint32_t*)0x40015030 = *(uint32_t*)0x20d6f0;
0001b3e8      *(uint32_t*)0x40015038 = *(uint32_t*)0x20d6f4;
0001b3ec      *(uint32_t*)0x4001503c = *(uint32_t*)0x20d6f8;
0001b3f4      *(uint32_t*)0x4001507c = *(uint32_t*)0x20d700;
0001b3fc      *(uint32_t*)0x40015084 = *(uint32_t*)0x20d704;
0001b400      *(uint32_t*)0x40015088 = *(uint32_t*)0x20d708;
0001b404      *(uint32_t*)0x4001508c = *(uint32_t*)0x20d70c;
0001b408      *(uint32_t*)0x40015090 = *(uint32_t*)0x20d710;
0001b40c      *(uint32_t*)0x40015094 = *(uint32_t*)0x20d714;
0001b410      *(uint32_t*)0x4001506c = *(uint32_t*)0x20d6fc;
0001b412      /* tailcall */
0001b412      return sub_1b2fa();
0001b3a4  }


0001b414    int32_t sub_1b414()

0001b414  {
0001b41c      *(uint32_t*)0x40000238 |= 0xc;
0001b424      *(uint32_t*)0x40000218 |= 0x20000;
0001b42e      *(uint32_t*)0x20d718 = *(uint32_t*)0x40015400;
0001b432      *(uint32_t*)0x20d71c = *(uint32_t*)0x40015404;
0001b436      *(uint32_t*)0x20d720 = *(uint32_t*)0x40015408;
0001b43a      *(uint32_t*)0x20d724 = *(uint32_t*)0x4001540c;
0001b43e      *(uint32_t*)0x20d728 = *(uint32_t*)0x40015414;
0001b442      *(uint32_t*)0x20d72c = *(uint32_t*)0x40015418;
0001b446      *(uint32_t*)0x20d730 = *(uint32_t*)0x4001541c;
0001b44a      *(uint32_t*)0x20d734 = *(uint32_t*)0x40015420;
0001b44e      *(uint32_t*)0x20d738 = *(uint32_t*)0x40015424;
0001b452      *(uint32_t*)0x20d73c = *(uint32_t*)0x40015428;
0001b456      *(uint32_t*)0x20d740 = *(uint32_t*)0x40015430;
0001b45a      *(uint32_t*)0x20d744 = *(uint32_t*)0x40015438;
0001b45e      *(uint32_t*)0x20d748 = *(uint32_t*)0x4001543c;
0001b466      *(uint32_t*)0x20d74c = *(uint32_t*)0x4001546c;
0001b46a      *(uint32_t*)0x20d750 = *(uint32_t*)0x4001547c;
0001b472      *(uint32_t*)0x20d754 = *(uint32_t*)0x40015484;
0001b476      *(uint32_t*)0x20d758 = *(uint32_t*)0x40015488;
0001b47a      *(uint32_t*)0x20d75c = *(uint32_t*)0x4001548c;
0001b47e      *(uint32_t*)0x20d760 = *(uint32_t*)0x40015490;
0001b482      *(uint32_t*)0x20d764 = *(uint32_t*)0x40015494;
0001b484      /* tailcall */
0001b484      return sub_1b2fa();
0001b414  }


0001b486    int32_t sub_1b486()

0001b486  {
0001b48e      *(uint32_t*)0x40000238 |= 0xc;
0001b496      *(uint32_t*)0x40000218 |= 0x20000;
0001b4a0      *(uint32_t*)0x40015400 = *(uint32_t*)0x20d718;
0001b4a4      *(uint32_t*)0x40015404 = *(uint32_t*)0x20d71c;
0001b4a8      *(uint32_t*)0x40015408 = *(uint32_t*)0x20d720;
0001b4ac      *(uint32_t*)0x4001540c = *(uint32_t*)0x20d724;
0001b4b0      *(uint32_t*)0x40015414 = *(uint32_t*)0x20d728;
0001b4b4      *(uint32_t*)0x40015418 = *(uint32_t*)0x20d72c;
0001b4b8      *(uint32_t*)0x4001541c = *(uint32_t*)0x20d730;
0001b4bc      *(uint32_t*)0x40015420 = *(uint32_t*)0x20d734;
0001b4c0      *(uint32_t*)0x40015424 = *(uint32_t*)0x20d738;
0001b4c4      *(uint32_t*)0x40015428 = *(uint32_t*)0x20d73c;
0001b4c8      *(uint32_t*)0x40015430 = *(uint32_t*)0x20d740;
0001b4cc      *(uint32_t*)0x40015438 = *(uint32_t*)0x20d744;
0001b4d0      *(uint32_t*)0x4001543c = *(uint32_t*)0x20d748;
0001b4d8      *(uint32_t*)0x4001547c = *(uint32_t*)0x20d750;
0001b4e0      *(uint32_t*)0x40015484 = *(uint32_t*)0x20d754;
0001b4e4      *(uint32_t*)0x40015488 = *(uint32_t*)0x20d758;
0001b4e8      *(uint32_t*)0x4001548c = *(uint32_t*)0x20d75c;
0001b4ec      *(uint32_t*)0x40015490 = *(uint32_t*)0x20d760;
0001b4f0      *(uint32_t*)0x40015494 = *(uint32_t*)0x20d764;
0001b4f4      *(uint32_t*)0x4001546c = *(uint32_t*)0x20d74c;
0001b4f6      /* tailcall */
0001b4f6      return sub_1b2fa();
0001b486  }


0001b4f8    int32_t sub_1b4f8()

0001b4f8  {
0001b502      *(uint32_t*)0x40000210 |= 0x10000;
0001b50c      *(uint32_t*)0x40000230 |= 0xc000;
0001b516      *(uint32_t*)0x40000360 = *(uint32_t*)0x20d7b0;
0001b51c      *(uint32_t*)0x40002000 = *(uint32_t*)0x20d768;
0001b520      *(uint32_t*)0x40002008 = *(uint32_t*)0x20d76c;
0001b528      *(uint32_t*)0x400020b0 = *(uint32_t*)0x20d770;
0001b52c      *(uint32_t*)0x40002014 = *(uint32_t*)0x20d774;
0001b530      *(uint32_t*)0x4000201c = *(uint32_t*)0x20d778;
0001b534      *(uint32_t*)0x400020b4 = *(uint32_t*)0x20d77c;
0001b538      *(uint32_t*)0x40002028 = *(uint32_t*)0x20d780;
0001b53c      *(uint32_t*)0x40002030 = *(uint32_t*)0x20d784;
0001b540      *(uint32_t*)0x400020b8 = *(uint32_t*)0x20d788;
0001b544      *(uint32_t*)0x4000203c = *(uint32_t*)0x20d78c;
0001b54c      *(uint32_t*)0x40002044 = *(uint32_t*)0x20d790;
0001b550      *(uint32_t*)0x400020bc = *(uint32_t*)0x20d794;
0001b554      *(uint32_t*)0x40002050 = *(uint32_t*)0x20d798;
0001b558      *(uint32_t*)0x40002058 = *(uint32_t*)0x20d79c;
0001b560      *(uint32_t*)0x400020c0 = *(uint32_t*)0x20d7a0;
0001b564      *(uint32_t*)0x40002064 = *(uint32_t*)0x20d7a4;
0001b568      *(uint32_t*)0x4000206c = *(uint32_t*)0x20d7a8;
0001b56c      *(uint32_t*)0x400020c4 = *(uint32_t*)0x20d7ac;
0001b572      int32_t result = *(uint32_t*)0x20d638;
0001b574      *(uint32_t*)0x40000364 = result;
0001b576      return result;
0001b4f8  }

0001b578  int32_t data_1b578 = 0x40000200
0001b57c  int32_t data_1b57c = 0x40015000
0001b580  int32_t data_1b580 = 0x20d6c8
0001b584  int32_t data_1b584 = 0x40015400
0001b588  int32_t data_1b588 = 0x40000340
0001b58c  int32_t data_1b58c = 0x40002000

0001b590                                                  74 ea 83 00 bc f7 83 00 84 f8 83 00 30 dc 20 00                  t...........0. .
0001b5a0  f8 dc 20 00 f8 dc 20 00 c8 00 00 00 00 00 00 00 00 00 00 00 64 ea 83 00 84 f8 83 00 84 f8 83 00  .. ... .............d...........
0001b5c0  30 dc 20 00 30 dc 20 00 30 dc 20 00 00 00 00 00 00 00 00 00 00 00 00 00 6c ea 83 00 84 f8 83 00  0. .0. .0. .............l.......
0001b5e0  84 f8 83 00 30 dc 20 00 30 dc 20 00 30 dc 20 00 00 00 00 00 00 00 00 00 00 00 00 00 ff 01 01 01  ....0. .0. .0. .................
0001b600  02 02 01 06 07 09 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................................
0001b620  04 01 0f 01 ff ff ff ff 08 08 03 00 e8 03 00 00 20 03 00 00 03 02 02 01 03 02 02 00 ff ff 0f 00  ................ ...............
0001b640  01 00 56 31 20 72 65 61 64 20 63 68 61 72 61 63 74 65 72 69 73 74 69 63 00 00 00 00 41 00 00 00  ..V1 read characteristic....A...
0001b660  00 00 00 00 00 00 00 00 64 00 00 00 00 00 01 01 00 00 00 00 01 00 00 00 00 00 00 00 00 00 00 00  ........d.......................
0001b680  00 00 00 00 00 00 00 00 00 00 00 00 1e 28 32 00 4c 11 02 00 50 c3 00 00 64 00 00 00              .............(2.L...P...d...

0001b69c  char const (* data_1b69c)[0x4] = &data_18[0x8] {00000020} {"117"}

0001b6a0  a0 86 01 00 50 c3 00 00 dc 05 96 00 f4 01 c8 00 64 00 01 1e 03 00 00 00 00 00 00 00 00 00 00 00  ....P...........d...............
0001b6c0  00 00 96 00 00 00 00 00 00 00 00 00 00 00 00 00 01 00 00 00 00 00 00 00 00 00 00 00 03 5a 80 00  .............................Z..
0001b6e0  e9 69 00 20 88 47 bd f8 1c 00 4f f4 80 46 72 10 b8 f8 54 00 b4 f8 56 30 b4 f8 54 20 cd e9 b7 fd  .i. .G....O..Fr...T...V0..T ....
0001b700  01 20 00 f0 54 fd f8 bd                                                                          . ..T...

0001b708    int32_t sub_1b708(int32_t arg1 @ r5, int32_t* arg2 @ r6, void* arg3 @ r7, int32_t arg4, int32_t arg5, int32_t arg6, int32_t arg7, int32_t arg8)

0001b708  {
0001b708      *(uint32_t*)arg2 = arg1;
0001b70a      *(uint32_t*)((char*)arg3 + 0x30) = arg1;  /* "RY02_V3.0" */
0001b708  }

0001b70e                                            00 00 00 00 00 00 00 00 00 00                                        ..........

0001b718  char const (* data_1b718)[0xc] = data_18 {"0.33_250117"}

0001b71c                                                                                      00 00 00 00                              ....
0001b720  00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................................
0001b740  00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................................
0001b760  00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................................
0001b780  00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................................
0001b7a0  00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................................
0001b7c0  00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................................
0001b7e0  00 00 00 00 0f 18 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 09 00 00 00 00 00 00 00 00 00 00  ................................
0001b800  00 00 00 00 00 00 00 00 00 00 00 00 f0 b5 bb b0 40 22 28 49 2b a8 f2 f5 35 fb 26 49 a8 22 40 31  ................@"(I+...5.&I."@1
0001b820  01 a8 f2 f5 2f fb 01 20 25 49 40 05 22 4f 23 4d 89 68 06 46 00 24 81 42 01 d0 f5 f5 37 fc a8 08  ..../.. %I@."O#M.h.F.$.B....7...
0001b840  00 90 2f e0 00 2c 2b d0 01 2c 29 d0 a5 00 78 59 1c 49 88 42 01 d0 00 28 05 d1 88 42 20 d1 70 59  ../..,+..,)...xY.I.B...(...B .pY
0001b860  19 49 88 42 1c d1 10 2c 09 d2 2b a8 41 59 8d 20 80 05 f8 f5 e8 f8 03 46 01 22 14 49 0b e0 01 a8  .I.B...,..+.AY. .......F.".I....
0001b880  28 18 80 38 01 6c 8d 20 80 05 f8 f5 dc f8 0f 49 01 22 03 46 24 31 0e 48 f7 f5 f4 fe 78 59 70 51  (..8.l. .......I.".F$1.H....xYpQ
0001b8a0  00 98 64 1c a0 42 cd d8 bf f3 5f 8f bf f3 4f 8f 3b b0 f0 bd fc e2 83 00 80 ec 83 00 e8 00 00 00  ..d..B...._...O.;...............
0001b8c0  00 ed 00 e0 59 33 83 00 e7 47 00 00 54 14 80 08 01 01 10 23                                      ....Y3...G..T......#

.synthetic_builtins section started  {0x1b8e0-0x1b8f8}
0001b8e0  extern void* __builtin_memcpy(void* dest, void const* src, uint32_t count)
0001b8e4  extern void* __builtin_memset(void* dest, int32_t ch, uint32_t count)
0001b8e8  extern char* __builtin_strcpy(char* dest, char const* src)
0001b8ec  extern char* __builtin_strncpy(char* dest, char const* src, uint32_t count)
0001b8f0  extern wchar32* __builtin_wcscpy(wchar32* dest, wchar32 const* src)
0001b8f4  extern wchar32* __builtin_wmemcpy(wchar32* dest, wchar32 const* src, uint32_t count)
.synthetic_builtins section ended  {0x1b8e0-0x1b8f8}

